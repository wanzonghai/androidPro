require = function e(t, i, n) {
function a(s, r) {
if (!i[s]) {
if (!t[s]) {
var c = "function" == typeof require && require;
if (!r && c) return c(s, !0);
if (o) return o(s, !0);
var l = new Error("Cannot find module '" + s + "'");
throw l.code = "MODULE_NOT_FOUND", l;
}
var h = i[s] = {
exports: {}
};
t[s][0].call(h.exports, function(e) {
var i = t[s][1][e];
return a(i || e);
}, h, h.exports, e, t, i, n);
}
return i[s].exports;
}
for (var o = "function" == typeof require && require, s = 0; s < n.length; s++) a(n[s]);
return a;
}({
AASwitchConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3a667U+1opH/ZZgRRedMOXO", "AASwitchConfig");
window.DataColor_Public = "ci+Vgf36rDZLOSfEDZjnRB1uRm6Bc3WXWIy/dnLZb7YH5cRhIiwkfxHCSRKZc0hctM8BVCw+bX2F7synLLRIdK65Pbpao3DXgAIxRfQXokX8n38uIWth08o0DSkSaUGqEzRG3GJs/CilG3Ytmxk/znPseiKfEYIO4bT33FZPOsg1cIU9uyBSfCuhj2WnxqDaQHMNiI404xvWexjpuUvpkc8CNNOht5oFyoWky3HFv8IjbB7GwBxMfYWoaD/tBMHX";
window.DataColor_Test = "8i5eSjuy/Md0hs80UnO3szTSNbBAG4MPUY+JczWlOUxO37Zr+by0CXMW+mMI0sUGz0URvuZql5PeOCN3QZ41FIHK5yjSTPH7B/7orYMgo7cm6D99GofSEUxFPybfx/5lssrs/EEegXvDVul+quZpUYDf7NhHDp+JRxrvswQoWHk=";
window.DataColor_Audit = "ANufphISQQaxfCirtS7WKplvh9sJpWvad3zMDuX3QUJ4sSa6GGjaRDHOu2sH1ZwsAApswDXLuehYMMbx7Uwuxn4RFcpUPTpYCRw+zewcjIf4inQps84aXfasgMrCEwfnLnmFlHCf2rK0gGgM0wWZ/HSu32cIoBsAwnnq1tXbf/dUIPDb3xCHe28ZVqYJw2/8xijKYAOn9HdxBIGPu8kT0JPjwBbu+UY/r9GpJPbRjio=";
window.DataColor_Local = "8i5eSjuy/Md0hs80UnO3szTSNbBAG4MPUY+JczWlOUxO37Zr+by0CXMW+mMI0sUGz0URvuZql5PeOCN3QZ41FIHK5yjSTPH7B/7orYMgo7eGWVOJ2QNp9sK+bI1JS9PRIGEvX82RgdQ3rQa8wqJqHPbesAieCbmVxXkWiGtlEDE=";
window.SC_Public = 0;
window.SC_Test = 1;
window.SC_Audit = 2;
window.SC_Local = 3;
window.SC_GetDataColorByType = function(e) {
var t = null;
t = e == window.SC_Public ? window.DataColor_Public : e == window.SC_Test ? window.DataColor_Test : e == window.SC_Audit ? window.DataColor_Audit : window.DataColor_Local;
var i = HelpPokerking1(t, KEY_CONFIG);
return JSON.parse(i);
};
window.SC_IsAppChannelID = function() {
var e = GetProject().GetMainChannelID(), t = parseInt(e), i = GetProject().GetChildChannelID();
return t < 500 && "001" == i;
};
window.SC_OnGetData = function() {
return MF_LoadOnMainChannelID("cacheSwitchData");
};
window.SC_OnSetCacheData = function(e) {
MF_SaveOnMainChannelID("cacheSwitchData", e);
};
window.SC_bHaveCache = function() {
var e = window.SC_OnGetData();
return null != e && 0 != e;
};
window.SC_GetCacheAryColor = function(e) {
var t = window.SwitchType, i = MS_OnQueryAllLocalData(t, "CacheColorLocal");
return null == i || null == i ? e : i;
};
window.SC_SetCacheAryColor = function() {
for (var e = window.SwitchType, t = SC_GetDataColorByType(e).dataColorLocal.concat(), i = GetProject().GetColorLocalSef(), n = SC_GetCacheAryColor(t), a = 0; a < n.length; ) {
var o = n[a];
o.color != i.color || o.alpha != i.alpha ? a++ : n.splice(a, 1);
}
n.unshift(i);
MS_OnSetLocalData(n, e, "CacheColorLocal");
};
cc._RF.pop();
}, {} ],
AAYQYArray: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "addb06y3tFEpatuBF5NJKcz", "AAYQYArray");
window.SetArrayFormUtf8 = function(e, t) {
cc.assert(2 == arguments.length);
var i = ToUnicode(t);
SetArray(e, i);
};
window.SetArray = function(e, t, i) {
cc.assert(arguments.length >= 2);
var n = e.length, a = 3 == arguments.length ? i : t.length;
a > n && cc.assert(a < n, "ErrorArray.SetArray.CurLen:" + a + ",MaxLen:" + n);
for (var o = 0; o < a; o++) e[o] = t[o];
};
window.ZeroArray = function(e, t) {
cc.assert(2 == arguments.length, "ErrorArgumentsLength.ZeroArray.");
for (var i = 0; i < t; i++) e[i] = 0;
};
window.memset = function() {
if (IsArray(arguments[0])) {
if (3 == arguments.length) {
if ("number" == typeof arguments[2]) {
for (var e = 0; e < arguments[2]; e++) arguments[0][e] = arguments[1];
return;
}
ZeroArrayStruct(arguments[0], arguments[1], arguments[2]);
}
4 != arguments.length || ("number" == typeof arguments[3] ? memset2(arguments[0], arguments[1], arguments[2], arguments[3]) : ZeroArrayStruct2(arguments[0], arguments[1], arguments[2], arguments[3]));
} else YQYAssertAlert(!1, "memset.arguments.aryDst is not array");
};
window.memset2 = function(e, t, i, n) {
if (null == e || null == t || null == i || null == n) {
cc.assert(!1, "arguments.undefined");
return !1;
}
for (var a = 0; a < i; a++) {
e[a] = [];
for (var o = 0; o < n; o++) e[a][o] = t;
}
};
window.memset3 = function(e, t, i, n, a) {
if (null == e || null == t || null == i || null == n || null == a) {
cc.assert(!1, "arguments.undefined");
return !1;
}
for (var o = 0; o < i; o++) {
e[o] = [];
for (var s = 0; s < n; s++) {
e[o][s] = [];
for (var r = 0; r < a; r++) e[o][s][r] = t;
}
}
};
window.ZeroArray2 = function(e, t, i) {
if (null == e || null == t || null == i) {
cc.assert(!1, "arguments.undefined");
return !1;
}
cc.assert(3 == arguments.length, "ErrorArgumentsLength.ZeroArray.");
for (var n = 0; n < t; n++) {
e[n] = [];
for (var a = 0; a < i; a++) e[n][a] = 0;
}
};
window.ZeroArrayStruct = function(e, t, i) {
if (null == t || null == i || null == e) {
cc.assert(!1, "arguments.undefined");
return !1;
}
if (YQYAssertAlert(i)) return !1;
if (YQYAssertAlert(3 == arguments.length)) return !1;
for (var n = 0; n < t; n++) e[n] = new i();
};
window.ZeroArrayStruct2 = function(e, t, i, n) {
if (null == e || null == t || null == i || null == n) {
cc.assert(!1, "arguments.undefined");
return !1;
}
if (YQYAssertAlert(n)) return !1;
if (YQYAssertAlert(4 == arguments.length)) return !1;
for (var a = 0; a < t; a++) {
e[a] = [];
for (var o = 0; o < i; o++) e[a][o] = new n();
}
};
window.CopyArray = function(e) {
cc.assert(1 == arguments.length);
var t = [];
return t = t.concat(e);
};
window.CopyArray2 = function(e) {
cc.assert(1 == arguments.length);
for (var t = [], i = 0; i < e.length; i++) t[i] = CopyArray(e[i]);
return t;
};
window.CopyObject = function(e, t) {
cc.assert(2 == arguments.length);
for (var i = new t(), n = Object.getOwnPropertyNames(e), a = 0; a < n; a++) i[n[a]] = e[n[a]];
return i;
};
window.CopyArrayObject = function(e, t) {
cc.assert(2 == arguments.length);
for (var i = e.length, n = [], a = 0; a < i; a++) n[a] = CopyObject(e[a], t);
return n;
};
window.CopyArrayValue = function(e, t) {
cc.assert(t.length <= e.length);
for (var i = 0; i < t.length; i++) e[i] = t[i];
};
window.ConcatArray = function() {
for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(arguments[t]);
return e;
};
window.ShiftArray = function(e, t, i) {
return e.splice(t, i);
};
window.SliceArray = function(e, t, i) {
return e.slice(t, t + i);
};
window.ContainValue = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) return i;
return -1;
};
window.FindArrayValue = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) return i;
return -1;
};
window.YQLogicArrayCount = function(e) {
for (var t = 0, i = 0; i < e.length; i++) 0 != e[i] && t++;
return t;
};
window.IsFindArrayValue = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) return !0;
return !1;
};
window.IsKeyArrayValue = function(e, t) {
for (var i in e) if (e[i] == t) return !0;
return !1;
};
window.DeleteObject = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) {
e.splice(i, 1);
return !0;
}
return !1;
};
window.ArrayDeleteObject = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) {
e.splice(i, 1);
return !0;
}
return !1;
};
window.sizeof = function(e) {
return new e().GetDataSize();
};
window.ToUnicode = function(e) {
for (var t = [], i = e.length, n = 0; n < i; n++) {
cc.assert("string" == typeof e[n], "CMD_Value.Conver.Error.str is not string");
t[n] = e.charCodeAt(n);
}
return t;
};
window.ToUtf8 = function(e) {
for (var t = "", i = 0; i < e.length && 0 != e[i]; i++) "number" == typeof e[i] && (t += String.fromCharCode(e[i]));
return t;
};
window.AH_SetItemByKey = function(e, t, i) {
e[t] = i;
};
window.AH_GetItemByKey = function(e, t) {
return e[t];
};
window.AH_DeleteItemByKey = function(e, t) {
e[t] = void 0;
return null;
};
window.ArrayToggle = cc.Class({
name: "ArrayToggle",
properties: {
array: [ cc.Toggle ]
}
});
window.ArrayNode = cc.Class({
name: "ArrayNode",
properties: {
array: [ cc.Node ]
}
});
window.ArrayLabel = cc.Class({
name: "ArrayLabel",
properties: {
array: [ cc.Label ]
}
});
window.InsertObject = function(e, t) {
if (0 != e.length) {
for (var i = !1, n = 0; n < e.length; n++) if (e[n] > t) {
e.splice(n, 0, t);
i = !0;
return;
}
i || e.push(t);
} else e.push(t);
};
window.IsNumber = function(e, t) {
var i = Number(e);
return !isNaN(i) && 0 != e.length && (2 != arguments.length || e.length == t);
};
window.GetArrInvalidNum = function(e, t, i) {
for (var n = 0, a = 0; a < i; a++) e[a] != t && n++;
return n;
};
cc._RF.pop();
}, {} ],
ACMD_AStruct: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "de4b7zWB5BLoKVFkktI95ku", "ACMD_AStruct");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
e("ACMD_AValue");
window.CMD_Struct = cc.Class({
init: function(e, t, i) {
var a = this, o = !1, s = Object.getOwnPropertyNames(a), r = arguments.length >= 2 ? t : 0, c = 0, l = 3 == arguments.length ? i : 0;
if (!(e.length < t)) {
for (var h = 0; h < s.length; h++) {
var u = s[h];
if ("object" == n(a[u])) c += _InitObject(a[u], u, e, r + c, l); else {
if ("undefined" == typeof a[u]) {
cc.warn("struct.undefined.key." + u);
0 == o && (o = !0);
continue;
}
a[u] = Value_GetNumber(e, u, r + c);
c += Value_GetValueSize(u);
}
}
return c;
}
cc.warn("pDataBytes is too small:" + e.length + ",startIndex:" + t);
},
GetDataSize: function() {
for (var e = !1, t = 0, i = Object.getOwnPropertyNames(this), a = 0; a < i.length; a++) {
var o = i[a];
if ("object" == n(this[o])) t += _GetObjectSize(this[o], o); else {
if ("undefined" == typeof this[o]) {
cc.warn("struct.undefined.key." + o);
0 == e && (e = !0);
continue;
}
t += Value_GetValueSize(o);
}
}
return t;
},
GetDataBytes: function() {
for (var e = this, t = !1, i = [], a = Object.getOwnPropertyNames(e), o = 0; o < a.length; o++) {
var s = a[o];
if ("object" == n(e[s])) i = i.concat(_GetObjectBytes(e[s], s)); else {
if ("undefined" == typeof e[s]) {
cc.warn("struct.undefined.key." + s);
0 == t && (t = !0);
continue;
}
i = i.concat(Value_GetValueBytes(Value_GetValueSize(s), e[s], s));
}
}
return i;
},
log: function() {
for (var e = Object.getOwnPropertyNames(this), t = 0; t < e.length; t++) {
var i = e[t];
if ("object" == n(this[i])) _LogObject(this[i], i); else {
if ("undefined" == typeof this[i]) {
cc.warn("struct.key.undefined:" + i);
continue;
}
Value_GetValueSize(i);
}
}
},
alert: function() {
var e = Object.getOwnPropertyNames(this);
ManagerHelp_SetSystemAlert("StructBegin:" + e);
for (var t = 0; t < e.length; t++) {
var i = e[t], n = Value_GetValueSize(i);
ManagerHelp_SetSystemAlert("byteSize:" + n + ",key:" + i + ",value:" + this[i]);
}
ManagerHelp_SetSystemAlert("StructEnded.dataSize:" + this.GetDataSize());
}
});
window._GetObjectSize = function(e, t) {
cc.assert("object" == ("undefined" == typeof e ? "undefined" : n(e)), "ErrorType.pObject is not Object：typeof pObject=" + ("undefined" == typeof e ? "undefined" : n(e)) + ",key=" + t);
var i = 0;
if (IsArray(e)) {
var a = e, o = a.length;
if (o > 0) if ("object" == n(a[0])) for (var s = 0; s < a.length; s++) if (IsArray(a[s])) i += _GetObjectSize(a[s], t); else {
if ("undefined" == typeof a[s]) continue;
i += a[s].GetDataSize();
} else {
i += Value_GetValueSize(t) * o;
}
} else i += e.GetDataSize();
return i;
};
window._GetObjectBytes = function(e, t) {
var i = [], a = e.length;
if (a > 0) if ("object" == n(e[0])) for (var o = 0; o < a; o++) if (IsArray(e[o])) i = ConcatArray(i, _GetObjectBytes(e[o], t)); else {
if ("undefined" == typeof e[o]) continue;
i = ConcatArray(i, e[o].GetDataBytes());
} else for (var s = Value_GetValueSize(t), r = 0; r < a; r++) i = i.concat(Value_GetValueBytes(s, e[r], t)); else {
if (0 == a) return i;
i = i.concat(e.GetDataBytes());
}
return i;
};
window._InitObject = function(e, t, i, a, o) {
var s = arguments.length >= 5 ? o : 0, r = arguments.length >= 4 ? a : 0, c = 0;
if (!(i.length < r)) {
if (IsArray(e)) {
if (e.length > 0) if ("object" == n(e[0])) for (var l = 0; l < e.length; l++) {
if (IsArray(e[l])) c += _InitObject(e[l], t, i, r + c, s); else {
if ("undefined" == typeof e[l]) continue;
c += e[l].init(i, r + c, s);
}
if (i.length == r + c) {
cc.warn("break;");
break;
}
if (i.length < r + c) {
cc.warn("pData is too small:" + i.length + ",startIndex:" + (r + c) + ",for is break;,key:" + t);
break;
}
} else {
var h = Value_GetArrayData(i, t, e.length, r + c);
SetArray(e, h);
c += Value_GetValueSize(t) * e.length;
}
} else c += e.init(i, r + c, s);
return c;
}
cc.warn("pDataBytes is too small:" + i.length + ",startIndex:" + r);
};
window._LogObject = function(e, t, i) {
cc.assert("object" == ("undefined" == typeof e ? "undefined" : n(e)), "ErrorType._LogObject.pObject is not object:" + ("undefined" == typeof e ? "undefined" : n(e)) + ",key:" + t);
arguments.length;
if (IsArray(e)) {
var a = e.length;
if (a > 0) if ("object" == n(e[0])) if (IsArray(e[0])) for (var o = 0; o < a; o++) _LogObject(e[o], t, o); else for (var s = 0; s < a; s++) e[s].log(); else {
Value_GetValueSize(t);
for (var r = 0; r < a; r++) "number" == typeof e[r] && String.fromCharCode(e[r]);
}
} else e.log();
};
window._AlertObject = function(e, t, i) {
var a = arguments.length >= 3 ? i : -1;
if (IsArray(e)) {
var o = e.length;
if (o > 0) if ("object" == n(e[0])) if (IsArray(e[0])) for (var s = 0; s < o; s++) _AlertObject(e[s], t, s); else for (var r = 0; r < o; r++) e[r].alert(); else {
for (var c = Value_GetValueSize(t), l = "", h = 0; h < o; h++) "number" == typeof e[h] && (l += String.fromCharCode(e[h]));
-1 != a ? ManagerHelp_SetSystemAlert("byteSize:" + c + ",key" + a + ":" + t + ",aryLen:" + e.length + ",value:" + e + ",描述:" + l) : ManagerHelp_SetSystemAlert("byteSize:" + c + ",key:" + t + ",aryLen:" + e.length + ",value:" + e + ",描述:" + l);
}
} else e.alert();
};
window.IsArray = function(e) {
return "object" == ("undefined" == typeof e ? "undefined" : n(e)) && "number" == typeof e.length;
};
cc._RF.pop();
}, {
ACMD_AValue: "ACMD_AValue"
} ],
ACMD_AValue: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "389c5ctEExOP5zQE95lT/I+", "ACMD_AValue");
window.Value_TypeByte = 1;
window.Value_TypeBool = 1;
window.Value_TypeWORD = 2;
window.Value_TypeTCHAR = 2;
window.Value_TypeDWORD = 4;
window.Value_TypeInt = 4;
window.Value_TypeSCORE = 8;
window.Value_GetValueSize = function(e) {
1 == arguments.length && "string" == typeof e || cc.assert(!1, "Error.Value_GetValueSize: szKey not arguments or szKey:" + e);
var t = e.substr(0, 1), i = e.substr(0, 2);
if ("cb" == i) return Value_TypeByte;
if ("by" == i) return Value_TypeByte;
if ("sz" == i) return Value_TypeWORD;
if ("dw" == i) return Value_TypeDWORD;
if ("ll" == i) return Value_TypeSCORE;
if ("l" == t) return Value_TypeSCORE;
if ("b" == t) return Value_TypeByte;
if ("w" == t) return Value_TypeWORD;
if ("i" == t) return Value_TypeInt;
if ("n" == t) return Value_TypeInt;
cc.warn(!1, "Value warn: " + e + " Not Fount Value Type");
return 0;
};
window.Value_GetValueBytes = function(e, t) {
var i = t, n = [];
if (e <= 4) for (var a = 0; a < e; a++) {
var o = 255 & i;
n.push(o);
i >>= 8;
} else {
var s = 0, r = t;
if (t < 0) {
s = 1;
r = -1 * t;
}
for (var c = Math.pow(256, e - 1), l = 0, h = 0; h < e; h++) {
if ((l = parseInt(r / c)) > 0 & r >= c) n.push(255 & l); else {
n.push(0);
l = 0;
}
r -= l * c;
c /= 256;
}
if (s) for (var u = 0; u < e; u++) {
n[u] = ~n[u];
n[u] &= 255;
}
n.reverse();
}
return n;
};
window.Value_GetArrayBytes = function(e, t) {
for (var i = [], n = Value_GetValueSize(t), a = e.length, o = 0; o < a; o++) i = i.concat(Value_GetValueBytes(n, e[o], t));
return i;
};
window.GetArrayFormNumber = function(e, t) {
var i = e + "", n = [];
if (0 == e) return n;
for (var a = i.length > t ? t : i.length, o = 0; o < a; o++) n[o] = i.charCodeAt(o);
return n;
};
window.GetNumberFormArray = function(e) {
for (var t = [], i = 0; i < e.length; i++) t[i] = String.fromCharCode(e[i]);
t = t.join("");
var n = parseFloat(t);
return isNaN(n) ? 0 : n;
};
window.Value_GetNumberShift = function(e, t) {
for (var i = 0, n = 0, a = Value_GetValueSize(t), o = 0; o < a; o++) {
"number" != typeof (n = e.shift()) && (n = n.charCodeAt(0));
i += n << 8 * o;
}
return i;
};
window.Value_GetNumber = function(e, t, i) {
var n = 0, a = 0, o = Value_GetValueSize(t), s = 0, r = 1;
if (!(e.length < i + o)) {
if (o <= 4) {
for (var c = 0; c < o; c++) a |= (n = e[i + c]) << 8 * c;
return a;
}
for (var l = 0; l < o; l++) {
n = e[i + l];
if (0 === l) {
s = 128 & e[i + l + o - 1];
}
l > 0 && (r *= 256);
if (128 == s) {
n = ~n;
n &= 255;
}
a += n * r;
}
return 128 == s ? -(a + 1) : a;
}
cc.warn("pDataBytes is too small:" + e.length + ",startIndex:" + (i + o));
};
window.Value_GetArrayDataShift = function(e, t, i) {
for (var n = [], a = 0, o = Value_GetValueSize(t), s = 0, r = 0; r < i; r++) {
a = 0;
for (var c = 0; c < o; c++) {
"number" != typeof (s = e.shift()) && (s = s.charCodeAt(0));
a += s << 8 * c;
}
n[r] = a;
}
return n;
};
window.Value_GetArrayData = function(e, t, i, n) {
var a = [], o = Value_GetValueSize(t), s = i * o, r = e.length - n;
s > r && (s = r);
for (var c = 0; c < s / o; c++) a[c] = Value_GetNumber(e, t, n + o * c);
return a;
};
window.Value_GetByte = function(e, t) {
for (var i = 0, n = 0, a = 2 == arguments.length ? t : 0, o = 0; o < Value_TypeByte; o++) {
"number" != typeof (n = e[a + o]) && (n = n.charCodeAt(0));
i += n << 8 * o;
}
return i;
};
window.Value_GetWord = function(e, t) {
for (var i = 0, n = 0, a = 2 == arguments.length ? t : 0, o = 0; o < Value_TypeWORD; o++) {
"number" != typeof (n = e[a + o]) && (n = n.charCodeAt(0));
i += n << 8 * o;
}
return i;
};
window.Value_GetInt = function(e, t) {
for (var i = 0, n = 0, a = 2 == arguments.length ? t : 0, o = 0; o < Value_TypeInt; o++) {
"number" != typeof (n = e[a + o]) && (n = n.charCodeAt(0));
i += n << 8 * o;
}
return i;
};
window.Value_GetDWORD = function(e, t) {
for (var i = 0, n = 0, a = 2 == arguments.length ? t : 0, o = 0; o < Value_TypeDWORD; o++) {
"number" != typeof (n = e[a + o]) && (n = n.charCodeAt(0));
i += n << 8 * o;
}
return i;
};
cc._RF.pop();
}, {} ],
ACardHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2ed1bAlCd5K+qjiYYP7a1tk", "ACardHelp");
window.PUKE_MASK_VALUE = 15;
window.PUKE_MASK_COLOR = 240;
window.PuKe_GetValue = function(e, t) {
return 2 == arguments.length ? e & t : e & window.PUKE_MASK_VALUE;
};
window.PuKe_GetColor = function(e, t) {
return 2 == arguments.length ? e & t : e & window.PUKE_MASK_COLOR;
};
window.PuKe_GetValueString = function(e) {
return 50 == e ? "半" : 0 == e ? "" : 1 == e ? "一" : 2 == e ? "二" : 3 == e ? "三" : 4 == e ? "四" : 5 == e ? "五" : 6 == e ? "六" : 7 == e ? "七" : 8 == e ? "八" : 9 == e ? "九" : 10 == e ? "十" : 11 == e ? "十一" : 12 == e ? "十二" : 13 == e ? "十三" : 14 == e ? "十四" : 15 == e ? "十五" : 16 == e ? "十六" : 17 == e ? "十七" : 18 == e ? "十八" : 19 == e ? "十九" : 20 == e ? "二十" : void 0;
};
window.PuKe_SortCardList = function(e, t) {
var i = !0, n = 2 == arguments.length && t, a = 0, o = e.length - 1;
if (n) do {
i = !0;
for (var s = 0; s < o; s++) if (e[s] < e[s + 1]) {
i = !1;
a = e[s];
e[s] = e[s + 1];
e[s + 1] = a;
}
o--;
} while (0 == i); else do {
i = !0;
for (var r = 0; r < o; r++) if (e[r] > e[r + 1]) {
i = !1;
a = e[r];
e[r] = e[r + 1];
e[r + 1] = a;
}
o--;
} while (0 == i);
};
window.MJData = {};
window.MJData = MJData;
MJData.byUseMjType = [];
MJData.byUseMjCount = 0;
window.MJ_GetColor = function(e) {
return parseInt(e / 10);
};
window.MJ_GetIndex = function(e) {
for (var t = 0, i = MJData.byUseMjType.length; t < i; t++) if (e == MJData.byUseMjType[t]) return t;
cc.assert(!1, "MJData.byUseMjType is not contain byCard:" + e);
return 0;
};
window.MJ_GetSoundIndex = function(e) {
return e;
};
window.MJ_GetData = function(e) {
cc.assert(e < MJData.byUseMjCount, "MJData.byUseMjCount range:" + MJData.byUseMjCount + ",enter byIndex:" + e);
return MJData.byUseMjType[e];
};
window.MJ_GetValue = function(e) {
return parseInt(e % 10 - 1);
};
window.MJ_GetCardIndex = function(e) {
return MJ_GetIndex(e);
};
window.MJ_GetCardValue = function(e) {
return e % 10;
};
window.MJ_CheckIsTongSe = function(e, t) {
return e / 10 == t / 10;
};
window.MJ_FindArrayIndex = function(e, t, i) {
for (var n = 0; n < e.length && e[n] != i; n++) if (e[n] == t) return n;
return -1;
};
window.MJ_IsFindArrayValue = function(e, t, i) {
for (var n = 0; n < e.length && e[n] != i; n++) if (e[n] == t) return !0;
return !1;
};
window.MJ_RemoveCard = function(e, t, i) {
if (0 == e[0]) {
cc.warn("warning.GameLogic.bCardData is not CardData");
return !1;
}
for (var n = !1, a = 0; a < t; a++) if (n) e[a] = e[a + 1]; else if (e[a] == i) {
e[a] = e[a + 1];
n = !0;
}
e[t - 1] = 255;
return !0;
};
window.MJAction = {};
MJAction.ACTION_NO = 0;
MJAction.ACTION_BUHUA = 1;
MJAction.ACTION_CHI = 2;
MJAction.ACTION_CHI_FRONT = 3;
MJAction.ACTION_CHI_MID = 4;
MJAction.ACTION_CHI_BACK = 5;
MJAction.ACTION_CHI_TNG = 6;
MJAction.ACTION_PENG = 7;
MJAction.ACTION_KAN = 8;
MJAction.ACTION_GANG = 9;
MJAction.ACTION_AN_GANG = 10;
MJAction.ACTION_BU_GANG = 11;
MJAction.ACTION_MING_GANG = 12;
MJAction.ACTION_TING_PAI = 13;
MJAction.ACTION_HU = 14;
MJAction.ACTION_PASS = 15;
MJAction.ACTION_ZIMO = 16;
MJAction.ACTION_LIANGDAO = 17;
MJAction.ACTION_GAIPAI = 18;
MJAction.ACTION_JIA_BEI = 19;
cc._RF.pop();
}, {} ],
ADispatcher: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "95743Qf2olD4K6/AaqYa9qU", "ADispatcher");
window.DSP_LOGIN_SUCCESS = "DSP_LOGIN_SUCCESS";
window.DSP_LOGIN_UPDATE = "DSP_LOGIN_UPDATE";
window.DSP_OPERATE_SUCCESS = "DSP_OPERATE_SUCCESS";
window.DSP_OPERATE_FAIL = "DSP_OPERATE_FAIL";
window.DSP_LUCK_INFO = "DSP_LUCK_INFO";
window.DSP_LUCK_AWARD = "DSP_LUCK_AWARD";
window.DSP_LUCK_RECORD = "DSP_LUCK_RECORD";
window.Dispatcher = {};
window.Dispatcher.EventArray = [];
window.Dispatcher.AddListener = function(e, t, i) {
for (var n = !1, a = 0; a < window.Dispatcher.EventArray.length; a++) {
var o = window.Dispatcher.EventArray[a];
if (null != o && o.obj == e && o.eventName == t) {
o.obj = e;
o.eventName = t;
o.eventFunc = i;
n = !0;
brreak;
}
}
if (!n) {
var s = {};
s.obj = e;
s.eventName = t;
s.eventFunc = i;
window.Dispatcher.EventArray.push(s);
}
};
window.Dispatcher.RemoveOnListener = function(e, t) {
for (var i = 0; i < window.Dispatcher.EventArray.length; i++) {
var n = window.Dispatcher.EventArray[i];
if (null != n && n.obj == e && n.eventName == t) {
window.Dispatcher.EventArray.splice(i, 1);
break;
}
}
};
window.Dispatcher.RemoveAllListener = function(e) {
for (var t = 0; t < window.Dispatcher.EventArray.length; t++) {
var i = window.Dispatcher.EventArray[t];
if (null != i && i.obj == e) {
window.Dispatcher.EventArray.splice(t, 1);
t--;
}
}
};
window.Dispatcher.HasListener = function(e) {
for (var t = 0; t < window.Dispatcher.EventArray.length; t++) {
var i = window.Dispatcher.EventArray[t];
if (null != i && i.eventName == e) return !0;
}
return !1;
};
window.Dispatcher.Excute = function(e) {
for (var t = 0; t < window.Dispatcher.EventArray.length; t++) {
var i = window.Dispatcher.EventArray[t];
null != i && i.eventName == e && (2 == arguments.length ? i.eventFunc.call(i.obj, e, arguments[1]) : 3 == arguments.length ? i.eventFunc.call(i.obj, e, arguments[1], arguments[2]) : 4 == arguments.length ? i.eventFunc.call(i.obj, e, arguments[1], arguments[2], arguments[3]) : 5 == arguments.length ? i.eventFunc.call(i.obj, e, arguments[1], arguments[2], arguments[3], arguments[4]) : 6 == arguments.length ? i.eventFunc.call(i.obj, e, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]) : i.eventFunc.call(i.obj, e));
}
};
cc._RF.pop();
}, {} ],
AHelpEvent: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "26465Qo7YxC+LxK0CNGwzjT", "AHelpEvent");
window.WAIT_OPENED = 1;
window.WAIT_CLOSED = 3;
window.ALERT_OPENED = 1;
window.ALERT_CLOESD = 2;
window.ManagerHelp = {};
window.ManagerHelp.pfSystemAlert = null;
window.ManagerHelp.pfLinkAgainLayer = null;
window.ManagerHelp.pfSystemLabel = null;
window.ManagerHelp.pfWaitLayer = null;
window.ManagerHelp.pfVideoPlayer = null;
window.ManagerHelp.pfRewardPopup = null;
window.ManagerHelp.nodeWait = null;
window.ManagerHelp_SetWaitLockLayer = function(e, t, i) {
var n = arguments, a = cc.director.getScene();
if (a) {
var o = a.getChildByName("Canvas");
if (o) {
var s = o.getChildByName("pfWaitLayer");
i && (s = i.getChildByName("pfWaitLayer"));
if (e != WAIT_CLOSED && 0 != n.length) {
if (!s || e != WAIT_OPENED) {
var r = !0;
s = cc.instantiate(window.ManagerHelp.pfWaitLayer);
n.length > 1 && (r = t);
r || s.getComponent(cc.Button) && (s.getComponent(cc.Button).enabled = !1);
window.H5_Evnet.OnRotationNode && window.H5_Evnet.OnRotationNode(s);
i ? i.addChild(s, 100, "pfWaitLayer") : o.addChild(s, 100, "pfWaitLayer");
}
} else s && s.removeFromParent();
}
}
};
window.ManagerHelp_SetLinkAgainLayer = function(e, t) {
var i = arguments;
if (e != WAIT_CLOSED && 0 != i.length) {
var n = cc.director.getScene();
if (n) {
var a = n.getChildByName("Canvas");
if (a) {
if (!a.getChildByName("pfLinkAgainLayer")) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var o = !0, s = cc.instantiate(window.ManagerHelp.pfLinkAgainLayer);
2 == i.length && (o = t);
o || s.getComponent(cc.Button) && (s.getComponent(cc.Button).enabled = !1);
window.H5_Evnet.OnRotationNode && window.H5_Evnet.OnRotationNode(s);
a.addChild(s, 100, "pfLinkAgainLayer");
}
} else cc.warn(" add ManagerHelp_SetSystemAlert_Canvas is null");
} else cc.warn(" add ManagerHelp_SetSystemAlert_Scene is null");
} else {
var r = cc.director.getScene();
if (!r) return;
var c = r.getChildByName("Canvas");
if (!c) return;
var l = c.getChildByName("pfLinkAgainLayer");
l && l.removeFromParent();
}
};
window.ManagerHelp_SetSystemAlert = function(e, t, i, n) {
if ("remove" != e) {
var a = !1, o = ManagerHelp_GetLayerNodeByName("pfSystemAlert");
if (o) {
o.getComponent("jsSystemAlert").labelAlertMessage.string == e && (a = !0);
}
if (null != o && a) return null;
var s = cc.instantiate(window.ManagerHelp.pfSystemAlert), r = s.getComponent("jsSystemAlert");
r.init(e, t, i, n);
var c = cc.director.getScene();
if (c) {
var l = c.getChildByName("Canvas");
if (l) {
window.H5_Evnet.OnRotationNode && window.H5_Evnet.OnRotationNode(s);
l.addChild(s, 100, "pfSystemAlert");
return r;
}
cc.warn("add ManagerHelp_SetSystemAlert_canvas is null");
} else cc.warn(" add ManagerHelp_SetSystemAlert_Scene is null");
} else {
var h = cc.director.getScene();
if (!h) return;
var u = h.getChildByName("Canvas");
if (!u) return;
var d = u.getChildByName("pfSystemAlert");
d && d.removeFromParent();
}
};
window.ManagerHelp_WebKeepLight = function(e) {
if (cc.sys.isBrowser && (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS)) {
var t = [ cc.sys.BROWSER_TYPE_ANDROID, cc.sys.BROWSER_TYPE_MOBILE_QQ, cc.sys.BROWSER_TYPE_UC, cc.sys.BROWSER_TYPE_CHROME, cc.sys.BROWSER_TYPE_BAIDU, cc.sys.BROWSER_TYPE_LIEBAO, cc.sys.BROWSER_TYPE_MAXTHON ], i = [ cc.sys.BROWSER_TYPE_SAFARI, cc.sys.BROWSER_TYPE_SOUGOU ];
if (cc.sys.os == cc.sys.OS_ANDROID) {
if (!IsFindArrayValue(t, cc.sys.browserType)) return;
} else if (cc.sys.os == cc.sys.OS_IOS && !IsFindArrayValue(i, cc.sys.browserType)) return;
var n = cc.director.getScene();
if (!n) return;
var a = n.getChildByName("Canvas");
if (!a) return;
if (a.getChildByName("VideoPlayer")) return;
var o = cc.instantiate(window.ManagerHelp.pfVideoPlayer), s = o.getComponent("jsVideoControl");
a.addChild(o);
o.setPosition(1e4, 1e4);
s.OnPlay(e);
}
};
window.HelpPokerking0 = function(e, t) {
var i = CryptoJS.enc.Utf8.parse(t), n = CryptoJS.enc.Utf8.parse(e);
return CryptoJS.AES.encrypt(n, i, {
mode: CryptoJS.mode.ECB,
padding: CryptoJS.pad.Pkcs7
}).toString();
};
window.HelpPokerking1 = function(e, t) {
var i = CryptoJS.enc.Utf8.parse(t), n = CryptoJS.AES.decrypt(e, i, {
mode: CryptoJS.mode.ECB,
padding: CryptoJS.pad.Pkcs7
});
return CryptoJS.enc.Utf8.stringify(n).toString();
};
window.ManagerHelp_SetSystemLabel = function(e) {
var t = cc.director.getScene();
if (t) {
var i = t.getChildByName("Canvas");
if (i) {
var n = i.getChildByName("pfSystemLabel");
if (null == n) {
n = cc.instantiate(window.ManagerHelp.pfSystemLabel);
i.addChild(n, 100, "pfSystemLabel");
}
n.getComponent("jsSystemLabel").OnAddText(e);
}
}
};
window.ManagerHelp_RewardPopup = function(e, t) {
var i = cc.director.getScene();
if (i) {
var n = i.getChildByName("Canvas");
if (n) {
var a = n.getChildByName("pfRewardPopup");
if (null == a) {
a = cc.instantiate(window.ManagerHelp.pfRewardPopup);
n.addChild(a, 100, "pfRewardPopup");
}
a.getComponent("jsRewardPopup").setData(e, t);
}
}
};
window.ManagerHelp_GetLayerNodeByName = function(e) {
var t = cc.director.getScene();
if (t) {
var i = t.getChildByName("Canvas");
if (i) {
var n = i.getChildByName(e);
return n || null;
}
cc.warn(" ManagerHelp_RemoveAllAlert is null");
} else cc.warn(" ManagerHelp_SetHotUpdate_Scene is null");
};
window.ManagerHelp_RemoveAllAlert = function() {
var e = cc.director.getScene();
if (e) {
var t = e.getChildByName("Canvas");
if (t) {
var i = t.getChildByName("pfHotUpdate");
i && i.removeFromParent();
ManagerHelp_SetSystemAlert("remove");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var n = t.getChildByName("pfTransition");
if (n) {
var a = n.getComponent("jsTransition");
a && a.OnTranActive(!1);
}
}
}
};
window.YQYAssertAlertStructSizeByEqual = function(e, t, i) {
var n = sizeof(e);
if (n != t) {
var a = "assert." + i + ".wLocalSize:" + n + ".wDataSize:" + t;
cc.warn(a);
ManagerHelp_SetSystemAlert(a);
return !0;
}
return !1;
};
window.YQYAssertAlertStructSizeByLocalMultiple = function(e, t, i) {
var n = sizeof(e);
if (t % n != 0) {
var a = "assert." + i + ".wLocalSize:" + n + ".wDataSize:" + t;
cc.warn(a);
ManagerHelp_SetSystemAlert(a);
return !0;
}
return !1;
};
window.YQYAssertAlertStructSizeByLocalMax = function(e, t, i) {
var n = sizeof(e);
if (n < t) {
var a = "assert." + i + ".wLocalSize:" + n + ".wDataSize:" + t;
cc.warn(a);
ManagerHelp_SetSystemAlert(a);
return !0;
}
return !1;
};
window.YQYAssertAlertStructSizeByLocalMin = function(e, t, i) {
var n = sizeof(e);
if (n > t) {
var a = "assert." + i + ".wLocalSize:" + n + ".wDataSize:" + t;
cc.warn(a);
ManagerHelp_SetSystemAlert(a);
return !0;
}
return !1;
};
window.YQYAssertAlert = function(e, t) {
if (0 == e || "undefined" == typeof e || null == e) {
cc.warn(t);
ManagerHelp_SetSystemAlert(t);
return !0;
}
return !1;
};
window.ManagerHelp.OnLayerEvent = null;
window.ManagerHelp_SetLayerEvent = function(e, t, i) {
cc.assert(window.ManagerHelp.OnLayerEvent);
window.ManagerHelp.OnLayerEvent && window.ManagerHelp.OnLayerEvent(e, t, i);
};
window.OnPostSmsMessageId = function() {
if (0 == GetProject().bSmsType) {
var e = "http://api2.nxcloud.com/api/smsdr/conversion?messageid=" + GetProject().szMessageId;
HttpHelper.get(e, function(e, t) {
200 == t.status || ManagerHelp_SetSystemAlert("Network exception, please try again");
});
} else if (1 == GetProject().bSmsType) {
var t = GetProject().szSmsPostUrl;
t.length > 0 && HttpHelper.get(t, function(e, t) {});
}
};
cc._RF.pop();
}, {} ],
AHelpGame: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41b83jm70FJ+69UAtdODWc4", "AHelpGame");
window.GameConfig = {};
GameConfig.aryKindChair = [];
GameConfig.aryKind100 = [];
GameConfig.aryKindGold = [];
GameConfig.aryKindNew = [];
GameConfig.aryScreenPortrait = [];
GameConfig.aryKindName = [];
GameConfig.aryKindOpen = [ 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 300, 301, 302, 303, 304, 306, 307, 400, 500, 501, 502, 504, 505, 506, 3002 ];
GameConfig.aryKindNotOpen = [];
GameConfig.aryKind100 = [ 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 300, 301, 302, 303, 304, 306, 307, 500, 501, 502, 504, 505, 506 ];
GameConfig.aryKindGold = [ 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 300, 301, 302, 303, 304, 306, 307, 500, 501, 502, 504, 505, 506 ];
GameConfig.aryKindNew = [ 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 300, 301, 302, 303, 304, 306, 307, 400, 500, 501, 502, 504, 505, 506 ];
GameConfig.aryOnLineNormal = [];
GameConfig.aryScreenPortrait = [];
GameConfig.aryFeatured = [ 133, 135, 136, 138, 141, 400 ];
GameConfig.aryMultiplayer = [ 130, 131, 133, 134, 135, 136, 137, 138, 139, 141 ];
GameConfig.arySlots = [ 300, 301, 302, 303, 304, 306, 307, 500, 501, 502, 504, 505, 506 ];
GameConfig.aryKindName[130] = "Rocket";
GameConfig.aryKindName[131] = "TossACoin";
GameConfig.aryKindName[133] = "DragonTiger";
GameConfig.aryKindName[134] = "ColorGame";
GameConfig.aryKindName[135] = "Mythical Animals";
GameConfig.aryKindName[136] = "Red & Black War";
GameConfig.aryKindName[137] = "Birds & Animals";
GameConfig.aryKindName[138] = "Baccarat";
GameConfig.aryKindName[139] = "Bens & BMW";
GameConfig.aryKindName[141] = "Bullfighting";
GameConfig.aryKindName[300] = "Minesweeper";
GameConfig.aryKindName[301] = "Plinko";
GameConfig.aryKindName[302] = "HappyFruit";
GameConfig.aryKindName[303] = "Treasuredigging";
GameConfig.aryKindName[304] = "Plinko";
GameConfig.aryKindName[306] = "TreasureHunt";
GameConfig.aryKindName[307] = "luckyfruit";
GameConfig.aryKindName[400] = "Tongits";
GameConfig.aryKindName[500] = "Slot";
GameConfig.aryKindName[501] = "AztecMagic";
GameConfig.aryKindName[502] = "AztecMagicPlus";
GameConfig.aryKindName[504] = "Captain'sTreasure";
GameConfig.aryKindName[505] = "Hot777";
GameConfig.aryKindName[506] = "FortuneRabbit";
GameConfig.aryKindName[3002] = "Fish Reef";
window.GCF_IsGameKind100 = function(e) {
return IsFindArrayValue(GameConfig.aryKind100, e);
};
window.GCF_IsGameGold = function(e) {
return IsFindArrayValue(GameConfig.aryKindGold, e);
};
window.GCF_IsGameNew = function(e) {
return IsFindArrayValue(GameConfig.aryKindNew, e);
};
window.GCF_GetGameName = function(e) {
return GameConfig.aryKindName[e];
};
window.GCF_IsScreenPortrait = function(e) {
return IsFindArrayValue(window.GameConfig.aryScreenPortrait, e);
};
window.GCF_IsGameFeatured = function(e) {
return IsFindArrayValue(GameConfig.aryFeatured, e);
};
window.GCF_IsGameMultiplayer = function(e) {
return IsFindArrayValue(GameConfig.aryMultiplayer, e);
};
window.GCF_IsGameSlots = function(e) {
return IsFindArrayValue(GameConfig.arySlots, e);
};
window.USI_OnSavaInfo = function(e, t, i, n) {
var a = {};
a.szSign = e;
a.szWhiteListSign = t;
a.dwUserID = i;
a.szLogonGuid = n;
MF_SaveOnMainChannelID("objInfo", a);
};
window.USI_OnGetInfo = function() {
var e = MF_LoadOnMainChannelID("objInfo");
return null != e && null != e ? e : null;
};
window.AccountConfig = {};
AccountConfig.aryAccount = [];
window.PhonePrefix = "63";
window.IsFirst = !0;
window.ACF_SetAccount = function(e, t, i) {
if (null != e && null != e && null != t && null != t) {
cc.sys.localStorage.setItem("account", e);
cc.sys.localStorage.setItem("password", t);
}
null != i && null != i && cc.sys.localStorage.setItem("remember", i);
};
window.ACF_GetAccount = function() {
var e = {};
e.account = cc.sys.localStorage.getItem("account");
e.password = cc.sys.localStorage.getItem("password");
e.remember = cc.sys.localStorage.getItem("remember");
return null != e.account && null != e.account && null != e.password && null != e.password ? e : null;
};
window.ACF_SetAccountOtp = function(e, t) {
if (e && t) {
var i = {};
i.account = e;
i.token = t;
cc.sys.localStorage.setItem("account_otp", JSON.stringify(i));
}
}, window.ACF_GetAccountOtp = function() {
var e = cc.sys.localStorage.getItem("account_otp");
return e ? JSON.parse(e) : null;
}, window.ACF_ClearAccountOtp = function() {
var e = ACF_GetAccountOtp();
if (e) {
e.token = "";
cc.sys.localStorage.setItem("account_otp", JSON.stringify(e));
}
}, window.ACF_SetAccountType = function(e) {
cc.sys.localStorage.setItem("account_type", e);
}, window.ACF_GetAccountType = function() {
return cc.sys.localStorage.getItem("account_type");
}, window.ACF_ClearAccount = function() {
IsFirst = !1;
};
window.ACF_ReadAccount = function() {
var e = MF_LoadOnMainChannelID("objAccount1");
AccountConfig.aryAccount = null == e || null == e || "" == e ? [] : e;
};
window.ACF_SaveAccount = function() {
MF_SaveOnMainChannelID("objAccount1", AccountConfig.aryAccount);
};
window.ACF_OnAddAccount = function(e, t) {
var i = ACF_ObjItemForAccount(e);
if (null == i) {
var n = {};
n.account = e;
n.szMd5Password = t;
AccountConfig.aryAccount.push(n);
} else i.szMd5Password = t;
};
window.ACF_OnAddAccount_VISITOR = function(e) {
for (var t = AccountConfig.aryAccount.concat(), i = [], n = 0; n < t.length; n++) {
var a = t[n], o = a.account;
"" == a.szMd5Password && i.push(o);
}
for (var s = 0; s < i.length; s++) ACF_OnDeleteAccount(i[s]);
var r = {};
r.account = e;
r.szMd5Password = "";
AccountConfig.aryAccount.push(r);
};
window.ACF_OnDeleteAccount = function(e) {
var t = ACF_ObjItemForAccount(e);
return !!t && DeleteObject(AccountConfig.aryAccount, t);
};
window.ACF_bFindForAccount = function(e) {
var t = AccountConfig.aryAccount.concat(), i = !1;
if (t) for (var n = 0; n < t.length; n++) {
if (t[n].account == e) {
i = !0;
break;
}
}
return i;
};
window.ACF_ObjItemForAccount = function(e) {
var t = AccountConfig.aryAccount.concat(), i = null;
if (t) for (var n = 0; n < t.length; n++) {
var a = t[n];
if (a.account == e) {
i = a;
break;
}
}
return i;
};
window.ACF_GetMd5Password = function(e) {
var t = "", i = ACF_ObjItemForAccount(e);
i && (t = i.szMd5Password);
return t;
};
window.ACF_GetNormalAccount = function() {
var e = MF_LoadOnMainChannelID("nNormalAccount");
return e || "";
};
window.MsgConifg = {};
MsgConifg.SYS_MSG = [];
MsgConifg.WIN_MSG = [];
window.aryPlayTime = [];
window.MAX_MSG = 100;
window.MSG_OnAddMsg = function(e) {
if (!(MsgConifg.SYS_MSG.length + MsgConifg.WIN_MSG.length > window.MAX_MSG)) {
var t = MSG_GetMsgIndex(e), i = MSG_GetAryForType(e.dwType);
null != t ? i[t] = e : i.push(e);
}
};
window.MSG_OnGetMsg = function() {
for (var e = null, t = MsgConifg.SYS_MSG, i = [], n = 0; n < t.length; n++) {
var a = t[n], o = a.dwStartTime, s = a.dwEndTime, r = Math.round(new Date().getTime() / 1e3), c = r - aryPlayTime[a.dwId];
if (!(r < o)) if (r > s) i.push(n); else if (!(c < a.dwLoopCycle)) {
e = a;
break;
}
}
for (var l = 0; l < i.length; l++) DeleteObject(t, t[nIndex]);
null == e && (e = MsgConifg.WIN_MSG.shift());
return e;
};
window.MSG_OnDeleteMsg = function(e) {
var t = MSG_GetMsgIndex(e), i = MSG_GetAryForType(e.dwType);
null != t && DeleteObject(i, i[t]);
};
window.MSG_GetAryForType = function(e) {
var t = null;
e == SYS_MSG_TYPE_REPLAY_MSG ? t = MsgConifg.SYS_MSG : e == SYS_MSG_TYPE_WIN_BROADCAST && (t = MsgConifg.WIN_MSG);
return t;
};
window.MSG_GetMsgIndex = function(e) {
var t = e.dwId, i = MSG_GetAryForType(e.dwType);
if (null != i) for (var n = 0; n < i.length; n++) {
var a = n;
if (i[n].dwId == t) return a;
}
return null;
};
window.MSG_ClearMsgAry = function() {
MsgConifg.SYS_MSG = [];
MsgConifg.WIN_MSG = [];
window.aryPlayTime = [];
};
window.ET_UNRECEIVE = 0;
window.ET_UNREAD = 1;
window.ET_OVER = 2;
window.EmailConfig = {};
EmailConfig.aryEmail = [];
EmailConfig.aryEmail[ET_UNRECEIVE] = [];
EmailConfig.aryEmail[ET_UNREAD] = [];
EmailConfig.aryEmail[ET_OVER] = [];
window.EMA_OnLoadEamil = function() {
var e = PlayerManager.GetMeUserItem().GetGameID(), t = MS_OnQueryAllLocalData(e, "EmailData0");
if (t) EmailConfig.aryEmail = t; else {
EmailConfig.aryEmail = [];
EmailConfig.aryEmail[ET_UNRECEIVE] = [];
EmailConfig.aryEmail[ET_UNREAD] = [];
EmailConfig.aryEmail[ET_OVER] = [];
}
EmailConfig.aryEmail[ET_UNRECEIVE] = [];
EmailConfig.aryEmail[ET_UNREAD] = [];
for (var i = [], n = EmailConfig.aryEmail[ET_OVER], a = 0; a < n.length; a++) {
var o = n[a];
if (1 == o.cbReadState || 1 == o.cbAttachmentState && o.lAttachedScore > 0) {
var s = o.OperationTime;
Math.round(new Date().getTime() / 1e3) - s >= 172800 && i.push(o.lId);
}
}
for (var r = 0; r < i.length; r++) {
var c = EMA_OnGetEamilByID(i[r]);
null != c && EMA_OnDeleteEmail(c);
}
EMA_OnSortEmail();
};
window.EMA_OnSaveEamil = function() {
var e = PlayerManager.GetMeUserItem().GetGameID();
MS_OnSetLocalData(EmailConfig.aryEmail, e, "EmailData0");
};
window.EMA_OnSortEmail = function() {
for (var e = function(e, t) {
return t.lSendTimeStamp - e.lSendTimeStamp;
}, t = 0; t < EmailConfig.aryEmail.length; t++) EmailConfig.aryEmail[t].sort(e);
};
window.EMA_OnAddEamil = function(e) {
var t = EMA_OnGetEamilType(e), i = EmailConfig.aryEmail[t], n = EMA_OnGetIndexByID(t, e.lId);
null != n ? i[n] = e : i.push(e);
EMA_OnSortEmail();
};
window.EMA_OnAddToFirst = function(e) {
var t = EMA_OnGetEamilType(e), i = EmailConfig.aryEmail[t];
null != EMA_OnGetIndexByID(t, e.lId) && EMA_OnDeleteEmail(e);
i.unshift(e);
EMA_OnSortEmail();
};
window.EMA_OnDeleteEmail = function(e) {
var t = EMA_OnGetEamilType(e), i = EmailConfig.aryEmail[t], n = EMA_OnGetIndexByID(t, e.lId);
null != n && DeleteObject(i, i[n]);
};
window.EMA_OnGetEamilType = function(e) {
return 0 == e.cbAttachmentState && e.lAttachedScore > 0 ? ET_UNRECEIVE : 0 == e.cbReadState ? ET_UNREAD : ET_OVER;
};
window.EMA_OnGetEamilByID = function(e) {
for (var t = null, i = 0; i < EmailConfig.aryEmail.length; i++) {
for (var n = EmailConfig.aryEmail[i], a = 0; a < n.length; a++) {
var o = n[a];
if (o.lId == e) {
t = o;
break;
}
}
if (null != t) break;
}
return t;
};
window.EMA_OnGetIndexByID = function(e, t) {
for (var i = null, n = EmailConfig.aryEmail[e], a = 0; a < n.length; a++) if (n[a].lId == t) {
i = a;
break;
}
return i;
};
window.EMA_OnGetAryLength = function(e) {
return EmailConfig.aryEmail[e].length;
};
window.EMA_OnGetEmailByIndex = function(e, t) {
return EmailConfig.aryEmail[e][t];
};
window.EMA_OnGetMaxLength = function() {
return EMA_OnGetAryLength(ET_UNRECEIVE) + EMA_OnGetAryLength(ET_UNREAD) + EMA_OnGetAryLength(ET_OVER);
};
window.objData = null;
window.GS_OnSaveData = function(e) {
window.objData = e;
};
window.GS_OnGetData = function() {
return window.objData;
};
window.GS_OnGetValueByKey = function(e, t) {
var i = "";
2 == arguments.length && (i = t);
var n = GS_OnGetData();
return n ? n[e] : i;
};
window.GS_OnAddKindIDList = function() {
window.GameConfig.aryOnLineNormal = [];
for (var e = (window.SwitchType == window.SC_Local ? "3002:9" : GS_OnGetValueByKey("s5", [])).split(","), t = 0; t < e.length; t++) {
var i = e[t].split(":");
if (0 != parseInt(i[1])) {
var n = parseInt(i[0]);
window.GameConfig.aryOnLineNormal.push(n);
}
}
};
window.GS_OnGetGameFlagByKindID = function(e) {
for (var t = (window.SwitchType == window.SC_Local ? "3002:9" : GS_OnGetValueByKey("s5", [])).split(","), i = 0; i < t.length; i++) {
var n = t[i].split(":");
if (e == n[0] && n[2]) return n[2];
}
};
window.GS_OnGetIndexByKindID = function(e) {
for (var t = (window.SwitchType == window.SC_Local ? "3002:9" : GS_OnGetValueByKey("s5", [])).split(","), i = [], n = ServerData_GetGameKindAry(), a = 0; a < t.length; a++) {
var o = t[a].split(":"), s = AH_GetItemByKey(n, o[0]);
isNaN(o[1]) ? o[1] = 0 : o[1] = parseInt(o[1]);
0 != o[1] && null != s && i.push(o);
}
for (var r = 0; r < i.length - 1; r++) for (var c = 0; c < i.length - 1 - r; c++) if (i[c][1] > i[c + 1][1]) {
var l = i[c];
i[c] = i[c + 1];
i[c + 1] = l;
}
for (var h = 0; h < i.length; h++) if (i[h][0] == e) return h + 1;
return 0;
};
window.Value_GetRandomInt = function(e, t) {
return parseInt(Math.random() * (t - e) + e);
};
window.Rand = function(e, t) {
return 2 == arguments.length ? parseInt(Math.random() * (e - t) + t) : parseInt(Math.random() * e);
};
window.SwitchViewID = function(e, t, i) {
return (e + i - t) % i;
};
window.SwitchChairID = function(e, t, i) {
return (e + t) % i;
};
window.SwitchNextChairID = function(e, t) {
return (e + 1) % t;
};
window.SwitchPreChairID = function(e, t) {
return (e + t - 1) % t;
};
window.getFileName = function(e) {
var t = e.lastIndexOf("/"), i = e.lastIndexOf(".");
return e.substring(t + 1, i);
};
window.HelpIsJsonString = function(e) {
try {
return JSON.parse(e);
} catch (e) {
return !1;
}
};
window.HttpHelper = {};
window.fHttpTimeOut = 4e3;
HttpHelper.get = function(e, t) {
var i = cc.loader.getXMLHttpRequest();
i.open("GET", e, !0);
i.onerror = function() {
t(!1, i);
};
i.timeout = window.fHttpTimeOut;
i.ontimeout = function() {
t(!1, i);
};
i.onreadystatechange = function() {
if (4 == i.readyState && i.status >= 200 && i.status <= 207) {
i.statusText;
var e = i.responseText;
try {
JSON.parse(e);
t(!0, i);
} catch (e) {
t(!1, i);
}
}
};
i.send();
};
window.fHttpTimeOut = 4e3;
HttpHelper.post = function(e, t, i, n) {
if (2 == arguments.length) {
i = arguments[1];
t = "";
}
var a = cc.loader.getXMLHttpRequest();
GetMissionLogon().OnHttpRequestStart(a, i, n);
a.open("POST", e, !0);
a.onerror = function() {
if (1 != a.bOutTimeLogic) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
};
a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
a.onreadystatechange = function() {
if (4 == a.readyState && a.status >= 200 && a.status <= 207) {
if (1 == a.bOutTimeLogic) return;
try {
var e = HelpPokerking1(a.responseText, KEY_JSONDATA), t = JSON.parse(e);
if (null !== i) {
GetMissionLogon().OnHttpRequestDone(a);
i(!0, t, a);
}
} catch (e) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
}
};
a.send(t);
return a;
};
window.fHttpTimeOut = 4e3;
HttpHelper.post_NotDecrypt = function(e, t, i, n) {
if (2 == arguments.length) {
i = arguments[1];
t = "";
}
var a = cc.loader.getXMLHttpRequest();
GetMissionLogon().OnHttpRequestStart(a, i, n);
a.open("POST", e, !0);
a.onerror = function() {
if (1 != a.bOutTimeLogic) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
};
a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
a.timeout = window.fHttpTimeOut;
a.ontimeout = function() {
if (1 != a.bOutTimeLogic) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
};
a.onreadystatechange = function() {
if (4 == a.readyState && a.status >= 200 && a.status <= 207) {
if (1 == a.bOutTimeLogic) return;
try {
var e = JSON.parse(a.responseText);
if (null !== i) {
GetMissionLogon().OnHttpRequestDone(a);
i(!0, e, a);
}
} catch (e) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
}
};
a.send(t);
return a;
};
window.GameSwitch = {};
GameSwitch.post = function(e, t, i) {
var n = window.fHttpTimeOut;
if (2 == arguments.length) {
i = arguments[1];
t = "";
}
var a = cc.loader.getXMLHttpRequest();
GetMissionLogon().OnHttpRequestStart(a, i, n);
a.open("POST", e, !0);
a.onerror = function() {
if (1 != a.bOutTimeLogic) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
}
};
a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
a.onreadystatechange = function() {
if (4 == a.readyState && a.status >= 200 && a.status <= 207) try {
var e = HelpPokerking1(a.responseText, KEY_JSONDATA), t = JSON.parse(e);
if (null !== i) {
GetMissionLogon().OnHttpRequestDone(a);
i(!0, t, a);
}
} catch (e) {
GetMissionLogon().OnHttpRequestDone(a);
i(!1, null, a);
ManagerHelp_SetSystemAlert(e);
}
};
a.send(t);
return a;
};
HttpHelper.getUserWxHead = function(e, t, i) {
window.s_headrequrl = GetProject().szWxHeadUrl;
var n = cc.sys.isNative ? 1 : 0, a = window.s_headrequrl + "?imgurl=" + e + "&userid=" + t + "&platformtype=" + n;
HttpHelper.get(a, function(e, n) {
if (e) {
var a = JSON.stringify(n.responseText), o = JSON.parse(JSON.parse(a.replace(/\\\\/g, "\\\\\\\\")));
if (null != o.headimg && "" != o.headimg) {
var s = new Image();
s.src = "data:image/png;base64," + o.headimg;
s.onload = function() {
var e = new cc.Texture2D();
e.generateMipmaps = !1;
e.initWithElement(s);
e.handleLoadedTexture();
var n = new cc.SpriteFrame(e);
i && i(!0, n, t);
};
} else i && i(!1, null, t);
}
});
};
window.CaptureScreen = function(e, t, i) {
var n = cc.RenderTexture.create(1920, 1080, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);
n.begin();
e._sgNode.visit();
n.end();
n.saveToFile(t, cc.ImageFormat.PNG, !0, i);
};
window.AppCaptureScreen = function(e, t, i) {
var n = cc.RenderTexture.create(1080, 1920, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);
n.begin();
e._sgNode.visit();
n.end();
n.saveToFile(t, cc.ImageFormat.PNG, !0, i);
};
Date.prototype.format = function(e) {
var t = {
"M+": this.getMonth() + 1,
"d+": this.getDate(),
"h+": this.getHours(),
"m+": this.getMinutes(),
"s+": this.getSeconds(),
"q+": Math.floor((this.getMonth() + 3) / 3),
S: this.getMilliseconds()
};
/(y+)/.test(e) && (e = e.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)));
for (var i in t) new RegExp("(" + i + ")").test(e) && (e = e.replace(RegExp.$1, 1 == RegExp.$1.length ? t[i] : ("00" + t[i]).substr(("" + t[i]).length)));
return e;
};
window.StringFormat = function() {
var e = arguments[0] || "";
for (var t in arguments) 0 != t && (e = e.replace(/(%d|%s)/, arguments[t]));
return e;
};
window.OnScoreToString = function(e, t) {
if (isNaN(e)) {
alert("function:changeTwoDecimal->parameter error");
return !1;
}
var i = GetProject().lBaseScore;
if (GetProject().bAppShop) return e;
var n = 2, a = 0;
2 == arguments.length && (n = t);
if (2 == n) {
var o = (a = (parseInt(e / 10) / (i / 10)).toString()).indexOf(".");
if (o < 0) {
o = a.length;
a += ".";
}
for (;a.length <= o + 2; ) a += "0";
} else if (0 == n) a = parseInt(e / i); else {
var s = (a = (e / i).toString()).indexOf(".");
if (s < 0) {
s = a.length;
a += ".";
}
for (;a.length <= s + 3; ) a += "0";
}
return a;
};
window.change_Num_K = function(e) {
if (isNaN(e)) {
alert("function:changeTwoDecimal->parameter error");
return !1;
}
return e < 1e3 ? e : e / 1e3 + "k";
};
window.OnIntScore = function(e) {
var t = OnScoreToString(e);
return parseInt(t);
};
window.OnFloatScore = function(e) {
var t = "";
t = 200 == GetServerRoom().GetKindID() ? OnScoreToString(e, 3) : OnScoreToString(e);
return cc.js.formatStr("%d", parseFloat(t));
};
window.OnScoreConver = function(e) {
var t = "";
if (3002 == GetServerRoom().GetKindID()) 10 == e ? t = "十" : 100 == e ? t = "百" : 1e3 == e ? t = "千" : 1e4 == e && (t = "万"); else {
var i = e;
if (i > 999 && i <= 9999) {
t = parseInt(i / 1e3) + "千";
} else if (i > 9999 && i <= 99999999) {
t = parseInt(i / 1e4) + "万";
} else if (i > 99999999) {
t = parseInt(i / 1e8) + "亿";
} else t = "" + parseInt(i);
}
return t;
};
window.OnItoScore = function(e) {
for (var t = [], i = e + "", n = (parseInt(i.length / 3), 0); i.length > 2; ) {
var a = i.substring(i.length - 3, i.length);
t[n++] = a;
i = i.substring(0, i.length - 3);
}
i.length > 0 && (t[n] = i);
return (t = t.reverse()).join(",");
};
window.OnItoSignScore = function(e, t) {
return 1 == t && e >= 0 || e > 0 ? "+" + parseInt(e) : parseInt(e);
};
window.OnConcatString = function(e, t, i) {
for (var n = "", a = e.length, o = 0; o < a; o++) {
n += e[o];
if (o == a - 1) break;
n += t;
0 != i && (o + 1) % i == 0 && (n += "\n");
}
return n;
};
window.OnChangeTwoDecimal_f = function(e) {
var t = parseFloat(e);
if (isNaN(t)) {
alert("function:changeTwoDecimal->parameter error");
return !1;
}
var i = (t = Math.round(100 * e) / 100).toString(), n = i.indexOf(".");
if (n < 0) {
n = i.length;
i += ".";
}
for (;i.length <= n + 2; ) i += "0";
return i;
};
window.OnBtnClickAgainEvent = function(e) {
var t = e.getComponent(cc.Button);
t.enabled = !1;
t.scheduleOnce(function() {
t.enabled = !0;
}, .3);
};
window.OnConverString = function(e, t, i) {
for (var n = 3 != arguments.length || i, a = e, o = a.length, s = 0, r = [], c = 0; c < o; c++) {
var l = a.charCodeAt(c);
if (l >= 0 && l <= 128) {
s += 1;
r[c] = 1;
} else {
r[c] = 2;
s += 2;
}
}
var h = null == t || null == t ? 8 : t;
if (s > h) {
for (var u = 0, d = 0, m = 0; m < o; m++) if ((d += r[m]) >= h) {
d == h ? u = m + 1 : d > h && (u = m);
break;
}
var f = 1 == n ? "..." : "";
a = a.slice(0, u) + f;
}
return a;
};
window.OnTotleLength = function(e) {
for (var t = arguments[0].length, i = arguments[0], n = 0, a = 0; a < t; a++) {
var o = i.charCodeAt(a);
n += o >= 0 && o <= 128 ? 1 : 2;
}
return n;
};
window.OnIsHanZi = function(e, t, i) {
for (var n = arguments[0].length, a = arguments[0], o = 0; o < n; o++) {
var s = a.charCodeAt(o);
if (s < 0 || s > 128) return !1;
}
if (2 == arguments.length) {
var r = e.length;
if (r < t || r > i) return !1;
}
return !0;
};
window.OnValidateIdCard = function(e) {
if (!/^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/.test(e)) return !1;
if (18 == e.length) {
for (var t = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2), i = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2), n = 0, a = 0; a < 17; a++) n += e.substring(a, a + 1) * t[a];
var o = n % 11, s = e.substring(17);
return 2 == o ? "X" == s || "x" == s : s == i[o];
}
};
window.WriteLogsForHttp = function(e, t) {
var i = "http://192.168.13.66:802/AjaxToDo/InsertLogs.aspx?FileName=" + e + "&txt=" + t;
HttpHelper.get(i, function(e, t) {});
};
window.OnValidatePhone = function(e) {
return !!/^9[0-9]{9}$/.test(e);
};
window.OnValidateEamil = function(e) {
return !!/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/.test(e);
};
window.OnIsReceiveBenefits = function() {
var e = PlayerManager.GetMeUserItem().GetGameID(), t = null != MS_OnQueryAllLocalData(e, "LocalReceive"), i = GetProject().szRegisterPhone, n = PlayerManager.GetMeUserItem().GetRegChannelID() % 1e3;
if (!t && 0 != IsNumber(i, 11) && n < 501) {
MS_OnSetLocalData(!0, e, "LocalReceive");
return !0;
}
return t;
};
window.MF_SaveOnMainChannelID = function(e, t) {
var i = GetProject().GetMainChannelID();
MS_OnSetLocalData(t, i, e);
};
window.MF_LoadOnMainChannelID = function(e) {
var t = GetProject().GetMainChannelID();
return MS_OnQueryAllLocalData(t, e);
};
window.MSG_SYSTEM = 0;
window.MSG_EMAIL = 1;
window.IsLocalChannelMsg = function(e, t) {
var i = !1, n = GetProject().GetChannelId(), a = 1e3 * GetProject().GetMainChannelID();
0 != t && t != a || (i = !0);
e == MSG_EMAIL && t == n && (i = !0);
return i;
};
window.OnCompareVersion = function(e, t) {
var i, n = 0;
i = e.split(".");
var a, o = 0;
a = t.split(".");
if (i.length != a.length) return !0;
for (var s = 0; s < i.length; s++) {
n += i[s] * Math.pow(10, 3 * (i.length - s - 1));
o += a[s] * Math.pow(10, 3 * (a.length - s - 1));
}
return n > o;
};
window.SetNotRepeatArray = function(e, t, i) {
for (var n = i, a = e.length; n < a; ) if (e[n] != t) n++; else {
e.splice(n, 1);
a--;
}
};
window._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
window.Base64_encode = function(e) {
var t, i, n, a, o, s, r, c = "", l = 0;
e = _utf8_encode(e);
for (;l < e.length; ) {
a = (t = e.charCodeAt(l++)) >> 2;
o = (3 & t) << 4 | (i = e.charCodeAt(l++)) >> 4;
s = (15 & i) << 2 | (n = e.charCodeAt(l++)) >> 6;
r = 63 & n;
isNaN(i) ? s = r = 64 : isNaN(n) && (r = 64);
c = c + _keyStr.charAt(a) + _keyStr.charAt(o) + _keyStr.charAt(s) + _keyStr.charAt(r);
}
return c;
};
window.Base64_decode = function(e) {
var t, i, n, a, o, s, r = "", c = 0;
e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
for (;c < e.length; ) {
t = _keyStr.indexOf(e.charAt(c++)) << 2 | (a = _keyStr.indexOf(e.charAt(c++))) >> 4;
i = (15 & a) << 4 | (o = _keyStr.indexOf(e.charAt(c++))) >> 2;
n = (3 & o) << 6 | (s = _keyStr.indexOf(e.charAt(c++)));
r += String.fromCharCode(t);
64 != o && (r += String.fromCharCode(i));
64 != s && (r += String.fromCharCode(n));
}
return r = _utf8_decode(r);
};
window._utf8_encode = function(e) {
e = e.replace(/\r\n/g, "\n");
for (var t = "", i = 0; i < e.length; i++) {
var n = e.charCodeAt(i);
if (n < 128) t += String.fromCharCode(n); else if (n > 127 && n < 2048) {
t += String.fromCharCode(n >> 6 | 192);
t += String.fromCharCode(63 & n | 128);
} else {
t += String.fromCharCode(n >> 12 | 224);
t += String.fromCharCode(n >> 6 & 63 | 128);
t += String.fromCharCode(63 & n | 128);
}
}
return t;
};
window._utf8_decode = function(e) {
for (var t = "", i = 0, n = 0, a = 0, o = 0; i < e.length; ) if ((n = e.charCodeAt(i)) < 128) {
t += String.fromCharCode(n);
i++;
} else if (n > 191 && n < 224) {
a = e.charCodeAt(i + 1);
t += String.fromCharCode((31 & n) << 6 | 63 & a);
i += 2;
} else {
a = e.charCodeAt(i + 1);
o = e.charCodeAt(i + 2);
t += String.fromCharCode((15 & n) << 12 | (63 & a) << 6 | 63 & o);
i += 3;
}
return t;
};
window.OnPushWeiHuMsg = function() {
if (!ManagerHelp_GetLayerNodeByName("pfLobbyLaba")) {
MSG_ClearMsgAry();
SceneManager_AddPrefab(SceneType.Prefab_Path, "GameLobby/APrefab/pfLobbyLaba");
var e = GS_OnGetValueByKey("s22", "System under maintenance, please try again later！"), t = new tagSysMessageInfo();
t.dwType = SYS_MSG_TYPE_REPLAY_MSG;
var i = Math.round(new Date().getTime() / 1e3);
t.dwStartTime = i;
t.dwEndTime = i + 86400;
t.dwLoopCycle = 0;
SetArrayFormUtf8(t.szMessage, e);
MSG_OnAddMsg(t);
}
};
window.accMul = function(e, t) {
var i = 0, n = e.toString(), a = t.toString();
try {
i += n.split(".")[1].length;
} catch (e) {}
try {
i += a.split(".")[1].length;
} catch (e) {}
return Number(n.replace(".", "")) * Number(a.replace(".", "")) / Math.pow(10, i);
};
window.keepTwoDecimalFull = function(e) {
var t = parseFloat(e);
if (isNaN(t)) {
cc.error("传递参数错误，请检查！");
return !1;
}
accMul(e, 100);
var i = (t = Math.floor(accMul(e, 100)) / 100).toString(), n = i.indexOf(".");
if (n < 0) {
n = i.length;
i += ".";
}
for (;i.length <= n + 2; ) i += "0";
return i;
};
window.NumToLocaleString = function(e) {
if (isNaN(e)) {
cc.error("传递参数错误，请检查！");
return !1;
}
return e.toLocaleString("zh", {
style: "decimal"
});
};
window.NumberTargetChange = function(e, t, i) {
var n = parseInt(e.string);
isNaN(n) && (n = 0);
NumberProcessChange(e, t - n, i);
};
window.NumberProcessChange = function(e, t, i) {
var n = parseInt(e.string);
null == i && (i = 5);
isNaN(n) && (n = 0);
if (0 != t) {
var a = n, o = 0, s = t + n, r = cc.sequence(cc.scaleTo(.2, 1.6), cc.scaleTo(.2, 1));
e.node.runAction(r);
e.schedule(function r(c) {
if (a !== s) {
(o += c) >= i && (o = i);
a = n + t * (o / i);
e.string = Math.floor(a).toString();
a === s && e.unschedule(r);
} else e.unschedule(r);
}, 0);
}
};
window.GetCombineJettonAry = function(e, t) {
var i = [ 1e3, 1e4, 5e4, 1e5, 5e5 ];
t && (i = t);
var n = {};
e.forEach(function(e, t, i) {
n[e.AreaIndex] ? n[e.AreaIndex] += e.BetScore : n[e.AreaIndex] = e.BetScore;
});
for (var a = [], o = i.length - 1; o >= 0; o--) for (var s in n) if (parseInt(n[s] / i[o]) > 0) {
for (var r = parseInt(n[s] / i[o]), c = 0; c < r; c++) {
var l = {};
l.AreaIndex = s;
l.BetScore = i[o];
a.push(l);
}
n[s] = n[s] % i[o];
}
return a;
};
window.BigAwardMsg = [];
window.MAX_BMSG = 20;
window.MAXLv_BMSG = 10;
window.BMSG_OnAddMsg = function(e) {
var t = BigAwardMsg.length;
t > MAX_BMSG || setTimeout(function() {
t > MAXLv_BMSG ? e.MsgLevel > 1 && BigAwardMsg.push(e) : BigAwardMsg.push(e);
}, e.DelayTime);
};
window.BMSG_OnGetMsg = function() {
var e = null;
BigAwardMsg.length > 0 && (e = BigAwardMsg.shift());
return e;
};
window.Language_GetTxtByID = function(e) {
var t = "", i = GetProject().GetLanguageJson(), n = GetProject().GetCurLanguage();
for (var a in i) {
var o = i[a];
if (Number(a) == Number(e) && o[n]) {
t = o[n];
break;
}
}
return t;
};
cc._RF.pop();
}, {} ],
AHelpJsb: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "04674St4LhGHpNeAI9HaXMK", "AHelpJsb");
window.YDInterface = {};
window.YD_RequestToken = function() {
if (cc.sys.isNative && cc.sys.platform == cc.sys.ANDROID) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
jsb.reflection.callStaticMethod("JNI/JniHelper", "YD_Token", "()V");
}
};
window.YD_CallBack = function(e, t) {
if (cc.sys.isNative && cc.sys.platform == cc.sys.ANDROID) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
"flag_token" == e && null != YDInterface && null != YDInterface && YDInterface.OnYDCallBack(t);
}
};
cc._RF.pop();
}, {} ],
AHelpNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb9ac2zYr9HAY9cNT1mfWC5", "AHelpNode");
window.GetContainValueNode = function(e, t, i, n) {
for (var a = 0; a < e.length; a++) {
var o = e[a];
if (o.getComponent(i)[n] == t) return o;
}
return null;
};
window.GetContainClipName = function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i].name == t) return !0;
return !1;
};
window.SetScriptValue = function(e, t, i, n) {
e.getComponent(t)[i] = n;
};
window.PlayAnimationClip = function(e, t) {
var i = e.getComponent(cc.Animation);
i.play(i.getClips()[t].name);
return i;
};
window.PlayAnimationClipName = function(e, t) {
var i = e.getComponent(cc.Animation);
i.play(t);
return i;
};
window.PlaySkeletonAnimation = function(e, t, i) {
var n = e.getComponent(sp.Skeleton);
n.loop = t;
n.animation = i;
return n;
};
window.GetAnimationClip = function(e, t) {
return e.getComponent(cc.Animation).getClips()[t];
};
window.CheckToggleGroup = function(e, t, i) {
var n = e.getComponent(cc.Toggle);
if (n && n.toggleGroup) for (var a = 0; a < n.toggleGroup._toggleItems.length; a++) {
var o = n.toggleGroup._toggleItems[a], s = o.checkEvents[0].customEventData;
o.isChecked ? t && t(o, s) : i && i(o, s);
}
};
window.ToggleGetIsChecked = function(e) {
return e.getComponent(cc.Toggle).isChecked;
};
window.ToggleGetGroupCheck = function(e) {
var t = e.getComponent(cc.Toggle);
if (t && t.toggleGroup) for (var i = 0; i < t.toggleGroup._toggleItems.length; i++) {
var n = t.toggleGroup._toggleItems[i];
if (n.isChecked) return n;
}
return null;
};
window.FoundChild = function(e, t) {
for (var i = null, n = e.children, a = 0; a < n.length; a++) if (i = n[a].name == t ? n[a] : FoundChild(n[a], t)) return i;
return i;
};
window.CopyNodeWidget = function(e, t) {
var i = e.getComponent(cc.Widget), n = t.getComponent(cc.Widget);
return CopyWidget(i, n);
};
window.CopyWidget = function(e, t) {
e.isAlignTop = t.isAlignTop;
e.isAlignBottom = t.isAlignBottom;
e.isAlignLeft = t.isAlignLeft;
e.isAlignRight = t.isAlignRight;
e.isAlignVerticalCenter = t.isAlignVerticalCenter;
e.isAlignHorizontalCenter = t.isAlignHorizontalCenter;
e.isAbsoluteHorizontalCenter = t.isAbsoluteHorizontalCenter;
e.isAbsoluteVerticalCenter = t.isAbsoluteVerticalCenter;
e.isAbsoluteTop = t.isAbsoluteTop;
e.isAbsoluteBottom = t.isAbsoluteBottom;
e.isAbsoluteLeft = t.isAbsoluteLeft;
e.isAbsoluteRight = t.isAbsoluteRight;
e.verticalCenter = t.verticalCenter;
e.horizontalCenter = t.horizontalCenter;
e.left = t.left;
e.right = t.right;
e.top = t.top;
e.bottom = t.bottom;
return e;
};
window.SetAllChildActive = function(e, t) {
for (var i = e.children, n = 0; n < i.length; n++) i[n].active = t;
};
window.ToggleFindGroupValue = function(e, t) {
var i = e.getComponent(cc.Toggle);
if (i && i.toggleGroup) for (var n = 0; n < i.toggleGroup._toggleItems.length; n++) {
var a = i.toggleGroup._toggleItems[n];
if (a.checkEvents[0].customEventData == t) return a;
}
};
window.ToggleCheckGroupValue = function(e, t, i, n, a) {
if (0 == e.length) return null;
var o = e[0].getComponent(cc.Toggle), s = null, r = null;
if (o && o.toggleGroup) for (var c = 0; c < o.toggleGroup._toggleItems.length; c++) {
if ((s = o.toggleGroup._toggleItems[c]).checkEvents[0].customEventData == t) {
s.isChecked = !0;
r = s;
SetToggleLabelColor(s.node, "ButtonName", i, a);
} else {
s.isChecked = !1;
SetToggleLabelColor(s.node, "ButtonName", n, a);
}
}
return r;
};
window.ToggleCheckGroupValueAnd = function(e, t, i, n) {
if (0 == e.length) return null;
var a = e[0].getComponent(cc.Toggle), o = null;
if (a && a.toggleGroup) for (var s = 0; s < a.toggleGroup._toggleItems.length; s++) {
if ((o = a.toggleGroup._toggleItems[s]).checkEvents[0].customEventData & t) {
o.isChecked = !0;
SetToggleLabelColor(o.node, "ButtonName", i);
} else {
o.isChecked = !1;
SetToggleLabelColor(o.node, "ButtonName", n);
}
}
return o;
};
window.ToggleCheckArrayAllValue = function(e, t, i, n) {
for (var a = 0; a < e.length; a++) {
var o = e[a].getComponent(cc.Toggle);
if (o.checkEvents[0].customEventData & t) {
o.isChecked = !0;
SetToggleLabelColor(o.node, "ButtonName", i);
} else {
o.isChecked = !1;
if (o.interactable) SetToggleLabelColor(o.node, "ButtonName", n); else {
var s = cc.color(120, 120, 120);
SetToggleLabelColor(o.node, "ButtonName", s);
}
}
}
};
window.ToggleCheckArrayAllValueByEqual = function(e, t) {
for (var i = 0; i < e.length; i++) {
var n = e[i].getComponent(cc.Toggle);
n.checkEvents[0].customEventData == t ? n.isChecked = !0 : n.isChecked = !1;
}
};
window.ToggleReturnCheck = function(e, t) {
for (var i = [], n = 0; n < e.length; n++) {
var a = e[n].getComponent(cc.Toggle);
a.checkEvents[0].customEventData & t && i.push(a);
}
return i;
};
window.ToggleEnableArray = function(e) {
for (var t = 0; t < e.length; t++) {
e[t].getComponent(cc.Toggle).node.active = !0;
}
};
window.OnCheckArrayAllValueByEqual = function(e, t) {
for (var i = 0; i < e.length; i++) {
var n = e[i].getComponent(cc.Toggle);
e[i].getComponent(cc.Button).clickEvents[0].customEventData == t ? n.isChecked = !0 : n.isChecked = !1;
}
};
window.SetNodeChildActive = function(e, t, i) {
var n = e.getChildByName(t);
n && (n.active = 0 != i && 0 != i && null != i);
};
window.SetNodeChildAllActive = function(e, t) {
var i = e.children;
if (i) for (var n = 0, a = i.length; n < a; n++) i[n].active = t;
};
window.SetNodeChildRemoveAllChildren = function(e, t) {
var i = e.getChildByName(t);
i && i.removeAllChildren();
};
window.SetNodeLabelString = function(e, t) {
var i = e.getComponent(cc.Label);
i && (i.string = t);
};
window.GetNodeLabelString = function(e) {
var t = e.getComponent(cc.Label);
return t ? t.string : "";
};
window.SetNodeInteractable = function(e, t) {
if (e) {
var i = e.getComponent(cc.Button);
i && (i.interactable = t);
}
};
window.SetNodeChildInteractable = function(e, t, i) {
var n = e.getChildByName(t);
n && SetNodeButtonInteractable(n, i);
};
window.SetNodeOpacity = function(e, t) {
e && (e.opacity = t);
};
window.SetNodeButtonInteractable = function(e, t) {
if (e) {
var i = e.getComponent(cc.Button);
i && (i.interactable = t);
}
};
window.SetNodeChildOpacity = function(e, t, i) {
var n = e.getChildByName(t);
n && (n.opacity = i);
};
window.SetNodeChildLabelString = function(e, t, i) {
var n = e.getChildByName(t);
if (n) {
var a = n.getComponent(cc.Label);
a && (a.string = i);
}
};
window.SetNodeSpriteFrame = function(e, t) {
var i = e.getComponent(cc.Sprite);
i && (i.spriteFrame = t);
};
window.GetNodeSpriteFrame = function(e) {
var t = e.getComponent(cc.Sprite);
if (t) return t.spriteFrame;
cc.assert(!1);
return null;
};
window.SetNodeChildColor = function(e, t, i) {
var n = e.getChildByName(t);
if (n) {
n.color = i;
return n;
}
};
window.SetCheckToggleColor = function(e, t, i, n) {
for (var a = 0; a < e.length; a++) {
var o = e[a].getComponent(cc.Toggle);
o && o.isChecked ? SetToggleLabelColor(o.node, "ButtonName", t, n) : SetToggleLabelColor(o.node, "ButtonName", i, n);
}
};
window.SetToggleLabelColor = function(e, t, i, n) {
if (null != e) {
e.getComponent(cc.Toggle).interactable || (i = cc.color(120, 120, 120));
var a = e.getChildByName(t);
if (a) {
a.color = i;
SetLabelOutLineColor(a, i);
var o = a.getComponent(cc.Label);
n && o && (o.fontSize = n);
}
}
};
window.SetLabelOutLineColor = function(e, t) {
var i = e.getComponent(cc.LabelOutline);
if (i) {
i.enabled = !1;
i.color = t;
}
};
window.SetToggleCheck = function(e) {
var t = e.getComponent(cc.Toggle);
t && t.check();
};
window.SetToggleGroup = function(e, t) {
var i = e.getComponent(cc.Toggle), n = t.getComponent(cc.ToggleGroup);
cc.assert(n);
i.toggleGroup = n;
};
window.ACT_GetNodeJitter = function(e) {
var t = 15;
arguments.length > 0 && (t = e);
return cc.sequence(cc.delayTime(.5), cc.spawn(cc.repeat(cc.sequence(cc.rotateTo(.1, t), cc.rotateTo(.1, -t)), 2), cc.sequence(cc.scaleTo(.4, 1.2), cc.callFunc(function(e) {
e.rotation = 0;
}), cc.scaleTo(.2, 1))));
};
cc._RF.pop();
}, {} ],
APopHelper: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "87f74Dn0IVM3Yxgrs2+Jany", "APopHelper");
window.OnShowServer = function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfCustomer", function(e, t) {
e || (t.zIndex = 10);
});
};
window.OnShowVip = function(e) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfVipNew", function(t, i) {
if (!t) {
i.zIndex = 10;
i.isGoShop = e;
}
});
};
window.OnShowQuestionnaire = function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfQuestionnaire", function(e, t) {
e || (t.zIndex = 10);
});
};
window.OnShowRechargeActivity = function(e) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfActivityRecharge", function(t, i) {
if (!t) {
i.zIndex = 10;
i.getComponent("jsActivityRecharge").setData(e);
}
});
};
window.OnShowActivityNewYear = function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfActivityNewYear", function(e, t) {
if (!e) {
t.zIndex = 10;
t.getComponent("jsActivityNewYear").OnShowReward();
}
});
};
window.OnUpdateBuoyStatus = function(e) {
if (0 == GetProject().cbCheckAccounts) {
var t = GetProject().szBuoySwitchUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
if (t) {
if (i) if (200 == i.statusCode) {
if (i.SwitchState) {
var n = [];
for (var a in i.SwitchState) 1 === i.SwitchState[a] && n.push(a);
if (0 == e) n.length > 0 && SceneManager_AddPersistPrefab("GameLobby/APrefab/pfBuoy", function(e, t) {
if (!e) {
GetProject().buoyRootNode = t;
GetProject().buoyRootNode.openKeys = n;
}
}); else if (1 == e) if (0 == n.length) GetProject().buoyRootNode && SceneManager_RemovePersistPrefab(GetProject().buoyRootNode); else if (GetProject().buoyRootNode) {
GetProject().buoyRootNode.openKeys = n;
GetProject().buoyRootNode.getComponent("jsBuoy").updateData();
} else SceneManager_AddPersistPrefab("GameLobby/APrefab/pfBuoy", function(e, t) {
if (!e) {
GetProject().buoyRootNode = t;
GetProject().buoyRootNode.openKeys = n;
}
});
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
window.ChristmasOpen = "ChristmasOpen";
window.LuckyPackOpen = "LuckyPackOpen";
window.VipOpen = "VipOpen";
window.AskOpen = "AskOpen";
window.updateBuoyEntry = function(e, t) {
if (t) {
var i = GetProject().buoyRootNode.openKeys.indexOf(e);
if (-1 !== i) {
GetProject().buoyRootNode.openKeys.splice(i, 1);
GetProject().buoyRootNode.getComponent("jsBuoy").updateData();
}
} else if (!GetProject().buoyRootNode.openKeys.includes(e)) {
GetProject().buoyRootNode.openKeys.push(e);
GetProject().buoyRootNode.getComponent("jsBuoy").updateData();
}
};
};
window.PopHelper = cc.Class({
statics: {
instances: null
},
ctor: function() {
if (!PopHelper.instances) {
PopHelper.instance = this;
this.popupMap = [];
}
},
GetOnePopup: function() {
var e = this.popupMap.pop();
"s_Path_FirstTopUp" == e ? SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfFirstTopUp", function(e, t) {
e || (t.zIndex = 10);
}) : "s_Path_Activity" == e ? SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfNotice", function(e, t) {
e || (t.zIndex = 10);
}) : "s_Path_ActivityRecharge" == e ? this.requestActivityRechagre() : "s_Path_ActivityNewYear" == e && this.requestActivityNewYear();
},
PushPopup: function(e) {
this.popupMap.push(e);
},
requestActivityRechagre: function() {
var e = GetProject().szRechargeActivityUrl, t = USI_OnGetInfo(), i = "uid=" + t.dwUserID + "&sign=" + t.szSign;
HttpHelper.post_NotDecrypt(e, i, function(e, t) {
e ? 200 == t.statusCode ? OnShowRechargeActivity(t) : GetPopHelper().GetOnePopup() : ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
},
requestActivityNewYear: function() {
var e = GetProject().szActivityNewYearUrl, t = USI_OnGetInfo(), i = "uid=" + t.dwUserID + "&sign=" + t.szSign;
HttpHelper.post_NotDecrypt(e, i, function(e, t) {
e ? 200 == t.statusCode ? OnShowActivityNewYear() : GetPopHelper().GetOnePopup() : ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
}
});
window.GetPopHelper = function() {
PopHelper.instance || (PopHelper.instance = new PopHelper());
cc.assert(PopHelper.instance, "PopHelper.instance is null");
return PopHelper.instance;
};
cc._RF.pop();
}, {} ],
AProjectInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a1128IfjlFEMLT1EO9D+M9p", "AProjectInfo");
var n, a = e("../HotUpdate/CUpdateManager"), o = (n = a) && n.__esModule ? n : {
default: n
};
var s = e("Net");
window.SwitchType = window.SC_Public;
window.bLogonOnSwitch = 0;
window.bOpenGameSwitch = !0;
window.ACCOUNT_NONE = 0;
window.ACCOUNT_VISITOR = 1;
window.ACCOUNT_NORMAL = 2;
window.ACCOUNT_OTHER = 3;
window.logConsole = {};
window.NodeActive_TRUE = 1;
window.ProjectInfo = cc.Class({
statics: {
instances: null
},
ctor: function() {
if (!ProjectInfo.instances) {
ProjectInfo.instance = this;
this.aryColorLocal = [];
this.nColorLocalIndex = 0;
this.bLastUseColor = !0;
this.aryColorNode = [];
this.nColorNodeIndex = 0;
this.wModuleID = 65535;
this.dwPlazaVersion = 0;
this.szNewColor = "";
this.bAppShop = 0;
this.bMissionService = 1;
this.dwChannelId = 0;
this.dwMainChannelID = 0;
this.szAppName = "";
this.checkGameId = 0;
this.isOpenLuckGuyVerify = !1;
this.wPlatformID = 0;
this.lBaseScore = 0;
this.szMsgAddress = "";
this.dwMsgPort = 0;
this.szMachineID = [];
memset(this.szMachineID, 0, LEN_MACHINE_ID);
this.OnInitData();
this.switchStatus = null;
this.isChristmasSkinOpen = !1;
this.bSmsType = 0;
this.szMessageId = "";
this.szSmsPostUrl = "";
this.onlyLayer = null;
this.curLanguage = "EN";
this.languageJson = null;
window.netlobby = new s("common/logon", "logon");
window.netlobby.start();
window.netGameMsg = new s("common/common", "common");
window.netGameMsg.start();
window.netMsg = new s("common/message", "message");
window.netMsg.start();
}
},
OnInitData: function() {
this.isRegister = !1;
this.bRegister = !1;
this.szRegisterPhone = "";
this.nRemainingBenfits = 0;
this.cbAccountType = 0;
this.cbExchangeStatus = 0;
this.cbFirstTopUp = 0;
this.cbCheckAccounts = 0;
this.buoyRootNode = null;
this.szPassword = [];
this.szOpenID = [];
memset(this.szPassword, 0, LEN_PASSWORD);
memset(this.szOpenID, 0, LEN_OPENID);
var e = cc.sys.localStorage.getItem("cbPopNoticeCheck");
if (null != e && null != e) this.cbPopNotice = e; else {
this.cbPopNotice = 1;
cc.sys.localStorage.setItem("cbPopNoticeCheck", this.cbPopNotice);
}
},
InitColorSef: function(e) {
this.szGameSwitchUrl = e + "/AjaxToDo/GameSwitchConfig.aspx";
this.szCommonUrl = "";
window.SwitchType == window.SC_Public ? this.szCommonUrl = "http://ap.phoenixgamenow.com" : window.SwitchType == window.SC_Test ? this.szCommonUrl = "http://88m.baiyouttz.com" : window.SwitchType == window.SC_Audit && (this.szCommonUrl = "http://8.222.155.136:8082");
this.szSmsUrl = this.szCommonUrl + "/Sms/SendSms";
this.szIPWhitelistUrl = e + "/AjaxToDo/WhitelistVerification.aspx";
this.competitionUrl = this.szCommonUrl + "/Popularize/GetMatchTopList/";
this.szLuckGuyInfoUrl = this.szCommonUrl + "/Turntable/LotteryInfo";
this.szLuckGuyTrunUrl = this.szCommonUrl + "/Turntable/LotteryStart";
this.szLuckGuyRecordUrl = this.szCommonUrl + "/Turntable/LotteryRecord";
this.szAddTurntableTimesByShareUrl = this.szCommonUrl + "/Turntable/AddTurntableNumber";
this.szActivityUrl = this.szCommonUrl + "/ActivityNotice/ActivityNotice";
this.exchangeUrl = this.szCommonUrl + "/Popularize/ConvertCDKey/";
this.commissionUrl = this.szCommonUrl + "/Popularize/GetBindingById/";
this.extractCommissionUrl = this.szCommonUrl + "/Popularize/TransferCash/";
this.szWithdrawConfig = this.szCommonUrl + "/ExchangeSwitch/GetSwitch";
this.szWithdrawUrl = this.szCommonUrl + "/Withdraw/WithdrawalOrder";
this.szWithdrawRecordUrl = this.szCommonUrl + "/Popularize/TransfeiList/";
this.szGetBindingStatusUrl = this.szCommonUrl + "/UserBinding/GetBindingMaYaOrGrabInfo";
this.szBindingAccountUrl = this.szCommonUrl + "/UserBinding/BindMaYaOrGrab";
this.facebookUrl = this.szCommonUrl + "/Popularize/GetBindingById/";
this.h5PayUrl = this.szCommonUrl + "/Pay/MakeGCashOrders/";
this.payRecordUrl = this.szCommonUrl + "/Pay/PayList/";
this.deleteOrderUrl = this.szCommonUrl + "/Pay/DeleteOrder/";
this.szGameJackpotUrl = this.szCommonUrl + "/RankingList/GetRankingList";
this.szGameMyBetUrl = this.szCommonUrl + "/RankingList/GetRecordAircraftUserHistory";
this.szGameJackpotRecordUrl = this.szCommonUrl + "/JackPot/UserJackPotRecord";
this.szNewGameJackpotRecordUrl = this.szCommonUrl + "/JackPot/HundredsJackPotRecord";
this.szNewGameJackpotInfoRecordUrl = this.szCommonUrl + "/JackPot/HundredsJackPotRecordInfo";
this.szGameTotalJPUrl = this.szCommonUrl + "/JackPot/TotalJP";
this.szFeedbackUrl = this.szCommonUrl + "/FeedBack";
this.szAccountCancellationUrl = this.szCommonUrl + "/DisableAccount/Index";
this.szLoginNoticeUrl = this.szCommonUrl + "/LoginNotice/Index";
this.szIntegralUrl = this.szCommonUrl + "/Integral/Rebate";
this.szIntegralReceiveUrl = this.szCommonUrl + "/Integral/Receive";
this.szPointsShopUrl = this.szCommonUrl + "/Integral/PointsShop";
this.szPointsExchangeUrl = this.szCommonUrl + "/Integral/PointsExchange";
this.szCheckInInfoUrl = this.szCommonUrl + "/CheckIn/CheckInInfo";
this.szGameCheckInUrl = this.szCommonUrl + "/CheckIn/GameCheckIn";
this.szPullNewActivityUrl = this.szCommonUrl + "/PullNewActivity/ActivityInfo";
this.szPullNewReceiveUrl = this.szCommonUrl + "/PullNewActivity/ReceiveAward";
this.szBuoySwitchUrl = this.szCommonUrl + "/BuoySwitch/";
this.szChristmasConfigUrl = this.szCommonUrl + "/ChristmasActivities/ActivitiesRanking";
this.szRechargeActivityUrl = this.szCommonUrl + "/Activities/NewOld";
this.szRechargeActivityQueryTaskUrl = this.szCommonUrl + "/Activities/QueryTasks";
this.szActivityNewYearUrl = this.szCommonUrl + "/Activities/NewYear";
this.szCommonLinkUrl = this.szCommonUrl + "/Popularize/GetLink";
},
InitChannel: function(e) {
var t = this;
cc.loader.loadRes("common/channel", function(i, n) {
if (i) cc.log("Error url [" + i + "]"); else {
var a = n.ChannelId, o = n.SpreadId, s = n.appsFlyerSdk, r = n.checkGameId;
if (cc.sys.isNative) {
if (cc.sys.localStorage.getItem("CacheChannelID")) ; else {
cc.sys.localStorage.setItem("CacheChannelID", a);
o && cc.sys.localStorage.setItem("CacheSpreadID", o);
s && cc.sys.localStorage.setItem("appsFlyerSdk", s);
}
var c = cc.sys.localStorage.getItem("CacheCheckGameId");
c ? r = c : cc.sys.localStorage.setItem("CacheCheckGameId", r);
}
t.dwChannelId = a;
t.checkGameId = r;
var l = "" + t.GetChannelId();
t.dwMainChannelID = l.slice(0, 3);
t.szAppName = n.appName;
var h = SC_GetDataColorByType(window.SwitchType);
if (h.dataColorLocal && h.dataColorNode && 0 != h.dataColorLocal.length && 0 != h.dataColorNode.length) {
t.aryColorNode = h.dataColorNode.concat();
t.nColorNodeIndex = 0;
t.bLastUseColor = !0;
var u = h.dataColorLocal.concat();
t.aryColorLocal = u;
t.nColorLocalIndex = 0;
t.AddColorLocalToLast();
if (e) {
var d = window.SC_OnGetData();
d && null != d && null != d && t.OnGetDataOver(!0, d);
}
t.TestColorLogic(!1);
} else cc.error("dataColorTest content error，check data content?");
}
});
},
InitDownloadUrl: function() {
this.bSmsType = GS_OnGetValueByKey("s7");
this.szDownloadUrl = GS_OnGetValueByKey("s20");
},
TestColorCallback: null,
TestColorProject: function(e) {
this.InitLanguageJson();
if (window.SwitchType == window.SC_Local) {
this.aryColorNode = [];
var t = {};
t.color = internalIp;
t.alpha = "1700";
this.aryColorNode.push(t);
GS_OnAddKindIDList();
this.dwChannelId = 121001;
this.bMissionService = 1;
this.lBaseScore = 1e3;
this.TestColorCallback && this.TestColorCallback(!1);
} else {
var i = 1 != arguments.length || e;
this.InitChannel(i);
}
},
TestColorLocalSef: function(e) {
var t = this;
t.InitColorSef(e);
if (window.bOpenGameSwitch) {
var i = "channelid=" + this.GetChannelId(), n = USI_OnGetInfo();
i += null == n ? "&sign=0&userid=0" : "&sign=" + n.szSign + "&userid=" + n.dwUserID;
i += "&Model=" + GetProject().GetDeviceType() + "&ver=" + ServerData_GetLocaHallVersion();
i += "&rd=" + parseInt(9e4 * Math.random() + 1e4, 10);
GameSwitch.post(this.szGameSwitchUrl, i, function(e, i, n) {
if (e && 100 == i.retcode) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
t.TestColorEvent(!0, i.data[0]);
} else ManagerHelp_SetSystemAlert("Network exception, please try again", function() {
GetProject().OnInitHttpSwitchAgain();
});
});
} else t.TestColorEvent(!1, null);
},
TestColorLogic: function(e) {
var t = this;
if (t.CanUseColorLocal(e)) {
var i = t.GetColorLocalSef(e);
t.TestColorLocalSef(i.color);
} else {
var n = this.CanUseLastColorLocal();
if (t.bLastUseColor && n) {
t.bLastUseColor = !1;
t.TestColorLocalSef(n);
} else t.TestColorEvent(!1, null);
}
},
TestColorEvent: function(e, t) {
window.mfConfig.bInitSwitch = !0;
if (window.SC_bHaveCache()) {
if (e) {
if (1 == window.logConsole.wirteserverlog) {
ManagerHelp_SetSystemAlert(JSON.stringify(t));
WriteLogsForHttp("devicelog", JSON.stringify(t));
}
this.OnGetDataOver(!1, t);
}
} else e ? this.OnGetDataOver(!1, t) : ManagerHelp_SetSystemAlert("Network exception, please try again", function() {
GetProject().OnInitHttpSwitchAgain();
});
},
OnGetDataOver: function(e, t) {
window.SC_OnSetCacheData(t);
GS_OnSaveData(t);
this.AddNodeForSwitch(!1);
this.InitDownloadUrl();
GS_OnAddKindIDList();
var i = GS_OnGetValueByKey("s1");
if (i) {
var n = MF_LoadOnMainChannelID("CacheColorLocal");
if (null == n || null != n && n.color != i) {
(n = {}).color = i;
MF_SaveOnMainChannelID("CacheColorLocal", n);
}
}
var a = GS_OnGetValueByKey("s4");
cc.sys.isNative && "" == a && ManagerHelp_SetSystemAlert("Update error 101");
this.szNewColor = a;
o.default.getInstance().setUpdateUrl(a);
this.bAppShop = 0 != GS_OnGetValueByKey("s6", 0);
if (this.bAppShop) {
this.bMissionService = 0;
this.lBaseScore = 1;
} else {
this.lBaseScore = 1e3;
this.bMissionService = 0 != GS_OnGetValueByKey("s17", 1);
this.szMsgAddress = GS_OnGetValueByKey("s23");
this.dwMsgPort = GS_OnGetValueByKey("s24", PORT_MSG_SERVER);
}
this.switchStatus = GS_OnGetValueByKey("s27", {});
this.switchStatus && (this.isChristmasSkinOpen = 0 != this.switchStatus.isLuckyChristmasOpen);
this.TestColorCallback && this.TestColorCallback(e);
},
OnInitHttpSwitchAgain: function() {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetMissionLogon().OnLoginTimeout && GetMissionLogon().OnLoginTimeout();
window.bOpenGameSwitch = !0;
window.mfConfig.bAlreadyCheckVersion = !1;
window.mfConfig.bInitSwitch = !1;
GetProject().TestColorProject(!1);
},
GetCanShop: function() {
return 0 != GS_OnGetValueByKey("s13", NodeActive_TRUE);
},
GetColorLocalSef: function(e) {
if (e) {
this.nColorLocalIndex++;
this.nColorLocalIndex >= this.aryColorLocal.length && (this.nColorLocalIndex = 0);
}
return this.aryColorLocal[this.nColorLocalIndex];
},
GetColorNodeSef: function(e) {
if (e) {
this.nColorNodeIndex++;
this.nColorNodeIndex >= this.aryColorNode.length && (this.nColorNodeIndex = 0);
}
return this.aryColorNode[this.nColorNodeIndex];
},
AddNodeForSwitch: function() {
if (0 == window.bLogonOnSwitch) {
var e = GS_OnGetValueByKey("s2").replace(/[ ]/g, ""), t = GS_OnGetValueByKey("s3", PORT_LOGON);
if (e && t) {
this.aryColorNode = [];
var i = {};
i.color = e;
i.alpha = t;
this.aryColorNode.push(i);
}
}
},
AddColorLocalToLast: function() {
var e = MF_LoadOnMainChannelID("CacheColorLocal");
e && this.aryColorLocal.push(e);
},
CanUseColorLocal: function(e) {
return e ? this.nColorLocalIndex + 1 < this.aryColorLocal.length : this.nColorLocalIndex < this.aryColorLocal.length;
},
CanUseColorNode: function(e) {
return e ? this.nColorNodeIndex + 1 < this.aryColorNode.length : this.nColorNodeIndex < this.aryColorNode.length;
},
CanUseLastColorLocal: function() {
var e = new Date(), t = 24 * e.getDate() + e.getHours();
if (null == window.s_NormalLastColorPokerKing1) {
var i = HelpPokerking1(window.s_NormalLastColorPokerKing0, KEY_CONFIG);
window.s_NormalLastColorPokerKing1 = JSON.parse(i);
}
return window.s_NormalLastColorPokerKing1.length > t && window.s_NormalLastColorPokerKing1[t];
},
GetMachineID: function() {
return this.szMachineID;
},
GetChannelId: function() {
return GetProject().dwChannelId;
},
GetMainChannelID: function() {
return GetProject().dwMainChannelID;
},
GetChildChannelID: function() {
return ("" + this.dwChannelId).slice(3, 6);
},
GetVersionPlaza: function() {
return this.szPlazaVersion;
},
GetDeviceType: function() {
return cc.sys.isNative ? cc.sys.platform == cc.sys.ANDROID ? DEVICE_TYPE_ANDROID : cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD ? DEVICE_TYPE_IOS : DEVICE_TYPE_ANDROID : DEVICE_TYPE_WEB;
},
GetPlatformID: function() {
return this.wPlatformID;
},
GetModuleID: function() {
return this.wModuleID;
},
SetPlatformID: function(e) {
this.wPlatformID = e;
},
SetModuleID: function(e) {
this.wModuleID = e;
},
GetAccountType: function() {
return this.cbAccountType;
},
SetAccountType: function(e) {
this.cbAccountType = e;
},
SetMachineID: function(e) {
SetArrayFormUtf8(this.szMachineID, e);
},
GetMachineIdWithString: function() {
return ToUtf8(this.szMachineID);
},
SetPassword: function(e) {
SetArrayFormUtf8(this.szPassword, e);
},
GetPasswordMD5: function() {
return this.szPassword;
},
SetOpenID: function(e) {
SetArrayFormUtf8(this.szOpenID, e);
},
SetRegister: function(e) {
this.bRegister = e;
},
GetRegister: function() {
return this.bRegister;
},
GetCurNewColorFile: function() {
return this.szNewColor;
},
ChildGetFistVersion: function() {
return "1.0.0";
},
GetMsgAddress: function() {
return this.szMsgAddress;
},
GetMsgAlpha: function() {
return parseInt(this.dwMsgPort);
},
GetPopNotice: function() {
var e = !0, t = new Date().getTime(), i = cc.sys.localStorage.getItem("strLogonDate");
if (null != i && null != i) {
if (1 * (t - i) / 36e5 >= 24) {
GetProject().cbPopNotice = 1;
cc.sys.localStorage.setItem("cbPopNoticeCheck", GetProject().cbPopNotice);
e = !0;
} else {
var n = new Date().getDate();
cc.log("pcurD = " + n);
var a = new Date();
a.setTime(i);
var o = a.getDate();
cc.log("preD = " + o);
if (n != o) {
GetProject().cbPopNotice = 1;
cc.sys.localStorage.setItem("cbPopNoticeCheck", GetProject().cbPopNotice);
e = !0;
} else {
e = 1 == cc.sys.localStorage.getItem("cbPopNoticeCheck");
}
}
} else {
GetProject().cbPopNotice = 1;
cc.sys.localStorage.setItem("cbPopNoticeCheck", GetProject().cbPopNotice);
e = !0;
}
cc.sys.localStorage.setItem("strLogonDate", t);
return e;
},
SetRealUser: function() {
cc.sys.localStorage.setItem("isRealUser", !0);
},
GetRealUser: function() {
return cc.sys.localStorage.getItem("isRealUser");
},
InitLanguageJson: function() {
var e = this;
this.languageJson || cc.loader.loadRes("common/Language", function(t, i) {
t ? cc.log("Error url [" + t + "]") : e.languageJson = i;
});
},
GetLanguageJson: function() {
return this.languageJson;
},
GetCurLanguage: function() {
return this.curLanguage;
}
});
window.GetProject = function() {
ProjectInfo.instance || (ProjectInfo.instance = new ProjectInfo());
cc.assert(ProjectInfo.instance, "ProjectInfo.instance is null");
return ProjectInfo.instance;
};
cc._RF.pop();
}, {
"../HotUpdate/CUpdateManager": "CUpdateManager",
Net: "Net"
} ],
AServerListData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1312bGbo/xMxr+TOMY1bhfh", "AServerListData");
var n = e("../HotUpdate/CUpdateDef").default, a = e("../HotUpdate/CUpdateManager").default;
window.GameBufferData = function(e, t, i, n, a) {
return "pValue" == a ? {
wMainCmdID: e,
wSubCmdID: t,
pData: i,
wDataSize: n
} : "pData" == a ? {
wMainCmdID: e,
wSubCmdID: t,
pData: i.concat(),
wDataSize: n
} : "pObject" == a ? {
wMainCmdID: e,
wSubCmdID: t,
pData: i,
wDataSize: n
} : void 0;
};
window.ServerData = {};
ServerData.aryGameKind = [];
ServerData.aryGameType = [];
ServerData.aryGameServer = [];
ServerData.aryGameConfig = [];
ServerData.aryGameArea = [];
ServerData.aryGameField = [];
window.ServerData_ClearAllMap = function() {
ServerData.aryGameKind.length = 0;
ServerData.aryGameType.length = 0;
ServerData.aryGameServer.length = 0;
ServerData.aryGameConfig.length = 0;
ServerData.aryGameArea.length = 0;
ServerData.aryGameField.length = 0;
};
window.ServerData_GetGameKind = function(e) {
return AH_GetItemByKey(ServerData.aryGameKind, e);
};
window.ServerData_GetGameKindAry = function(e) {
return ServerData.aryGameKind;
};
window.ServerData_GetGameType = function(e) {
return AH_GetItemByKey(ServerData.aryGameType, wKindID);
};
window.ServerData_GetGameServer = function(e) {
return AH_GetItemByKey(ServerData.aryGameServer, e);
};
window.ServerData_GetGameConfig = function(e) {
return AH_GetItemByKey(ServerData.aryGameConfig, e);
};
window.ServerData_GetGameArea = function(e) {
return AH_GetItemByKey(ServerData.aryGameArea, e);
};
window.ServerData_GetGameField = function(e) {
return AH_GetItemByKey(ServerData.aryGameField, e);
};
window.ServerData_QueryGameServer = function(e) {
return AH_GetItemByKey(ServerData.aryGameServer, e);
};
window.ServerData_QueryGameServerVersion = function(e) {
if (GetProject().bAppShop) return "0.0.0";
if (cc.sys.isNative) {
return a.getInstance().getServerVersion(e);
}
return "0.0.0";
};
window.ServerData_QueryGameLocalVersion = function(e) {
if (GetProject().bAppShop) return "0.0.0";
if (cc.sys.isNative) {
cc.log("zzzzzz ServerData_QueryGameLocalVersion wKindID = " + e);
if (window.SwitchType != window.SC_Local) {
return a.getInstance().getLocalVersion(e);
}
return "0.0.0";
}
return "0.0.0";
};
window.ServerData_GetLocaHallVersion = function() {
if (cc.sys.isNative) {
var e = a.getInstance().getProcessVersion(0), t = n.toVerShow3(e);
cc.log("获取大厅版本号 version " + t);
return e;
}
return PROCESS_VERSION(0, 0, 0);
};
window.ServerData_GetGameServerArray = function(e) {
var t = [];
for (var i in ServerData.aryGameServer) {
var n = ServerData_GetGameServer(i);
n.wKindID == e && t.push(n);
}
return t;
};
window.ServerData_GetGameServerCount = function(e) {
return ServerData_GetGameServerArray(e).length;
};
window.ServerData_GetGameServerIngoreJoinID = function(e) {
for (var t = ServerData_GetGameServerArray(e), i = null, n = null, a = 0; a < t.length; a++) {
n = t[a];
null != ServerData_GetGameField(n.wFieldID) ? n.dwOnLineCount >= n.dwFullCount || n.dwFullCount - n.dwOnLineCount <= 15 || (i ? i && i.dwOnLineCount < n.dwOnLineCount && (i = n) : i = n) : cc.log("ServerData_GetGameField tGameField is undefined");
}
return i;
};
window.ServerData_GetGameServerMinOnline = function(e, t) {
if (null == t || t < GAME_JOINID_LIANXI || t > GAME_JOINID_ADVANCEDGOID) {
YQYAssertAlert(!1, "wJoinID is not range");
return null;
}
for (var i = ServerData_GetGameServerArray(e), n = null, a = null, o = null, s = 0; s < i.length; s++) {
a = i[s];
null != (o = ServerData_GetGameField(a.wFieldID)) ? o.wJoinID == t && (a.dwOnLineCount >= a.dwFullCount || (n ? n && n.dwOnLineCount < a.dwOnLineCount && (n = a) : n = a)) : cc.log("ServerData_GetGameField tGameField is undefined");
}
return n;
};
window.ServerData_GetGameServerMaxOnFieldID = function(e, t) {
if (null != t) {
for (var i = ServerData_GetGameServerArray(e), n = null, a = null, o = null, s = 0; s < i.length; s++) {
a = i[s];
o = ServerData_GetGameField(a.wFieldID);
a.wFieldID == t && (null != o ? a.dwOnLineCount >= a.dwFullCount || (n ? n.dwOnLineCount < a.dwOnLineCount && (n = a) : n = a) : cc.log("ServerData_GetGameField tGameField is undefined"));
}
return n;
}
YQYAssertAlert(!1, "wFieldID is undefined");
};
cc._RF.pop();
}, {
"../HotUpdate/CUpdateDef": "CUpdateDef",
"../HotUpdate/CUpdateManager": "CUpdateManager"
} ],
AWindowEvent: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4eb08ZScgJGjKrJBTUu3bFV", "AWindowEvent");
window.jsControlLobby = {};
window.jsControlCenter = {};
window.mfConfig = {};
window.yqUpdate = {};
window.mfConfig.headurl = "";
window.ENABLE_YUYIN = 2;
window.ENABLE_SCREEN = 8;
window.ENABLE_ZFW = 16;
window.ENABLE_WXSHARE = 32;
window.ENABLE_BATTERY = 64;
window.ENABLE_PASTEBOARD = 128;
window.ENABLE_EXPORTSTART = 256;
window.ENABLE_JIULIAOPAY = 512;
window.mfConfig.EnableEvent = 0;
window.mfConfig.EnableEvent |= window.ENABLE_YUYIN;
window.mfConfig.EnableEvent |= window.ENABLE_DINGWEI;
window.mfConfig.EnableEvent |= window.ENABLE_SCREEN;
window.mfConfig.EnableEvent |= window.ENABLE_ZFW;
window.mfConfig.EnableEvent |= window.ENABLE_WXSHARE;
window.mfConfig.EnableEvent |= window.ENABLE_BATTERY;
window.mfConfig.EnableEvent |= window.ENABLE_PASTEBOARD;
window.mfConfig.EnableEvent |= window.ENABLE_JIULIAOPAY;
window.IsEnableEvent = function(e) {
return !!(window.mfConfig.EnableEvent & e);
};
window.mfConfig.WX_APPID = "";
window.mfConfig.WX_SECRET = "";
window.mfConfig.H5_kfWX_APPID = "";
window.mfConfig.H5_kfWX_SECRET = "";
window.mfConfig.H5_gzWX_APPID = "";
window.mfConfig.H5_gzWX_SECRET = "";
window.mfConfig.H5_WXGame_APPID = "";
window.mfConfig.H5_WXGame_SECRET = "";
window.mfConfig.H5_WX_Redirect_Url = "";
window.mfConfig.ScreenHomeRight = 0;
window.mfConfig.ScreenHomeDown = 1;
window.mfConfig.bFirst = !0;
window.mfConfig.wEventType = window.YQ_MDM_EVENT;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE;
window.mfConfig.wVoiceCount = 6;
window.mfConfig.nSoundID = 0;
window.mfConfig.nMusicID = 0;
window.mfConfig.operationType = null;
window.mfConfig.strShareType = null;
window.mfConfig.strHeadFileName = "strLocalImgUrl";
window.mfConfig.bTouchEnd = !1;
window.mfConfig.bAlreadyCheckVersion = !1;
window.mfConfig.bAutoLogon = !1;
window.mfConfig.bLogonEnd = !1;
window.mfConfig.bBackupScore = !1;
window.mfConfig.bShowRegister = !1;
window.mfConfig.bInitSwitch = !1;
window.mfConfig.cbEnterLobby = 0;
window.mfConfig.strPayAccountID = "10017";
window.mfConfig.strPayKey = "9fbdefa6c37fd113cc93efc2d2ca9fea";
window.mfConfig.strAppVersion = null;
window.mfConfig.AutoWXLogon = function(e) {
var t = cc.sys.localStorage.getItem("wxrefreshToken");
if (null != t && "" != t && t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = GetProject().szWXOauth + window.mfConfig.WX_APPID + "&grant_type=refresh_token&refresh_token=" + t;
HttpHelper.get(i, function(t, i) {
if (t) {
var n = JSON.parse(i.responseText);
if (null == n.errmsg) {
var a = n.openid, o = n.access_token, s = n.refresh_token;
window.mfConfig.LogonResult(o, s, a);
} else {
cc.sys.localStorage.setItem("wxrefreshToken", "");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}
} else {
cc.sys.localStorage.setItem("wxrefreshToken", "");
e && window.mfConfig.SendWXLogon();
}
});
} else e && window.mfConfig.SendWXLogon();
};
window.mfConfig.SendWXLogon = function() {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
if (cc.sys.platform == cc.sys.ANDROID) {
window.mfConfig.wEventType = YQ_MDM_WXLOGON_BEGIN;
jsb.reflection.callStaticMethod("JNI/JniHelper", "WeixinLogin", "()V");
} else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
window.mfConfig.wEventType = YQ_MDM_WXLOGON_BEGIN;
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithTitle:main:sub:", "wxLogon", "send", "123");
} else if ("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) {
var e = GetProject().szAuthorize + window.mfConfig.H5_gzWX_APPID + "&redirect_uri=" + window.mfConfig.H5_WX_Redirect_Url + "&response_type=code&scope=snsapi_userinfo&state=123#wechat_redirect";
window.location.href = e;
} else if ("wechatgame" == cc.sys.browserType) wx.login({
success: function(e) {
var t = null;
wx.getUserInfo({
success: function(i) {
t = i.userInfo;
var n = e.code, a = "https://api.weixin.qq.com/sns/jscode2session?appid=" + window.mfConfig.H5_WXGame_APPID + "&secret=" + window.mfConfig.H5_WXGame_SECRET + "&js_code=" + n + "&grant_type=authorization_code";
HttpHelper.get(a, function(e, i) {
if (e) {
var n = JSON.parse(i.responseText);
console.log(n);
var a = n.unionid;
console.log("szOpenID:" + a);
a && t && window.mfConfig.WxGameLogonRes(a, t);
}
});
}
});
}
}); else {
var t = GetProject().szQrconnect + window.mfConfig.H5_kfWX_APPID + "&redirect_uri=" + window.mfConfig.H5_WX_Redirect_Url + "&response_type=code&scope=snsapi_login&state=STATE#wechat_redirect";
window.location.href = t;
}
return !0;
};
window.mfConfig.WxGameLogonRes = function(e, t) {
var i = t.nickName, n = t.avatarUrl, a = t.gender;
window.mfConfig.headurl = n;
console.log(n);
GetMissionLogon().SendPacketYouKeLogon(window.PLATFORMID_VISITOR_WECHAT, i, 1 == a ? window.GENDER_MANKIND : window.GENDER_FEMALE, e);
};
window.mfConfig.SendZFW = function(e, t) {
if (IsEnableEvent(window.ENABLE_ZFW)) {
window.mfConfig.wEventType = YQ_MDM_ZFW_BEGIN;
if (cc.sys.isBrowser) SendWebPay(e, "pc", t); else if (cc.sys.os == cc.sys.OS_ANDROID) SendWebPay(e, "android", t); else if (cc.sys.os == cc.sys.OS_IOS) if (GetProject().bAppShop) {
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithStoreCallBack:", GetProject().szStoreCallBack);
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithTitle:main:sub:", "Pay", JSON.stringify(e), "");
} else SendWebPay(e, "ios", t);
} else cc.warn("未开启ZFW功能");
};
window.SendWebPay = function(e, t, i) {
var n = PlayerManager.GetMeUserItem(), a = [];
a[0] = "accountId=" + window.mfConfig.strPayAccountID;
a[1] = "teamOrderId=" + e.OrderId;
a[2] = "orderAmount=" + 100 * e.OrderAmount;
a[3] = "payType=" + e.PayType;
a[4] = "appid=" + GetProject().GetChannelId();
a[5] = "playerId=" + n.GetGameID();
a[6] = "playerIp=" + e.strUserIP;
a[7] = "deviceType=" + t;
a[8] = "deviceId=" + GetProject().GetMachineIdWithString();
a[9] = "vipGrade=" + (n.GetMemberOrder() + 1);
a[10] = "description=" + e.Description;
a[11] = "phone=";
a[12] = "alipayAccount=";
a[13] = "bankId=";
a[14] = "seqId=" + n.GetGameID() + new Date().getTime();
var o = "", s = a.concat();
s.sort();
s[15] = "key=" + window.mfConfig.strPayKey;
for (var r = 0; r < s.length; r++) {
o += s[r];
r < s.length - 1 && (o += "&");
}
a[15] = "sign=" + hex_md5(o).toUpperCase();
for (var c = "", l = 0; l < a.length; l++) {
c += a[l];
l < a.length - 1 && (c += "&");
}
var h = USI_OnGetInfo();
c += "&userid=" + h.dwUserID + "&gamesign=" + h.szSign;
var u = GetProject().szCreateOrderUrl + "?" + c;
if (cc.sys.isNative) cc.sys.openURL(u); else if (cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS) {
var d = document.createElement("a");
d.style.left = "-9999px";
d.setAttribute("href", u);
d.click();
} else {
var m = GetProject().szUploadPayData, f = GetProject().GetDeviceType(), p = ServerData_GetLocaHallVersion();
c += "&Model=" + f + "&ver=" + p;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post(m, c, function(t, n) {
if (t) if (100 == n.retcode) {
var a = "userid=" + h.dwUserID + "&gamesign=" + h.szSign + "&OrderID=" + e.OrderId + "&Model=" + f + "&ver=" + p, o = GetProject().szPCPayUrl + "?" + a;
i && i(o, e.OrderAmount);
} else ManagerHelp_SetSystemLabel("下单失败，请重试！"); else ManagerHelp_SetSystemLabel("下单失败，请重试！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
};
window.mfConfig.GetPayChannel = function(e) {
var t = [];
t[0] = "accountId=" + window.mfConfig.strPayAccountID;
t[1] = "appid=" + GetProject().GetChannelId();
t[2] = "phone=";
t[3] = "alipayAccount=";
t[4] = "bankId=";
t[5] = "seqId=" + new Date().getTime();
var i = "", n = t.concat();
n.sort();
n[6] = "key=" + window.mfConfig.strPayKey;
for (var a = 0; a < n.length; a++) {
i += n[a];
a < n.length - 1 && (i += "&");
}
t[6] = "sign=" + hex_md5(i).toUpperCase();
for (var o = "", s = 0; s < t.length; s++) {
o += t[s];
s < t.length - 1 && (o += "&");
}
var r = USI_OnGetInfo(), c = GetProject().GetDeviceType(), l = ServerData_GetLocaHallVersion();
o += "&userid=" + r.dwUserID + "&gamesign=" + r.szSign + "&channelid=" + GetProject().GetChannelId() + "&Model=" + c + "&ver=" + l;
var h = GetProject().szGetPayChannel;
if (1 == window.logConsole.wirteserverlog) {
ManagerHelp_SetSystemAlert(h + "===szParams:" + o);
WriteLogsForHttp("devicelog", h + "===szParams:" + o);
}
HttpHelper.post(h, o, function(t, i) {
if (1 == window.logConsole.wirteserverlog) {
ManagerHelp_SetSystemAlert(JSON.stringify(i));
WriteLogsForHttp("devicelog", JSON.stringify(i));
}
if (t) if (100 == i.retcode) {
for (var n = i.data, a = [], o = 0; o < n.length; o++) a.push(n[o]);
e && e(!0, a);
} else e && e(!1); else e && e(!1);
}, 1e4);
};
window.EnableJiuLiaoPay = function() {};
window.mfConfig.SendJiuLiaoPay = function(e) {};
window.mfConfig.SendWXShare = function(e, t, i, n) {
if (IsEnableEvent(window.ENABLE_WXSHARE)) {
var a = "";
a = 4 == arguments.length ? n : GetProject().szDownloadUrl;
window.mfConfig.strShareType = e;
if (cc.sys.platform == cc.sys.ANDROID) {
if (e == YQ_SUB_WXSHARE_SHAREWEB) jsb.reflection.callStaticMethod("JNI/JniHelper", "shareWeb", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V", t, a, i, !1); else if (e == window.YQ_SUB_WXSHARE_SHAREWEBSPACE) jsb.reflection.callStaticMethod("JNI/JniHelper", "shareWeb", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V", t, a, i, !0); else if (e == YQ_SUB_WXSHARE_SHARETOFRIEND) {
var o = t;
jsb.reflection.callStaticMethod("JNI/JniHelper", "weixinShareFromScreen", "(Ljava/lang/String;Z)V", o, !1);
} else if (e == YQ_SUB_WXSHARE_SHARETOSPACE) {
var s = t;
jsb.reflection.callStaticMethod("JNI/JniHelper", "weixinShareFromScreen", "(Ljava/lang/String;Z)V", s, !0);
}
} else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
window.mfConfig.wEventType = YQ_MDM_WXSHARE_BEGIN;
if (e == YQ_SUB_WXSHARE_SHAREWEB) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithShare:main:sub:shareurl:", "wxsharetext", t, i, a); else if (e == window.YQ_SUB_WXSHARE_SHAREWEBSPACE) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithShare:main:sub:shareurl:", "wxsharefriend", t, i, a); else if (e == YQ_SUB_WXSHARE_SHARETOFRIEND) {
var r = t;
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithShare:main:sub:shareurl:", "wxshareimage", r, i, a);
} else if (e == YQ_SUB_WXSHARE_SHARETOSPACE) {
var c = t;
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithShare:main:sub:shareurl:", "wxshareimagefriend", c, i, a);
}
} else if (("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) && window.H5_Evnet.OnShareWX) {
window.H5_Evnet.OnShareWX(e, t, i);
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/AGameShareItem/pfShareTip", function(t, i) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
i.zIndex = 3;
i.getComponent("jsGameShare").OnH5ShareEvent(e);
});
}
} else cc.warn("未开启微信分享功能");
};
window.mfConfig.OnStorePing = function() {
cc.sys.platform != cc.sys.IPHONE && cc.sys.platform != cc.sys.IPAD || jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithTitle:main:sub:", "OnAppPing", "", "");
};
window.mfConfig.SendMachine = function() {
if (cc.sys.platform == cc.sys.ANDROID) {
var e = jsb.reflection.callStaticMethod("JNI/JniHelper", "GetMac", "()Ljava/lang/String;"), t = hex_md5(e).toUpperCase();
window.mfConfig.MachineResult(t);
} else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
var i = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithMachineID"), n = hex_md5(i).toUpperCase();
window.mfConfig.MachineResult(n);
} else {
var a = GetObjGuid().OnGetGUID();
window.mfConfig.MachineResult(a);
}
};
window.mfConfig.IsWXInstall = function() {
return jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithWXInstall");
};
window.mfConfig.LogonResult = function(e, t, i) {
cc.sys.localStorage.setItem("wxrefreshToken", t);
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var n = GetProject().szUserInfo + e + "&openid=" + i;
HttpHelper.get(n, function(e, t) {
if (e) {
var i = JSON.parse(t.responseText);
if (null == i.errmsg) {
var n = i.nickname, a = i.unionid, o = i.sex;
window.mfConfig.headurl = i.headimgurl;
GetMissionLogon().SendPacketYouKeLogon(window.PLATFORMID_VISITOR_WECHAT, n, 1 == o ? window.GENDER_MANKIND : window.GENDER_FEMALE, a);
} else ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else ManagerHelp_SetSystemAlert("Authorization failed. Please try again");
});
};
window.mfConfig.H5_WX_LogonResult = function(e) {
var t = e.nickname, i = e.sex, n = e.unionid;
window.mfConfig.headurl = e.headimgurl;
GetMissionLogon().SendPacketYouKeLogon(PLATFORMID_VISITOR_WECHAT, t, 1 == i ? window.GENDER_MANKIND : window.GENDER_FEMALE, n);
};
window.mfConfig.MachineResult = function(e) {
var t = GetProject().GetMachineID();
SetArrayFormUtf8(t, e);
};
window.mfConfig.OnWXResult = function(e) {
if (cc.sys.platform == cc.sys.ANDROID) if (e == window.YQ_SUB_ZFW_SUCCEED) {
var t = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(t.GetUserID());
} else e == window.YQ_SUB_ZFW_BACK ? ManagerHelp_SetWaitLockLayer(WAIT_CLOSED) : e == window.YQ_SUB_ZFW_FAILURE ? ManagerHelp_SetWaitLockLayer(WAIT_CLOSED) : e == window.YQ_SUB_WXSHARE_SUCCEED ? null != window.mfConfig.strShareType && null != window.mfConfig.strShareType && (window.mfConfig.strShareType != window.YQ_SUB_WXSHARE_SHAREWEBSPACE && window.mfConfig.strShareType != window.YQ_SUB_WXSHARE_SHARETOSPACE || window.mfConfig.TodayFirstShare()) : e == window.YQ_SUB_WXSHARE_BACK || e == window.YQ_SUB_WXSHARE_FAILURE || e == window.YQ_SUB_MACHINE_SUCCEED || window.YQ_SUB_MACHINE_FAILURE;
};
window.mfConfig.OnVoiceReset = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
window.mfConfig.pVoicePlayArray = [];
window.mfConfig.pVoicePlayArray.length = 0;
window.mfConfig.pVoiceArray = [];
window.mfConfig.wVoiceIndex = 0;
window.mfConfig.pVoiceLast = [];
window.mfConfig.fVoiceLastTime = 0;
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceGetNewIndex = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
var e = window.mfConfig.wVoiceIndex;
e > window.mfConfig.wVoiceCount ? window.mfConfig.wVoiceIndex = 0 : window.mfConfig.wVoiceIndex = ++e;
return e;
}
cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceAddPlayData = function(e) {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
window.mfConfig.pVoiceArray.push(e);
0 == e.bDown && window.mfConfig.OnVoiceDownLoadFile(e.dwGameID, e.filename);
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnChatVoiceAddPlayData = function(e) {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_NONE) {
window.mfConfig.operationType = "ChatOperation";
window.mfConfig.pVoiceArray.push(e);
0 == e.bDown ? window.mfConfig.OnVoiceDownLoadFile(e.dwGameID, e.filename) : window.mfConfig.OnChatVoicePlay();
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceSetDataStatus = function(e, t) {
if (IsEnableEvent(window.ENABLE_YUYIN)) for (var i = 0; i < window.mfConfig.pVoiceArray.length; i++) {
var n = window.mfConfig.pVoiceArray[i];
if (1 == t) {
if (cc.sys.isNative) {
if (n && n.filename == e) {
n.bDown = t;
break;
}
} else if (("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) && n && e) {
n.bDown = t;
break;
}
} else window.mfConfig.pVoiceArray.splice(i, 1);
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceIsPlay = function() {
return 0 != window.mfConfig.pVoiceArray.length && !(window.mfConfig.wVoiceType != window.YQ_SUB_VOICESTATUS_NONE || !GameFrameEngine.instances);
};
window.mfConfig.OnVoiceGetPlayData = function() {
for (var e = null, t = 0; t < window.mfConfig.pVoiceArray.length; t++) {
var i = window.mfConfig.pVoiceArray[t];
if (1 == i.bDown) {
e = i;
window.mfConfig.pVoiceArray.splice(t, 1);
break;
}
}
return e;
};
window.mfConfig.OnVoiceStart = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(255, !1);
var e = new Date().valueOf();
if (e - window.mfConfig.fVoiceLastTime < 1e3) {
window.mfConfig.fVoiceLastTime = e;
return !1;
}
window.mfConfig.fVoiceLastTime = e;
window.mfConfig.wEventType = window.YQ_SUB_VOICE_START;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_RECORD;
if (cc.sys.isNative) {
var t = PlayerManager.GetMeUserItem(), i = t.GetGameID() + "", n = window.mfConfig.OnVoiceGetNewIndex(t.GetChairID());
window.mfConfig.voiceIndex = i + "" + n;
window.mfConfig.filenName = window.mfConfig.voiceIndex + ".spx";
var a = jsb.fileUtils.getWritablePath() + window.mfConfig.filenName, o = GetProject().szUpLoadUrl;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "OnVoiceStart", "(Ljava/lang/String;)V", a); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceStart:GameId:UpLoadUrl:", a, i, o);
return !0;
}
if ("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) {
window.H5_Evnet.OnStartRecord && window.H5_Evnet.OnStartRecord();
return !0;
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceCancel = function() {
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_RECORD) if (IsEnableEvent(window.ENABLE_YUYIN)) {
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "VoiceCancel", "()V"); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
window.mfConfig.wEventType = window.YQ_SUB_EVENT_ENDED;
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceCancel");
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceStoped = function(e, t) {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_RECORD) if (cc.sys.isNative) {
t = window.mfConfig.filenName;
var i = "" + PlayerManager.GetMeUserItem().GetGameID();
e = GetProject().szUpLoadUrl + "?filename=" + t + "&userid=" + i;
var n = jsb.fileUtils.getWritablePath();
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "OnVoiceStoped", "(Ljava/lang/String;Ljava/lang/String;)V", e, n); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceStoped");
} else if ("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) {
window.H5_Evnet.OnStopRecord && window.H5_Evnet.OnStopRecord();
return !0;
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceStopBack = function(e) {
window.mfConfig.fVoiceLastTime = new Date().valueOf();
var t = e + "";
t = t.replace("'", "");
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_RECORD) {
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE;
if (t < 1) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
GameFrameEngine.instances && GameFrameEngine.instances.OnFrameVoiceError();
}
}
};
window.mfConfig.OnVoicePlayLast = function(e) {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
var t = window.mfConfig.pVoiceLast[e];
if (null != t) {
window.mfConfig.wEventType = window.YQ_SUB_VOICE_PLAYSTART;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_PLAYED;
var i = jsb.fileUtils.getWritablePath() + t.filename;
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(t.wChairID, !0);
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "PlayVoice", "(Ljava/lang/String;Ljava/lang/String;)V", t.dwGameID, i); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByPlayStart:", i);
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoicePlay = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(255, !1);
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_NONE) {
var e = window.mfConfig.OnVoiceGetPlayData();
if (null == e) return !1;
window.mfConfig.wEventType = window.YQ_SUB_VOICE_PLAYSTART;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_PLAYED;
window.mfConfig.pVoiceLast[e.wChairID] = e;
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(e.wChairID, !0);
if (cc.sys.isNative) {
var t = jsb.fileUtils.getWritablePath() + e.filename;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "PlayVoice", "(Ljava/lang/String;Ljava/lang/String;)V", e.dwGameID, t); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByPlayStart:", t);
} else "mqqbrowser" != cc.sys.browserType && "wechat" != cc.sys.browserType || window.H5_Evnet.OnPlayVoice && window.H5_Evnet.OnPlayVoice(window.H5_Evnet.strLocalId);
return !0;
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoicePlayStoped = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(data.wChairID, !1);
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "OnVoicePlayStoped", "()V"); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByPlayStoped"); else "mqqbrowser" != cc.sys.browserType && "wechat" != cc.sys.browserType || window.H5_Evnet.OnStopVoice && window.H5_Evnet.OnStopVoice(window.H5_Evnet.strLocalId);
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoicePlayStopedBack = function() {
if (window.mfConfig.wVoiceType === window.YQ_SUB_VOICESTATUS_PLAYED) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE;
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(255, !1);
}
};
window.mfConfig.OnVoiceUpLoadStart = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
var e = window.mfConfig.filenName, t = "" + PlayerManager.GetMeUserItem().GetGameID(), i = jsb.fileUtils.getWritablePath() + t, n = GetProject().szUpLoadUrl + "?filename=" + e + "&userid=" + t;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "Post", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", n, i, e); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
window.mfConfig.wEventType = window.YQ_SUB_RECORD_UPLOAD;
jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByUpLoadFile:", n);
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceUpLoadBack = function(e) {
window.mfConfig.wVoiceType === window.YQ_SUB_VOICESTATUS_RECORD && (window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE);
e == window.YQ_SUB_VOICE_UL_SUCCEED ? window.GameFrameEngine.instances && window.GameFrameEngine.instances.SendUserExpression(window.mfConfig.voiceIndex) : window.YQ_SUB_VOICE_UL_FAILURE;
};
window.mfConfig.OnVoiceDownLoadFile = function(e, t) {
if (IsEnableEvent(window.ENABLE_YUYIN)) if (cc.sys.isNative) {
var i = jsb.fileUtils.getWritablePath(), n = GetProject().szDownLoadUrl + e + "/" + t, a = i + "/" + t;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "DownLoad", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", n, t, i); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByDownLoadFile:savename:fullpath:", n, t, a);
} else "mqqbrowser" != cc.sys.browserType && "wechat" != cc.sys.browserType || window.H5_Evnet.OnDownloadVoice(t); else cc.warn("未开启语音功能");
};
window.mfConfig.OnVoiceDownLoadBack = function(e, t) {
if (e == window.YQ_SUB_VOICE_DL_SUCCEED) {
window.mfConfig.OnVoiceSetDataStatus(t, !0);
"ChatOperation" == window.mfConfig.operationType && window.mfConfig.OnChatVoiceIsPlay() && window.mfConfig.OnChatVoicePlay();
} else e == window.YQ_SUB_VOIDE_DL_FAILURE && window.mfConfig.OnVoiceSetDataStatus(t, !1);
};
window.mfConfig.PlayAudio = function(e, t) {
var i = YQ_AUDIO_TYPE_SOUND;
arguments.length >= 2 && t && (i = YQ_AUDIO_TYPE_MUSIC);
cc.loader.loadRes(e, cc.AudioClip, function(t, n) {
if (t) cc.warn(e + " is not found"); else if (i == YQ_AUDIO_TYPE_SOUND) window.mfConfig.fSound > 0 && (window.mfConfig.nSoundID = cc.audioEngine.play(n, !1, window.mfConfig.fSound)); else if (i == YQ_AUDIO_TYPE_MUSIC) {
window.mfConfig.audioPlaying = !1;
window.mfConfig.audioCliping = n;
if (window.mfConfig.fMusic > 0) {
window.mfConfig.audioPlaying = !0;
window.mfConfig.nMusicID = cc.audioEngine.play(n, !0, window.mfConfig.fMusic);
}
} else cc.warn(e + " error type:" + i);
});
};
window.mfConfig.PlayAudioForRawUrl = function(e, t) {
var i = YQ_AUDIO_TYPE_SOUND;
arguments.length >= 2 && t && (i = YQ_AUDIO_TYPE_MUSIC);
i == YQ_AUDIO_TYPE_SOUND ? window.mfConfig.nSoundID = cc.audioEngine.play(e, !1, window.mfConfig.fSound) : i == YQ_AUDIO_TYPE_MUSIC ? window.mfConfig.nMusicID = cc.audioEngine.play(e, !0, window.mfConfig.fMusic) : cc.warn(e + " error type:" + i);
};
window.mfConfig.StopAudioClip = function(e) {
cc.audioEngine.stop(e);
};
window.mfConfig.ChangeVolume = function() {
var e = window.mfConfig.fSound;
isNaN(e) && (e = .5);
var t = window.mfConfig.fMusic;
isNaN(t) && (t = .5);
null != window.mfConfig.nSoundID && cc.audioEngine.setVolume(window.mfConfig.nSoundID, e);
if (null != window.mfConfig.nMusicID) {
if (!window.mfConfig.audioPlaying && window.mfConfig.fMusic > 0) {
window.mfConfig.audioPlaying = !0;
window.mfConfig.nMusicID = cc.audioEngine.play(window.mfConfig.audioCliping, !0, window.mfConfig.fMusic);
}
cc.audioEngine.setVolume(window.mfConfig.nMusicID, t);
}
};
window.mfConfig.OnChatVoiceStart = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
window.mfConfig.wEventType = window.YQ_SUB_VOICE_START;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_RECORD;
if (cc.sys.isNative) {
window.mfConfig.filenName = new Date().valueOf() + ".spx";
var e = jsb.fileUtils.getWritablePath() + window.mfConfig.filenName, t = PlayerManager.GetMeUserItem().GetGameID() + "", i = GetProject().szUpLoadUrl;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "OnVoiceStart", "(Ljava/lang/String;)V", e); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceStart:GameId:UpLoadUrl:", e, t, i);
return !0;
}
if ("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) {
window.H5_Evnet.OnStartRecord && window.H5_Evnet.OnStartRecord();
return !0;
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.OnChatVoiceIsPlay = function() {
return 0 != window.mfConfig.pVoiceArray.length && window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_NONE;
};
window.mfConfig.OnChatVoicePlayStoped = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "OnVoicePlayStoped", "()V"); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByPlayStoped"); else "mqqbrowser" != cc.sys.browserType && "wechat" != cc.sys.browserType || window.H5_Evnet.OnStopVoice && window.H5_Evnet.OnStopVoice(window.H5_Evnet.strLocalId); else cc.warn("未开启语音功能");
};
window.mfConfig.OnChatVoicePlayStopedBack = function() {
if (window.mfConfig.wVoiceType === window.YQ_SUB_VOICESTATUS_PLAYED) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE;
}
};
window.mfConfig.OnChatVoicePlay = function() {
if (IsEnableEvent(window.ENABLE_YUYIN)) {
if (window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_NONE) {
var e = window.mfConfig.OnVoiceGetPlayData();
if (null == e) return !1;
GameFrameView.instances && GameFrameView.instances.OnUserVoicePlay(e.wChairID, !0);
window.mfConfig.wEventType = window.YQ_SUB_VOICE_PLAYSTART;
window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_PLAYED;
if (cc.sys.isNative) {
var t = jsb.fileUtils.getWritablePath() + e.filename;
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "PlayVoice", "(Ljava/lang/String;Ljava/lang/String;)V", e.dwGameID, t); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByPlayStart:", t);
} else "mqqbrowser" != cc.sys.browserType && "wechat" != cc.sys.browserType || window.H5_Evnet.OnPlayVoice && window.H5_Evnet.OnPlayVoice(window.H5_Evnet.strLocalId);
return !0;
}
} else cc.warn("未开启语音功能");
};
window.mfConfig.bNeedUpdate = "UnKnow";
window.mfConfig.SetDesignResolutionSize = function(e, t) {
var i = e, n = t;
if (2 != arguments.length) {
i = 1920;
n = 1080;
}
if (cc.sys.isBrowser) if ("Windows" == cc.sys.os || "OS X" == cc.sys.os) {
var a = cc.view.getFrameSize();
a.width / a.height <= 16 / 9 ? cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.SHOW_ALL) : cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.FIXED_HEIGHT);
} else cc.sys.OS_IOS == cc.sys.os || cc.sys.platform == cc.sys.IPAD || cc.sys.OS_ANDROID == cc.sys.os ? cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.EXACT_FIT) : cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.SHOW_ALL); else if (cc.sys.isNative) {
var o = cc.view.getFrameSize();
o.width / o.height <= 16 / 9 ? cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.SHOW_ALL) : cc.view.setDesignResolutionSize(i, n, cc.ResolutionPolicy.FIXED_HEIGHT);
}
};
window.mfConfig.GetQueryString = function(e) {
var t = new RegExp("(^|&)" + e + "=([^&]*)(&|$)"), i = window.location.search.substr(1).match(t);
return null != i ? unescape(i[2]) : null;
};
window.mfConfig.loadNative = function(e, t, i) {
if (cc.sys.isNative) {
var n = jsb.fileUtils.getWritablePath() + "img/", a = n + hex_md5(t) + ".png";
loadEnd = function() {
cc.loader.load(a, function(e, t) {
if (e) cc.error(e); else {
var n = new cc.SpriteFrame(t);
n && i && i(n);
}
});
};
if (jsb.fileUtils.isFileExist(a)) loadEnd(); else {
var o = cc.loader.getXMLHttpRequest();
o.responseType = "arraybuffer";
o.open("GET", e, !0);
o.onreadystatechange = function() {
4 === o.readyState && 200 === o.status && function(e) {
if (e && null != e && null != e) {
jsb.fileUtils.isDirectoryExist(n) || jsb.fileUtils.createDirectory(n);
jsb.fileUtils.writeDataToFile(new Uint8Array(e), a) && loadEnd();
}
}(o.response);
};
o.send();
}
}
};
window.mfConfig.getImgePathByUrlSuffix = function(e) {
return jsb.fileUtils.getWritablePath() + "img/" + e + ".png";
};
window.mfConfig.IsLoadFaceImage = function(e, t) {
var i = window.mfConfig.strHeadFileName, n = MS_OnQueryAllLocalData(e, i);
if (null == n) return !("" == t || !t);
if (n) {
var a = window.mfConfig.GetHeadImgUrlSuffix(n.strExternFaceUrl), o = window.mfConfig.GetHeadImgUrlSuffix(t);
if (a && !t) return a;
if (a != o) return !0;
}
return !1;
};
window.mfConfig.IsLocalHead = function(e) {
return !!MS_OnQueryAllLocalData(e, window.mfConfig.strHeadFileName);
};
window.mfConfig.LoadUserHeadImg = function(e, t, i) {
var n = t;
if (e) {
var a = {};
a.strExternFaceUrl = e;
MS_OnSetLocalData(a, n, window.mfConfig.strHeadFileName);
} else {
var o = MS_OnQueryAllLocalData(n, window.mfConfig.strHeadFileName);
if (!o) return;
e = o.strExternFaceUrl;
}
var s = !1;
if (cc.sys.isNative) {
var r = window.mfConfig.GetHeadImgUrlSuffix(e);
window.mfConfig.loadNative(e, r, function(e) {
if (e) {
s = !0;
i && i(s, e, n);
}
});
} else HttpHelper.getUserWxHead(e, n, function(e, t, n) {
i && i(e, t, n);
});
};
window.mfConfig.OnGetUrlByGmaeID = function(e) {
var t = MS_OnQueryAllLocalData(e, window.mfConfig.strHeadFileName);
return t ? t.strExternFaceUrl : null;
};
window.mfConfig.NetworkStateCallback = function(e, t) {
window.YQ_SUB_NETSTATE_WIFI == e ? window.mfConfig.NetworkState = window.YQ_SUB_NETSTATE_WIFI : window.YQ_SUB_NETSTATE_MOBILE == e ? window.mfConfig.NetworkState = window.YQ_SUB_NETSTATE_MOBILE : window.YQ_SUB_NETSTATE_NONE == e && (window.mfConfig.NetworkState = window.YQ_SUB_NETSTATE_NONE);
if (e == window.YQ_SUB_NETSTATE_NONE) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Network abnormal, please check connection status！");
} else {
ManagerHelp_RemoveAllAlert();
if ("Get" != t) {
var i = USI_OnGetInfo(), n = GetProject().GetDeviceType();
if (i) {
var a = "userid=" + i.dwUserID + "&sign=" + i.szWhiteListSign + "&channelid=" + GetProject().GetChannelId() + "&Model=" + n + "&ver=" + dwPlazaVersion;
HttpHelper.post(GetProject().szIPWhitelistUrl, a, function(e, t, i) {}, window.fHttpTimeOut);
}
GetServerRoom().IsGameClient() && GetServerRoom().OnMissionClosed(window.GST_OUTTIME);
}
}
};
window.mfConfig.GetNetworkState = function() {
if (cc.sys.platform == cc.sys.ANDROID) jsb.reflection.callStaticMethod("JNI/JniHelper", "getNetState", "()V"); else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
var e = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithNetStatus");
window.mfConfig.NetworkStateCallback(e, "Get");
}
};
window.mfConfig.GetCoordinate = function() {
IsEnableEvent(window.ENABLE_DINGWEI) ? cc.sys.platform == cc.sys.ANDROID ? jsb.reflection.callStaticMethod("JNI/JniHelper", "getCoordinate", "()V") : cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD ? jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithCoordinate") : "mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType ? window.H5_Evnet.OnGetLocation && window.H5_Evnet.OnGetLocation() : window.mfConfig.CoordinateCallBack(0, 0) : cc.warn("未开启定位距离计算功能");
};
window.mfConfig.CoordinateCallBack = function(e, t) {
IsEnableEvent(window.ENABLE_DINGWEI) ? "" != e && "-1.0" != e && "" != t && "-1.0" != t ? PlayerManager.GetMeUserItem().SetCoordinates(e, t) : (cc.isNative || "mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) && ManagerHelp_SetSystemAlert("Failed to get location. Please confirm whether location permission is enabled") : cc.warn("未开启定位距离计算功能");
};
window.EARTH_RADIUS = 6378137;
window.PI = Math.PI;
window.getRad = function(e) {
return e * PI / 180;
};
window.mfConfig.getDistance = function(e, t, i, n) {
if (IsEnableEvent(window.ENABLE_DINGWEI)) {
var a, o, s, r, c = e / 1e6, l = t / 1e6, h = i / 1e6, u = n / 1e6, d = getRad((c + h) / 2), m = getRad((c - h) / 2), f = getRad((l - u) / 2), p = Math.sin(m), _ = Math.sin(f), S = Math.sin(d), g = EARTH_RADIUS;
a = (p *= p) * (1 - (_ *= _)) + (1 - (S *= S)) * _;
o = (1 - p) * (1 - _) + S * _;
return 2 * (s = Math.atan(Math.sqrt(a / o))) * g * (1 + 1 / 298.257 * ((3 * (r = Math.sqrt(a * o) / s) - 1) / 2 / o * S * (1 - p) - (3 * r + 1) / 2 / a * (1 - S) * p));
}
cc.warn("未开启定位功能");
};
window.mfConfig.getBattery = function() {
if (IsEnableEvent(window.ENABLE_BATTERY)) {
if (cc.sys.platform == cc.sys.ANDROID) {
return jsb.reflection.callStaticMethod("JNI/JniHelper", "GetBattery", "()I");
}
if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
return jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithBattery");
}
return 0;
}
cc.warn("未开启电量获取功能");
};
window.mfConfig.getStrength = function() {};
window.mfConfig.setText = function(e) {
e = "" + e;
if (IsEnableEvent(window.ENABLE_PASTEBOARD)) {
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "setConText", "(Ljava/lang/String;)V", e);
if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
return jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithSetPasteboard:", e);
}
if (cc.sys.isBrowser) {
var t = "" + e, i = document.createElement("textarea");
i.value = t;
i.setAttribute("readonly", "");
i.style.contain = "strict";
i.style.position = "absolute";
i.style.left = "-9999px";
i.style.fontSize = "12pt";
var n = getSelection(), a = !1;
n.rangeCount > 0 && (a = n.getRangeAt(0));
document.body.appendChild(i);
i.focus();
i.select();
i.selectionStart = 0;
i.selectionEnd = i.value.length;
try {
document.execCommand("copy", !0);
} catch (e) {}
document.body.removeChild(i);
if (a) {
n.removeAllRanges();
n.addRange(a);
}
}
} else cc.warn("未启用剪贴版功能");
};
window.mfConfig.onTextCallBack = function(e) {
window.mfConfig.szTxt = e;
};
window.mfConfig.getText = function() {
if (IsEnableEvent(window.ENABLE_PASTEBOARD)) {
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "getText", "()V");
if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) {
var e = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithGetPasteboard");
window.mfConfig.onTextCallBack(e);
}
} else cc.warn("未启用剪贴版功能");
};
window.mfConfig.TextListenCallBack = function(e) {
window.mfConfig.szTxt = window.mfConfig.szTxtNow;
window.mfConfig.szTxtNow = e;
};
window.mfConfig.OnScreenChange = function(e) {
if (IsEnableEvent(window.ENABLE_SCREEN)) {
if ("wechatgame" != cc.sys.browserType) {
var t = cc.view.getFrameSize();
cc.sys.platform != cc.sys.IPHONE && cc.sys.platform != cc.sys.IPAD || jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithCanChangeScreen:", e);
if (e == window.mfConfig.ScreenHomeDown) {
if (t.width > t.height) {
cc.view.setFrameSize(t.height, t.width);
window.mfConfig.bScreenChange = !0;
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "SetScenePORTRAIT", "()V");
}
} else if (e == window.mfConfig.ScreenHomeRight && t.width < t.height) {
cc.view.setFrameSize(t.height, t.width);
window.mfConfig.bScreenChange = !0;
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "SetSceneLANDSCAPE", "()V");
}
}
} else cc.warn("未启用屏幕切换功能");
};
window.mfConfig.GetHeadImgUrlSuffix = function(e) {
var t = e.split("/"), i = t.length;
return t[i - 2] + "/" + t[i - 1];
};
window.mfConfig.TodayFirstLogon = function() {
var e = !1, t = new Date().format("yyyy-MM-dd"), i = cc.sys.localStorage.getItem("strLogonDate");
window.mfConfig.bCheck = cc.sys.localStorage.getItem("bCheck");
if (t != i) {
window.mfConfig.bCheck = !1;
e = !0;
}
cc.sys.localStorage.setItem("strLogonDate", t);
cc.sys.localStorage.setItem("bCheck", window.mfConfig.bCheck);
return e;
};
window.mfConfig.TodayFirstShare = function() {};
window.mfConfig.OpenAppForPackage = function(e) {
if (!cc.sys.isNative) return !1;
if (cc.sys.platform == cc.sys.ANDROID) {
e += "";
jsb.reflection.callStaticMethod("JNI/JniHelper", "OpenAppForPackage", "(Ljava/lang/String;)V", e);
} else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithOpenApp:sub:", "weixin://", "保留参数");
};
window.mfConfig.IsInstall = function(e, t) {
"false" != t || "com.tencent.mm" == "" + e && ManagerHelp_SetSystemLabel("未安装微信，请先安装微信客户端！");
};
window.mfConfig.OnCloseApp = function() {
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "OnCloseApp", "()V");
};
window.mfConfig.GetPromoterInfo = function() {
var e = null;
if (cc.sys.isNative) {
window.mfConfig.getText();
e = window.mfConfig.szTxt;
} else e = window.location.search.replace("?", "");
if (null == e || null == e || "" == e) return null;
var t = Base64_decode(e).split("=");
if (2 == t.length && "pid" == t[0]) {
return parseInt(t[1]);
}
return null;
};
window.mfConfig.GetWebDownLoad = function() {
window.mfConfig.getText();
var e = window.mfConfig.szTxt;
return null != e && null != e && "H5Down" == e;
};
window.mfConfig.OnRemoveLaunch = function() {
cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("JNI/JniHelper", "removeLaunchImage", "()V");
};
window.mfConfig.GetAppVersion = function() {
if (null == window.mfConfig.strAppVersion) {
var e = "";
cc.sys.isNative && (cc.sys.os == cc.sys.OS_ANDROID ? e = jsb.reflection.callStaticMethod("JNI/JniHelper", "GetAppVersion", "()Ljava/lang/String;") : cc.sys.os == cc.sys.OS_IOS && (e = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByAppVersion")));
"" == e && (e = "0.0.0");
window.mfConfig.strAppVersion = e;
}
return window.mfConfig.strAppVersion;
};
window.mfConfig.cppCrashReportUrl = function() {
var e = cc.sys.localStorage.getItem("crash_message"), t = cc.sys.localStorage.getItem("crash_stack");
if (window.mfConfig.last_crash_message != e) {
window.mfConfig.last_crash_message;
ManagerHelp_SetSystemAlert(e);
console.log(e + t);
}
};
window.mfConfig.share = function(e) {
if (cc.sys.platform == cc.sys.ANDROID) {
var t = e;
jsb.reflection.callStaticMethod("JNI/JniHelper", "sysShare", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "non", t, "non", "non");
}
};
window.mfConfig.onShareCallBack = function() {};
window.mfConfig.onEvent = function(e, t) {
cc.sys.localStorage.getItem("appsFlyerSdk") && cc.sys.platform == cc.sys.ANDROID && jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppsFlyerSDK", "onEvent", "(Ljava/lang/String;Ljava/lang/String;)V", e, t);
};
window.mfConfig = mfConfig;
cc._RF.pop();
}, {} ],
AztecMagic_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f700fQYkXdFtYFHmq0yksxE", "AztecMagic_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_SCENE_START = 1;
cc._RF.pop();
}, {} ],
AztecMagic_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c668fvxRtBMDresmqr21d/1", "AztecMagic_GameEngine");
var n = e("AztecMagic_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecMagic_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("AztecMagic_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("501/Audio/bgmuzic", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.objSceneData = a;
this.jsGameView.OnLineConfig(a.LineBets, a.LineMuls);
this.jsGameView.updateJackpot(a.JackpotScore);
this.jsGameView.initIcons(a.Defaultshow);
a.FreeCount > 0 && this.jsGameView.updateLineScore(a.LineScore, a.LineMul);
a.FreeCount > 0 && this.jsGameView.OnFreeGameScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
this.objResultData = i;
this.pGameViewJs.OnRollEnd(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs && this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i, a, o) {
var s = {};
s.LineScore = i;
s.LineMul = o;
20 == this.pGameViewJs.customData.length && (s.TestItems = this.pGameViewJs.customData);
var r = window.net.netSerializer.packMsg("CMD_C_UserRunReq", s);
this.SendGameData(n.SUB_C_SCENE_START, r, r.length);
this.pGameViewJs.customData.length = 0;
}
});
cc._RF.pop();
}, {
AztecMagic_CMD_Game: "AztecMagic_CMD_Game"
} ],
AztecMagic_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "942f5qMCrFPOZjMgYnQ9mjD", "AztecMagic_GameView");
var n = e("AztecMagic_logic"), a = "AztecMagic_pan3_control";
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
bg: cc.Sprite,
bgSF: [ cc.SpriteFrame ],
frontBg: cc.Sprite,
frontBgSF: [ cc.SpriteFrame ],
fire1: cc.Node,
fire2: cc.Node,
nodeUserScore: cc.Node,
nodeUserStake: cc.Node,
nodeUserWin: cc.Node,
nodeJackpot: cc.Node,
btn_sub: cc.Button,
btn_add: cc.Button,
btn_bet: cc.Button,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_stop: cc.Button,
nodeLongPress: cc.Node,
roll_pans2: [ cc.Node ],
b_auto: !1,
canStart: !0,
nodeFreeover: cc.Node,
nodeFreeOverSpine: cc.Node,
nodeFreeTimeBg: cc.Node,
nodeFreeGameNew: cc.Node,
node_dialogLayer: cc.Node,
b_roll: !1,
nodeLine: cc.Node,
nodeBig: cc.Node,
nodeBigSpine: cc.Node,
nodeBigCoinSpine: cc.Node,
nodeGold: cc.Node,
nodeWinScore: cc.Node,
nodeBigWinScore: cc.Node,
node_textwin: cc.Label,
node_bigtextwin: cc.Node,
nodeScatter4: cc.Node,
nodeScatter5: cc.Node,
nodeCustom: cc.Node,
pfRuleNode: cc.Prefab,
prefab_gold: cc.Prefab,
LineBetBigbg: cc.Node,
LineBetNode: cc.Node,
lineBetPrefab: cc.Prefab,
aztecMagicItem: cc.Prefab,
aztecMagicItemPos: [ cc.Node ],
i_ScatterCount: 0,
clickNode: cc.Node,
nodeJackPotTurn: cc.Node,
nodeLineAnim: cc.Node,
pfNodeLine: cc.Prefab,
nodeMenu: cc.Node,
bg_win: cc.Node
},
OnFrameViewLoad: function() {
this.percent = 0;
this.arryGodPool = new cc.NodePool();
for (var e = 0; e < 200; e++) {
var t = cc.instantiate(this.prefab_gold);
this.arryGodPool.put(t);
}
this.btn_start.node.on("touchstart", function(e) {
if (this.i_freegameTimes <= 0) {
this.btn_start.scheduleOnce(function() {
t.canStart && (t.nodeLongPress.active = !0);
}, .1);
var t = this;
this.btn_start.scheduleOnce(function() {
t.b_auto = !0;
t.updateBanCyclePlay();
if (t.canStart) {
var e = {};
e.target = t.btn_start.node;
t.OnBtnStartClick(e);
t.nodeLongPress.active = !1;
}
}, 1.2);
}
}, this);
this.btn_start.node.on("touchend", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.btn_start.node.on("touchcancel", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.initData();
this.i_freegameTimes = 0;
this.inFreeGame = !1;
this.lineCount = 0;
this.lineIndex = 0;
var i = cc.find("No_nodeContent/New Sprite/CustomEditBox", this.nodeCustom);
this.CustomEditbox = i.getComponent(cc.EditBox);
if (cc.sys.localStorage.getItem("AztecMagic_GMData")) {
var n = cc.sys.localStorage.getItem("AztecMagic_GMData");
this.CustomEditbox.string = n;
}
this.customData = [];
this.fastModel = !1;
this.bgSpineIndex = 0;
this.bgSpineSwitchTimes = 0;
this.WinJackpotScore = 0;
this.WinJackpotPercent = 0;
this.curJackpotScore = 0;
var a = cc.instantiate(this.pfNodeLine);
this.nodeLineAnim.addChild(a);
this.slot_line_control = a.getComponent("AztecMagic_line_control");
this.jsGoodLuck = this.bg_win.getComponent("jsGoodLuck");
this.jsGoodLuck.playEnterAni();
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
initData: function() {
this.i_totalBetIndex = 0;
this.i_totalBet = [];
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
var t = PlayerManager.GetMeUserItem();
if (null == t) return !1;
var i = t.GetUserScore();
this.nodeUserScore.getComponent(cc.Label).string = OnScoreToString(i, 2);
},
OnEventUserEnter: function(e, t) {
cc.log("GameView.OnEventUserEnter.wChairID:", e.GetChairID(), "NickName:", e.GetNickNameUtf8());
var i = e.GetChairID();
this.jsGameEngine.SwitchViewID(i);
if (e.GetUserID() != PlayerManager.GetMeUserItem().GetUserID()) {
this.SetUserActive(i, !0);
this.GetJsFrameUser(i).SetUserDataItem(e);
this.OnFrameUpdateUserScore(i);
this.OnFrameEventUserStatus(e, e.GetUserStatus(), t);
return !0;
}
},
ResetGameView: function() {
cc.log("GameView.ResetGameView");
this.ResetFrameData();
},
OnEventUserLeave: function(e, t, i) {
cc.log("GameView.OnEventUserLeave");
this.SetUserActive(t, !0);
if (0 != this.jsGameEngine.SwitchViewID(t)) {
this.GetJsFrameUser(t).labelNickName.string = "";
return !0;
}
},
OnLineConfig: function(e, t) {
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, 40);
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
OnFreeGameTimeUpdate: function() {
this.nodeFreeTimeBg.getChildByName("text_freegame").getComponent(cc.Label).string = "" + this.i_freegameTimes;
},
onGotoFreeGame: function() {
var e = this;
this.onPlayBigWin(!1, 0);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("501/Audio/intro", !1);
this.unschedule(this.playIconAnim);
this.nodeFreeTimeBg.active = !0;
for (var t = this.jsGameEngine.objResultData.ItemsArry, i = [], n = 0, a = void 0, o = void 0, s = 0; s < t.length; s++) if (11 == t[s]) {
n = parseInt(s / 4);
a = parseInt(s % 4);
o = this.roll_pans2[n].getChildByName("rollNode").children[0];
e: for (var r = 1; r < o.children.length - 1; r++) for (var c = 0; c < o.getChildByName("i" + (r - 1)).tag.length; c++) if (a == o.getChildByName("i" + (r - 1)).tag[c]) {
i.push(o.children[r]);
break e;
}
}
this.nodeFreeGameNew.active = !0;
var l = this.nodeFreeGameNew.getChildByName("times");
l.getComponent(cc.Label).string = "";
l.setPosition(0, 0);
var h = this.nodeFreeGameNew.getChildByName("freeGamesBg");
h.scale = 0;
for (var u = 0; u < i.length && u < 3; u++) {
var d = cc.instantiate(this.aztecMagicItem), m = d.getComponent("AztecMagic_Item"), f = i[u].parent.convertToWorldSpaceAR(i[u].getPosition()), p = this.nodeFreeGameNew.getChildByName("itemNode").convertToNodeSpaceAR(f);
m.setScatter();
d.setPosition(p);
d.scale = 0;
d.opacity = 0;
this.nodeFreeGameNew.getChildByName("itemNode").addChild(d);
var _ = cc.sequence(cc.spawn(cc.fadeTo(.5, 255), cc.scaleTo(.5, 2.5)), cc.scaleTo(.4, 1.8), cc.delayTime(.1), cc.spawn(cc.moveTo(1.3, e.aztecMagicItemPos[u].getPosition()).easing(cc.easeBackIn()), cc.scaleTo(1.3, 1)));
d.runAction(_);
}
h.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(1.3, 1), cc.delayTime(1), cc.callFunc(function(t) {
var i = new cc.Node("skeletonNode"), n = i.addComponent(sp.Skeleton);
e.nodeFreeGameNew.getChildByName("freeNode").addChild(i);
cc.loader.loadRes("501/AGameSpine/free", sp.SkeletonData, function(t, i) {
n.skeletonData = i;
n.animation = "animation";
n.loop = !1;
e.nodeFreeGameNew.getChildByName("itemNode").removeAllChildren();
h.scale = 0;
e.scheduleOnce(function() {
window.mfConfig.PlayAudio("501/Audio/scatter_fly_end_4");
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi1").active = !0;
}, 1);
e.scheduleOnce(function() {
window.mfConfig.PlayAudio("501/Audio/scatter_fly_end_5");
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi2").active = !0;
}, 1.5);
e.scheduleOnce(function() {
window.mfConfig.PlayAudio("501/Audio/scatter_fly_end_6");
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi3").active = !0;
l.getComponent(cc.Label).string = this.jsGameEngine.objResultData.AddFreeCount;
l.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(.2), cc.spawn(cc.moveTo(.6, 703, -477), cc.scaleTo(.6, 0, 0)), cc.callFunc(function(t) {
t.getComponent(cc.Label).string = "";
e.nodeFreeGameNew.active = !1;
t.setPosition(0, 0);
e.OnFreeGameTimeUpdate();
})));
}, 55 / 30);
});
n.setCompleteListener(function() {
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi1").active = !1;
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi2").active = !1;
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi3").active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("501/Audio/FreeGameBG", !0);
var t = {};
t.target = e.btn_start.node;
e.OnBtnStartClick(t);
i.removeFromParent();
});
})));
},
stopAllAnim: function() {
for (var e = 0; e < 5; e++) this.roll_pans2[e].getComponent(a).stopAnim(e);
for (var t = 0; t < 5; t++) {
this.roll_pans2[t].getComponent(a).setGray(!1, 0);
this.roll_pans2[t].getComponent(a).setGray(!1, 1);
this.roll_pans2[t].getComponent(a).setGray(!1, 2);
this.roll_pans2[t].getComponent(a).setGray(!1, 3);
}
},
OnCheckScore: function() {
var e = PlayerManager.GetMeUserItem();
if (null == e) return !1;
if (this.inFreeGame) return !0;
var t = e.GetUserScore(), i = this.TotalScore;
if (t < i) {
if (0 == GetProject().cbCheckAccounts) var n = "The current gold coin is below " + i / 1e3 + ", please recharge first"; else n = "Not enough diamonds";
ManagerHelp_SetSystemAlert(n, function(e, t) {
window.YQ_SYS_OK == t && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}, !0, window.BTN_CLOSE);
return !1;
}
return !0;
},
OnBtnStartClick: function(e) {
this.onPlayBigWin(!1, 0);
if ("Dis_btnsub" === e.target.getName()) {
this.i_totalBetIndex--;
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnadd" === e.target.getName()) {
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnfast" === e.target.getName()) {
this.fastModel = !1;
this.updateRollMode();
} else if ("Dis_btnslow" === e.target.getName()) {
this.fastModel = !0;
this.updateRollMode();
} else if ("btn_start" === e.target.getName()) {
if (!this.OnCheckScore()) return;
if (!this.canStart) return;
this.canStart = !1;
window.mfConfig.PlayAudio("501/Audio/spin");
this.stopAllAnim();
this.nodeFreeGameNew.active = !1;
this.slot_line_control.resetLineInfo();
this.unschedule(this.playIconAnim);
this.nodeWinScore.setScale(0);
this.i_freegameTimes >= 0 && this.inFreeGame ? this.bgSpineSwitchTimes = 0 : this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.lineCount = 0;
this.lineIndex = 0;
this.jsGameEngine.OnSendEventGameStart(40, this.TotalScore, this.LineBetNodeJs.i_betNum[this.LineBetNodeJs.i_betIndex], !1, this.LineBetNodeJs.i_lineMul[this.LineBetNodeJs.i_lineIndex]);
this.b_roll = !0;
if (this.i_freegameTimes > 0) {
this.i_freegameTimes--;
this.OnFreeGameTimeUpdate();
} else this.OnSubStake(-this.TotalScore);
if (this.i_freegameTimes >= 0 && this.inFreeGame) ; else {
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !0;
}
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else if ("btn_quickstop" === e.target.getName()) {
window.mfConfig.PlayAudio("501/Audio/stop");
this.b_auto = !1;
this.updateBanCyclePlay();
for (var t = 0; t < 5; t++) {
var i = n.tab_data[t];
this.roll_pans2[t].getComponent(a).quickstop(i);
}
if (this.i_freegameTimes > 0) for (var o = 0; o < 5; o++) this.roll_pans2[o].getComponent(a).unscheduleAllCallbacks();
window.mfConfig.StopAudioClip(this.reel_anticipationId);
this.btn_stop.unscheduleAllCallbacks();
this.btn_start.unscheduleAllCallbacks();
this.btn_add.unscheduleAllCallbacks();
this.scheduleOnce(function() {
this._onRollStop();
}, .1);
this.btn_stop.interactable = !1;
}
},
OnSubStake: function(e) {
var t = this.nodeUserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
OnStakeUpdate: function() {
var e = this.nodeUserStake.getComponent(cc.Label);
this.nodeUserWin.getComponent(cc.Label).string = "0.00";
for (var t = 0; t < this.i_totalBet.length; t++) if (this.i_totalBet[t].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = t;
break;
}
this.TotalScore = 40 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * 1e3 * parseFloat(this.LineBetNodeJs.multipleLbl.string);
e.string = OnScoreToString(this.TotalScore, 2);
},
updateLineScore: function(e, t) {
this.LineBetNodeJs.updateLineScore(e, t);
},
updateRollMode: function() {
if (this.fastModel) {
this.btn_slow.node.active = !1;
this.btn_fast.node.active = !0;
} else {
this.btn_slow.node.active = !0;
this.btn_fast.node.active = !1;
}
this.updateBanCyclePlay();
},
updateBanCyclePlay: function() {
!this.b_auto || this.b_auto && !this.fastModel ? this.banCyclePlay = !1 : this.banCyclePlay = !0;
},
OnRollEnd: function(e) {
var t = this;
this.jsGoodLuck.stopAllAni();
this.jsGoodLuck.showWinNode();
if (null == e.WinJackpotScore.high && null == e.WinJackpotScore.low) {
this.WinJackpotScore = e.WinJackpotScore;
this.WinJackpotPercent = e.WinJackpotPercent;
}
for (var i = [], o = 0; o < 5; o++) {
i[o] = [];
for (var s = 0; s < 4; s++) i[o][s] = e.ItemsArry[4 * o + s] - 1;
}
var r = 0;
null == e.WinScore.high && null == e.WinScore.low && (r = e.WinScore);
n.setData(i, r);
this.b_roll = !1;
this.btn_stop.interactable = !0;
this.i_freegameTimes > 0 && (this.btn_stop.interactable = !1);
var c = .6, l = .25;
if (this.fastModel) {
c = 0;
l = .25;
}
for (var h = [ 0 * l, 1 * l, 2 * l, 3 * l, 4 * l ], u = c + 4 * l + .5, d = this.getScatterCol(e.ItemsArry), m = d > 1 && d < 4, f = 0; f < 5; f++) m ? f < d ? this.roll_pans2[f].getComponent(a).roll(n.getValues(f), this.fastModel, m) : this.roll_pans2[f].getComponent(a).cycleRoll(n.getValues(f), this.fastModel, m) : this.roll_pans2[f].getComponent(a).roll(n.getValues(f), this.fastModel);
if (m) {
for (var p = 1, _ = function(e) {
cc.log("rollTimes  ====", c + h[d] + 4 * (p - 1));
t.btn_add.scheduleOnce(function() {
if (4 != e) {
this.nodeScatter4.active = 1 == e;
this.nodeScatter5.active = 2 == e;
this.playAudio("501/Audio/reel_anticipation");
this.roll_pans2[e].getComponent(a).stopCycleRoll(n.getValues(e), this.fastModel, m);
}
3 == e && this.btn_stop.scheduleOnce(function() {
this.roll_pans2[4].getComponent(a).stopCycleRoll(n.getValues(4), this.fastModel, m);
}.bind(this), .5);
}.bind(t), c + h[d] + 4 * (p - 1));
p++;
}, S = d - 1; S < 5; S++) _(S);
u += 4 * (5 - d - 1);
}
this.btn_start.scheduleOnce(function() {
this.btn_stop.interactable = !1;
this._onRollStop();
}.bind(this), u);
},
playAudio: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.AudioClip, function(n, a) {
if (n) cc.warn(e + " is not found"); else switch (e) {
case "501/Audio/reel_anticipation":
i.reel_anticipationId = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "501/Audio/bigwin_coins":
i.bigwin_coinsId = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "501/Audio/megawin_coins":
i.megawin_coinsId = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "501/Audio/supermegawin_coins":
i.supermegawin_coinsId = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "501/Audio/bigwin_loop":
i.bigwin_loop = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

case "501/Audio/bigwin_loop2":
i.bigwin_loop2 = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

case "501/Audio/bigwin_loop3":
i.bigwin_loop3 = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

default:
cc.audioEngine.play(a, t, window.mfConfig.fSound);
}
});
},
getScatterCol: function(e) {
for (var t = 0, i = 0, n = 0; n < e.length; n++) {
11 == e[n] && t++;
if (t >= 2) {
i = parseInt(n / 4) + 1;
break;
}
}
return i;
},
_onRollStop: function() {
this.nodeScatter4.active = !1;
this.nodeScatter5.active = !1;
this.i_ScatterCount = 0;
this._onFiveWin();
},
_onFiveWin: function() {
this._onIsWin();
},
_onIsWin: function() {
var e = this.jsGameEngine.objResultData, t = e.WinLines.length;
t > 0 ? this.playLineAnim(e.WinLines) : 0 == t && e.WinScatter.WinScore > 0 ? this.playEffect() : this.WinJackpotScore > 0 ? this.playJackpotAnim() : this._onRestBtn();
},
OnViewUpdate: function(e) {
this.bgSpineSwitchTimes += e;
if (this.bgSpineSwitchTimes >= 60) {
this.bgSpineSwitchTimes = 0;
this.bgSpineIndex++;
this.bgSpineIndex > 2 && (this.bgSpineIndex = 0);
}
this.jsGoodLuck && !this.jsGoodLuck.bPlaySpinAni && parseFloat(this.nodeUserWin.getComponent(cc.Label).string) > 0 && this.jsGoodLuck.playSpinAni();
},
_onRestBtn: function() {
var e = this.jsGameEngine.objResultData, t = e.AddFreeCount, i = !1;
if (t > 0) {
i = !0;
cc.log("开始进入免费游戏");
this.i_freegameTimes += t;
this.inFreeGame = !0;
this.scheduleOnce(function() {
this.bgSpineSwitchTimes = 0;
this.onGotoFreeGame();
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !1;
this.bg.spriteFrame = this.bgSF[1];
this.frontBg.spriteFrame = this.frontBgSF[1];
var e = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "zhi");
var t = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "zhi");
}.bind(this), 2);
}
if (0 == this.i_freegameTimes && this.inFreeGame) {
this.inFreeGame = !1;
this.bgSpineSwitchTimes = 60;
this.onPlayBigWin(!1, 0);
this.nodeFreeover.active = !0;
this.nodeWinScore.active = !1;
var n = this.nodeFreeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "animation");
var a = this.nodeFreeover.getChildByName("lbl_freeover"), o = (this.nodeFreeover.getChildByName("lizi1").getComponent(cc.ParticleSystem).resetSystem(), 
this.nodeFreeover.getChildByName("lizi2").getComponent(cc.ParticleSystem).resetSystem(), 
this.nodeUserWin.getComponent(cc.Label).string), s = this.nodeFreeover.getComponent("AztecMagic_text_control");
s.setNum(o);
a.runAction(cc.sequence(cc.scaleTo(.3, 1), cc.scaleTo(.1, .9), cc.scaleTo(.1, 1), cc.delayTime(68 / 30), cc.scaleTo(7 / 30, 0)));
s.scheduleOnce(function() {
this.nodeWinScore.active = !0;
this.nodeFreeover.active = !1;
this.nodeFreeTimeBg.active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("501/Audio/bgmuzic", !0);
}.bind(this), 3);
this.scheduleOnce(function() {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.bg.spriteFrame = this.bgSF[0];
this.frontBg.spriteFrame = this.frontBgSF[0];
var e = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "huang");
var t = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "huang");
this.canStart = !0;
if (this.b_auto) {
var i = {};
i.target = this.btn_start.node;
this.OnBtnStartClick(i);
}
}.bind(this), 3);
} else if (i) this.canStart = !0; else {
if (!this.inFreeGame) {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.bg.spriteFrame = this.bgSF[0];
this.frontBg.spriteFrame = this.frontBgSF[0];
var r = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(r, !0, "huang");
var c = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(c, !0, "huang");
}
this.canStart = !0;
}
if (this.i_freegameTimes > 0) {
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else {
this.btn_sub.interactable = !0;
this.btn_add.interactable = !0;
this.btn_bet.interactable = !0;
this.LineBetNodeJs.setBtnEnabled(!0);
}
var l = 0, h = e.WinLines.length;
h > 0 && !this.banCyclePlay && (l = 1 * h);
(this.b_auto && 0 == this.i_freegameTimes || this.i_freegameTimes > 0 && !i) && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), l);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("jsJackPotNum").setNumNew(e, t);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
initIcons: function(e) {
for (var t = [], i = 0, n = 0; n < 5; n++) {
t[n] = [];
for (var o = 0; o < 4; o++) {
t[n].push(e[i] - 1);
i++;
}
}
for (var s = 0; s < 5; s++) this.roll_pans2[s].getComponent(a).setIcons(t[s], !0, s);
var r = this;
this.schedule(function() {
r.percent += 1;
if (r.percent <= 100) {
r.updateBar.progress = r.percent / 100;
r.updatePrecent.string = r.percent + "%";
} else if (r.percent >= 151) {
r.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
if ("btnGM" == i) this.nodeCustom.active = !this.nodeCustom.active; else if ("btnClose" == i) this.nodeCustom.active = !1; else if ("btnOK" == i) this.check(); else if ("index+1" == i) this.check(!0); else if ("imJackpot" == i) this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore); else if ("btnHelp" == i) {
var n = cc.instantiate(this.pfRuleNode);
this.node_dialogLayer.addChild(n);
} else "Dis_BetNode" == i ? this.LineBetBigbg.active = !this.LineBetBigbg.active : "Dis_LineBetBigbg" == i ? this.LineBetBigbg.active = !1 : "clickNode" == i && (this.clickNode.active = !1);
},
check: function(e) {
this.customData.length = 0;
var t = this.CustomEditbox.string;
cc.sys.localStorage.setItem("AztecMagic_GMData", t);
for (var i = t.split(","), n = 0; n < 20; n++) {
var a = parseInt(i[n]);
a = e ? a + 1 : a;
this.customData.push(a);
}
if (20 != this.customData.length) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var o = 0; o < 20; o++) if (this.customData[o] < 1 || this.customData[o] > 12) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
var s = {};
s.target = this.btn_start.node;
this.OnBtnStartClick(s);
},
OnFreeGameScene: function(e) {
cc.log("免费游戏场景恢复");
this.nodeFreeTimeBg.active = !0;
this.btn_add.interactable = !1;
this.btn_sub.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
this.i_freegameTimes = e.FreeCount;
this.inFreeGame = !0;
this.btn_start.node.active = !1;
this.btn_stop.node.active = !1;
this.bg.spriteFrame = this.bgSF[1];
this.frontBg.spriteFrame = this.frontBgSF[1];
var t = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "zhi");
var i = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !0, "zhi");
this.OnFreeGameTimeUpdate();
this.bgSpineSwitchTimes = 0;
var n = 0;
n = null != e.FreeTotalWin.high && null != e.FreeTotalWin.low ? 0 : e.FreeTotalWin;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(n, 2);
this.OnStakeUpdate();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("501/Audio/FreeGameBG", !0);
this.i_freegameTimes > 0 && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), 2);
},
playLineAnim: function(e) {
var t = this;
this.winLines = e;
this.lineCount = e.length;
this.lineID = [];
for (var i = 0; i < 5; i++) {
this.roll_pans2[i].getComponent(a).setGray(!0, 0);
this.roll_pans2[i].getComponent(a).setGray(!0, 1);
this.roll_pans2[i].getComponent(a).setGray(!0, 2);
this.roll_pans2[i].getComponent(a).setGray(!0, 3);
}
for (var n = 0; n < this.lineCount; n++) {
this.lineID[n] = e[n].LineID;
var o = e[n];
this.showLinePoint(o);
}
this.slot_line_control.initLineData(this, this.lineID, this.lineCount);
this.slot_line_control.playAllLines(function() {
t.playEffect();
});
},
playIconAnim: function() {
for (var e = 0; e < 5; e++) {
this.roll_pans2[e].getComponent(a).stopAnim(0);
this.roll_pans2[e].getComponent(a).stopAnim(1);
this.roll_pans2[e].getComponent(a).stopAnim(2);
this.roll_pans2[e].getComponent(a).stopAnim(3);
}
for (var t = 0; t < 5; t++) {
this.roll_pans2[t].getComponent(a).setGray(!0, 0);
this.roll_pans2[t].getComponent(a).setGray(!0, 1);
this.roll_pans2[t].getComponent(a).setGray(!0, 2);
this.roll_pans2[t].getComponent(a).setGray(!0, 3);
}
var i = this.jsGameEngine.objResultData.WinLines[this.lineIndex];
this.showLinePoint(i);
this.nodeWinScore.setScale(0);
this.node_textwin.string = OnScoreToString(i.WinScore, 2);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.3, .8), cc.scaleTo(.3, .6), cc.delayTime(.3), cc.callFunc(function(e) {
e.setScale(0);
})));
this.lineIndex++;
this.lineIndex >= this.lineCount && (this.lineIndex = 0);
},
showLinePoint: function(e) {
for (var t = e.LineID, i = this.jsGameEngine.objSceneData.LinesArry[t - 1], n = 0; n < e.LeftWinItems.length; n++) {
var o = parseInt((i.PosArry[n] - 1) % 4);
this.roll_pans2[n].getComponent(a).setGray(!1, o);
this.roll_pans2[n].getComponent(a).playAnim(o);
}
},
playEffect: function() {
var e = 0;
if (this.jsGameEngine.objResultData.WinScatter.WinScore > 0) {
e = 2;
for (var t = 0; t < 5; t++) for (var i = this.roll_pans2[t].getComponent(a), o = 0; o < 4; o++) 11 == i.i_icons[o] && i.playAnim(o);
}
var s = this.jsGameEngine.objSceneData.WinLvArry;
n.i_win >= s[0] * this.TotalScore ? this.scheduleOnce(function() {
this.onPlayBigWin(!0, n.i_win);
}, e) : this.scheduleOnce(function() {
this.FlyGold(!1);
}, e);
},
onPlayBigWin: function(e, t) {
var i = this;
if (e) {
var n = this.jsGameEngine.objSceneData.WinLvArry, a = n[0] * this.TotalScore, o = n[1] * this.TotalScore, s = n[2] * this.TotalScore, r = i.nodeBig.getChildByName("lizi1").getComponent(cc.ParticleSystem), c = i.nodeBig.getChildByName("lizi2").getComponent(cc.ParticleSystem), l = "", h = "";
if (t >= a && t < o) {
this.nodeBig.active = !0;
l = "bigwin";
"big";
h = "501/Audio/big_win";
r.duration = 2.4;
c.duration = 2.4;
this.schedule(this.EruptGold, .03, 80);
cc.audioEngine.stopAll();
this.playAudio("501/Audio/bigwin_coins");
this.playAudio("501/Audio/bigwin_loop", !0);
} else if (t >= o && t < s) {
this.nodeBig.active = !0;
l = "megawin";
"mega";
h = "501/Audio/mega_win";
r.duration = 5.4;
c.duration = 5.4;
this.schedule(this.EruptGold, .03, 78);
cc.audioEngine.stopAll();
this.playAudio("501/Audio/bigwin_coins");
this.playAudio("501/Audio/bigwin_loop", !0);
this.scheduleOnce(function() {
this.schedule(this.EruptGold, .02, 87);
window.mfConfig.StopAudioClip(i.bigwin_loop);
this.playAudio("501/Audio/bigwin_loop2", !0);
this.playAudio("501/Audio/megawin_coins");
}, 3.5);
} else if (t >= s) {
this.nodeBig.active = !0;
l = "superwin";
"super";
h = "501/Audio/super_win";
r.duration = 8.4;
c.duration = 8.4;
this.schedule(this.EruptGold, .03, 77.77);
cc.audioEngine.stopAll();
this.playAudio("501/Audio/bigwin_loop", !0);
this.playAudio("501/Audio/bigwin_coins");
this.scheduleOnce(function() {
this.schedule(this.EruptGold, .02, 86.66);
window.mfConfig.StopAudioClip(i.bigwin_loop);
this.playAudio("501/Audio/bigwin_loop2", !0);
this.playAudio("501/Audio/megawin_coins");
}, 100 / 30);
this.scheduleOnce(function() {
this.schedule(this.EruptGold, .01, 143.33);
window.mfConfig.StopAudioClip(i.bigwin_loop2);
this.playAudio("501/Audio/bigwin_loop3", !0);
this.playAudio("501/Audio/supermegawin_coins");
}, 200 / 30);
}
var u = this.nodeBigSpine.getComponent(sp.Skeleton);
this.nodeBigCoinSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(u, !1, l);
window.mfConfig.PlayAudio(h, !1);
r.resetSystem();
c.resetSystem();
this.FlyBigGold(l);
} else this.nodeBig.active = !1;
},
EruptGold: function() {
var e = this, t = this.arryGodPool.get();
t.setPosition(cc.v2(Value_GetRandomInt(0, 100) - 50, -800 + Value_GetRandomInt(0, 100) - 50));
var i = .1 * Value_GetRandomInt(10, 13), n = Value_GetRandomInt(0, 360), a = Value_GetRandomInt(0, 360);
t.setScale(i, i);
t.angle = n;
t.rotation = a;
var o = Value_GetRandomInt(0, 1500) - 750, s = (o + t.x) / 2, r = [ t.getPosition(), cc.v2(s, 1e3 + Value_GetRandomInt(0, 1e3) + 100), cc.v2(o, -750) ];
t.runAction(cc.sequence(cc.bezierTo(1.5, r), cc.callFunc(function(t) {
t.removeFromParent();
e.arryGodPool.put(t);
}.bind(this))));
e.nodeGold.addChild(t);
},
FlyBigGoldDesc: function(e) {
e.nodeBig.active = !1;
e.node_bigtextwin.string = "";
e.nodeBigWinScore.setPosition(0, 0);
cc.audioEngine.stopAll();
this.inFreeGame ? window.mfConfig.PlayAudio("501/Audio/FreeGameBG", !0) : window.mfConfig.PlayAudio("501/Audio/bgmuzic", !0);
if (e.i_freegameTimes >= 0 && e.inFreeGame) {
var t = 1e3 * e.nodeUserWin.getComponent(cc.Label).string + n.i_win;
e.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(t, 2);
} else {
var i = 1e3 * e.nodeUserWin.getComponent(cc.Label).string + n.i_win;
e.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(i, 2);
}
if (e.WinJackpotScore > 0) {
e.OnSubStake(n.i_win);
e.playJackpotAnim();
} else {
e.OnSubStake(n.i_win);
e._onRestBtn();
e.playIconAnimDec();
}
},
playIconAnimDec: function() {
var e = this;
if (e.jsGameEngine.objResultData.WinLines.length > 0) {
e.slot_line_control.stopAllLine();
e.slot_line_control.playLineAnim();
for (var t = 0; t < 5; t++) {
e.roll_pans2[t].getComponent(a).stopAnim(0);
e.roll_pans2[t].getComponent(a).stopAnim(1);
e.roll_pans2[t].getComponent(a).stopAnim(2);
e.roll_pans2[t].getComponent(a).stopAnim(3);
}
if (!e.b_auto || e.b_auto && !e.fastModel) {
e.playIconAnim();
e.schedule(e.playIconAnim, 1);
e.banCyclePlay = !1;
} else e.banCyclePlay = !0;
}
},
FlyBigGold: function(e) {
var t = this;
this.node_bigtextwin.string = OnScoreToString(n.i_win, 2);
var i = this.nodeBigWinScore.getComponent("AztecMagic_text_control"), a = null;
if ("bigwin" == e) {
i.setNum(n.i_win / 1e3, 3);
a = cc.sequence(cc.scaleTo(10 / 30, 1), cc.delayTime(100 / 30), cc.scaleTo(10 / 30, 0), cc.callFunc(function(e) {
window.mfConfig.StopAudioClip(t.bigwin_coinsId);
window.mfConfig.StopAudioClip(t.bigwin_loop);
t.FlyBigGoldDesc(t);
}));
} else if ("megawin" == e) {
i.setNum(n.i_win / 1e3, 6);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(101 / 30), cc.moveTo(2 / 30, 0, -30), cc.moveTo(2 / 30, 0, 0), cc.moveTo(2 / 30, 0, 20), cc.moveTo(2 / 30, 0, 0), cc.delayTime(2.8), cc.scaleTo(8 / 30, 0), cc.callFunc(function(e) {
window.mfConfig.StopAudioClip(t.megawin_coinsId);
window.mfConfig.StopAudioClip(t.bigwin_loop2);
t.FlyBigGoldDesc(t);
}));
} else if ("superwin" == e) {
i.setNum(n.i_win / 1e3, 9);
a = cc.sequence(cc.scaleTo(8 / 30, 1), cc.delayTime(3.2), cc.moveTo(.1, 0, -30), cc.moveTo(1 / 30, 0, 0), cc.moveTo(2 / 30, 0, 20), cc.moveTo(.1, 0, 0), cc.delayTime(91 / 30), cc.moveTo(.1, 0, -30), cc.moveTo(1 / 30, 0, 0), cc.moveTo(2 / 30, 0, 20), cc.moveTo(.1, 0, 0), cc.delayTime(79 / 30), cc.scaleTo(8 / 30, 0), cc.callFunc(function(e) {
window.mfConfig.StopAudioClip(t.supermegawin_coinsId);
window.mfConfig.StopAudioClip(t.bigwin_loop3);
t.FlyBigGoldDesc(t);
}));
}
this.nodeBigWinScore.setScale(0);
this.nodeBigWinScore.runAction(a);
},
FlyGold: function(e) {
var t = this;
this.node_textwin.string = OnScoreToString(n.i_win, 2);
window.mfConfig.PlayAudio("501/Audio/win_low", !1);
var i = this.nodeWinScore.getComponent("AztecMagic_text_control");
this.nodeWinScore.setScale(0);
if (e) {
i.setNum(n.i_win / 1e3, 3);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 2, 2), cc.scaleTo(.2, 1.5, 1.5), cc.delayTime(4.5), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(e) {
t.FlyGoldDesc(e, !0);
})));
} else {
i.setNum(n.i_win / 1e3);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(2.2), cc.spawn(cc.moveTo(.1, 0, -500), cc.scaleTo(.1, 0, 0)), cc.callFunc(function(e) {
t.FlyGoldDesc(e, !1);
})));
}
},
FlyGoldDesc: function(e, t) {
var i = this;
i.node_textwin.string = "";
e.setPosition(0, -200);
if (i.i_freegameTimes >= 0 && i.inFreeGame) {
var a = 1e3 * i.nodeUserWin.getComponent(cc.Label).string + n.i_win;
i.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(a, 2);
} else {
var o = 1e3 * i.nodeUserWin.getComponent(cc.Label).string + n.i_win;
i.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(o, 2);
}
if (i.WinJackpotScore > 0) {
i.OnSubStake(n.i_win);
i.playJackpotAnim();
} else {
t || i.OnSubStake(n.i_win);
i._onRestBtn();
i.playIconAnimDec();
}
},
playJackpotAnim: function() {
var e = this;
this.jsGameEngine.OnFrameButtonJackPotDraw(e.nodeJackPotTurn, e.WinJackpotPercent / 100, parseInt(e.WinJackpotScore / e.WinJackpotPercent * 10), function() {
n.i_win = e.WinJackpotScore;
e.WinJackpotScore = 0;
e.WinJackpotPercent = 0;
e.FlyGold(!0);
});
}
});
cc._RF.pop();
}, {
AztecMagic_logic: "AztecMagic_logic"
} ],
AztecMagic_Item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "460faM66+dFhLac4O6Q6eCn", "AztecMagic_Item");
cc.Class({
extends: cc.Component,
properties: {
frame: cc.Sprite,
icon: cc.Sprite,
nodeAnim: cc.Node
},
setData: function(e, t, i) {
var n = t.name.split("_")[0];
this.nodeAnim.getComponent(cc.Mask).enabled = "8" == n || "9" == n || "11" == n;
if ("10" == t.name) this.setScatter(); else {
null == i && (i = 2);
this.icon.node.scale = i < 2 ? .7 : 1;
this.icon.spriteFrame = t;
}
this.frame.spriteFrame = e;
},
setScatter: function() {
this.nodeAnim.opacity = 255;
this.nodeAnim.scale = .7;
var e = this.nodeAnim.getChildByName("skeletonNode");
e.scale = .85;
var t = e.getComponent(sp.Skeleton), i = new cc.Node("skeletonNode2"), n = i.addComponent(sp.Skeleton);
this.nodeAnim.addChild(i);
cc.loader.loadRes("501/AGameSpine/10", sp.SkeletonData, function(e, t) {
n.skeletonData = t;
n.animation = "drops";
n.loop = !1;
n.setCompleteListener(function() {
PlaySkeletonAnimation(i, !0, "loop");
});
});
cc.loader.loadRes("501/AGameSpine/skeleton", sp.SkeletonData, function(i, n) {
t.skeletonData = n;
t.animation = "star";
t.loop = !1;
t.setCompleteListener(function() {
PlaySkeletonAnimation(e, !0, "loop");
});
});
}
});
cc._RF.pop();
}, {} ],
AztecMagic_jackpot_rank: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "99042vA65tJXZ9sZlxN4x5T", "AztecMagic_jackpot_rank");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
nodeRankPng: [ cc.SpriteFrame ],
nodeMe: cc.Node,
pfJackpotRankItem: cc.Prefab
},
onLoad: function() {
this.rankInfo = null;
this.requestJackpotRank();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" != i && "Splash" != i || this.node.destroy();
},
requestJackpotRank: function() {
var e = this, t = GetProject().szGameJackpotUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(a, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
e.rankInfo = n;
e.showJackpotRankInfo(n.data);
e.showMyRankings(n.myrankings);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotRankInfo: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfJackpotRankItem);
this.nodeContent.addChild(n);
var a = e[i], o = cc.find("imRank", n), s = cc.find("lblRank", n);
if (i < 3) {
o.active = !0;
s.active = !1;
o.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[i];
} else {
o.active = !1;
s.active = !0;
s.getComponent(cc.Label).string = i + 1;
}
cc.find("lblNickName", n).getComponent(cc.Label).string = a.NickName;
cc.find("lblReward", n).getComponent(cc.Label).string = (a.WinJackpot / 1e3).toFixed(3);
}
},
showMyRankings: function(e) {
var t = cc.find("imRank", this.nodeMe), i = cc.find("lblRank", this.nodeMe), n = cc.find("imNoOnList", this.nodeMe), a = this.isInTop10();
if (-1 != a) if (a < 3) {
t.active = !0;
i.active = !1;
t.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[a];
} else {
t.active = !1;
i.active = !0;
i.getComponent(cc.Label).string = a + 1;
} else {
t.active = !1;
i.active = !1;
n.active = !0;
}
var o = PlayerManager.GetMeUserItem();
cc.find("lblNickName", this.nodeMe).getComponent(cc.Label).string = o.GetNickNameUtf8();
cc.find("lblReward", this.nodeMe).getComponent(cc.Label).string = (e.WinJackpot / 1e3).toFixed(3);
},
isInTop10: function() {
for (var e = this.rankInfo.data, t = this.rankInfo.myrankings, i = e.length, n = 0; n < i; n++) {
if (e[n].GameID == t.GameID) return n;
}
return -1;
}
});
cc._RF.pop();
}, {} ],
AztecMagic_line_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "04c1cK45L1ILYTnmg36RVra", "AztecMagic_line_control");
cc.Class({
extends: cc.Component,
properties: {
nodeLine: cc.Node
},
onLoad: function() {
this.lineID = [];
this.lineCount = 0;
this.lineIndex = 0;
},
initLineData: function(e, t, i) {
this.jsGameView = e;
this.lineID = this.lineID.concat(t);
this.lineCount = i;
},
playAllLines: function(e) {
for (var t = 0; t < this.lineCount; t++) {
var i = this.nodeLine.children[this.lineID[t] - 1];
i.active = !0;
this.playSkeletonAnimation(i, "animation");
}
this.scheduleOnce(function() {
e && e();
}, .6);
},
playLineAnim: function() {
this.playLineUpdate();
this.schedule(this.playLineUpdate, 1);
},
playLineUpdate: function() {
for (var e = 0; e < this.nodeLine.children.length; e++) {
var t = this.nodeLine.children[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
var i = this.lineID[this.lineIndex], n = this.nodeLine.children[i - 1];
n.active = !0;
this.playSkeletonAnimation(n, "animation");
this.lineIndex++;
this.lineIndex >= this.lineCount && (this.lineIndex = 0);
},
stopAllLine: function() {
for (var e = 0; e < this.nodeLine.children.length; e++) {
var t = this.nodeLine.children[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
},
resetLineInfo: function() {
for (var e = 0; e < this.nodeLine.children.length; e++) {
var t = this.nodeLine.children[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
this.lineID.length = 0;
this.lineCount = 0;
this.lineIndex = 0;
this.unschedule(this.playLineUpdate);
},
playSkeletonAnimation: function(e, t) {
e.getComponent(sp.Skeleton).animation = t;
},
stopSkeletonAnimation: function(e) {
e.getComponent(sp.Skeleton).animation = "";
}
});
cc._RF.pop();
}, {} ],
AztecMagic_logic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b855cPmhSdI3bZT11JFq1un", "AztecMagic_logic");
t.exports = {
tab_data: null,
i_win: 0,
setData: function(e, t) {
this.tab_data = e;
this.i_win = t;
},
getValues: function(e) {
return this.tab_data[e];
}
};
cc._RF.pop();
}, {} ],
AztecMagic_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e968c39RaFC+LmoX9Q9lIl7", "AztecMagic_pan2_control");
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
iconsVague: {
default: [],
type: cc.SpriteFrame
},
icons: {
default: [],
type: cc.SpriteFrame
},
iconsFrame: {
default: [],
type: cc.SpriteFrame
},
iconsFrameVague: {
default: [],
type: cc.SpriteFrame
},
b_stop: {
default: !1
},
b_stoped: {
default: !1
},
i_icons: {
default: []
},
i_rollHeight: 0,
aztecMagicItem: cc.Prefab,
pGameView: cc.Node
},
onLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecMagic_GameView");
},
OnCreateBrick: function() {
return cc.instantiate(this.aztecMagicItem);
},
playAnimDetail: function(e, t) {
var i = void 0, n = void 0, a = void 0;
e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").opacity = 0;
i = e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani");
n = e.getChildByName("i" + t).getComponent("AztecMagic_Item").icon.spriteFrame;
a = e.getChildByName("i" + t).getComponent("AztecMagic_Item").frame.spriteFrame;
if (null != i) {
i.opacity = 255;
var o = a.name.charAt(a.name.length - 1), s = n.name.split("_")[0];
8 != s && 9 != s && 11 != s || (o = 2);
i.scale = o < 2 ? .7 : 1;
var r = i.getChildByName("skeletonNode").getComponent(sp.Skeleton), c = "501/AGameSpine/" + n.name;
cc.loader.loadRes(c, sp.SkeletonData, function(e, t) {
r.skeletonData = t;
r.animation = "animation";
});
}
},
playAnim: function(e) {
if (this.isTopNode()) {
for (var t = 0; t < this.sp_top.children.length; t++) for (var i = 0; i < this.sp_top.getChildByName("i" + t).tag.length; i++) if (e == this.sp_top.getChildByName("i" + t).tag[i]) {
this.playAnimDetail(this.sp_top, t);
return;
}
} else for (var n = 0; n < this.sp_mid.children.length; n++) for (var a = 0; a < this.sp_mid.getChildByName("i" + n).tag.length; a++) if (e == this.sp_mid.getChildByName("i" + n).tag[a]) {
this.playAnimDetail(this.sp_mid, n);
return;
}
},
stopAnim: function(e) {
for (var t = this.sp_mid, i = 0; i < 4; i++) {
this.isTopNode() && (t = this.sp_top);
if (t.getChildByName("i" + i)) {
t.getChildByName("i" + i).getChildByName("frame").getChildByName("icon").opacity = 255;
var n = t.getChildByName("i" + i).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").getComponent(sp.Skeleton);
n.skeletonData = null;
n.animation = null;
}
}
},
setIcons: function(e, t) {
this.i_icons = e;
if (t) {
this.randomIcons(this.sp_top, t);
this.randomIcons(this.sp_mid, t);
} else this.isTopNode() ? this.setIcons2node(this.sp_top, this.i_icons) : this.setIcons2node(this.sp_mid, this.i_icons);
},
setGrayDetail: function(e, t, i) {
e.getChildByName("i" + t).getChildByName("frame").color = i ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").color = i ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2") && (e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2").color = i ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255));
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
},
setGray: function(e, t, i) {
if (this.isTopNode()) {
for (var n = 0; n < this.sp_top.children.length; n++) for (var a = 0; a < this.sp_top.getChildByName("i" + n).tag.length; a++) if (i == this.sp_top.getChildByName("i" + n).tag[a]) {
this.setGrayDetail(this.sp_top, n, e);
return;
}
} else for (var o = 0; o < this.sp_mid.children.length; o++) for (var s = 0; s < this.sp_mid.getChildByName("i" + o).tag.length; s++) if (i == this.sp_mid.getChildByName("i" + o).tag[s]) {
this.setGrayDetail(this.sp_mid, o, e);
return;
}
},
randomIcons: function(e, t) {
var i = [];
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
var n = this.isMergeBrick(i);
this._randomList = n;
this.setAztecMagicItem(e, n, !t);
},
setIcons2node: function(e, t) {
var i = this.isMergeBrick(t);
this.setAztecMagicItem(e, i);
},
setAztecMagicItem: function(e, t, i) {
e.removeAllChildren();
for (var n = 0, a = 0; a < t.length; a++) {
var o = this.OnCreateBrick();
o.tag = "";
var s = o.getComponent("AztecMagic_Item"), r = this.getBrickBg(t[a].length, t[a][0], i), c = this.getBrickIcons(t[a].length, t[a][0], i), l = t[a].length;
8 != t[a][0] && 9 != t[a][0] && 11 != t[a][0] || (l = 2);
s.setData(r, c, l);
for (var h = 0; h < t[a].length; h++) o.tag += n++;
e.addChild(o, 1, "i" + a);
}
},
isTopNode: function() {
return 0 == this.sp_top.position.y;
},
getBrickBg: function(e, t, i) {
var n = 0;
if (9 == t) n = 6; else if (8 == t) n = 3; else if (10 == t) return i ? this.iconsFrameVague[9] : this.iconsFrame[9];
return i ? this.iconsFrameVague[n + e - 1] : this.iconsFrame[n + e - 1];
},
getBrickIcons: function(e, t, i) {
var n = t;
e >= 2 && 8 == t ? n = 11 : e >= 2 && 9 == t ? n = 13 : e >= 2 && 11 == t ? n = 15 : e = 1;
return i ? this.iconsVague[n + e - 1] : this.icons[n + e - 1];
},
isMergeBrick: function(e) {
var t = [], i = 0;
t[i] = [ e[0] ];
e.reduce(function(e, n) {
if (n <= 3) {
if (t[i].length >= 2) {
t[++i] = [ n ];
return n;
}
n === e ? t[i].push(n) : t[++i] = [ n ];
} else {
if (10 == n) {
t[++i] = [ n ];
return n;
}
if (t[i].length >= 3) {
t[++i] = [ n ];
return n;
}
n === e ? t[i].push(n) : t[++i] = [ n ];
}
return n;
});
if (2 == t.length && t[0][0] == t[1][0] && 1 == Rand(2)) {
var n = t[0];
t[0] = t[1];
t[1] = n;
}
return t;
},
roll: function() {
var e = this;
this.b_stop = !1;
this.b_stoped = !1;
if (this.isTopNode()) {
var t = this.sp_top;
this.sp_top = this.sp_mid;
this.sp_mid = t;
}
this.n_act1 = 1;
this.randomIcons(this.sp_top);
var i = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act1++;
if (e.n_act1 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) {
var i = t.children[t.children.length - 1].getComponent("AztecMagic_Item"), n = e._randomList.length - 1, a = e.getBrickBg(e._randomList[n].length, e._randomList[n][0], !1), o = e.getBrickIcons(e._randomList[n].length, e._randomList[n][0], !1), s = e._randomList[n].length;
8 != e._randomList[n][0] && 9 != e._randomList[n][0] && 11 != e._randomList[n][0] || (s = 2);
i.setData(a, o, s);
var r = cc.sequence(cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, e.i_rollHeight);
e.sp_mid.setPosition(0, 0);
}));
t.runAction(r);
} else {
e.setIcons2node(t, e.i_icons);
var c = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
if (e.i_icons.includes(10)) {
e.pGameViewJs.i_ScatterCount++;
window.mfConfig.PlayAudio("501/Audio/scatter" + e.pGameViewJs.i_ScatterCount, !1, window.mfConfig.fSound);
}
window.mfConfig.PlayAudio("501/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_mid.setPosition(0, e.i_rollHeight);
}));
t.runAction(c);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.n_act2 = 0;
var n = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act2++;
if (e.n_act2 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) {
var i = t.children[t.children.length - 1].getComponent("AztecMagic_Item"), n = e._randomList.length - 1, a = e.getBrickBg(e._randomList[n].length, e._randomList[n][0], !1), o = e.getBrickIcons(e._randomList[n].length, e._randomList[n][0], !1), s = e._randomList[n].length;
8 != e._randomList[n][0] && 9 != e._randomList[n][0] && 11 != e._randomList[n][0] || (s = 2);
i.setData(a, o, s);
var r = cc.sequence(cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, e.i_rollHeight);
e.sp_top.setPosition(0, 0);
}));
t.runAction(r);
} else {
e.setIcons2node(t, e.i_icons);
var c = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
if (e.i_icons.includes(10)) {
e.pGameViewJs.i_ScatterCount++;
window.mfConfig.PlayAudio("501/Audio/scatter" + e.pGameViewJs.i_ScatterCount, !1, window.mfConfig.fSound);
}
window.mfConfig.PlayAudio("501/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_top.setPosition(0, e.i_rollHeight);
}));
t.runAction(c);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.sp_top.runAction(cc.repeatForever(i));
this.sp_mid.runAction(cc.repeatForever(n));
},
quickstop: function(e) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.setIcons(e);
},
stopRoll: function(e) {
this.i_icons = e;
this.b_stop = !0;
},
getPos: function(e) {
for (var t = [], i = 0; i < 4; i++) {
var n = this.sp_mid.getChildByName("i" + i).convertToWorldSpaceAR(cc.v2(0, 0)), a = e.convertToNodeSpaceAR(n);
t.push(a);
}
return t;
}
});
cc._RF.pop();
}, {} ],
AztecMagic_pan3_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "465e0f9ui5J+ItXXAjutJJe", "AztecMagic_pan3_control");
cc.Class({
extends: cc.Component,
properties: {
rollNode: cc.Node,
iconsVague: {
default: [],
type: cc.SpriteFrame
},
icons: {
default: [],
type: cc.SpriteFrame
},
iconsFrame: {
default: [],
type: cc.SpriteFrame
},
iconsFrameVague: {
default: [],
type: cc.SpriteFrame
},
i_icons: {
default: []
},
aztecMagicItem: cc.Prefab,
rollItem: cc.Node,
pGameView: cc.Node
},
onLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecMagic_GameView");
this.screensNum = 5;
this.intervalNum = 2;
},
OnCreateBrick: function() {
return cc.instantiate(this.aztecMagicItem);
},
playAnimDetail: function(e, t) {
var i = void 0, n = void 0, a = void 0;
e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").opacity = 0;
i = e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani");
n = e.getChildByName("i" + t).getComponent("AztecMagic_Item").icon.spriteFrame;
a = e.getChildByName("i" + t).getComponent("AztecMagic_Item").frame.spriteFrame;
if (null != i) {
i.opacity = 255;
var o = a.name.charAt(a.name.length - 1), s = n.name.split("_")[0];
8 != s && 9 != s && 11 != s || (o = 2);
i.scale = o < 2 ? .7 : 1;
var r = i.getChildByName("skeletonNode").getComponent(sp.Skeleton), c = "501/AGameSpine/" + n.name;
cc.loader.loadRes(c, sp.SkeletonData, function(e, t) {
r.skeletonData = t;
r.animation = "animation";
});
}
},
playAnim: function(e) {
if (0 != this.rollNode.children.length) {
for (var t = this.rollNode.children[0], i = 1; i < t.children.length - 1; i++) for (var n = 0; n < t.getChildByName("i" + (i - 1)).tag.length; n++) if (e == t.getChildByName("i" + (i - 1)).tag[n]) {
this.playAnimDetail(t, i - 1);
return;
}
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
stopAnim: function(e) {
if (0 != this.rollNode.children.length) {
for (var t = this.rollNode.children[0], i = 0; i < 4; i++) if (t.getChildByName("i" + i)) {
t.getChildByName("i" + i).getChildByName("frame").getChildByName("icon").opacity = 255;
var n = t.getChildByName("i" + i).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").getComponent(sp.Skeleton);
n.skeletonData = null;
n.animation = null;
}
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
clacRollHeight: function(e) {
this.screensNum += e * this.intervalNum;
var t = this.rollNode.getComponent(cc.Layout);
this.i_rollHeight = (this.screensNum - 1) * this.rollItem.height + (t.spacingY * this.screensNum + 238);
},
setIcons: function(e, t, i) {
this.i_icons = e;
if (t) {
this.clacRollHeight(i);
this.randomIcons();
this.rollNode.setPosition(0, -this.i_rollHeight);
} else this.setIcons2node(this.i_icons);
},
setGrayDetail: function(e, t, i, n) {
e.getChildByName("i" + t).getChildByName("frame").color = i ? n : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").color = i ? n : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? n : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2") && (e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2").color = i ? n : new cc.Color(255, 255, 255));
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? n : new cc.Color(255, 255, 255);
},
setGray: function(e, t, i) {
if (0 != this.rollNode.children.length) {
i || (i = new cc.Color(100, 100, 100));
for (var n = this.rollNode.children[0], a = 1; a < n.children.length - 1; a++) for (var o = 0; o < n.getChildByName("i" + (a - 1)).tag.length; o++) if (t == n.getChildByName("i" + (a - 1)).tag[o]) {
this.setGrayDetail(n, a - 1, e, i);
return;
}
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
addRollItem: function(e, t) {
var i = cc.instantiate(this.rollItem);
i.active = !0;
i.setPosition(0, 0);
this.setAztecMagicItem(i, e, t);
this.rollNode.addChild(i);
},
randomIcons: function() {
this.rollNode.removeAllChildren();
var e = this.beginAndEndAdd(this.i_icons);
this.addRollItem(e);
for (var t = 0; t < this.screensNum - 1; t++) {
var i = [];
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
i.push(Math.floor(12 * Math.random()));
var n = this.isMergeBrick(i);
this.addRollItem(n, !0);
}
},
beginAndEndAdd: function(e) {
var t = this.isMergeBrick(e);
t.splice(0, 0, [ Math.floor(12 * Math.random()) ]);
t.push([ Math.floor(12 * Math.random()) ]);
return t;
},
setIcons2node: function(e) {
var t = this.beginAndEndAdd(e);
this.setAztecMagicItem(this.rollNode.children[0], t);
},
setAztecMagicItemDesc: function(e, t, i, n) {
var a = i[e].length, o = t.getComponent("AztecMagic_Item"), s = this.getBrickBg(a, i[e][0], n), r = this.getBrickIcons(a, i[e][0], n);
8 != i[e][0] && 9 != i[e][0] && 11 != i[e][0] || (a = 2);
o.setData(s, r, a);
},
setAztecMagicItem: function(e, t, i) {
e.removeAllChildren();
if (i) for (var n = 0, a = 0; a < t.length; a++) {
var o = this.OnCreateBrick();
this.setAztecMagicItemDesc(a, o, t, i);
e.addChild(o, 1, "i" + n++);
} else {
var s = this.OnCreateBrick();
this.setAztecMagicItemDesc(0, s, t, i);
e.addChild(s, 1, "top");
for (var r = 0, c = 0, l = 1; l < t.length - 1; l++) {
var h = this.OnCreateBrick();
h.tag = "";
this.setAztecMagicItemDesc(l, h, t, i);
e.addChild(h, 1, "i" + r++);
for (var u = 0; u < t[l].length; u++) h.tag += c++;
}
s = this.OnCreateBrick();
this.setAztecMagicItemDesc(t.length - 1, s, t, i);
e.addChild(s, 100, "bottom");
}
e.height = i ? 650 : 999;
},
getBrickBg: function(e, t, i) {
var n = 0;
if (9 == t) n = 6; else if (8 == t) n = 3; else if (10 == t) return i ? this.iconsFrameVague[9] : this.iconsFrame[9];
return i ? this.iconsFrameVague[n + e - 1] : this.iconsFrame[n + e - 1];
},
getBrickIcons: function(e, t, i) {
var n = t;
e >= 2 && 8 == t ? n = 11 : e >= 2 && 9 == t ? n = 13 : e >= 2 && 11 == t ? n = 15 : e = 1;
return i ? this.iconsVague[n + e - 1] : this.icons[n + e - 1];
},
isMergeBrick: function(e) {
var t = [], i = 0;
t[i] = [ e[0] ];
e.reduce(function(e, n) {
if (n <= 3) {
if (t[i].length >= 2) {
t[++i] = [ n ];
return n;
}
n === e ? t[i].push(n) : t[++i] = [ n ];
} else {
if (10 == n) {
t[++i] = [ n ];
return n;
}
if (t[i].length >= 3) {
t[++i] = [ n ];
return n;
}
n === e ? t[i].push(n) : t[++i] = [ n ];
}
return n;
});
if (2 == t.length && t[0][0] == t[1][0] && 1 == Rand(2)) {
var n = t[0];
t[0] = t[1];
t[1] = n;
}
return t;
},
setGrayScatter: function() {
if (this.bShowScatterAni) for (var e = 0; e < this.i_icons.length; e++) 10 != this.i_icons[e] && this.setGray(!0, e, new cc.Color(180, 180, 180));
},
setAudioScatter: function() {
if (this.i_icons.includes(10)) {
this.pGameViewJs.i_ScatterCount++;
window.mfConfig.PlayAudio("501/Audio/scatter" + this.pGameViewJs.i_ScatterCount, !1, window.mfConfig.fSound);
}
},
roll: function(e, t, i) {
var n = this;
this.i_icons = e;
this.bShowScatterAni = i;
this.fastModel = t;
var a = this.getSpeed(this.fastModel, this.screensNum);
this.rollNode.y = 0;
this.randomIcons();
this.rollNode.stopAllActions();
var o = cc.sequence(cc.callFunc(function(e) {
n.setGrayScatter();
}), cc.moveBy(a, cc.v2(0, -n.i_rollHeight)), cc.callFunc(function(e) {
n.setAudioScatter();
window.mfConfig.PlayAudio("501/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(e) {
e.setPosition(0, -n.i_rollHeight);
}));
this.rollNode.runAction(o);
},
cycleRoll: function(e, t, i) {
this.i_icons = e;
this.bShowScatterAni = i;
this.fastModel = t;
var n = this.getSpeed(this.fastModel, this.screensNum);
this.rollNode.y = 0;
this.randomIcons();
var a = cc.sequence(cc.moveBy(n, cc.v2(0, -this.i_rollHeight + this.rollItem.height)), cc.callFunc(function(e) {
e.y = 0;
}));
this.rollNode.runAction(cc.repeatForever(a));
},
getSpeed: function(e, t) {
var i = .15 * t;
e && (i = .07 * t);
return i;
},
quickstop: function(e) {
this.setIcons(e);
this.rollNode.stopAllActions();
this.rollNode.setPosition(0, -this.i_rollHeight);
},
stopCycleRoll: function() {
var e = this;
this.rollNode.stopAllActions();
var t = this.getSpeed(this.fastModel, 1);
this.rollNode.setPosition(0, -this.i_rollHeight + e.rollItem.height);
var i = cc.sequence(cc.callFunc(function(t) {
e.setGrayScatter();
}), cc.moveTo(t, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.setAudioScatter();
window.mfConfig.PlayAudio("501/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, -e.i_rollHeight);
}));
this.rollNode.runAction(i);
}
});
cc._RF.pop();
}, {} ],
AztecMagic_rollNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "620c2OUG+tNNbV6DHIF9FRQ", "AztecMagic_rollNum");
cc.Class({
extends: cc.Component,
properties: {
nodeNum0: cc.Node,
nodeNum1: cc.Node
},
onLoad: function() {
this.startNum = 0;
},
setData: function(e) {
this.node.active = !0;
this.nodeNum0.getComponent(cc.Label).string = e;
this.nodeNum1.getComponent(cc.Label).string = e;
},
startRoll: function(e, t, i) {
var n = this;
this.nodeNum0.getComponent(cc.Label).string, this.nodeNum1.getComponent(cc.Label).string;
if (i != this.nodeNum0.getComponent(cc.Label).string && i != this.nodeNum1.getComponent(cc.Label).string) {
this.index = e;
this.startNum = t;
this.endNum = i;
this.stop = !1;
this.b_stoped = !1;
this.nodeNum0.getComponent(cc.Label).string = this.startNum++;
this.nodeNum1.getComponent(cc.Label).string = this.startNum++;
this.n_act1 = 1;
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act1++;
if (n.n_act1 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.n_act2 = 0;
var o = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act2++;
if (n.n_act2 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.nodeNum0.runAction(cc.repeatForever(a));
this.nodeNum1.runAction(cc.repeatForever(o));
}
}
});
cc._RF.pop();
}, {} ],
AztecMagic_rule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "278d5wP911LYYWDEgnHeKRx", "AztecMagic_rule");
cc.Class({
extends: cc.Component,
properties: {
imgSelect: cc.Node,
btnRule: [ cc.Node ],
nodeRule: [ cc.Node ]
},
onLoad: function() {
this.colorSelect = cc.color(85, 50, 4);
this.colorUnselect = cc.color(255, 218, 47);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
if (0 == i.indexOf("btnRule")) {
var n = parseInt(t);
this.updatePage(n);
} else "btnClose" == i && this.node.destroy();
},
updatePage: function(e) {
cc.log(e);
this.imgSelect.setPosition(this.btnRule[e].getPosition());
for (var t = 0; t < 5; t++) {
cc.find("Label", this.btnRule[t]).color = this.colorUnselect;
this.nodeRule[t].active = !1;
}
cc.find("Label", this.btnRule[e]).color = this.colorSelect;
this.nodeRule[e].active = !0;
}
});
cc._RF.pop();
}, {} ],
AztecMagic_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "99b73PpwnFOnYa/ONBlVrl3", "AztecMagic_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e, t) {
this.i_num = parseFloat(e);
this.i_cur_num = 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
}
}
});
cc._RF.pop();
}, {} ],
AztecPlus_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed41dIbA4pMaom+vSc2z2xE", "AztecPlus_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_SCENE_START = 1;
cc._RF.pop();
}, {} ],
AztecPlus_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ece291Qg0FMzrgRRZRr2ZUM", "AztecPlus_GameEngine");
var n = e("AztecPlus_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecPlus_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("AztecPlus_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("502/Audio/bg_muzic", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.objSceneData = a;
this.jsGameView.OnLineConfig(a.LineBets, a.LineMuls);
this.jsGameView.updateJackpot(a.JackpotScore);
this.jsGameView.initIcons(a.Defaultshow);
a.FreeCount > 0 && this.jsGameView.updateLineScore(a.LineScore, a.LineMul);
a.FreeCount > 0 && this.jsGameView.OnFreeGameScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
this.objResultData = i;
this.pGameViewJs.OnRollEnd(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs && this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i, a, o) {
var s = {};
s.LineScore = i;
s.LineMul = o;
if (42 == this.pGameViewJs.customData.length) {
s.TestItems = this.pGameViewJs.customData;
cc.error(s.TestItems);
}
var r = window.net.netSerializer.packMsg("CMD_C_UserRunReq", s);
this.SendGameData(n.SUB_C_SCENE_START, r, r.length);
this.pGameViewJs.customData.length = 0;
}
});
cc._RF.pop();
}, {
AztecPlus_CMD_Game: "AztecPlus_CMD_Game"
} ],
AztecPlus_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "92231cN3RpKGq8dksqDpLuS", "AztecPlus_GameView");
var n = e("AztecPlus_logic"), a = "AztecPlus_pan3_control";
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
frontBg: cc.Sprite,
frontBgSF: [ cc.SpriteFrame ],
downBg: cc.Sprite,
downBgSF: [ cc.SpriteFrame ],
fire1: cc.Node,
fire2: cc.Node,
nodeUserScore: cc.Node,
nodeUserStake: cc.Node,
nodeUserWin: cc.Node,
nodeJackpot: cc.Node,
btn_sub: cc.Button,
btn_add: cc.Button,
btn_bet: cc.Button,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_stop: cc.Button,
nodeLongPress: cc.Node,
roll_pans2: [ cc.Node ],
b_auto: !1,
canStart: !0,
nodeFreeover: cc.Node,
nodeFreeOverSpine: cc.Node,
nodeFreeCoinSpine: cc.Node,
nodeFreeTimeBg: cc.Node,
nodeFreeGameNew: cc.Node,
node_dialogLayer: cc.Node,
nodeBig: cc.Node,
nodeBigSpine: cc.Node,
nodeBigCoinSpine: cc.Node,
nodeGold: cc.Node,
nodeWinScore: cc.Node,
nodeBigWinScore: cc.Node,
node_textwin: cc.Label,
node_bigtextwin: cc.Node,
nodeScatter: [ cc.Node ],
nodeCustom: cc.Node,
prefab_gold: cc.Prefab,
LineBetBigbg: cc.Node,
LineBetNode: cc.Node,
lineBetPrefab: cc.Prefab,
AztecPlusItem: cc.Prefab,
AztecPlusItemPosLayout: cc.Node,
i_ScatterCount: 0,
clickNode: cc.Node,
nodeJackPotTurn: cc.Node,
nodeMenu: cc.Node,
bg_win: cc.Node
},
OnFrameViewLoad: function() {
this.percent = 0;
this.arryGodPool = new cc.NodePool();
for (var e = 0; e < 200; e++) {
var t = cc.instantiate(this.prefab_gold);
this.arryGodPool.put(t);
}
this.btn_start.node.on("touchstart", function(e) {
if (this.i_freegameTimes <= 0) {
this.btn_start.scheduleOnce(function() {
t.canStart && (t.nodeLongPress.active = !0);
}, .1);
var t = this;
this.btn_start.scheduleOnce(function() {
t.b_auto = !0;
t.updateBanCyclePlay();
if (t.canStart) {
var e = {};
e.target = t.btn_start.node;
t.OnBtnStartClick(e);
t.nodeLongPress.active = !1;
}
}, 1.2);
}
}, this);
this.btn_start.node.on("touchend", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.btn_start.node.on("touchcancel", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.initData();
this.i_freegameTimes = 0;
this.inFreeGame = !1;
this.lineCount = 0;
this.lineIndex = 0;
var i = cc.find("No_nodeContent/New Sprite/CustomEditBox", this.nodeCustom);
this.CustomEditbox = i.getComponent(cc.EditBox);
if (cc.sys.localStorage.getItem("AztecPlus_GMData")) {
var n = cc.sys.localStorage.getItem("AztecPlus_GMData");
this.CustomEditbox.string = n;
}
this.customData = [];
this.fastModel = !1;
this.WinJackpotScore = 0;
this.WinJackpotPercent = 0;
this.curJackpotScore = 0;
this.schedule(function(e) {
Rand(31) % 2 == 0 && this.playAudio("502/Audio/bg_muzic_2");
this.scheduleOnce(function(e) {
window.mfConfig.StopAudioClip(self.bg_muzic_2);
}, Rand(16, 8));
}, 8);
this.jsGoodLuck = this.bg_win.getComponent("jsGoodLuck");
this.jsGoodLuck.playEnterAni();
},
initData: function() {
this.i_totalBetIndex = 0;
this.i_totalBet = [];
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
var t = PlayerManager.GetMeUserItem();
if (null == t) return !1;
var i = t.GetUserScore();
this.nodeUserScore.getComponent(cc.Label).string = OnScoreToString(i, 2);
},
OnEventUserEnter: function(e, t) {
cc.log("GameView.OnEventUserEnter.wChairID:", e.GetChairID(), "NickName:", e.GetNickNameUtf8());
var i = e.GetChairID();
this.jsGameEngine.SwitchViewID(i);
if (e.GetUserID() != PlayerManager.GetMeUserItem().GetUserID()) {
this.SetUserActive(i, !0);
this.GetJsFrameUser(i).SetUserDataItem(e);
this.OnFrameUpdateUserScore(i);
this.OnFrameEventUserStatus(e, e.GetUserStatus(), t);
return !0;
}
},
ResetGameView: function() {
cc.log("GameView.ResetGameView");
this.ResetFrameData();
},
OnEventUserLeave: function(e, t, i) {
cc.log("GameView.OnEventUserLeave");
this.SetUserActive(t, !0);
if (0 != this.jsGameEngine.SwitchViewID(t)) {
this.GetJsFrameUser(t).labelNickName.string = "";
return !0;
}
},
OnLineConfig: function(e, t) {
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, "BETING ON 50 RATIO");
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
OnFreeGameTimeUpdate: function() {
this.nodeFreeTimeBg.getChildByName("text_freegame").getComponent(cc.Label).string = "" + this.i_freegameTimes;
},
isMergeBrick: function(e) {
for (var t = [], i = 0; i < e.length; i++) 0 != e[i] && t.push(e[i]);
return t;
},
onGotoFreeGame: function() {
var e = this;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("502/Audio/free_intro", !1);
this.unschedule(this.cyclePlayLine);
this.nodeFreeTimeBg.active = !0;
var t = this.getItemsColArr(), i = [], n = void 0;
e: for (var a = 0; a < 6; a++) {
n = this.roll_pans2[a].getChildByName("rollNode").children[0];
for (var o = this.isMergeBrick(t[a]), s = 0; s < o.length; s++) {
12 == o[s] && i.push(n.children[s + 1]);
if (i.length >= 6) break e;
}
}
this.nodeFreeGameNew.active = !0;
var r = this.nodeFreeGameNew.getChildByName("times");
r.getComponent(cc.Label).string = "";
r.setPosition(0, 0);
var c = this.nodeFreeGameNew.getChildByName("freeGamesBg");
c.scale = 0;
for (var l = this.AztecPlusItemPosLayout.getChildByName(i.length + ""), h = 0; h < i.length && h < 6; h++) {
var u = cc.instantiate(this.AztecPlusItem), d = u.getComponent("AztecPlus_Item"), m = i[h].parent.convertToWorldSpaceAR(i[h].getPosition()), f = this.nodeFreeGameNew.getChildByName("itemNode").convertToNodeSpaceAR(m);
d.setScatter();
d.nodeAnim.scale = .73;
u.setPosition(f);
u.scale = 0;
u.opacity = 0;
this.nodeFreeGameNew.getChildByName("itemNode").addChild(u);
var p = cc.sequence(cc.spawn(cc.fadeTo(.5, 255), cc.scaleTo(.5, 2.3)), cc.scaleTo(.4, 1.8), cc.delayTime(.1), cc.spawn(cc.moveTo(1.3, l.children[h].getPosition()).easing(cc.easeBackIn()), cc.scaleTo(1.3, 1)));
u.runAction(p);
}
c.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(1.3, 1), cc.delayTime(1), cc.callFunc(function(t) {
var n = new cc.Node("skeletonNode"), a = n.addComponent(sp.Skeleton);
e.nodeFreeGameNew.getChildByName("freeNode").addChild(n);
cc.loader.loadRes("502/AGameSpine/free", sp.SkeletonData, function(t, n) {
a.skeletonData = n;
a.animation = "" + i.length;
a.loop = !1;
e.nodeFreeGameNew.getChildByName("itemNode").removeAllChildren();
c.scale = 0;
for (var o = function(t) {
e.scheduleOnce(function() {
window.mfConfig.PlayAudio("502/Audio/scatter_fly_end_" + (t + 1));
e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi" + (t + 1)).active = !0;
}, (30 + 11 * t) / 30);
t == i.length - 1 && e.scheduleOnce(function() {
r.getComponent(cc.Label).string = this.jsGameEngine.objResultData.AddFreeCount;
r.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(.2), cc.spawn(cc.moveTo(.6, 703, -477), cc.scaleTo(.6, 0, 0)), cc.callFunc(function(t) {
t.getComponent(cc.Label).string = "";
t.setPosition(0, 0);
e.OnFreeGameTimeUpdate();
})));
}, (30 + 11 * t) / 30);
}, s = 0; s < i.length && s < 6; s++) o(s);
});
a.setCompleteListener(function() {
for (var t = 0; t < 6; t++) e.nodeFreeGameNew.getChildByName("liziNode").getChildByName("lizi" + (t + 1)).active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("502/Audio/free_game_bg", !0);
var i = {};
i.target = e.btn_start.node;
e.OnBtnStartClick(i);
n.removeFromParent();
});
})));
},
getItemsColArr: function() {
for (var e = [], t = 0, i = this.jsGameEngine.objResultData.ItemsArry, n = 0; n < 6; n++) {
e[n] = [];
for (var a = 0; a < 7; a++) {
e[n].push(i[t]);
t++;
}
}
return e;
},
stopAllAnim: function() {
for (var e = 0; e < 6; e++) ;
for (var t = 0; t < 6; t++) this.roll_pans2[t].getComponent(a).setAllGray(!1);
},
OnCheckScore: function() {
var e = PlayerManager.GetMeUserItem();
if (null == e) return !1;
if (this.inFreeGame) return !0;
var t = e.GetUserScore(), i = this.TotalScore;
if (t < i) {
if (0 == GetProject().cbCheckAccounts) var n = "The current gold coin is below " + i / 1e3 + ", please recharge first"; else n = "Not enough diamonds";
ManagerHelp_SetSystemAlert(n, function(e, t) {
window.YQ_SYS_OK == t && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}, !0, window.BTN_CLOSE);
return !1;
}
return !0;
},
OnBtnStartClick: function(e) {
if ("Dis_btnsub" === e.target.getName()) {
this.i_totalBetIndex--;
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnadd" === e.target.getName()) {
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnfast" === e.target.getName()) {
this.fastModel = !1;
this.updateRollMode();
} else if ("Dis_btnslow" === e.target.getName()) {
this.fastModel = !0;
this.updateRollMode();
} else if ("btn_start" === e.target.getName()) {
if (!this.OnCheckScore()) return;
if (!this.canStart) return;
this.canStart = !1;
window.mfConfig.PlayAudio("502/Audio/spin");
this.stopAllAnim();
this.nodeFreeGameNew.active = !1;
this.unschedule(this.cyclePlayLine);
this.nodeWinScore.setScale(0);
this.i_freegameTimes >= 0 && this.inFreeGame || (this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2));
this.lineCount = 0;
this.lineIndex = 0;
this.jsGameEngine.OnSendEventGameStart(50, this.TotalScore, this.LineBetNodeJs.i_betNum[this.LineBetNodeJs.i_betIndex], !1, this.LineBetNodeJs.i_lineMul[this.LineBetNodeJs.i_lineIndex]);
if (this.i_freegameTimes > 0) {
this.i_freegameTimes--;
this.OnFreeGameTimeUpdate();
} else this.OnSubStake(-this.TotalScore);
if (this.i_freegameTimes >= 0 && this.inFreeGame) ; else {
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !0;
}
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else if ("btn_quickstop" === e.target.getName()) {
window.mfConfig.PlayAudio("502/Audio/stop");
this.b_auto = !1;
this.updateBanCyclePlay();
for (var t = 0; t < 6; t++) {
var i = n.tab_data[t];
this.roll_pans2[t].getComponent(a).quickstop(i);
}
if (this.i_freegameTimes > 0) for (var o = 0; o < 6; o++) this.roll_pans2[o].getComponent(a).unscheduleAllCallbacks();
window.mfConfig.StopAudioClip(this.reel_anticipationId);
this.btn_stop.unscheduleAllCallbacks();
this.scheduleOnce(function() {
this._onRollStop();
}, .1);
this.btn_stop.interactable = !1;
}
},
OnSubStake: function(e) {
var t = this.nodeUserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
OnStakeUpdate: function() {
var e = this.nodeUserStake.getComponent(cc.Label);
this.nodeUserWin.getComponent(cc.Label).string = "0.00";
for (var t = 0; t < this.i_totalBet.length; t++) if (this.i_totalBet[t].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = t;
break;
}
this.TotalScore = 50 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * 1e3 * parseFloat(this.LineBetNodeJs.multipleLbl.string);
e.string = OnScoreToString(this.TotalScore, 2);
},
updateLineScore: function(e, t) {
this.LineBetNodeJs.updateLineScore(e, t);
},
updateRollMode: function() {
if (this.fastModel) {
this.btn_slow.node.active = !1;
this.btn_fast.node.active = !0;
} else {
this.btn_slow.node.active = !0;
this.btn_fast.node.active = !1;
}
this.updateBanCyclePlay();
},
updateBanCyclePlay: function() {
!this.b_auto || this.b_auto && !this.fastModel ? this.banCyclePlay = !1 : this.banCyclePlay = !0;
},
OnMenuLayerShow: function() {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnViewUpdate: function(e) {
this.jsGoodLuck && !this.jsGoodLuck.bPlaySpinAni && parseFloat(this.nodeUserWin.getComponent(cc.Label).string) > 0 && this.jsGoodLuck.playSpinAni();
},
OnRollEnd: function(e) {
var t = this;
this.jsGoodLuck.stopAllAni();
this.jsGoodLuck.showWinNode();
if (null == e.WinJackpotScore.high && null == e.WinJackpotScore.low) {
this.WinJackpotScore = e.WinJackpotScore;
this.WinJackpotPercent = e.WinJackpotPercent;
}
for (var i = [], o = 0; o < 6; o++) {
i[o] = [];
for (var s = 0; s < 7; s++) i[o][s] = e.ItemsArry[7 * o + s] - 1;
}
var r = 0;
null == e.WinScore.high && null == e.WinScore.low && (r = e.WinScore);
n.setData(i, r);
this.btn_stop.interactable = !0;
this.i_freegameTimes > 0 && (this.btn_stop.interactable = !1);
var c = .6, l = .25;
if (this.fastModel) {
c = 0;
l = .25;
}
var h = [ 0 * l, 1 * l, 2 * l, 3 * l, 4 * l, 5 * l ], u = c + 5 * l + .5, d = this.getScatterCol(e.ItemsArry), m = d > 0 && d < 6;
this.playAudio("502/Audio/normal_accelerations");
for (var f = 0; f < 6; f++) m ? f < d ? this.roll_pans2[f].getComponent(a).roll(n.getValues(f), this.fastModel, m) : this.roll_pans2[f].getComponent(a).cycleRoll(n.getValues(f), this.fastModel, m) : this.roll_pans2[f].getComponent(a).roll(n.getValues(f), this.fastModel);
if (m) {
for (var p = 1, _ = function(e) {
t.btn_stop.scheduleOnce(function() {
for (var t = 0; t < this.nodeScatter.length; t++) this.nodeScatter[t].active = e == t;
window.mfConfig.StopAudioClip(this.normal_accelerations);
e + 1 < 3 ? this.playAudio("502/Audio/scatter_accelerations_4") : e + 2 < 7 && this.playAudio("502/Audio/scatter_accelerations_" + (e + 2));
this.roll_pans2[e].getComponent(a).stopCycleRoll(n.getValues(e), this.fastModel, m);
}.bind(t), c + h[d] + 4 * (p - 1));
p++;
}, S = d - 1; S < 6; S++) _(S);
u += 4 * (6 - d);
}
this.btn_stop.scheduleOnce(function() {
for (var e = 0; e < this.nodeScatter.length; e++) this.nodeScatter[e].active = !1;
this.btn_stop.interactable = !1;
this._onRollStop();
}.bind(this), u);
},
playAudio: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.AudioClip, function(n, a) {
if (n) cc.warn(e + " is not found"); else switch (e) {
case "502/Audio/normal_accelerations":
i.normal_accelerations = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "502/Audio/bg_muzic_2":
i.bg_muzic_2 = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

default:
cc.audioEngine.play(a, t, window.mfConfig.fSound);
}
});
},
getScatterCol: function(e) {
for (var t = 0, i = 0, n = 0; n < e.length; n++) {
12 == e[n] && t++;
if (t >= 3) {
i = parseInt(n / 7) + 1;
break;
}
}
return i;
},
_onRollStop: function() {
window.mfConfig.StopAudioClip(this.normal_accelerations);
for (var e = 0; e < this.nodeScatter.length; e++) this.nodeScatter[e].active = !1;
this.i_ScatterCount = 0;
this._onIsWin();
},
_onIsWin: function() {
var e = this.jsGameEngine.objResultData, t = e.WinItems.length;
t > 0 ? this.playLineAnim(e.WinItems) : 0 == t && e.WinScatter.WinScore > 0 ? this.playEffect() : this.WinJackpotScore > 0 ? this.playJackpotAnim() : this._onRestBtn();
},
calcTotalWinLoopTime: function() {
var e = 1e3 * parseInt(this.nodeUserStake.getComponent(cc.Label).string), t = 1e3 * parseInt(this.nodeUserWin.getComponent(cc.Label).string), i = Math.min(t / e, 300), n = Math.pow(i, .7) - i / 50;
cc.log("times = " + i + " ,LoopTime = " + n);
return n;
},
_onRestBtn: function() {
var e = this, t = this.jsGameEngine.objResultData, i = t.AddFreeCount, n = !1;
if (i > 0) {
n = !0;
cc.log("开始进入免费游戏");
this.i_freegameTimes += i;
this.unschedule(this.cyclePlayLine);
this.inFreeGame = !0;
this.scheduleOnce(function() {
this.onGotoFreeGame();
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !1;
this.frontBg.spriteFrame = this.frontBgSF[1];
this.downBg.spriteFrame = this.downBgSF[1];
var e = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "zhi");
var t = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "zhi");
}.bind(this), 2);
}
if (0 == this.i_freegameTimes && this.inFreeGame) {
this.inFreeGame = !1;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("502/Audio/total_win_star", !1);
var a = this.nodeFreeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !1, "total_win_star");
this.nodeWinScore.active = !1;
var o = this.nodeFreeover.getChildByName("lbl_freeover");
o.setScale(6);
o.setPosition(0, 406);
o.getComponent(cc.Label).string = "0.00";
o.runAction(cc.sequence(cc.spawn(cc.scaleTo(5 / 30, 1), cc.moveTo(5 / 30, 0, 25)), cc.scaleTo(.4, 1.2), cc.scaleTo(.1, 1)));
a.setCompleteListener(function(t) {
var i = t.animation ? t.animation.name : "";
if ("total_win_star" === i) {
this.nodeFreeCoinSpine.active = !0;
window.mfConfig.PlayAudio("502/Audio/total_win_loop", !1);
PlaySkeletonAnimation(a, !0, "total_win_loop");
var n = this.nodeUserWin.getComponent(cc.Label).string, s = this.nodeFreeover.getComponent("AztecPlus_text_control"), r = this.calcTotalWinLoopTime();
s.setNum(n, r, 0, function(t) {
window.mfConfig.PlayAudio("502/Audio/total_win_end", !1);
PlaySkeletonAnimation(a, !1, "total_win_end");
e.nodeFreeCoinSpine.active = !1;
o.runAction(cc.sequence(cc.delayTime(1), cc.scaleTo(.2, 1.26), cc.scaleTo(7 / 30, 0)));
a.setCompleteListener(function(t) {
if ("total_win_end" === (i = t.animation ? t.animation.name : "")) {
e.nodeWinScore.active = !0;
e.nodeFreeover.active = !1;
e.nodeFreeTimeBg.active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("502/Audio/bg_muzic", !0);
e.btn_start.interactable = !0;
e.btn_start.node.active = !0;
e.btn_stop.interactable = !0;
e.btn_stop.node.active = !1;
e.frontBg.spriteFrame = e.frontBgSF[0];
e.downBg.spriteFrame = e.downBgSF[0];
var n = e.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !0, "huang");
var a = e.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !0, "huang");
e.canStart = !0;
if (e.b_auto) {
var o = {};
o.target = e.btn_start.node;
e.OnBtnStartClick(o);
}
}
});
});
}
}.bind(this));
} else if (n) this.canStart = !0; else {
if (!this.inFreeGame) {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.frontBg.spriteFrame = this.frontBgSF[0];
this.downBg.spriteFrame = this.downBgSF[0];
var s = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(s, !0, "huang");
var r = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(r, !0, "huang");
}
this.canStart = !0;
}
if (this.i_freegameTimes > 0) {
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else {
this.btn_sub.interactable = !0;
this.btn_add.interactable = !0;
this.btn_bet.interactable = !0;
this.LineBetNodeJs.setBtnEnabled(!0);
}
var c = .5, l = t.WinItems.length;
l > 0 && !this.banCyclePlay && (c = 1.5 * l);
(this.b_auto && 0 == this.i_freegameTimes || this.i_freegameTimes > 0 && !n) && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), c);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("jsJackPotNum").setNumNew(e, t);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
initIcons: function(e) {
for (var t = [], i = 0, n = 0; n < 6; n++) {
t[n] = [];
for (var o = 0; o < 7; o++) {
t[n].push(e[i] - 1);
i++;
}
}
for (var s = 0; s < 6; s++) this.roll_pans2[s].getComponent(a).setIcons(t[s], !0, s);
var r = this;
this.schedule(function() {
r.percent += 1;
if (r.percent <= 100) {
r.updateBar.progress = r.percent / 100;
r.updatePrecent.string = r.percent + "%";
} else if (r.percent >= 151) {
r.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnGM" == i ? this.nodeCustom.active = !this.nodeCustom.active : "btnClose" == i ? this.nodeCustom.active = !1 : "btnOK" == i ? this.check() : "index+1" == i ? this.check(!0) : "imJackpot" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore) : "Dis_BetNode" == i ? this.LineBetBigbg.active = !this.LineBetBigbg.active : "Dis_LineBetBigbg" == i ? this.LineBetBigbg.active = !1 : "clickNode" == i ? this.clickNode.active = !1 : "btnMenuMore" == i && this.OnMenuLayerShow();
},
check: function(e) {
this.customData.length = 0;
var t = this.CustomEditbox.string;
cc.sys.localStorage.setItem("AztecPlus_GMData", t);
for (var i = t.split(","), n = 0; n < 42; n++) {
var a = parseInt(i[n]);
a = e ? a + 1 : a;
this.customData.push(a);
}
if (42 != this.customData.length) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var o = 0; o < 42; o++) if (this.customData[o] < 0 || this.customData[o] > 16) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
cc.error(this.customData);
var s = {};
s.target = this.btn_start.node;
this.OnBtnStartClick(s);
},
OnFreeGameScene: function(e) {
cc.log("免费游戏场景恢复");
this.nodeFreeTimeBg.active = !0;
this.btn_add.interactable = !1;
this.btn_sub.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
this.i_freegameTimes = e.FreeCount;
this.inFreeGame = !0;
this.btn_start.node.active = !1;
this.btn_stop.node.active = !1;
this.frontBg.spriteFrame = this.frontBgSF[1];
this.downBg.spriteFrame = this.downBgSF[1];
var t = this.fire1.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "zhi");
var i = this.fire2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !0, "zhi");
this.OnFreeGameTimeUpdate();
var n = 0;
n = null != e.FreeTotalWin.high && null != e.FreeTotalWin.low ? 0 : e.FreeTotalWin;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(n, 2);
this.OnStakeUpdate();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("502/Audio/free_game_bg", !0);
this.i_freegameTimes > 0 && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), 2);
},
playLineAnim: function(e) {
this.winLines = e;
this.lineCount = e.length;
this.lineID = [];
for (var t = 0; t < this.lineCount; t++) this.lineID[t] = e[t].ItemID;
for (var i = this.getItemsColArr(), n = 0; n < 6; n++) for (var o = this.isMergeBrick(i[n]), s = 0; s < o.length; s++) {
this.roll_pans2[n].getComponent(a).setGray(!0, s);
this.roll_pans2[n].getComponent(a).stopAnim(s);
}
this.isPlayAgain = !1;
for (var r = this.jsGameEngine.objResultData, c = 0; c < this.lineCount; c++) {
var l = r.WinItems[c];
this.showLinePoint(i, l, !0);
}
this.nodeWinScore.setScale(0);
window.mfConfig.PlayAudio("502/Audio/win_low", !1);
this.showWinScore(r.BeforeWin, .4);
},
showWinScore: function(e, t, i) {
var n = this;
this.node_textwin.string = OnScoreToString(e, 2);
var a = this.nodeWinScore.getComponent("AztecPlus_text_control");
i ? a.setNum(e / 1e3, t, i / 1e3) : a.setNum(e / 1e3, t);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(t, 1.2), cc.delayTime(.6), cc.scaleTo(.15, 1), cc.delayTime(.1), cc.callFunc(function(e) {
if (n.isPlayAgain) {
n.isPlayAgain = !1;
for (var i = n.jsGameEngine.objResultData, a = n.getItemsColArr(), o = 0; o < n.lineCount; o++) {
var s = i.WinItems[o];
n.showLinePoint(a, s, !1);
}
n.scheduleOnce(function(e) {
window.mfConfig.PlayAudio("502/Audio/win_med", !1);
n.showWinScore(i.WinScore, t, i.BeforeWin);
}, .85);
} else n.playEffect();
})));
},
cyclePlayLine: function() {
var e = this.jsGameEngine.objResultData.WinItems[this.lineIndex];
if (e) {
for (var t = this.getItemsColArr(), i = 0; i < 6; i++) for (var n = this.isMergeBrick(t[i]), o = 0; o < n.length; o++) {
this.roll_pans2[i].getComponent(a).setGray(!0, o);
this.roll_pans2[i].getComponent(a).stopAnim(o);
}
this.showLinePoint(t, e, !0);
this.nodeWinScore.setScale(0);
this.node_textwin.string = OnScoreToString(e.WinScore, 2);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.3, .8), cc.scaleTo(.3, .6), cc.delayTime(.3), cc.callFunc(function(e) {
e.setScale(0);
})));
this.lineIndex++;
this.lineIndex >= this.lineCount && (this.lineIndex = 0);
} else this.unschedule(this.cyclePlayLine);
},
showLinePoint: function(e, t, i) {
var n = t.ItemID, o = !0;
i || window.mfConfig.PlayAudio("502/Audio/wild_change");
for (var s = 0; s < 6; s++) {
for (var r = this.isMergeBrick(e[s]), c = !1, l = 0; l < r.length; l++) if ((r[l] == n || r[l] >= 13) && o) {
c = !0;
i && r[l] > 13 && (this.isPlayAgain = !0);
this.roll_pans2[s].getComponent(a).setGray(!1, l);
this.roll_pans2[s].getComponent(a).playAnim(l, i);
}
o = c;
}
},
playEffect: function() {
var e = 0;
if (this.jsGameEngine.objResultData.WinScatter.WinScore > 0) {
e = 2;
for (var t = 0; t < 6; t++) for (var i = this.roll_pans2[t].getComponent(a), n = 0; n < 7; n++) 12 == i.i_icons[n] && i.playAnim(n);
}
this.scheduleOnce(function() {
this.FlyGold(!1);
}, e);
},
FlyGold: function(e) {
var t = this;
this.node_textwin.string = OnScoreToString(n.i_win, 2);
if (e) {
this.nodeWinScore.getComponent("AztecPlus_text_control").setNum(n.i_win / 1e3, 3);
this.nodeWinScore.setScale(0);
this.nodeWinScore.y = -200;
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 2, 2), cc.scaleTo(.2, 1.5, 1.5), cc.delayTime(4.5), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(e) {
t.FlyGoldDesc(e, !0);
})));
} else this.nodeWinScore.runAction(cc.sequence(cc.spawn(cc.moveTo(.1, 0, -500), cc.scaleTo(.1, 0, 0)), cc.callFunc(function(e) {
t.FlyGoldDesc(e, !1);
})));
},
FlyGoldDesc: function(e, t) {
var i = this;
i.node_textwin.string = "";
e.setPosition(0, -30);
if (i.i_freegameTimes >= 0 && i.inFreeGame) {
var a = 1e3 * i.nodeUserWin.getComponent(cc.Label).string + n.i_win;
i.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(a, 2);
} else {
var o = 1e3 * i.nodeUserWin.getComponent(cc.Label).string + n.i_win;
i.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(o, 2);
}
if (i.WinJackpotScore > 0) {
i.OnSubStake(n.i_win);
i.playJackpotAnim();
} else {
t || i.OnSubStake(n.i_win);
i._onRestBtn();
if (i.jsGameEngine.objResultData.WinItems.length > 0) if (!i.b_auto || i.b_auto && !i.fastModel) {
i.cyclePlayLine();
i.schedule(i.cyclePlayLine, 1.5);
i.banCyclePlay = !1;
} else i.banCyclePlay = !0;
}
},
playJackpotAnim: function() {
var e = this;
this.unschedule(this.cyclePlayLine);
this.jsGameEngine.OnFrameButtonJackPotDraw(e.nodeJackPotTurn, e.WinJackpotPercent / 100, parseInt(e.WinJackpotScore / e.WinJackpotPercent * 10), function() {
n.i_win = e.WinJackpotScore;
e.WinJackpotScore = 0;
e.WinJackpotPercent = 0;
e.FlyGold(!0);
});
}
});
cc._RF.pop();
}, {
AztecPlus_logic: "AztecPlus_logic"
} ],
AztecPlus_Item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf89ewDO/FCaYIG586+NhkI", "AztecPlus_Item");
cc.Class({
extends: cc.Component,
properties: {
frame: cc.Sprite,
icon: cc.Sprite,
nodeAnim: cc.Node,
wild: cc.Sprite
},
setData: function(e, t, i, n) {
this.iconId = n;
var a = 1;
if (t) {
if ("11" == t.name) this.setScatter(i); else if (t.name >= 12) {
this.icon.node.active = !1;
this.icon.spriteFrame = t;
this.setWild(t.name, i, n);
} else {
i >= 6 ? a = .6 : i >= 4 && (a = .8);
this.icon.node.scale = a;
this.icon.spriteFrame = t;
}
this.frame.spriteFrame = e;
}
},
setScatter: function(e) {
this.nodeAnim.opacity = 255;
var t = 1;
e >= 6 ? t = .6 : e >= 4 && (t = .8);
this.nodeAnim.scale = t;
var i = this.nodeAnim.getChildByName("skeletonNode");
i.scale = .85;
var n = i.getComponent(sp.Skeleton), a = new cc.Node("skeletonNode2"), o = a.addComponent(sp.Skeleton);
this.nodeAnim.addChild(a);
cc.loader.loadRes("502/AGameSpine/11", sp.SkeletonData, function(e, t) {
o.skeletonData = t;
o.animation = "drops";
o.loop = !1;
o.setCompleteListener(function() {
PlaySkeletonAnimation(a, !0, "loop");
});
});
cc.loader.loadRes("502/AGameSpine/skeleton", sp.SkeletonData, function(e, t) {
n.skeletonData = t;
n.animation = "star";
n.loop = !1;
n.setCompleteListener(function() {
PlaySkeletonAnimation(i, !0, "loop");
});
});
},
setWild: function(e, t, i) {
this.nodeAnim.opacity = 255;
var n = 1;
t >= 6 ? n = .6 : t >= 4 && (n = .8);
this.nodeAnim.scale = n;
var a = this.nodeAnim.getChildByName("skeletonNode").getComponent(sp.Skeleton);
cc.loader.loadRes("502/AGameSpine/12", sp.SkeletonData, function(e, t) {
a.skeletonData = t;
a.animation = "loop";
});
this.wild.node.active = !0;
this.wild.node.scale = 1.7;
var o = cc.sequence(cc.scaleTo(20 / 30, 1.9), cc.scaleTo(20 / 30, 1.7));
this.wild.node.runAction(cc.repeatForever(o));
}
});
cc._RF.pop();
}, {} ],
AztecPlus_jackpot_rank: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "89ac3LZFo1FTapHUKBIISp9", "AztecPlus_jackpot_rank");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
nodeRankPng: [ cc.SpriteFrame ],
nodeMe: cc.Node,
pfJackpotRankItem: cc.Prefab
},
onLoad: function() {
this.rankInfo = null;
this.requestJackpotRank();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" != i && "Splash" != i || this.node.destroy();
},
requestJackpotRank: function() {
var e = this, t = GetProject().szGameJackpotUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(a, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
e.rankInfo = n;
e.showJackpotRankInfo(n.data);
e.showMyRankings(n.myrankings);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotRankInfo: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfJackpotRankItem);
this.nodeContent.addChild(n);
var a = e[i], o = cc.find("imRank", n), s = cc.find("lblRank", n);
if (i < 3) {
o.active = !0;
s.active = !1;
o.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[i];
} else {
o.active = !1;
s.active = !0;
s.getComponent(cc.Label).string = i + 1;
}
cc.find("lblNickName", n).getComponent(cc.Label).string = a.NickName;
cc.find("lblReward", n).getComponent(cc.Label).string = (a.WinJackpot / 1e3).toFixed(3);
}
},
showMyRankings: function(e) {
var t = cc.find("imRank", this.nodeMe), i = cc.find("lblRank", this.nodeMe), n = cc.find("imNoOnList", this.nodeMe), a = this.isInTop10();
if (-1 != a) if (a < 3) {
t.active = !0;
i.active = !1;
t.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[a];
} else {
t.active = !1;
i.active = !0;
i.getComponent(cc.Label).string = a + 1;
} else {
t.active = !1;
i.active = !1;
n.active = !0;
}
var o = PlayerManager.GetMeUserItem();
cc.find("lblNickName", this.nodeMe).getComponent(cc.Label).string = o.GetNickNameUtf8();
cc.find("lblReward", this.nodeMe).getComponent(cc.Label).string = (e.WinJackpot / 1e3).toFixed(3);
},
isInTop10: function() {
for (var e = this.rankInfo.data, t = this.rankInfo.myrankings, i = e.length, n = 0; n < i; n++) {
if (e[n].GameID == t.GameID) return n;
}
return -1;
}
});
cc._RF.pop();
}, {} ],
AztecPlus_logic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b6bemo+xZE0aXJJBVxqPKR", "AztecPlus_logic");
t.exports = {
tab_data: null,
i_win: 0,
setData: function(e, t) {
this.tab_data = e;
this.i_win = t;
},
getValues: function(e) {
return this.tab_data[e];
}
};
cc._RF.pop();
}, {} ],
AztecPlus_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d0b11Ksk5D/ZionkW0vpZh", "AztecPlus_pan2_control");
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
icons: cc.SpriteAtlas,
iconsFrame: cc.SpriteAtlas,
b_stop: {
default: !1
},
b_stoped: {
default: !1
},
i_icons: {
default: []
},
i_rollHeight: 0,
AztecPlusItem: cc.Prefab,
pGameView: cc.Node
},
onLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecPlus_GameView");
},
OnCreateBrick: function() {
return cc.instantiate(this.AztecPlusItem);
},
playAnimDetail: function(e, t, i, n) {
if (null != e && null != e.getChildByName("i" + t)) {
var a, o, s = void 0, r = void 0, c = void 0, l = this, h = e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon");
h.opacity = 0;
s = e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani");
c = e.getChildByName("i" + t).getChildByName("frame").getChildByName("wild");
e.getChildByName("i" + t).getChildByName("frame").getChildByName("wildSwitchAni");
var u = e.getChildByName("i" + t).getComponent("AztecPlus_Item");
a = u.icon.spriteFrame;
r = u.frame.spriteFrame;
if (i) {
h.opacity = 255;
var d = s.getChildByName("skeletonNode").getComponent(sp.Skeleton);
d.skeletonData = null;
d.animation = null;
} else if (null != s) {
s.opacity = 255;
var m = r.name.charAt(r.name.length - 1);
9 != (o = u.iconId) && 10 != o || (m = 2);
var f = 1;
m >= 6 ? f = .6 : m >= 4 && (f = .8);
s.scale = f;
var p = s.getChildByName("skeletonNode").getComponent(sp.Skeleton), _ = "502/AGameSpine/" + a.name;
cc.loader.loadRes(_, sp.SkeletonData, function(e, t) {
p.skeletonData = t;
p.animation = "animation";
});
if (o > 12 && !n) {
s.runAction(cc.sequence(cc.scaleTo(.3, 0), cc.scaleTo(.3, f)));
c.runAction(cc.sequence(cc.scaleTo(.3, 0), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = l.icons.getSpriteFrame("x" + (o - 12));
}), cc.scaleTo(.3, 1.5)));
}
}
} else cc.log("this.sp_top.position.y =", this.sp_top.position.y);
},
playAnim: function(e, t) {
this.playAnimDetail(this.isTopNode() ? this.sp_top : this.sp_mid, e, !1, t);
},
stopAnim: function(e) {
this.playAnimDetail(this.isTopNode() ? this.sp_top : this.sp_mid, e, !0);
},
setIcons: function(e, t) {
this.i_icons = e;
if (t) {
this.randomIcons(this.sp_top, t);
this.randomIcons(this.sp_mid, t);
} else this.isTopNode() ? this.setIcons2node(this.sp_top, this.i_icons) : this.setIcons2node(this.sp_mid, this.i_icons);
},
randomIcons: function(e, t) {
var i = [];
i.push(Math.floor(15 * Math.random()));
i.push(Math.floor(15 * Math.random()));
i.push(Math.floor(16 * Math.random()) - 1);
i.push(Math.floor(16 * Math.random()) - 1);
i.push(-1);
i.push(-1);
i.push(-1);
var n = this.isMergeBrick(i);
this._randomList = n;
this.setAztecPlusItem(e, n, !t);
},
setIcons2node: function(e, t) {
var i = this.isMergeBrick(t);
this.setAztecPlusItem(e, i);
},
setAztecPlusItem: function(e, t, i) {
this.brickList = t;
e.removeAllChildren();
for (var n = 0; n < t.length; n++) {
var a = this.OnCreateBrick();
this.setAztecPlusItemDesc(n, a, t, i);
e.addChild(a, 1, "i" + n);
this.setBrickY(a, n, t.length);
}
},
setAztecPlusItemDesc: function(e, t, i, n) {
var a = t.getComponent("AztecPlus_Item"), o = this.getBrickBg(i.length, i[e], n), s = this.getBrickIcons(i.length, i[e], n), r = i.length;
9 != i[e] && 10 != i[e] || (r = 2);
a.setData(o, s, r, i[e]);
},
setBrickY: function(e, t, i) {
var n = 0;
switch (i) {
case 2:
n = 204 - 418 * t;
break;

case 3:
n = 273.5 - 279 * t;
break;

case 4:
n = 309.5 - 207 * t;
break;

case 5:
n = 330.5 - 165 * t;
break;

case 6:
n = 344 - 138 * t;
break;

case 7:
n = 354 - 118 * t;
}
e.y = n;
},
isTopNode: function() {
return 0 == this.sp_top.position.y;
},
getBrickBg: function(e, t, i) {
var n = "normal_" + e;
(9 == t || 10 == t || t >= 12) && (n = "super_" + e);
return this.iconsFrame.getSpriteFrame(i ? "v" + n : n);
},
getBrickIcons: function(e, t, i) {
var n = t;
9 == t || 10 == t ? n = t + "_" + e : t > 12 && (n = 12);
return this.icons.getSpriteFrame(i ? "v" + n : n);
},
isMergeBrick: function(e) {
for (var t = [], i = 0; i < e.length; i++) -1 != e[i] && t.push(e[i]);
return t;
},
setGrayDetail: function(e, t, i) {
if (null != e && null != e.getChildByName("i" + t)) {
e.getChildByName("i" + t).getChildByName("frame").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2") && (e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255));
e.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
e.getChildByName("i" + t).getChildByName("frame").getChildByName("wild").color = i ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
} else cc.log("this.sp_top.position.y =", this.sp_top.position.y);
},
setGray: function(e, t, i) {
i ? this.setGrayDetail(i, t, e) : this.setGrayDetail(this.isTopNode() ? this.sp_top : this.sp_mid, t, e);
},
rollScatter: function(e) {
if (this.i_icons.includes(11)) {
this.pGameViewJs.i_ScatterCount++;
window.mfConfig.PlayAudio("502/Audio/scatter" + this.pGameViewJs.i_ScatterCount, !1, window.mfConfig.fSound);
}
if (this.bShowScatterAni) for (var t = this.isMergeBrick(this.i_icons), i = 0; i < t.length; i++) 11 != t[i] && this.setGray(!0, i, e);
window.mfConfig.PlayAudio("502/Audio/reel_stop_01", !1, window.mfConfig.fSound);
},
roll: function() {
var e = this;
this.b_stop = !1;
this.b_stoped = !1;
if (this.isTopNode()) {
var t = this.sp_top;
this.sp_top = this.sp_mid;
this.sp_mid = t;
}
this.n_act1 = 1;
this.randomIcons(this.sp_top);
var i = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act1++;
if (e.n_act1 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) {
var i = t.children[t.children.length - 1], n = e._randomList.length - 1;
e.setAztecPlusItemDesc(n, i, e._randomList, !1);
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, e.i_rollHeight);
e.sp_mid.setPosition(0, 0);
}));
t.runAction(a);
} else {
e.setIcons2node(t, e.i_icons);
var o = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.rollScatter(t);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_mid.setPosition(0, e.i_rollHeight);
}));
t.runAction(o);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.n_act2 = 0;
var n = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act2++;
if (e.n_act2 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) {
var i = t.children[t.children.length - 1].getComponent("AztecPlus_Item"), n = e._randomList.length - 1;
e.setAztecPlusItemDesc(n, i, e._randomList, !1);
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, e.i_rollHeight);
e.sp_top.setPosition(0, 0);
}));
t.runAction(a);
} else {
e.setIcons2node(t, e.i_icons);
var o = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.rollScatter(t);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_top.setPosition(0, e.i_rollHeight);
}));
t.runAction(o);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.sp_top.runAction(cc.repeatForever(i));
this.sp_mid.runAction(cc.repeatForever(n));
},
quickstop: function(e) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.setIcons(e);
},
stopRoll: function(e, t) {
this.i_icons = e;
this.bShowScatterAni = t;
this.b_stop = !0;
}
});
cc._RF.pop();
}, {} ],
AztecPlus_pan3_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c7415Y47otLSrmsWitAKIm6", "AztecPlus_pan3_control");
cc.Class({
extends: cc.Component,
properties: {
rollNode: cc.Node,
icons: cc.SpriteAtlas,
iconsFrame: cc.SpriteAtlas,
i_icons: {
default: []
},
AztecPlusItem: cc.Prefab,
rollItem: cc.Node,
pGameView: cc.Node
},
onLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("AztecPlus_GameView");
this.screensNum = 5;
this.intervalNum = 2;
},
OnCreateBrick: function() {
return cc.instantiate(this.AztecPlusItem);
},
playAnimDetail: function(e, t, i) {
if (0 != this.rollNode.children.length) {
var n, a, o = this.rollNode.children[0], s = void 0, r = void 0, c = void 0, l = this, h = o.getChildByName("i" + e).getChildByName("frame").getChildByName("icon");
h.opacity = 0;
s = o.getChildByName("i" + e).getChildByName("frame").getChildByName("ani");
c = o.getChildByName("i" + e).getChildByName("frame").getChildByName("wild");
o.getChildByName("i" + e).getChildByName("frame").getChildByName("wildSwitchAni");
var u = o.getChildByName("i" + e).getComponent("AztecPlus_Item");
n = u.icon.spriteFrame;
a = u.iconId;
r = u.frame.spriteFrame;
if (t) {
if (a >= 12) return;
h.opacity = 255;
var d = s.getChildByName("skeletonNode").getComponent(sp.Skeleton);
d.skeletonData = null;
d.animation = null;
} else if (null != s) {
s.opacity = 255;
var m = r.name.charAt(r.name.length - 1);
9 != a && 10 != a || (m = 2);
var f = 1;
m >= 6 ? f = .6 : m >= 4 && (f = .8);
s.scale = f;
var p = s.getChildByName("skeletonNode").getComponent(sp.Skeleton), _ = "502/AGameSpine/" + n.name;
cc.loader.loadRes(_, sp.SkeletonData, function(e, t) {
p.skeletonData = t;
p.animation = "animation";
});
if (a > 12 && !i) {
s.runAction(cc.sequence(cc.scaleTo(.3, 0), cc.scaleTo(.3, f)));
c.runAction(cc.sequence(cc.scaleTo(.3, 0), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = l.icons.getSpriteFrame("x" + (a - 12));
}), cc.scaleTo(.3, 1.5)));
}
}
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
playAnim: function(e, t) {
this.playAnimDetail(e, !1, t);
},
stopAnim: function(e) {
this.playAnimDetail(e, !0);
},
clacRollHeight: function(e) {
this.screensNum += e * this.intervalNum;
var t = this.rollNode.getComponent(cc.Layout);
this.i_rollHeight = (this.screensNum - 1) * this.rollItem.height + (t.spacingY * this.screensNum + 118);
},
setIcons: function(e, t, i) {
this.i_icons = e;
if (t) {
this.clacRollHeight(i);
this.randomIcons();
this.rollNode.setPosition(0, -this.i_rollHeight);
} else this.setIcons2node(this.i_icons);
},
addRollItem: function(e, t) {
var i = cc.instantiate(this.rollItem);
i.active = !0;
i.setPosition(0, 0);
this.setAztecPlusItem(i, e, t);
this.rollNode.addChild(i);
},
randomIcons: function() {
this.rollNode.removeAllChildren();
var e = this.beginAndEndAdd(this.i_icons);
this.addRollItem(e);
for (var t = 0; t < this.screensNum - 1; t++) {
var i = [];
i.push(Math.floor(15 * Math.random()));
i.push(Math.floor(15 * Math.random()));
i.push(Math.floor(16 * Math.random()) - 1);
i.push(Math.floor(16 * Math.random()) - 1);
i.push(-1);
i.push(-1);
i.push(-1);
var n = this.isMergeBrick(i);
this.addRollItem(n, !0);
}
},
beginAndEndAdd: function(e) {
var t = this.isMergeBrick(e);
t.splice(0, 0, Math.floor(15 * Math.random()));
t.push(Math.floor(15 * Math.random()));
return t;
},
setIcons2node: function(e) {
var t = this.beginAndEndAdd(e);
this.setAztecPlusItem(this.rollNode.children[0], t);
},
setAztecPlusItem: function(e, t, i) {
this.brickList = t;
e.removeAllChildren();
var n = i ? t.length : t.length - 2;
if (i) for (var a = 0, o = 0; o < t.length; o++) {
var s = this.OnCreateBrick();
this.setAztecPlusItemDesc(o, s, t, i);
e.addChild(s, 1, "i" + a++);
s.y = this.getBrickY(o, n, !0);
} else {
var r = this.OnCreateBrick();
this.setAztecPlusItemDesc(0, r, t, i);
e.addChild(r, 1, "top");
r.y = 1004;
for (var c = 0, l = 1; l < t.length - 1; l++) {
var h = this.OnCreateBrick();
this.setAztecPlusItemDesc(l, h, t, i);
e.addChild(h, 1, "i" + c++);
h.y = this.getBrickY(l, n, !1);
}
r = this.OnCreateBrick();
this.setAztecPlusItemDesc(t.length - 1, r, t, i);
e.addChild(r, 100, "bottom");
r.y = 56;
}
e.height = i ? 829 : 1065;
},
setAztecPlusItemDesc: function(e, t, i, n) {
var a = n ? i.length : i.length - 2;
n || 0 != e && e != i.length - 1 || (a = 7);
var o = t.getComponent("AztecPlus_Item"), s = this.getBrickBg(a, i[e], n), r = this.getBrickIcons(a, i[e], n);
9 != i[e] && 10 != i[e] || (a = 2);
o.setData(s, r, a, i[e]);
},
getBrickY: function(e, t, i) {
var n = 0;
e = i ? e : e - 1;
switch (t) {
case 2:
n = 618.5 - 416 * e;
break;

case 3:
n = 688 - 277 * e;
break;

case 4:
n = 723 - 207 * e;
break;

case 5:
n = 743.5 - 166 * e;
break;

case 6:
n = 757.5 - 138 * e;
break;

case 7:
n = 768 - 117 * e;
}
return i ? n : n + 119;
},
getBrickBg: function(e, t, i) {
var n = "normal_" + e;
(9 == t || 10 == t || t >= 12) && (n = "super_" + e);
return this.iconsFrame.getSpriteFrame(i ? "v" + n : n);
},
getBrickIcons: function(e, t, i) {
var n = t;
9 == t || 10 == t ? n = t + "_" + e : t > 12 && (n = 12);
return this.icons.getSpriteFrame(i ? "v" + n : n);
},
isMergeBrick: function(e) {
for (var t = [], i = 0; i < e.length; i++) -1 != e[i] && t.push(e[i]);
return t;
},
setAllGray: function(e) {
if (0 != this.rollNode.children.length) for (var t = this.rollNode.children[0], i = 0; i < t.children.length; i++) {
t.children[i].getChildByName("frame").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
t.children[i].getChildByName("frame").getChildByName("icon").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
t.children[i].getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
t.children[i].getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2") && (t.children[i].getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255));
t.children[i].getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
t.children[i].getChildByName("frame").getChildByName("wild").color = e ? new cc.Color(100, 100, 100) : new cc.Color(255, 255, 255);
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
setGray: function(e, t, i) {
if (0 != this.rollNode.children.length) {
i || (i = new cc.Color(100, 100, 100));
var n = this.rollNode.children[0];
n.getChildByName("i" + t).getChildByName("frame").color = e ? i : new cc.Color(255, 255, 255);
n.getChildByName("i" + t).getChildByName("frame").getChildByName("icon").color = e ? i : new cc.Color(255, 255, 255);
n.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = e ? i : new cc.Color(255, 255, 255);
n.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2") && (n.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode2").color = e ? i : new cc.Color(255, 255, 255));
n.getChildByName("i" + t).getChildByName("frame").getChildByName("ani").getChildByName("skeletonNode").color = e ? i : new cc.Color(255, 255, 255);
n.getChildByName("i" + t).getChildByName("frame").getChildByName("wild").color = e ? i : new cc.Color(255, 255, 255);
} else cc.error("this.rollNode.children.length =", this.rollNode.children.length);
},
setGrayScatter: function() {
if (this.bShowScatterAni) for (var e = this.isMergeBrick(this.i_icons), t = 0; t < e.length; t++) 11 != e[t] && this.setGray(!0, t, new cc.Color(180, 180, 180));
},
setAudioScatter: function() {
if (this.i_icons.includes(11)) {
this.pGameViewJs.i_ScatterCount++;
window.mfConfig.PlayAudio("502/Audio/scatter" + this.pGameViewJs.i_ScatterCount, !1, window.mfConfig.fSound);
}
},
roll: function(e, t, i) {
var n = this;
this.i_icons = e;
this.bShowScatterAni = i;
this.fastModel = t;
var a = this.getSpeed(this.fastModel, this.screensNum);
this.rollNode.y = 0;
this.randomIcons();
this.rollNode.stopAllActions();
var o = cc.sequence(cc.callFunc(function(e) {
n.setGrayScatter();
}), cc.moveBy(a, cc.v2(0, -n.i_rollHeight)), cc.callFunc(function(e) {
n.setAudioScatter();
window.mfConfig.PlayAudio("502/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(e) {
e.setPosition(0, -n.i_rollHeight);
}));
this.rollNode.runAction(o);
},
cycleRoll: function(e, t, i) {
this.i_icons = e;
this.bShowScatterAni = i;
this.fastModel = t;
var n = this.getSpeed(this.fastModel, this.screensNum);
this.rollNode.y = 0;
this.randomIcons();
var a = cc.sequence(cc.moveBy(n, cc.v2(0, -this.i_rollHeight + this.rollItem.height)), cc.callFunc(function(e) {
e.y = 0;
}));
this.rollNode.runAction(cc.repeatForever(a));
},
getSpeed: function(e, t) {
var i = .15 * t;
e && (i = .07 * t);
return i;
},
quickstop: function(e) {
this.setIcons(e);
this.rollNode.stopAllActions();
this.rollNode.setPosition(0, -this.i_rollHeight);
},
stopCycleRoll: function() {
var e = this;
this.rollNode.stopAllActions();
var t = this.getSpeed(this.fastModel, 1);
this.rollNode.setPosition(0, -this.i_rollHeight + e.rollItem.height);
var i = cc.sequence(cc.callFunc(function(t) {
e.setGrayScatter();
}), cc.moveTo(t, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.setAudioScatter();
window.mfConfig.PlayAudio("502/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, -e.i_rollHeight);
}));
this.rollNode.runAction(i);
}
});
cc._RF.pop();
}, {} ],
AztecPlus_rollNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "54630drQEdHuKtGcLp8axK8", "AztecPlus_rollNum");
cc.Class({
extends: cc.Component,
properties: {
nodeNum0: cc.Node,
nodeNum1: cc.Node
},
onLoad: function() {
this.startNum = 0;
},
setData: function(e) {
this.node.active = !0;
this.nodeNum0.getComponent(cc.Label).string = e;
this.nodeNum1.getComponent(cc.Label).string = e;
},
startRoll: function(e, t, i) {
var n = this;
this.nodeNum0.getComponent(cc.Label).string, this.nodeNum1.getComponent(cc.Label).string;
if (i != this.nodeNum0.getComponent(cc.Label).string && i != this.nodeNum1.getComponent(cc.Label).string) {
this.index = e;
this.startNum = t;
this.endNum = i;
this.stop = !1;
this.b_stoped = !1;
this.nodeNum0.getComponent(cc.Label).string = this.startNum++;
this.nodeNum1.getComponent(cc.Label).string = this.startNum++;
this.n_act1 = 1;
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act1++;
if (n.n_act1 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.n_act2 = 0;
var o = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act2++;
if (n.n_act2 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.nodeNum0.runAction(cc.repeatForever(a));
this.nodeNum1.runAction(cc.repeatForever(o));
}
}
});
cc._RF.pop();
}, {} ],
AztecPlus_rule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f5f0116ej1Mrq/p1x0VnTCx", "AztecPlus_rule");
cc.Class({
extends: cc.Component,
properties: {
imgSelect: cc.Node,
btnRule: [ cc.Node ],
nodeRule: [ cc.Node ]
},
onLoad: function() {
this.colorSelect = cc.color(85, 50, 4);
this.colorUnselect = cc.color(255, 218, 47);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
if (0 == i.indexOf("btnRule")) {
var n = parseInt(t);
this.updatePage(n);
} else "btnClose" == i && this.node.destroy();
},
updatePage: function(e) {
cc.log(e);
this.imgSelect.setPosition(this.btnRule[e].getPosition());
for (var t = 0; t < 5; t++) {
cc.find("Label", this.btnRule[t]).color = this.colorUnselect;
this.nodeRule[t].active = !1;
}
cc.find("Label", this.btnRule[e]).color = this.colorSelect;
this.nodeRule[e].active = !0;
}
});
cc._RF.pop();
}, {} ],
AztecPlus_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f24e9O9rqZA3LbCqbOtiutT", "AztecPlus_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e, t, i, n) {
this.callBack = n;
this.i_num = parseFloat(e);
this.i_cur_num = i || 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
} else if (this.callBack) {
this.callBack();
this.callBack = null;
}
}
});
cc._RF.pop();
}, {} ],
BDefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "25ea6ExwmROyYlYeg+UbTEn", "BDefine");
window.DEVICE_TYPE_PC = 0;
window.DEVICE_TYPE_ANDROID = 16;
window.DEVICE_TYPE_IOS = 32;
window.DEVICE_TYPE_WEB = 64;
window.DEVICE_TYPE_TUI = 128;
window.CONTENT_TYPE_SYS = 0;
window.CONTENT_TYPE_STRING = 1;
window.CONTENT_TYPE_CUSTOM = 2;
window.CONTENT_TYPE_EXPR = 3;
window.CONTENT_TYPE_CHAT = 4;
window.CONTENT_TYPE_BUGLE = 5;
window.CONTENT_TYPE_COMMON = 1;
window.CONTENT_TYPE_REALTIME = 2;
window.FACE_MAX_FACE_COUNT = 6;
window.FACE_LARGE_WIDE = 118;
window.FACE_CX = 73;
window.FACE_CY = 73;
window.MEMBER_CX = 20;
window.MEMBER_CY = 20;
window.LEN_LESS_ACCOUNTS = 6;
window.LEN_LESS_NICKNAME = 6;
window.LEN_LESS_PASSWORD = 6;
window.MAX_CHAIR = 500;
window.MAX_TABLE = 512;
window.MAX_COLUMN = 32;
window.MAX_ANDROID = 512;
window.MAX_PROPERTY = 128;
window.MAX_WHISPER_USER = 16;
window.MAX_TASK_COUNT = 4;
window.MAX_USER_TASK = 2;
window.MAX_LOGIN_AWARD_ITEM = 30;
window.MAX_SIGN_AWARD_ITEM = 38;
window.MAX_GAME_CUSTOM_DATA = 128;
window.MAX_LOTTERY_AWARD_ITEM = 31;
window.MAX_MONEYTREE_COUNT = 5;
window.MAX_SIGN_AWARD_ITEM_NEW = 7;
window.MAX_SIGN_BOXAWARD_ITEM = 7;
window.MAX_SIGN_BOXAWARD_NUM = 6;
window.MAX_SIGN_BOXAWARD_SIGNDAYS = 7;
window.MAX_RECORD_COUNT = 100;
window.MAX_RANK_REWARD = 3;
window.RANK_TYPE_NULL = 0;
window.RANK_TYPE_SCORE = 1;
window.RANK_TYPE_ONLINE = 2;
window.RANK_TYPE_MATCH = 3;
window.RANK_TYPE_WIN_COUNT = 4;
window.RANK_TYPE_LEVEL = 5;
window.RANK_TYPE_WINSTOTAL = 6;
window.RANK_TYPE_YBCONSUME = 7;
window.MAX_KIND = 128;
window.MAX_SERVER = 1024;
window.MAX_FIELD = 1024;
window.INVALID_CHAIR = 65535;
window.INVALID_TABLE = 65535;
window.INVALID_BYTE = 255;
window.INVALID_WORD = 65535;
window.INVALID_DWORD = 4294967295;
window.REVENUE_BENCHMARK = 0;
window.REVENUE_DENOMINATOR = 1e3;
window.GAME_STATUS_FREE = 0;
window.GAME_STATUS_PLAY = 100;
window.GAME_STATUS_WAIT = 200;
window.LEN_USER_CHAT = 128;
window.TIME_USER_CHAT = 1;
window.TRUMPET_MAX_CHAR = 128;
window.LEN_MAX_SYS_MSG = 256;
window.PRIME_TYPE = 11;
window.PRIME_KIND = 53;
window.PRIME_NODE = 101;
window.PRIME_PAGE = 53;
window.PRIME_SERVER = 1009;
window.PRIME_SERVER_USER = 503;
window.PRIME_ANDROID_USER = 503;
window.PRIME_PLATFORM_USER = 100003;
window.LEN_MD5 = 33;
window.LEN_USERNOTE = 32;
window.LEN_ACCOUNTS = 33;
window.LEN_NICKNAME = 33;
window.LEN_PASSWORD = 33;
window.LEN_GROUP_NAME = 32;
window.LEN_UNDER_WRITE = 32;
window.LEN_GUID = 50;
window.LEN_LASTLOGONTIME = 50;
window.LEN_PRIVATE_TABLE_NAME = 32;
window.LEN_YDTOKEN = 512;
window.LEN_QQ = 16;
window.LEN_EMAIL = 33;
window.LEN_USER_NOTE = 256;
window.LEN_SEAT_PHONE = 33;
window.LEN_MOBILE_PHONE = 13;
window.LEN_PASS_PORT_ID = 19;
window.LEN_COMPELLATION = 16;
window.LEN_DWELLING_PLACE = 128;
window.LEN_OPENID = 33;
window.LEN_REAL_NAME = 16;
window.LEN_MB_DOWNLOAD_URL = 256;
window.LEN_WECHAT_FACE_URL = 384;
window.LEN_ACCURACY = 15;
window.LEN_LATITUDE = 15;
window.LEN_COORDINATE = 15;
window.LEN_WECHAT_LEN = 32;
window.LEN_AGENT_PATH_LEN = 50;
window.LEN_ADDR = 50;
window.LEN_CHAT_MESSAGE = 256;
window.LEN_VERIFY_LIST = 20;
window.LEN_GROUP_NAME = 32;
window.LEN_GROUP_ENJOY = 60;
window.LEN_GROUP_FACEURL = 10;
window.LEN_MESSAGE_LIST = 20;
window.LEN_ALIPAY = 33;
window.LEN_BANK_CARD = 25;
window.LEN_CITY = 33;
window.LEN_MAIL_TITLE = 64;
window.LEN_MAIL_BODY = 512;
window.LEN_NETWORK_ID = 13;
window.LEN_MACHINE_ID = 33;
window.LEN_TYPE = 32;
window.LEN_KIND = 32;
window.LEN_NODE = 32;
window.LEN_PAGE = 32;
window.LEN_SERVER = 32;
window.LEN_PROCESS = 32;
window.LEN_DESCRIBE = 33;
window.MAX_DESCRIBE = 3;
window.LEN_PROPS_NAME = 32;
window.LEN_PROPS_DESC = 128;
window.UPDATE_GAME = 1;
window.UPDATE_PLAZA = 2;
window.UPDATE_PACKAGE = 3;
window.CP_NORMAL = 0;
window.CP_FRIEND = 1;
window.CP_DETEST = 2;
window.CP_SHIELD = 3;
window.GENDER_FEMALE = 0;
window.GENDER_MANKIND = 1;
window.DEFAULT_FEMALE_FACE = 0;
window.DEFAULT_MANKIND = 3;
window.DONT_UPDATE_FACE = 100;
window.AudioDialect = 0;
window.AudioMandarin = 1;
window.GAME_GENRE_GOLD = 1;
window.GAME_GENRE_SCORE = 2;
window.GAME_GENRE_MATCH = 4;
window.GAME_GENRE_EDUCATE = 8;
window.GAME_GENRE_TIMING = 16;
window.GAME_GENRE_YQMATCH = 32;
window.GAME_GENER_FREEMATCH = 65;
window.GAME_GENRE_ANY_MATCH = GAME_GENRE_MATCH | GAME_GENRE_TIMING | GAME_GENRE_YQMATCH;
window.SCORE_GENRE_NORMAL = 256;
window.SCORE_GENRE_POSITIVE = 512;
window.US_NULL = 0;
window.US_FREE = 1;
window.US_SIT = 2;
window.US_READY = 3;
window.US_LOOKON = 4;
window.US_PLAYING = 5;
window.US_OFFLINE = 6;
window.MS_NULL = 0;
window.MS_RECORD = 1;
window.MS_SIGNUP = 2;
window.MS_HAVE_SIGNED = 3;
window.MS_MATCHING = 4;
window.MS_OUT = 5;
window.MS_RESULT = 6;
window.GC_NONE = 0;
window.GC_WAIT = 1;
window.GC_GAME = 2;
window.GC_FORCE = 3;
window.GC_CONNECT = 4;
window.GC_ROOM = 5;
window.SRL_LOOKON = 1;
window.SRL_OFFLINE = 2;
window.SRL_SAME_IP = 4;
window.SRL_ROOM_CHAT = 256;
window.SRL_GAME_CHAT = 512;
window.SRL_WISPER_CHAT = 1024;
window.SRL_HIDE_USER_INFO = 2048;
window.TC_NULL = 0;
window.TC_CELLSCORE = 1;
window.TC_MINENTERSCORE = 2;
window.TC_MAXCHIP = 3;
window.TC_MAXTYPE = 4;
window.UD_NULL = 0;
window.UD_IMAGE = 100;
window.UD_CUSTOM = 200;
window.UD_GAME_ID = 1;
window.UD_USER_ID = 2;
window.UD_NICKNAME = 3;
window.UD_GENDER = 10;
window.UD_GROUP_NAME = 11;
window.UD_UNDER_WRITE = 12;
window.UD_TABLE = 20;
window.UD_CHAIR = 21;
window.UD_SCORE = 30;
window.UD_GRADE = 31;
window.UD_USER_MEDAL = 32;
window.UD_EXPERIENCE = 33;
window.UD_LOVELINESS = 34;
window.UD_WIN_COUNT = 35;
window.UD_LOST_COUNT = 36;
window.UD_DRAW_COUNT = 37;
window.UD_FLEE_COUNT = 38;
window.UD_PLAY_COUNT = 39;
window.UD_WIN_RATE = 40;
window.UD_LOST_RATE = 41;
window.UD_DRAW_RATE = 42;
window.UD_FLEE_RATE = 43;
window.UD_GAME_LEVEL = 44;
window.UD_NOTE_INFO = 50;
window.UD_LOOKON_USER = 51;
window.UD_IMAGE_FLAG = UD_IMAGE + 1;
window.UD_IMAGE_GENDER = UD_IMAGE + 2;
window.UD_IMAGE_STATUS = UD_IMAGE + 3;
window.DB_ERROR = -1;
window.DB_SUCCESS = 0;
window.DB_USER_REGISTERMOBILE_ERROR = 1;
window.DB_EXISTS_REGISTER_MOBILE_ERROR = 3;
window.DB_VERIFYCODE_ERROR = 12;
window.DB_NEEDMB = 18;
window.PT_USE_MARK_DOUBLE_SCORE = 1;
window.PT_USE_MARK_FOURE_SCORE = 2;
window.PT_USE_MARK_GUARDKICK_CARD = 16;
window.PT_USE_MARK_POSSESS = 32;
window.MAX_PT_MARK = 4;
window.MAX_USER_PROPERTY = 16;
window.VALID_TIME_DOUBLE_SCORE = 3600;
window.VALID_TIME_FOUR_SCORE = 3600;
window.VALID_TIME_GUARDKICK_CARD = 3600;
window.VALID_TIME_POSSESS = 3600;
window.VALID_TIME_KICK_BY_MANAGER = 3600;
window.TASK_TYPE_NULL = 0;
window.TASK_TYPE_DAILY = 1;
window.TASK_TYPE_GROW = 2;
window.TASK_COND_NLL = 0;
window.TASK_COND_PLAY = 1;
window.TASK_COND_WIN = 2;
window.TASK_MAX_NUM = 100;
window.AWARD_TYPE_NULL = 0;
window.AWARD_TYPE_GOLD = 1;
window.AWARD_TYPE_EXPR = 2;
window.ARARD_TYPE_MEDAL = 3;
window.AWARD_TYPE_PROP = 4;
window.AWARD_TYPE_PLATFORMCOIN = 5;
window.AWARD_SUB_TYPE_NULL = 0;
window.AWARD_SUB_TYPE_VOUCHERS = 1;
window.AWARD_WAY_NULL = 0;
window.AWARD_WAY_MATCH = 1;
window.AWARD_WAY_TASK = 2;
window.VIEW_MODE_ALL = 1;
window.VIEW_MODE_PART = 2;
window.VIEW_INFO_LEVEL_1 = 16;
window.VIEW_INFO_LEVEL_2 = 32;
window.VIEW_INFO_LEVEL_3 = 64;
window.VIEW_INFO_LEVEL_4 = 128;
window.RECVICE_GAME_CHAT = 256;
window.RECVICE_ROOM_CHAT = 512;
window.RECVICE_ROOM_WHISPER = 1024;
window.TC_NULL = 0;
window.TC_CELLSCORE = 1;
window.TC_MINENTERSCORE = 2;
window.TC_MAXCHIP = 3;
window.TC_MAXTYPE = 4;
window.BEHAVIOR_LOGON_NORMAL = 0;
window.BEHAVIOR_LOGON_IMMEDIATELY = 4096;
window.GR_LOGON_NONE = 0;
window.GR_LOGON_TABLE_FALSE = 1;
window.GR_LOGON_TABLE_TRUE = 2;
window.RESULT_ERROR = -1;
window.RESULT_SUCCESS = 0;
window.RESULT_FAIL = 1;
window.SCORE_REASON_WRITE = 0;
window.SCORE_REASON_INSURE = 1;
window.SCORE_REASON_PROPERTY = 2;
window.SCORE_REASON_MATCH_FEE = 3;
window.SCORE_REASON_MATCH_QUIT = 4;
window.SCORE_REASON_UPDATE = 5;
window.SCORE_REASON_MODIFY = 6;
window.SCORE_REASON_MEMORY_ONLY = 7;
window.LOGON_FAIL_SERVER_INVALIDATION = 200;
window.GAME_TYPE_NORMAL = 0;
window.GAME_TYPE_FANG = 1;
window.GAME_TYPE_GOID = 2;
window.GAME_TYPE_MATCH = 3;
window.GAME_JOINID_LIANXI = 0;
window.GAME_JOINID_NEWGold = 1e3;
window.GAME_JOINID_PRIMARYGOID = 1001;
window.GAME_JOINID_MIDDLEGOID = 1002;
window.GAME_JOINID_ADVANCEDGOID = 1003;
window.GAME_JOINID_MATCH = 2e3;
window.GAME_JOINID_MATCH_TIMING = 2001;
window.GAME_JOINID_FANGKA = 3e3;
window.PLATFORMID_VISITOR = 0;
window.PLATFORMID_VISITOR_QQ = 1;
window.PLATFORMID_VISITOR_WECHAT = 2;
window.PLATFORMID_VISITOR_SINA = 3;
window.ZFTYPE_ZFW = 0;
window.ZFTYPE_ZFA = 1;
window.PAYTYPE_STORE = 2;
window.YQ_MDM_EVENT = 0;
window.YQ_MDM_EVENG_BEGIN = 1;
window.YQ_MDM_EVENT_ENDED = 2;
window.YQ_MDM_WXLOGON_BEGIN = 100;
window.YQ_MDM_ZFW_BEGIN = 200;
window.YQ_MDM_WXSHARE_BEGIN = 300;
window.YQ_MDM_MACHINE_BEGIN = 400;
window.YQ_MDM_RECORD_BEGIN = 500;
window.YQ_SUB_EVENT = 0;
window.YQ_SUB_EVENT_BEGIN = 1;
window.YQ_SUB_EVENT_ENDED = 2;
window.YQ_SUB_EVENT_CANCEL = 3;
window.YQ_SUB_WXLOGON_SUCCEED = 100;
window.YQ_SUB_WXLOGON_FAILURE = 101;
window.YQ_SUB_WXLOGON_TOKEN = 102;
window.YQ_SUB_WXUNINSTALL = 103;
window.YQ_SUB_ZFW_BACK = 200;
window.YQ_SUB_ZFW_SUCCEED = 201;
window.YQ_SUB_ZFW_FAILURE = 202;
window.YQ_SUB_WXSHARE_SHAREWEB = 203;
window.YQ_SUB_WXSHARE_SHARETOFRIEND = 204;
window.YQ_SUB_WXSHARE_SHARETOSPACE = 205;
window.YQ_SUB_WXSHARE_SHAREWEBSPACE = 206;
window.YQ_SUB_WXSHARE_SUCCEED = 300;
window.YQ_SUB_WXSHARE_FAILURE = 301;
window.YQ_SUB_WXSHARE_BACK = 302;
window.YQ_SUB_WXSHARE_FIRST = 0;
window.YQ_SUB_WXSHARE_NOTFIRST = 1;
window.YQ_SUB_IOSPAY_BEGIN = 398;
window.YQ_SUB_IOSPAY_WAITCANCEL = 399;
window.YQ_SUB_IOSPAY_SUCCEED = 400;
window.YQ_SUB_IOSPAY_NOSUCCEED = 401;
window.YQ_SUB_IOSPAY_FAILURE = 402;
window.YQ_SUB_MACHINE_SUCCEED = 500;
window.YQ_SUB_MACHINE_FAILURE = 501;
window.YQ_SUB_NETSTATE_WIFI = 605;
window.YQ_SUB_NETSTATE_MOBILE = 606;
window.YQ_SUB_NETSTATE_NONE = 607;
window.YQ_AUDIO_TYPE_MUSIC = 610;
window.YQ_AUDIO_TYPE_SOUND = 611;
window.YQ_SUB_VOICE_START = 700;
window.YQ_SUB_VOICE_CANCEL = 710;
window.YQ_SUB_VOICE_ENDED = 720;
window.YQ_SUB_VOICE_PLAYSTART = 721;
window.YQ_SUB_VOICE_PALYENDED = 722;
window.YQ_SUB_VOICESTATUS_NONE = 725;
window.YQ_SUB_VOICESTATUS_RECORD = 726;
window.YQ_SUB_VOICESTATUS_PLAYED = 727;
window.YQ_SUB_VOICE_UPLOAD = 730;
window.YQ_SUB_VOICE_UL_SUCCEED = 740;
window.YQ_SUB_VOICE_UL_FAILURE = 750;
window.YQ_SUB_VOICE_DOWNLOAD = 760;
window.YQ_SUB_VOICE_DL_SUCCEED = 770;
window.YQ_SUB_VOIDE_DL_FAILURE = 780;
window.YQ_SUB_CHAT_QUICK = 800;
window.YQ_SUB_CHAT_NOMAL = 810;
window.YQ_SUB_NET_CHANGE = 900;
window.YQ_CallStateDialing = 901;
window.YQ_CallStateIncoming = 902;
window.YQ_CallStateConnected = 903;
window.YQ_CallStateDisconnected = 904;
window.YQ_SUB_USER_POS = 1e3;
window.YQ_SUB_OPENSELFAPP = 2e3;
window.YQ_SYS_OK = 0;
window.YQ_SYS_CANCEL = 1;
window.SHOW_START = 0;
window.SHOW_MOVED = 1;
window.SHOW_ENDED = 2;
window.EVENT_START = 0;
window.EVENT_MOVED = 1;
window.EVENT_ENDED = 2;
window.DISMISS_AUTO = 0;
window.DISMISS_ROTE = 1;
window.DISMISS_CONFIG = 2;
window.DISMISS_NORMAL = 3;
window.DISMISS_NOENOUGHT = 4;
window.LEAVE_NORMAL = 0;
window.LEAVE_SYSTEM = 1;
window.LEAVE_NETWORK = 2;
window.LEAVE_USER_IMPACT = 3;
window.LEAVE_SERVER_FULL = 4;
window.LEAVE_SERVER_CONDITIONS = 5;
window.LOGONFAILE_WEIHU = 2;
cc._RF.pop();
}, {} ],
BJL_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6996e+f1CJDqJn+i21M5VWS", "BJL_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node,
bet: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.bet.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {},
StartCompareAction: function(e, t) {
this.bet.active = !0;
var i = this.bet.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "star");
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var n = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
n.SetStartFontAction();
if (null != n.callbackIng) {
n.callbackIng(n);
n.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameEndAction: function(e) {
this.bet.active = !0;
var t = this.bet.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "stop");
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameBeginAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.callbackFinish = e;
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetStartGameAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
SetStartGameAction: function() {
this.nodeFont4.active = !0;
this.nodeFont5.active = !0;
this.nodeFont4.scaleX = 1;
this.nodeFont4.scaleY = 0;
this.nodeFont5.scaleX = 1;
this.nodeFont5.scaleY = 0;
var e = this;
this.nodeFont4.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont5.runAction(cc.scaleTo(.3, 1, 1));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.3, 1, 1));
}
});
cc._RF.pop();
}, {} ],
BJL_NewBetAreas: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0cb48nx/kVD6Iv9bmnuq//N", "BJL_NewBetAreas");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_bLoad: !1,
m_aAreaTotalBet: [],
m_aAreaSelfBet: [],
m_GameEngineJs: null,
m_labAreaTotalBet: {
default: [],
type: cc.Label
},
m_labAreaSelfBet: {
default: [],
type: cc.Label
},
m_sprAreaImg: {
default: [],
type: cc.Sprite
}
},
ctor: function() {},
OnBtnAreaBet: function(e, t) {
if (n.GAME_SCENE_BET == this.m_GameEngineJs.m_CurrentGameState) {
var i = this.m_GameEngineJs.GetSelectChipScore();
this.m_GameEngineJs.SendCmd_UserBet(t, i);
}
},
onLoad: function() {
if (1 != this.m_bLoad) {
this.m_aAreaSelfBet = [ 0, 0, 0, 0, 0 ];
this.m_aAreaTotalBet = [ 0, 0, 0, 0, 0 ];
}
this.UpdateView();
},
ResetData: function(e, t) {
this.m_aAreaTotalBet = CopyArray(e);
this.m_aAreaSelfBet = CopyArray(t);
this.UpdateView();
},
UpdateAreaBetScore: function(e, t, i) {
this.m_aAreaTotalBet[e] += t;
1 == i && (this.m_aAreaSelfBet[e] += t);
this.UpdateView();
},
GetMeAllBet: function() {
for (var e = 0, t = 0; t < n.AREA_MAX; ++t) e += this.m_aAreaSelfBet[t];
return e;
},
UpdateView: function() {
for (var e = 0; e < n.AREA_MAX; ++e) {
this.m_labAreaTotalBet[e].string = OnIntScore(this.m_aAreaTotalBet[e]);
this.m_labAreaSelfBet[e].string = OnIntScore(this.m_aAreaSelfBet[e]);
}
},
ShowAreaLight: function(e, t) {
for (var i = 0; i < n.AREA_MAX; ++i) {
this.m_sprAreaImg[i].node.active = !1;
this.m_sprAreaImg[i].getComponent(cc.Animation).stop();
}
if (t) {
if (e.bPlayer) {
this.m_sprAreaImg[0].node.active = !0;
this.m_sprAreaImg[0].getComponent(cc.Animation).play();
}
if (e.bDraw) {
this.m_sprAreaImg[4].node.active = !0;
this.m_sprAreaImg[4].getComponent(cc.Animation).play();
}
if (e.bBanker) {
this.m_sprAreaImg[1].node.active = !0;
this.m_sprAreaImg[1].getComponent(cc.Animation).play();
}
if (e.bPlayerPair) {
this.m_sprAreaImg[2].node.active = !0;
this.m_sprAreaImg[2].getComponent(cc.Animation).play();
}
if (e.bBankerPair) {
this.m_sprAreaImg[3].node.active = !0;
this.m_sprAreaImg[3].getComponent(cc.Animation).play();
}
}
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewBiPai: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "858590JtFJJhKW62KZ4/vqf", "BJL_NewBiPai");
cc.Class({
extends: cc.Component,
properties: {},
OnInit: function() {},
OnButtonClick: null,
OnCancelBiPai: function(e, t) {
var i = e.target;
if ("Cancel" == i.name) {
this.OnButtonClick && this.OnButtonClick(i, t);
this.node.removeFromParent();
}
}
});
cc._RF.pop();
}, {} ],
BJL_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c7a21vKOC1JS5Q3x7aF64FA", "BJL_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_NAME = "Baccarat";
t.exports.KIND_ID = 122;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY, r = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_BET = s;
t.exports.GAME_SCENE_END = r;
t.exports.AREA_XIAN = 0;
t.exports.AREA_PING = 1;
t.exports.AREA_ZHUANG = 2;
t.exports.AREA_XIAN_DUI = 3;
t.exports.AREA_ZHUANG_DUI = 4;
t.exports.AREA_MAX = 5;
t.exports.MULTIPLE_XIAN = 2;
t.exports.MULTIPLE_PING = 9;
t.exports.MULTIPLE_ZHUANG = 2;
t.exports.MULTIPLE_XIAN_PING = 12;
t.exports.MULTIPLE_ZHUANG_PING = 12;
t.exports.MAX_CHIP_TYPE_COUNT = 5;
t.exports.RATE_TWO_PAIR = 12;
t.exports.SERVER_LEN = 32;
t.exports.MAX_LUDAN_HISTORY = 60;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_C_PLACE_JETTON = 1;
var c = cc.Class({
extends: CMD_Struct,
properties: {
bPlayerTwoPair: 0,
bBankerTwoPair: 0,
cbPlayerCount: 0,
cbBankerCount: 0
},
ctor: function() {
this.bPlayerTwoPair = 0;
this.bBankerTwoPair = 0;
this.cbPlayerCount = 0;
this.cbBankerCount = 0;
}
});
t.exports.tagServerGameRecord = c;
var l = cc.Class({
extends: CMD_Struct,
properties: {
bPlayerTwoPair: 0,
bBankerTwoPair: 0,
cbPlayerCount: 0,
cbBankerCount: 0,
bIsMeBet: 0,
bIsWin: 0
},
ctor: function() {
this.bPlayerTwoPair = 0;
this.bBankerTwoPair = 0;
this.cbPlayerCount = 0;
this.cbBankerCount = 0;
this.bIsMeBet = 0;
this.bIsWin = 0;
}
});
t.exports.tagClientGameRecord = l;
var h = cc.Class({
extends: CMD_Struct,
properties: {
cbAckType: 0,
cbResult: 0,
cbExtendData: []
},
ctor: function() {
this.cbAckType = 0;
this.cbResult = 0;
ZeroArray(this.cbExtendData, 20);
}
});
t.exports.CMD_S_CommandResult = h;
var u = cc.Class({
extends: CMD_Struct,
properties: {
wPlaceUser: 0,
cbBetArea: 0,
lPlaceScore: 0
},
ctor: function() {
this.wPlaceUser = 0;
this.lBetArea = 0;
this.lPlaceScore = 0;
}
});
t.exports.CMD_S_PlaceBetFail = u;
var d = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wApplyUser = 0;
this.lScore = 0;
this.szNickName = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
}
});
t.exports.CMD_S_ApplyBanker = d;
var m = cc.Class({
extends: CMD_Struct,
properties: {
wCancelUser: 0
},
ctor: function() {
this.wCancelUser = 0;
}
});
t.exports.CMD_S_CancelBanker = m;
var f = cc.Class({
extends: CMD_Struct,
properties: {
wBankerUser: 0,
lBankerScore: 0,
szNickName: [],
dwBankerGameId: 0,
wBankerFaceId: 0
},
ctor: function() {
this.wBankerUser = 0;
this.lBankerScore = 0;
this.szNickName = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
ZeroArray(this.szBankerExternFaceUrl, LEN_WECHAT_FACE_URL);
}
});
t.exports.CMD_S_ChangeBanker = f;
var p = cc.Class({
extends: CMD_Struct,
properties: {
cbTimeLeave: 0,
lPlayFreeSocre: 0,
bEnableSysBanker: 0,
lAreaLimitScore: 0,
lChipScore: [],
lSelfScore: 0,
szSelfNickName: [],
lMinTake: 0
},
ctor: function() {
this.cbTimeLeave = 0;
this.lPlayFreeSocre = 0;
this.bEnableSysBanker = 0;
this.lAreaLimitScore = 0;
ZeroArray(this.lChipScore, 5);
this.lSelfScore = 0;
ZeroArray(this.szSelfNickName, LEN_NICKNAME);
this.lMinTake = 0;
}
});
t.exports.CMD_S_StatusFree = p;
var _ = cc.Class({
extends: CMD_Struct,
properties: {
cbTimeLeave: 0,
cbGameStatus: 0,
lAllBet: [],
lPlayBet: [],
lMostWin: [],
lMostBet: [],
lPlayBetScore: 0,
lPlayFreeSocre: 0,
lPlayScore: [],
lPlayAllScore: 0,
lOnlineUserScore: [],
wOnlineUserChairID: [],
bEnableSysBanker: 0,
lAreaLimitScore: 0,
cbCardCount: [],
cbTableCardArray: [],
lChipScore: [],
lSelfScore: 0,
szSelfNickName: [],
lMinTake: 0
},
ctor: function() {
this.cbTimeLeave = 0;
this.cbGameStatus = 0;
ZeroArray(this.lAllBet, 5);
ZeroArray(this.lPlayBet, 5);
ZeroArray(this.lMostWin, 5);
ZeroArray(this.lMostBet, 5);
this.lPlayBetScore = 0;
this.lPlayFreeSocre = 0;
ZeroArray(this.lPlayScore, 5);
this.lPlayAllScore = 0;
memset(this.lOnlineUserScore, 0, 2);
memset(this.wOnlineUserChairID, 0, 2);
this.bEnableSysBanker = 0;
this.lAreaLimitScore = 0;
ZeroArray(this.cbCardCount, 2);
ZeroArray2(this.cbTableCardArray, 2, 3);
ZeroArray(this.lChipScore, 5);
this.lSelfScore = 0;
ZeroArray(this.szSelfNickName, LEN_NICKNAME);
this.lMinTake = 0;
}
});
t.exports.CMD_S_StatusPlay = _;
var S = cc.Class({
extends: CMD_Struct,
properties: {
cbTimeLeave: 0
},
ctor: function() {
this.cbTimeLeave = 0;
}
});
t.exports.CMD_S_GameFree = S;
var g = cc.Class({
extends: CMD_Struct,
properties: {
cbTimeLeave: 0,
wBankerUser: 0,
lBankerScore: 0,
lPlayBetScore: 0,
lPlayFreeSocre: 0
},
ctor: function() {
this.cbTimeLeave = 0;
this.wBankerUser = 0;
this.lBankerScore = 0;
this.lPlayBetScore = 0;
this.lPlayFreeSocre = 0;
}
});
t.exports.CMD_S_GameStart = g;
var C = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.cbBetArea = 0;
this.dwUserID = 0;
this.lBetScore = 0;
}
});
t.exports.CMD_S_PlaceBet = C;
var w = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbTimeLeave = 0;
this.cbCardCount = [];
ZeroArray(this.cbCardCount, 2);
this.cbTableCardArray = [];
ZeroArray2(this.cbTableCardArray, 2, 3);
this.lBankerScore = 0;
this.lBankerTotallScore = 0;
this.nBankerTime = 0;
this.lPlayScore = [];
ZeroArray(this.lPlayScore, 5);
this.lPlayAllScore = 0;
this.lSelfScore = 0;
this.lRevenue = 0;
this.lAllUserScore = [];
ZeroArray(this.lAllUserScore, n);
}
});
t.exports.CMD_S_GameEnd = w;
var b = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bIsControlSucceed = 0;
this.bCancelControl = 0;
this.cbControlTime = 0;
this.cbControlArea = 0;
this.wControlChairID = 0;
}
});
t.exports.CMD_S_Control_Result = b;
var A = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bIsControl = 0;
this.cbControlTime = 0;
this.cbControlArea = 0;
}
});
t.exports.CMD_S_Control_Info = A;
var v = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbReqType = 0;
ZeroArray(this.cbExtendData, 20);
}
});
t.exports.CMD_C_AdminReq = v;
var G = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbBetArea = 0;
this.lBetScore = 0;
}
});
t.exports.CMD_C_PlaceBet = G;
var I = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bIsControl = 0;
this.cbControlTime = 0;
this.cbControlArea = 0;
}
});
t.exports.CMD_C_Control = I;
var D = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbReqType = 0;
this.lStorage = 0;
this.lStorageDeduct = 0;
}
});
t.exports.CMD_C_UpdateStorage = D;
var y = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.strUserName = [];
ZeroArray(this.strUserName, 33);
this.lUserJettonScore = [];
ZeroArray(this.lUserJettonScore, 6);
}
});
t.exports.tagJettonUser = y;
t.exports.tagTableResult = function e() {
this.nPlayerPoint = 0;
this.nBankerPoint = 0;
this.bPlayer = 0;
this.bDraw = 0;
this.bBanker = 0;
this.bPlayerPair = 0;
this.bBankerPair = 0;
this.clone = function() {
var t = new e();
t.nPlayerPoint = this.nPlayerPoint;
t.nBankerPoint = this.nBankerPoint;
t.bPlayer = this.bPlayer;
t.bDraw = this.bDraw;
t.bBanker = this.bBanker;
t.bPlayerPair = this.bPlayerPair;
t.bBankerPair = this.bBankerPair;
return t;
};
};
cc._RF.pop();
}, {} ],
BJL_NewCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "369d6yA9ixE77wj9bAxvDm3", "BJL_NewCard");
var n = e("BJL_NewGameLogic");
e("jsHandCardTexture"), cc.Class({
extends: cc.Component,
properties: {
m_CardData: 0
},
onLoad: function() {
this.ResetCardData(this.m_CardData);
},
ResetCardData: function(e) {
if (null == e || 0 == e) e = 67;
this.m_CardData = e;
var t = n.GetCardColor(e), i = n.GetCardValue(e) - 1, a = t;
cc.assert(i >= 0 && a >= 0, "牌值错误，纹理获取失败！");
var o = this.node.getComponent(cc.Sprite), s = "138/AGameRes/poker/pk_" + parseInt(e / 10) + e % 10;
this.SetGameSprite(o, s);
},
SetGameSprite: function(e, t) {
cc.loader.loadRes(t, cc.SpriteFrame, function(t, i) {
t ? cc.warn("self.node.Error.spriteFrame.is.null") : e && (e.spriteFrame = i);
});
}
});
t.exports.BJL_Card;
cc._RF.pop();
}, {
BJL_NewGameLogic: "BJL_NewGameLogic",
jsHandCardTexture: "jsHandCardTexture"
} ],
BJL_NewChipPannel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da8acZqyKxDbp3yXIaL8+KH", "BJL_NewChipPannel");
cc.Class({
extends: cc.Component,
properties: {
m_ChipNodeArray: [ cc.Node ],
m_ChipNodeSelectArray: [ cc.Node ],
m_ChipJsArray: [],
_nCurrentSelectIndex: 0,
m_lMeScore: 0
},
onLoad: function() {
for (var e = 0; e < this.m_ChipNodeArray.length; ++e) {
var t = this.m_ChipNodeArray[e].getComponent("BJL_NewChip");
this.m_ChipJsArray.push(t);
}
this._nCurrentSelectIndex = 0;
this.OnBtnChipSelect(this.m_ChipNodeArray[0], this._nCurrentSelectIndex);
this.m_lMeScore = 0;
},
OnBtnChipSelect: function(e, t) {
this._nCurrentSelectIndex = t;
for (var i = 0; i < this.m_ChipJsArray.length; ++i) this.m_ChipJsArray[i].SetHightlight(i == t);
},
SetMoveDown: function(e) {
this.node.parent.runAction(cc.moveTo(.2, this.node.parent.x, e ? -165 : 45));
},
SetChipGray: function(e, t) {
var i = PlayerManager.GetMeUserItem();
if (null != i) {
this.m_lMeScore = i.GetUserScore() - t;
this.SetMoveDown(!e);
if (e) {
for (var n = -1, a = 0; a < this.m_ChipJsArray.length; ++a) this.m_lMeScore >= this.m_GameEngineJs.m_ChipConfig[a] && (n = a);
if (-1 != n) if (this._nCurrentSelectIndex > n) {
this.m_ChipNodeSelectArray[this._nCurrentSelectIndex].active = !1;
this._nCurrentSelectIndex = n;
this.m_ChipNodeSelectArray[this._nCurrentSelectIndex].active = !0;
} else this.m_ChipNodeSelectArray[this._nCurrentSelectIndex].active = !0; else this.m_ChipNodeSelectArray[this._nCurrentSelectIndex].active = !1;
} else for (var o = 0; o < this.m_ChipJsArray.length; ++o) this.m_ChipNodeSelectArray[o].active = !1;
}
},
GetSelectChipType: function() {
return this._nCurrentSelectIndex;
}
});
cc._RF.pop();
}, {} ],
BJL_NewChip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0d379S3ZA9BU6CoIt1mP+rR", "BJL_NewChip");
cc.Class({
extends: cc.Component,
properties: {
m_nChipType: 0,
m_lChipValue: [],
m_aChipSpriteFrame: {
default: [],
type: cc.SpriteFrame
},
m_ChipSprite: cc.Sprite,
m_ChipLabel: cc.Label,
m_sprHighlight: cc.Node
},
onLoad: function() {},
SetChipType: function(e, t) {
this.m_nChipType = e;
this.m_lChipValue = t;
this.UpdateView();
},
SetHightlight: function(e) {
this.m_sprHighlight.active = e;
},
UpdateView: function() {
this.m_ChipLabel.string = window.OnIntScore(this.m_lChipValue);
}
});
cc._RF.pop();
}, {} ],
BJL_NewControl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac33fFM+fNLIbuOJSmesJ+1", "BJL_NewControl");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
statics: {
self: null
},
properties: {
ScrollView: cc.ScrollView,
ScrollViewContent: cc.Node,
pfControlItem: cc.Prefab,
EditBoxJushu: cc.EditBox,
AreaButton: [ cc.Toggle ],
nodeAllArea: [ cc.Node ]
},
onLoad: function() {},
InitGameView: function(e) {
this.GameViewJs = e;
},
InitData: function() {
this.lAreaTotalScore = [];
ZeroArray(this.lAreaTotalScore, n.AREA_MAX);
this.lAllAreaTotalScore = 0;
this.UserJettonData = [];
this.UserJettonData = new Array();
},
OnEventClick: function(e, t) {
var i = e.target;
if ("btn_quit" == i.name) this.node.removeFromParent(); else if ("bt_ControlOk" == i.name) {
var a = new n.CMD_C_Control();
a.bIsControl = !0;
a.cbControlTime = parseInt(this.EditBoxJushu.string);
var o = !1, s = parseInt(this.EditBoxJushu.string), r = "" + s;
if (this.EditBoxJushu.string != r || this.EditBoxJushu.string <= 0) {
ManagerHelp_SetSystemAlert("Please enter the correct number of control!");
return;
}
if (s < 1 || s > 100) {
ManagerHelp_SetSystemAlert("The number of control is 1~100,Please enter the correct number of control！");
return;
}
for (var c = 0; c < n.AREA_MAX; c++) if (this.AreaButton[c].isChecked) {
a.cbControlArea = c;
o = !0;
break;
}
if (0 == o) {
ManagerHelp_SetSystemAlert("Please select the control area！");
return;
}
GetServerRoom().SendStruct(MDM_GF_GAME, n.SUB_C_CONTROL_JUDGE, a);
} else if ("bt_ControlCancle" == i.name) {
var l = new n.CMD_C_Control();
l.bIsControl = !1;
l.cbControlTime = 0;
l.cbControlArea = 0;
GetServerRoom().SendStruct(MDM_GF_GAME, n.SUB_C_CANCEL_CONTROL, l);
} else if ("bt_ControlResh" == i.name) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
this.UpDatePlayerBetInfo(this.UserJettonData);
}
},
UpDatePlayerBetInfo: function(e) {
var t = this;
this.UserJettonData = e;
t.ScrollViewContent.removeAllChildren();
var i = 0, a = 0;
ZeroArray(this.lAreaTotalScore, n.AREA_MAX);
this.lAllAreaTotalScore = 0;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
for (var o = 0; o < e.length; o++) {
var s = cc.instantiate(t.pfControlItem);
t.ScrollViewContent.addChild(s);
a = t.ScrollViewContent;
s.getChildByName("userName").getComponent(cc.Label).string = e[o].strUserName;
s.getChildByName("area0").getComponent(cc.Label).string = e[o].lArea0JettonScore;
s.getChildByName("area1").getComponent(cc.Label).string = e[o].lArea1JettonScore;
s.getChildByName("area2").getComponent(cc.Label).string = e[o].lArea2JettonScore;
s.getChildByName("area3").getComponent(cc.Label).string = e[o].lArea3JettonScore;
s.getChildByName("area4").getComponent(cc.Label).string = e[o].lArea4JettonScore;
s.getChildByName("area5").getComponent(cc.Label).string = e[o].lArea5JettonScore;
s.getChildByName("area6").getComponent(cc.Label).string = e[o].lArea6JettonScore;
s.getChildByName("area7").getComponent(cc.Label).string = e[o].lArea7JettonScore;
s.getChildByName("areaAll").getComponent(cc.Label).string = e[o].lUserTotalBetScore;
this.lAreaTotalScore[0] += e[o].lArea0JettonScore;
this.lAreaTotalScore[1] += e[o].lArea1JettonScore;
this.lAreaTotalScore[2] += e[o].lArea2JettonScore;
this.lAreaTotalScore[3] += e[o].lArea3JettonScore;
this.lAreaTotalScore[4] += e[o].lArea4JettonScore;
this.lAreaTotalScore[5] += e[o].lArea5JettonScore;
this.lAreaTotalScore[6] += e[o].lArea6JettonScore;
this.lAreaTotalScore[7] += e[o].lArea7JettonScore;
this.lAllAreaTotalScore += e[o].lUserTotalBetScore;
++i;
}
t.ScrollViewContent.setContentSize(t.ScrollViewContent.width, i * a);
this.ScrollView.scrollToTop();
for (var r = 0; r < n.AREA_MAX; r++) this.nodeAllArea[r].getComponent(cc.Label).string = this.lAreaTotalScore[r];
this.nodeAllArea[8].getComponent(cc.Label).string = this.lAllAreaTotalScore;
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewDaLuItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0d4ccBNkcdFAKwVkMLpToTX", "BJL_NewDaLuItem");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_nDrawCount: 0,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_labCount: cc.Label
},
onLoad: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
this.m_GameResult = new n.tagTableResult();
this.m_nDrawCount = 0;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
ResetDrawCount: function(e) {
this.m_nDrawCount = e;
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (0 != this.m_nDrawCount) {
this.m_labCount.node.active = !0;
this.m_labCount.string = this.m_nDrawCount;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewDaYanZaiLuItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ba6aeZAl6dEfJIZqGNkXq59", "BJL_NewDaYanZaiLuItem");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRed: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRed);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
BJL_NewGameEndPannel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c0398eZXw1F7IFiixS/jiuJ", "BJL_NewGameEndPannel");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_aAreaSelfWinLose: [],
m_nSelfWinLose: 0,
m_nPlayerPoint: 0,
m_nBankerPoint: 0,
m_nSelfRevenue: 0,
m_labPlayerPoint: cc.Label,
m_labBankerPoint: cc.Label,
m_labSelfTotalWinLose: cc.Label,
m_labAreaSelfWinLose: {
default: [],
type: cc.Label
}
},
onLoad: function() {
ZeroArray(this.m_aAreaSelfWinLose, n.AREA_MAX);
this.m_nSelfWinLose = 0;
this.m_nPlayerPoint = 0;
this.m_nBankerPoint = 0;
this.UpdateView();
},
ResetData: function(e, t, i, a) {
this.m_aAreaSelfWinLose = CopyArray(e);
this.m_nPlayerPoint = i;
this.m_nBankerPoint = a;
this.m_nSelfWinLose = 0;
this.m_nSelfRevenue = t;
for (var o = 0; o < n.AREA_MAX; ++o) this.m_nSelfWinLose += this.m_aAreaSelfWinLose[o];
this.UpdateView();
},
UpdateView: function() {
for (var e = 0; e < n.AREA_MAX; ++e) this.m_labAreaSelfWinLose[e].string = this.m_aAreaSelfWinLose[e];
this.m_labPlayerPoint.string = this.m_nPlayerPoint;
this.m_labBankerPoint.string = this.m_nBankerPoint;
this.m_labSelfTotalWinLose.string = this.m_nSelfWinLose - this.m_nSelfRevenue;
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ab183GEnFxDOqZ7oCfjpsNB", "BJL_NewGameEngine");
var n = e("BJL_NewCMD_Game"), a = e("BJL_NewGameLogic");
e("BJL_NewTableCardPannel"), cc.Class({
extends: GameFrameEngine,
properties: {
m_GameViewNode: cc.Node,
m_GameViewJs: null,
m_MenuLayer: cc.Node,
m_TableCardPannelNode: cc.Node,
m_TableCardPannelJs: null,
m_BetAreasNode: cc.Node,
m_BetAreasJs: null,
m_ChipPannelNode: cc.Node,
m_ChipPannelJs: null,
m_PrefabGameResultHistory: cc.Prefab,
m_GameResultHistoryNode: cc.Node,
m_GameResultHistoryJs: null,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_RecordNode: cc.Node,
m_PrefabRecordItem: cc.Prefab,
m_SelfUserItem: null,
m_CurrentGameState: 0,
m_fRoundTime: 0,
m_UserBetScoreLimit: 0,
m_BetAreaTotalScore: [],
m_SelfBetAreaScore: [],
m_SelfBetTotalScore: 0,
m_SelfBetAreaWinLoseScore: [],
m_nSelfRevenue: 0,
m_SelfWinLoseHistroy: 0,
m_SelfCurrentWinLose: 0,
m_cbTableCardCount: [],
m_cbTableCardDataArray: [],
m_LastTableResult: null,
m_aTableResultHistory: [],
m_ChipConfig: [],
m_aGameResult: [],
m_bLuDanLoaded: !1,
otherUserNum: cc.Label
},
OnFrameEngineLoad: function() {
cc._initDebugSetting(cc.DebugMode.INFO);
var e = new tagGameCutsomData();
e.dwGameModel, window.GCD_FANG;
this.stGameRule = e;
this.m_ChipConfig = [ 1e4, 5e4, 1e5, 5e5, 1e6 ];
this.m_lMinTake = 0;
this.m_SelfUserItem = PlayerManager.GetMeUserItem();
this.m_LastTableResult = new n.tagTableResult();
this.m_GameViewJs = this.m_GameViewNode.getComponent("BJL_NewGameView");
this.GameFrameView = this.m_GameViewJs;
this.m_GameViewJs.m_GameEngineJs = this;
this.m_TableCardPannelJs = this.m_TableCardPannelNode.getComponent("BJL_NewTableCardPannel");
this.m_BetAreasJs = this.m_BetAreasNode.getComponent("BJL_NewBetAreas");
this.m_BetAreasJs.m_GameEngineJs = this;
this.m_ChipPannelJs = this.m_ChipPannelNode.getComponent("BJL_NewChipPannel");
this.m_ChipPannelJs.m_GameEngineJs = this;
this.m_GameResultHistoryJs = this.m_GameResultHistoryNode.getComponent("BJL_NewGameResultHistory");
this.otherUserNum.string = Rand(500, 300);
this.ResetGameEngine();
},
ResetGameEngine: function() {},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("138/Audio/bjl_bg", !0, window.mfConfig.fSound);
},
UpdateBetAreaInfo: function(e, t, i) {
this.m_BetAreaTotalScore[t] += i;
for (var n = 0; n < this.m_ChipConfig.length; ++n) i >= this.m_ChipConfig[n] && n;
var a = !1;
if (this.m_SelfUserItem.GetChairID() == e) {
this.m_SelfBetAreaScore[t] += i;
this.m_SelfBetTotalScore += i;
a = !0;
this.m_ChipPannelJs.SetChipGray(!0, this.m_SelfBetTotalScore);
}
this.m_BetAreasJs.UpdateAreaBetScore(t, i, a);
},
InsertIntoGameResultQueue: function(e) {
this.m_aTableResultHistory.length >= n.MAX_LUDAN_HISTORY && this.m_aTableResultHistory.splice(0, 1);
this.m_aTableResultHistory.push(e.clone());
},
OnEventSceneMessage: function(e, t, i, a) {
var o = 0;
e == n.GAME_SCENE_FREE ? o = this.OnSceneFree(e, t, i, a) : e == n.GAME_SCENE_END || e == n.GAME_SCENE_BET || e == n.GAME_SCENE_PLAY ? o = this.OnScenePlay(e, t, i, a) : cc.assert(0, "BJL_NewGameEngine.OnEventSceneMessage: unknown GameStatus=" + e);
return o;
},
OnSceneFree: function(e, t, i, a) {
var o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
console.log(o, "free");
this.m_CurrentGameState = n.GAME_SCENE_FREE;
this.m_fRoundTime = o.TimeLeave;
ZeroArray(this.m_BetAreaTotalScore, n.AREA_MAX);
ZeroArray(this.m_SelfBetAreaScore, n.AREA_MAX);
ZeroArray(this.m_SelfBetAreaWinLoseScore, n.AREA_MAX);
this.m_SelfWinLoseHistroy = 0;
this.m_SelfCurrentWinLose = 0;
ZeroArray(this.m_cbTableCardCount, 2);
ZeroArray2(this.m_cbTableCardDataArray, 2, 3);
this.m_lMinTake = o.RetainScore;
this.m_ChipConfig = [];
for (var s = this.m_ChipPannelNode.getChildren(), r = 0; r < s.length; ++r) {
this.m_ChipConfig[r] = o.BetChips[r];
s[r].getComponent("BJL_NewChip").SetChipType(r, this.m_ChipConfig[r]);
}
this.OnSubCmd_SendRecord(o.GameRecord);
this.m_GameViewJs.OnFrameInitJetton(o.BetChips);
this.ShowTableResultPannel(!1);
this.m_GameViewJs.CloseUserBetData();
this.m_ChipPannelJs.SetChipGray(!1, 0);
this.m_GameViewJs.ShowTotalBetInfo(!1);
this.m_GameViewJs.ShowMeBetInfo(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.m_TableCardPannelJs.InitPokerNum(o.LeftCard);
this.SetTime(!1);
this.m_GameViewJs.ShowGameStatus(GAME_STATUS_FREE);
return !0;
},
OnScenePlay: function(e, t, i, o) {
var s = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
console.log(s, "play");
this.m_CurrentGameState = s.GameStatus;
this.m_fRoundTime = s.TimeLeave;
this.m_BetAreaTotalScore = CopyArray(s.AreaTotalBet);
this.m_SelfBetAreaScore = CopyArray(s.UserAreaBet);
this.m_SelfWinLoseHistroy = s.lPlayAllScore;
this.m_SelfCurrentWinLose = s.lPlayAllScore;
this.m_cbTableCardDataArray[0] = CopyArray2(s.cbTableCardArray[0].Cards);
this.m_cbTableCardDataArray[1] = CopyArray2(s.cbTableCardArray[1].Cards);
this.m_cbTableCardCount[0] = s.cbCardCount.PlayerCount;
this.m_cbTableCardCount[1] = s.cbCardCount.BankerCount;
this.m_LastTableResult = a.AnalyzeTableResultFromTableCard(this.m_cbTableCardCount, this.m_cbTableCardDataArray);
this.m_lMinTake = s.RetainScore;
var r = s.lOnlineUserScore.concat(), c = s.wOnlineUserChairID.concat();
this.m_ChipConfig = [];
for (var l = this.m_ChipPannelNode.getChildren(), h = 0; h < l.length; ++h) {
this.m_ChipConfig[h] = s.BetChips[h];
l[h].getComponent("BJL_NewChip").SetChipType(h, this.m_ChipConfig[h]);
}
this.m_GameViewJs.OnFrameInitJetton(s.BetChips);
for (var u = [], d = [], m = 0, f = 0, p = 0, _ = 0; _ < n.AREA_MAX; _++) {
u[_] = s.lMostBet[_];
d[_] = s.MostWinUserAreaBet[_];
m += s.UserAreaBet[_];
f += s.MostWinUserAreaBet[_];
p += s.lMostBet[_];
}
var S = [];
memset(S, 0, n.GAME_PLAYER);
c[0] != INVALID_CHAIR && (S[c[0]] = f);
c[1] != INVALID_CHAIR && (S[c[1]] = p);
S[this.GetMeChairID()] = m;
this.m_GameViewJs.OnFrameBetInfo(u, d, S, this.m_SelfBetAreaScore);
this.OnSubCmd_SendRecord(s.GameRecord);
this.m_BetAreasJs.ResetData(this.m_BetAreaTotalScore, this.m_SelfBetAreaScore);
for (var g = 0; g < n.AREA_MAX; ++g) {
this.m_BetAreaTotalScore[g] > 0 && this.m_GameViewJs.ShowTotalBetInfo(!0, g);
this.m_SelfBetAreaScore[g] > 0 && this.m_GameViewJs.ShowMeBetInfo(!0, g);
}
this.SetGameStatus(GAME_STATUS_FREE);
this.m_TableCardPannelJs.InitPokerNum(s.LeftCard);
if (e == n.GAME_SCENE_BET) {
for (g = 0; g < n.AREA_MAX; ++g) if (this.m_SelfBetAreaScore[g] > 0) {
this.m_SelfBetTotalScore += this.m_SelfBetAreaScore[g];
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
this.m_ChipPannelJs.SetChipGray(!0, this.m_SelfBetTotalScore);
this.SetTime(!0);
this.m_GameViewJs.ShowGameStatus(GAME_STATUS_PLAY);
} else if (e == n.GAME_SCENE_END) {
this.m_ChipPannelJs.SetChipGray(!1, 0);
this.m_TableCardPannelJs.ResetData(this.m_cbTableCardCount, this.m_cbTableCardDataArray, this.m_LastTableResult.nPlayerPoint, this.m_LastTableResult.nBankerPoint, !1);
this.ShowTableResultPannel(!0);
this.m_GameViewJs.OnWaitStatus(!0);
var C = [];
this.m_LastTableResult.bPlayer && C.push(0);
this.m_LastTableResult.bDraw && C.push(1);
this.m_LastTableResult.bBanker && C.push(2);
this.m_LastTableResult.bPlayerPair && C.push(3);
this.m_LastTableResult.bBankerPair && C.push(4);
var w = [];
memset(w, 0, n.GAME_PLAYER);
INVALID_CHAIR != c[0] && (w[c[0]] = r[0]);
INVALID_CHAIR != c[1] && (w[c[1]] = r[1]);
w[this.GetMeChairID()] = s.lPlayAllScore;
this.m_GameViewJs.OnFrameGameEndAction(C, w, !1);
}
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
var a = window.net.netSerializer.unpackMsg("CMD_S_GameFree", t);
this.OnSubCmd_GameFree(a);
break;

case n.SUB_S_GAME_START:
a = window.net.netSerializer.unpackMsg("CMD_S_GameStart", t);
this.OnSubCmd_Start(a);
break;

case n.SUB_S_PLACE_JETTON:
a = window.net.netSerializer.unpackMsg("CMD_S_UserBet", t);
this.OnSubCmd_PlaceJetton(a);
break;

case n.SUB_S_OTHERS_BET:
a = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", t);
this.OnGameOthersBet(a);
break;

case n.SUB_S_GAME_END:
a = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", t);
this.OnSubCmd_GameEnd(a);
break;

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);

default:
cc.assert(0, "error unsupport game_cmd:wSubCmdID");
}
return !0;
},
OnSubCmd_GameFree: function(e) {
this.node.stopAllActions();
this.m_CurrentGameState = n.GAME_SCENE_FREE;
this.m_fRoundTime = e.TimeLeave;
ZeroArray(this.m_BetAreaTotalScore, n.AREA_MAX);
ZeroArray(this.m_SelfBetAreaScore, n.AREA_MAX);
this.m_SelfBetTotalScore = 0;
this.m_TableCardPannelJs.HideAllCard();
this.m_BetAreasJs.ResetData(this.m_BetAreaTotalScore, this.m_SelfBetAreaScore);
this.ShowTableResultPannel(!1);
this.m_GameViewJs.CloseUserBetData();
this.m_ChipPannelJs.SetChipGray(!1, 0);
this.m_GameViewJs.OnFrameResetView();
this.m_GameViewJs.ShowTotalBetInfo(!1);
this.m_GameViewJs.ShowMeBetInfo(!1);
this.m_GameViewJs.OnWaitStatus(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.m_TableCardPannelJs.IsEnoughPokerNum(e.Shuffle);
this.SetTime(!1);
this.m_GameViewJs.ShowGameStatus(GAME_STATUS_FREE);
return !0;
},
OnSubCmd_Start: function(e) {
this.m_CurrentGameState = n.GAME_SCENE_BET;
this.m_fRoundTime = e.TimeLeave;
this.m_TableCardPannelJs.HideAllCard();
this.m_ChipPannelJs.SetChipGray(!0, 0);
this.m_GameViewJs.OnBetStart();
this.SetTime(!0);
this.m_GameViewJs.ShowGameStatus(GAME_STATUS_PLAY);
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.m_GameViewJs.OnShowUserlist(i);
return !0;
},
OnSubCmd_PlaceJetton: function(e) {
console.log(e, "bet:");
if (0 == e.RetCode) {
this.UpdateBetAreaInfo(e.ChairID, e.AreaIndex - 1, e.BetScore);
var t = 0, i = 0, n = e.AreaIndex - 1;
if (0 == n || 2 == n) {
t = parseInt(410 * Math.random()) + 50;
i = parseInt(100 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(e.ChairID, n, e.BetScore, cc.v2(t, i));
} else if (1 == n) {
t = parseInt(180 * Math.random()) + 50;
i = parseInt(90 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(e.ChairID, n, e.BetScore, cc.v2(t, i));
} else if (3 == n || 4 == n) {
t = parseInt(180 * Math.random()) + 50;
i = parseInt(90 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(e.ChairID, n, e.BetScore, cc.v2(t, i));
}
this.m_GameViewJs.ShowTotalBetInfo(!0, e.AreaIndex - 1);
e.ChairID == this.GetMeChairID() && this.m_GameViewJs.ShowMeBetInfo(!0, e.AreaIndex - 1);
e.ChairID == this.GetMeChairID() && this.SetGameStatus(GAME_STATUS_PLAY);
return !0;
}
var a = "" + e.ResultTip;
ManagerHelp_SetSystemLabel(a);
},
OnGameOthersBet: function(e) {
for (var t = 0; t < e.UsersBetList.length; t++) {
var i = e.UsersBetList[t];
if (this.GetMeChairID() != i.ChairID) {
this.UpdateBetAreaInfo(i.ChairID, i.AreaIndex - 1, i.BetScore);
var n = 0, a = 0, o = i.AreaIndex - 1;
if (0 == o || 2 == o) {
n = parseInt(410 * Math.random()) + 50;
a = parseInt(100 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(i.ChairID, o, i.BetScore, cc.v2(n, a));
} else if (1 == o) {
n = parseInt(180 * Math.random()) + 50;
a = parseInt(90 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(i.ChairID, o, i.BetScore, cc.v2(n, a));
} else if (3 == o || 4 == o) {
n = parseInt(180 * Math.random()) + 50;
a = parseInt(90 * Math.random()) + 50;
this.m_GameViewJs.OnFramePlaceJetton(i.ChairID, o, i.BetScore, cc.v2(n, a));
}
}
}
return !0;
},
OnSubCmd_GameEnd: function(e) {
console.log(e, "game end:");
var t = this;
this.m_CurrentGameState = n.GAME_SCENE_END;
this.m_fRoundTime = e.TimeLeave;
this.m_cbTableCardDataArray[0] = CopyArray2(e.AreaCards[0].Cards);
this.m_cbTableCardDataArray[1] = CopyArray2(e.AreaCards[1].Cards);
this.m_cbTableCardCount[0] = e.UserCount.PlayerCount;
this.m_cbTableCardCount[1] = e.UserCount.BankerCount;
var i = [];
memset(i, 0, MAX_CHAIR);
for (var o = e.UserWinList.length, s = 0; s < o; s++) {
var r = e.UserWinList[s];
null == r.WinScore.high && null == r.WinScore.low ? i[r.ChairID] = r.WinScore : i[r.ChairID] = 0;
r.ChairID == this.GetMeChairID() && i[r.ChairID];
}
this.m_GameViewJs.UpdateSelfWinLoseHistory();
this.m_LastTableResult = a.AnalyzeTableResultFromTableCard(this.m_cbTableCardCount, this.m_cbTableCardDataArray);
this.InsertIntoGameResultQueue(this.m_LastTableResult);
this.m_ChipPannelJs.SetChipGray(!1, 0);
this.m_GameViewJs.OnBetFinish(function() {
var e = 1 * (t.m_cbTableCardCount[0] + t.m_cbTableCardCount[1]), n = cc.sequence(cc.callFunc(function() {
window.mfConfig.PlayAudio("138/Audio/bjl_send_card", !1, window.mfConfig.fSound);
t.m_TableCardPannelJs.ResetData(t.m_cbTableCardCount, t.m_cbTableCardDataArray, t.m_LastTableResult.nPlayerPoint, t.m_LastTableResult.nBankerPoint, !0);
}), cc.delayTime(e), cc.callFunc(function() {
t.ShowTableResultPannel(!0);
}), cc.callFunc(function() {
if (t.m_bLuDanLoaded) {
t.m_GameResultHistoryJs.m_aGameResult = t.m_aTableResultHistory.concat();
t.m_GameResultHistoryJs.UpdateGameRecordAll(!0);
}
t.m_aGameResult.push(t.m_LastTableResult);
t.OnAddGameRecord(t.m_LastTableResult);
t.UpdateGameRecord();
t.SetGameResultHistoryVisiable();
var e = [];
t.m_LastTableResult.bPlayer && e.push(0);
t.m_LastTableResult.bDraw && e.push(1);
t.m_LastTableResult.bBanker && e.push(2);
t.m_LastTableResult.bPlayerPair && e.push(3);
t.m_LastTableResult.bBankerPair && e.push(4);
t.m_GameViewJs.OnFrameGameEndAction(e, i, !0);
t.m_BetAreasJs.ResetData([ 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0 ]);
}));
t.node.runAction(n);
});
return !0;
},
OnSubCmd_SendRecord: function(e) {
for (var t = 0; t < e.length; ++t) {
var i = new n.tagTableResult();
i.nPlayerPoint = e[t].PlayerPoint;
i.nBankerPoint = e[t].BankerPoint;
i.bPlayer = i.nPlayerPoint > i.nBankerPoint;
i.bDraw = i.nPlayerPoint == i.nBankerPoint;
i.bBanker = i.nPlayerPoint < i.nBankerPoint;
i.bPlayerPair = 1 == e[t].IsPlayerDouble;
i.bBankerPair = 1 == e[t].IsBankerDouble;
this.InsertIntoGameResultQueue(i);
this.m_aGameResult.push(i);
}
this.UpdateGameRecord();
this.SetGameResultHistoryVisiable();
return !0;
},
SendCmd_UserBet: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
},
GetSelectChipScore: function() {
var e = this.m_ChipPannelJs.GetSelectChipType();
return this.m_ChipConfig[e];
},
SetGameResultHistoryVisiable: function() {
if (!this.m_bLuDanLoaded) {
this.m_bLuDanLoaded = !0;
this.m_GameResultHistoryJs.m_aGameResult = this.m_aTableResultHistory.concat();
this.m_GameResultHistoryJs.UpdateGameRecordAll(!1);
}
},
ShowTableResultPannel: function(e) {
e ? this.m_BetAreasJs.ShowAreaLight(this.m_LastTableResult, !0) : this.m_BetAreasJs.ShowAreaLight(this.m_LastTableResult, !1);
},
SetTime: function(e) {
this.m_GameViewJs.SetTimeClock(this.m_fRoundTime, e);
},
UpdateGameRecord: function() {
this.m_RecordNode.removeAllChildren();
var e = this.m_aGameResult.length, t = 0;
e > 12 && (t = e - 12);
for (;t < e; ++t) {
var i = this.m_aGameResult[t], n = cc.instantiate(this.m_PrefabRecordItem);
if (null != n) {
this.m_RecordNode.addChild(n);
i.bPlayer ? n.getComponent(cc.Sprite).spriteFrame = this.m_TexturePlayer : i.bDraw ? n.getComponent(cc.Sprite).spriteFrame = this.m_TextureDraw : i.bBanker && (n.getComponent(cc.Sprite).spriteFrame = this.m_TextureBanker);
}
}
},
OnAddGameRecord: function(e) {
var t = this.m_RecordNode.children.length, i = cc.instantiate(this.m_PrefabRecordItem);
e.bPlayer ? i.getComponent(cc.Sprite).spriteFrame = this.m_TexturePlayer : e.bDraw ? i.getComponent(cc.Sprite).spriteFrame = this.m_TextureDraw : e.bBanker && (i.getComponent(cc.Sprite).spriteFrame = this.m_TextureBanker);
if (t >= 12) {
var n = this;
n.m_RecordNode.children[0].runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function(e) {
e.removeFromParent();
})));
var a = cc.sequence(cc.delayTime(.6), cc.callFunc(function() {
n.m_RecordNode.addChild(i);
n.m_RecordNode.children[11].runAction(cc.sequence(cc.delayTime(.5), cc.fadeOut(.5), cc.fadeIn(.5), cc.fadeOut(.5), cc.fadeIn(.5), cc.fadeOut(.5), cc.fadeIn(.5)));
}));
this.m_RecordNode.runAction(a);
} else this.m_RecordNode.addChild(i);
},
OnShowMenuLayer: function() {
this.m_MenuLayer.active = !this.m_MenuLayer.active;
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game",
BJL_NewGameLogic: "BJL_NewGameLogic",
BJL_NewTableCardPannel: "BJL_NewTableCardPannel"
} ],
BJL_NewGameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1a922I7ekBAvrEGRtJPl+Pm", "BJL_NewGameLogic");
var n = e("BJL_NewCMD_Game");
function a(e) {
return 15 & e;
}
function o(e, t) {
var i = {
nPoint: 0,
bPair: !1
};
if (2 != arguments.length) return i;
for (var n = 0, o = 0; o < e; ++o) n += function(e) {
var t = e;
e >= 10 && (t = 0);
return t;
}(a(t[o]));
n %= 10;
i.nPoint = n;
e >= 2 && a(t[0]) == a(t[1]) && (i.bPair = !0);
return i;
}
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {}
});
t.exports.GetCardColor = function(e) {
return (240 & e) >> 4;
};
t.exports.GetCardValue = a;
t.exports.AnalyzeTableResultFromTableCard = function(e, t) {
var i = new n.tagTableResult();
if (2 == arguments.length) {
var a = o(e[0], t[0]), s = o(e[1], t[1]);
i.nPlayerPoint = a.nPoint;
i.nBankerPoint = s.nPoint;
i.bBanker = s.nPoint > a.nPoint;
i.bDraw = a.nPoint == s.nPoint;
i.bPlayer = a.nPoint > s.nPoint;
i.bBankerPair = s.bPair;
i.bPlayerPair = a.bPair;
}
return i;
};
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewGameResultHistory: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cb84ak8bqNMa5eOlCPIRFTi", "BJL_NewGameResultHistory");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_aGameResult: [],
m_aDaLuTFullData: [],
m_aDaLuTFullDataOrder: [],
m_aXiaSanLuTFullData: [],
m_aLabGameCount: cc.Label,
m_aLabAreaWinCount: {
default: [],
type: cc.Label
},
m_RecordNode_LuDan: cc.Node,
m_PrefabRecordItem: cc.Prefab,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_ZhuZaiLuNode: cc.Node,
m_DaLuNode: cc.Node,
m_DaYanZaiLuNode: cc.Node,
m_XiaoLuNode: cc.Node,
m_XiaoQiangLuNode: cc.Node,
m_NodeNextXian_DaYanZaiLu: cc.Node,
m_NodeNextXian_XiaoLu: cc.Node,
m_NodeNextXian_XiaoQiangLu: cc.Node,
m_NodeNextZhuang_DaYanZaiLu: cc.Node,
m_NodeNextZhuang_XiaoLu: cc.Node,
m_NodeNextZhuang_XiaoQiangLu: cc.Node,
m_PrefabZhuZaiLuItem: cc.Prefab,
m_PrefabDaLuItem: cc.Prefab,
m_PrefabDaYanZaiLuItem: cc.Prefab,
m_PrefabXiaoLuItem: cc.Prefab,
m_PrefabXiaoQiangLuItem: cc.Prefab,
m_aZhuZaiLuItemJs: [],
m_aDaLuItemJs: [],
m_aDaYanZaiLuItemJs: [],
m_aXiaoLuItemJs: [],
m_aXiaoQiangLuItemJs: []
},
onLoad: function() {
this.ZhuZaiLu_Col = 10;
this.DaLu_Col = 12;
this.DaYanZaiLu_Col = 10;
this.XiaoLu_Col = 10;
this.XiaoQiangLu_Col = 10;
for (var e = 0; e < this.ZhuZaiLu_Col; ++e) for (var t = 0; t < 6; ++t) {
var i = (n = cc.instantiate(this.m_PrefabZhuZaiLuItem)).getComponent("BJL_NewZhuZaiLuItem");
this.m_ZhuZaiLuNode.addChild(n);
i.ResetBoxMatrixPos(e, t);
this.m_aZhuZaiLuItemJs.push(i);
}
for (e = 0; e < this.DaLu_Col; ++e) for (t = 0; t < 6; ++t) {
var n = cc.instantiate(this.m_PrefabDaLuItem);
this.m_DaLuNode.addChild(n);
var a = n.getComponent("BJL_NewDaLuItem");
a.ResetBoxMatrixPos(e, t);
this.m_aDaLuItemJs.push(a);
}
for (e = 0; e < this.DaYanZaiLu_Col; ++e) for (t = 0; t < 6; ++t) {
n = cc.instantiate(this.m_PrefabDaYanZaiLuItem);
this.m_DaYanZaiLuNode.addChild(n);
var o = n.getComponent("BJL_NewDaYanZaiLuItem");
o.ResetBoxMatrixPos(e, t);
this.m_aDaYanZaiLuItemJs.push(o);
n = cc.instantiate(this.m_PrefabXiaoLuItem);
this.m_XiaoLuNode.addChild(n);
var s = n.getComponent("BJL_NewXiaoLuItem");
s.ResetBoxMatrixPos(e, t);
this.m_aXiaoLuItemJs.push(s);
n = cc.instantiate(this.m_PrefabXiaoQiangLuItem);
this.m_XiaoQiangLuNode.addChild(n);
var r = n.getComponent("BJL_NewXiaoQiangLuItem");
r.ResetBoxMatrixPos(e, t);
this.m_aXiaoQiangLuItemJs.push(r);
}
},
ShowResultHistory: function() {
this.node.active = !0;
SceneManager_AlertShow(this.node);
},
HideResultHistory: function() {
this.node.active = !1;
},
ResetGameResultHistory: function(e) {
cc.assert(!1, "接口未启用");
},
InsertNewGameResult: function(e) {
this.m_aGameResult.length >= n.MAX_LUDAN_HISTORY && this.m_aGameResult.splice(0, 1);
this.m_aGameResult.push(e);
},
UpdateGameRecordAll: function(e) {
this.UpdateAreaPercentView();
this.UpdateZhuZaiLuView(e);
this.UpdateDaLuView(e);
this.UpdateDaYanZaiLuView(e);
this.UpdateXiaoLuView(e);
this.UpdateXiaoQiangLuView(e);
this.UpdateYuCe();
},
UpdateGameRecord_HistoryLayer: function() {
this.m_RecordNode_LuDan.removeAllChildren();
var e = this.m_aGameResult.length, t = 0;
e > 20 && (t = e - 20);
for (;t < e; ++t) {
var i = this.m_aGameResult[t], n = cc.instantiate(this.m_PrefabRecordItem);
this.m_RecordNode_LuDan.addChild(n);
n.setPosition(cc.v2(0, 0));
i.bPlayer ? n.getComponent(cc.Sprite).spriteFrame = this.m_TexturePlayer : i.bDraw ? n.getComponent(cc.Sprite).spriteFrame = this.m_TextureDraw : i.bBanker && (n.getComponent(cc.Sprite).spriteFrame = this.m_TextureBanker);
}
},
UpdateAreaPercentView: function() {
var e, t = 0, i = 0, a = 0;
e = this.m_aGameResult.length;
for (var o = 0; o < e; ++o) {
var s = this.m_aGameResult[o];
s.bPlayer && t++;
s.bDraw && i++;
s.bBanker && a++;
}
this.m_aLabAreaWinCount[n.AREA_XIAN].string = t;
this.m_aLabAreaWinCount[n.AREA_PING].string = i;
this.m_aLabAreaWinCount[n.AREA_ZHUANG].string = a;
this.m_aLabGameCount.string = e;
},
DaLu_FindLastNodePos: function(e, t) {
cc.assert(!(0 == e && 0 == t));
if (0 == t) return {
x: e - 1,
y: t
};
if (t > 0) {
if (null != this.m_aDaLuTFullData[6 * e + (t - 1)]) return {
x: e,
y: t - 1
};
if (null == this.m_aDaLuTFullData[6 * e + (t - 1)] && null != this.m_aDaLuTFullData[6 * (e - 1) + t]) return {
x: e - 1,
y: t
};
}
},
DaLu_FindNextNodePos: function(e, t, i) {
if (e) {
if (null == this.m_aDaLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker == this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aDaLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && (this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker, 
this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker), t += 1);
return {
x: t,
y: i
};
}
if (null == this.m_aXiaSanLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aXiaSanLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && (this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue, 
this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue), t += 1);
return {
x: t,
y: i
};
},
DaLu_FindFirstUnusedXPos: function(e) {
if (e) {
for (var t = 0; t < 100; ++t) if (null == this.m_aDaLuTFullData[6 * t]) return t;
} else for (t = 0; t < 100; ++t) if (null == this.m_aXiaSanLuTFullData[6 * t]) return t;
},
UpdateZhuZaiLuView: function(e) {
for (var t = 6 * this.ZhuZaiLu_Col, i = 0; i < t; ++i) this.m_aZhuZaiLuItemJs[i].ResetGameResult();
var n = this.m_aGameResult.length - t + 2;
n = n > 0 ? n : 0;
for (i = 0; i < t && !(i >= this.m_aGameResult.length); ++i) {
var a = i % 6, o = parseInt(i / 6);
if (n + i < this.m_aGameResult.length) {
this.m_aZhuZaiLuItemJs[o + a * this.ZhuZaiLu_Col].ResetGameResult(this.m_aGameResult[n + i]);
n + i == this.m_aGameResult.length - 1 && e && this.m_aZhuZaiLuItemJs[o + a * this.ZhuZaiLu_Col].OnPlayAnim();
} else this.m_aZhuZaiLuItemJs[o + a * this.ZhuZaiLu_Col].ResetGameResult(null);
}
},
UpdateDaLuView: function(e) {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var t = 0; t < 6 * this.DaLu_Col; ++t) {
this.m_aDaLuItemJs[t].ResetGameResult();
this.m_aDaLuItemJs[t].ResetDrawCount(0);
}
var i = 0, n = 0, a = 0, o = 0, s = 0, r = 0;
for (t = 0; t < this.m_aGameResult.length; ++t) {
var c = this.m_aGameResult[t];
1 == c.bDraw ? r += 1 : r = 0;
if (r != t + 1) {
var l = 6 * i + n, h = 0, u = null;
if (l > 0) {
var d = this.DaLu_FindLastNodePos(i, n);
h = 6 * d.x + d.y;
u = this.m_aDaLuTFullData[h].gameResult;
cc.assert(null != u, "error, lastPos=" + d.x + "," + d.y + ";lastIndex=" + h);
}
if (n > 0 && 0 == c.bDraw && c.bBanker != u.bBanker) {
l = 6 * (i = this.DaLu_FindFirstUnusedXPos(!0)) + (n = 0);
i >= a && (a = i);
}
if (r >= 1) this.m_aDaLuTFullData[h].nDrawCount = r; else {
var m = {};
m.x = i;
m.y = n;
m.gameResult = c;
m.nDrawCount = 0;
this.m_aDaLuTFullData[l] = m;
this.m_aDaLuTFullDataOrder.push(6 * i + n);
o = i;
s = n;
var f = this.DaLu_FindNextNodePos(!0, i, n);
i = f.x;
n = f.y;
i >= a && (a = i);
}
}
}
if (!(this.m_aDaLuTFullData.length <= 0 || this.m_aDaLuTFullDataOrder.length <= 0)) {
var p = a - this.DaLu_Col + 1;
p = p < 0 ? 0 : p;
for (t = 0; t < this.m_aDaLuTFullData.length; ++t) if (null != this.m_aDaLuTFullData[t]) {
var _ = this.m_aDaLuTFullData[t];
if (!(_.x < p)) {
this.m_aDaLuItemJs[_.x - p + _.y * this.DaLu_Col].ResetGameResult(_.gameResult);
this.m_aDaLuItemJs[_.x - p + _.y * this.DaLu_Col].ResetDrawCount(_.nDrawCount);
t == this.m_aDaLuTFullData.length - 1 && e && this.m_aDaLuItemJs[o - p + s * this.DaLu_Col].OnPlayAnim();
}
}
}
},
isSameXLastItemData: function(e, t) {
for (var i = !0, n = 0; n < 6; ++n) if (null != this.m_aDaLuTFullData[6 * e + n] && null == this.m_aDaLuTFullData[6 * t + n] || null == this.m_aDaLuTFullData[6 * e + n] && null != this.m_aDaLuTFullData[6 * t + n]) {
i = !1;
break;
}
return i;
},
UpdateDaYanZaiLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 6 * this.DaYanZaiLu_Col; ++t) this.m_aDaYanZaiLuItemJs[t].ResetData(0);
var i = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (i = 12);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 1) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 2, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 1) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - this.DaYanZaiLu_Col + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aDaYanZaiLuItemJs[b.x - w + b.y * this.DaYanZaiLu_Col].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aDaYanZaiLuItemJs[m - w + f * this.DaYanZaiLu_Col].OnPlayAnim();
}
}
}
}
},
UpdateXiaoLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 6 * this.XiaoLu_Col; ++t) this.m_aXiaoLuItemJs[t].ResetData(0);
var i = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (i = 18);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 2) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 3, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 2) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - this.XiaoLu_Col + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoLuItemJs[b.x - w + b.y * this.XiaoLu_Col].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoLuItemJs[m - w + f * this.XiaoLu_Col].OnPlayAnim();
}
}
}
}
},
UpdateXiaoQiangLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 6 * this.XiaoQiangLu_Col; ++t) this.m_aXiaoQiangLuItemJs[t].ResetData(0);
var i = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (i = 24);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 3) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 4, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 3) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - this.XiaoQiangLu_Col + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoQiangLuItemJs[b.x - w + b.y * this.XiaoQiangLu_Col].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoQiangLuItemJs[m - w + f * this.XiaoQiangLu_Col].OnPlayAnim();
}
}
}
}
},
UpdateYuCe: function() {
if (null != this.m_aDaLuTFullData[7] || null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12]) {
this.m_NodeNextXian_DaYanZaiLu.active = !0;
this.m_NodeNextZhuang_DaYanZaiLu.active = !0;
this.UpdateYuCe_DaYanZaiLu();
} else {
this.m_NodeNextXian_DaYanZaiLu.active = !1;
this.m_NodeNextZhuang_DaYanZaiLu.active = !1;
}
if (null != this.m_aDaLuTFullData[13] || null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18]) {
this.m_NodeNextXian_XiaoLu.active = !0;
this.m_NodeNextZhuang_XiaoLu.active = !0;
this.UpdateYuCe_XiaoLu();
} else {
this.m_NodeNextXian_XiaoLu.active = !1;
this.m_NodeNextZhuang_XiaoLu.active = !1;
}
if (null != this.m_aDaLuTFullData[19] || null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24]) {
this.m_NodeNextXian_XiaoQiangLu.active = !0;
this.m_NodeNextZhuang_XiaoQiangLu.active = !0;
this.UpdateYuCe_XiaoQiangLu();
} else {
this.m_NodeNextXian_XiaoQiangLu.active = !1;
this.m_NodeNextZhuang_XiaoQiangLu.active = !1;
}
},
UpdateYuCe_DaYanZaiLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoQiangLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateDaLuData: function() {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var e = 0, t = 0, i = 0, n = 0; n < this.m_aGameResult.length; ++n) {
var a = this.m_aGameResult[n];
1 == a.bDraw ? i += 1 : i = 0;
if (i != n + 1) {
var o = 6 * e + t, s = 0, r = null;
if (o > 0) {
var c = this.DaLu_FindLastNodePos(e, t);
s = 6 * c.x + c.y;
r = this.m_aDaLuTFullData[s].gameResult;
cc.assert(null != r, "error, lastPos=" + c.x + "," + c.y + ";lastIndex=" + s);
}
t > 0 && 0 == a.bDraw && a.bBanker != r.bBanker && (o = 6 * (e = this.DaLu_FindFirstUnusedXPos(!0)) + (t = 0));
if (i >= 1) this.m_aDaLuTFullData[s].nDrawCount = i; else {
var l = {};
l.x = e;
l.y = t;
l.gameResult = a;
l.nDrawCount = 0;
this.m_aDaLuTFullData[o] = l;
this.m_aDaLuTFullDataOrder.push(6 * e + t);
var h = this.DaLu_FindNextNodePos(!0, e, t);
e = h.x;
t = h.y;
}
}
}
},
UpdateDaYanZaiLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (t = 12);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 1) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 2, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 1) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1], d = "138/AGameRes/LuDan_DaLu1", m = "138/AGameRes/LuDan_DaLu0";
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, m) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, m);
}
},
UpdateXiaoLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (t = 18);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 2) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 3, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 2) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1], d = "138/AGameRes/LuDan_XiaoLu1", m = "138/AGameRes/LuDan_XiaoLu0";
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoLu, m) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, m);
}
},
UpdateXiaoQiangLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (t = 24);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 3) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 4, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 3) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1], d = "138/AGameRes/LuDan_XiaoQiangLu1", m = "138/AGameRes/LuDan_XiaoQiangLu0";
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, m) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, d) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, m);
}
},
SetGameSprite: function(e, t) {
cc.loader.loadRes(t, cc.SpriteFrame, function(t, i) {
t ? cc.warn("self.node.Error.spriteFrame.is.null") : e && (e.getComponent(cc.Sprite).spriteFrame = i);
});
},
removeSelf: function() {
this.node.active = !1;
},
testDaLu: function(e, t) {
if (t >= 0 && t <= 2) {
var i = new n.tagTableResult();
i.bPlayer = 0 == t;
i.bDraw = 1 == t;
i.bBanker = 2 == t;
this.InsertNewGameResult(i);
} else 3 == t && this.m_aGameResult.length > 0 && this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateGameRecordAll(!0);
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2baf3KUy45PFo6hUfjPg0HO", "BJL_NewGameView");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
m_GameEngineJs: null,
nodeAreaButton: [ cc.Node ],
nodeAreaParent: cc.Node,
compareAnim: cc.Node,
m_nSelfBetInfo: [ cc.Node ],
m_nAllBetInfo: [ cc.Node ],
nodeWaitStatus: cc.Node,
nodeTime: cc.Node,
labelGameStatus: cc.Label,
nodePlayerList: cc.Node,
nodeMenu: cc.Node
},
OnFrameViewLoad: function() {
this.UserBetData = [];
this.UserBetData = new Array();
this.UserBetScore = [];
ZeroArray2(this.UserBetScore, n.GAME_PLAYER, n.AREA_MAX);
this.UserTotalBetScore = [];
ZeroArray(this.UserTotalBetScore, n.GAME_PLAYER);
this.OnTouchRegister();
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnTouchRegister: function() {
cc.director.getCollisionManager().enabled = !0;
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_START, this.OnTouchBegan, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancel, this);
},
OnTouchBegan: function(e) {
for (var t = e.getTouches()[0].getLocation(), i = this.nodeAreaButton.length - 1; i >= 0; i--) {
var n = this.nodeAreaButton[i].getComponent(cc.PolygonCollider), a = this.nodeAreaButton[i].getComponent(cc.CircleCollider);
if (n && cc.Intersection.pointInPolygon(t, n.world.points) || a && cc.pDistance(a.world.position, t) < a.world.radius) {
this.nodeAreaButton[i].emit(cc.Node.EventType.TOUCH_START);
this.cbTouchIndex = i;
return;
}
}
},
OnTouchEnded: function() {
null != this.cbTouchIndex && this.nodeAreaButton[this.cbTouchIndex].emit(cc.Node.EventType.TOUCH_END);
},
OnTouchCancel: function() {
null != this.cbTouchIndex && this.nodeAreaButton[this.cbTouchIndex].emit(cc.Node.EventType.TOUCH_CANCEL);
},
OnEventUserEnter: function(e, t) {},
OnEventUserLeave: function(e, t, i) {},
OnEventUserStatus: function(e, t, i) {},
OnFrameUpdateUserScore: function(e) {},
UpdateSelfWinLoseHistory: function() {},
OnBtnHistory: function() {
this.m_GameEngineJs.SetGameResultHistoryVisiable();
},
OnBetStart: function() {
var e = this.compareAnim.getComponent("BJL_NewActionHelp");
e.ResetAllNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
},
OnBetFinish: function(e) {
var t = this.compareAnim.getComponent("BJL_NewActionHelp");
t.ResetAllNode();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
e ? t.StartGameEndAction(e) : t.StartGameEndAction();
},
ShowTotalBetInfo: function(e, t) {
if (!e) for (var i = 0; i < n.AREA_MAX; ++i) ;
},
ShowMeBetInfo: function(e, t) {
if (e) this.m_nSelfBetInfo[t].active = !0; else for (var i = 0; i < n.AREA_MAX; ++i) this.m_nSelfBetInfo[i].active = !1;
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("BJL_NewPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
CloseUserBetData: function() {
ZeroArray2(this.UserBetScore, n.GAME_PLAYER, n.AREA_MAX);
ZeroArray(this.UserTotalBetScore, n.GAME_PLAYER);
this.UserBetData.splice(0, this.UserBetData.length);
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
SetTimeClock: function(e, t) {
this.nodeTime.getComponent("BJL_NewTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "preparing";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "betting";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "lottery draw";
return;
}
},
OnFramePlaceJetton: function(e, t, i, n) {
this.node.getComponent("BJL_NewPlayerList").OnPlaceJettonAction(this.stOnLineTopUser, e, t, i, n);
},
OnFrameGameEndAction: function(e, t, i, n) {
this.node.getComponent("BJL_NewPlayerList").OnGameEndJettonAction(e, t, i, n);
},
OnFrameBetInfo: function(e, t, i, n) {
this.node.getComponent("BJL_NewPlayerList").OnLoadBetInfo(e, t, i, n);
},
OnFrameInitJetton: function(e) {
this.node.getComponent("BJL_NewPlayerList").OnLoadJettonInfo(e);
},
OnFrameResetView: function() {
this.node.getComponent("BJL_NewPlayerList").ResetGameView();
},
OnLoadPlayerList: function() {
var e = this.node.getComponent("BJL_NewPlayerList");
null != e && this.jsGameEngine.bGame100 && this.nodePlayerList && 0 == this.nodePlayerList.childrenCount && e.OnInitNodeUser(this.nodePlayerList);
},
OnUpdateOnLineUser: function(e, t) {
if (t) {
var i = this.node.getComponent("BJL_NewPlayerList");
if (null != i) {
this.stOnLineTopUser = e;
i.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), e);
}
} else {
var n = this.nodeRootCanvas.getChildByName("pfOnlinePlayerList");
if (n) {
n.getComponent("jsOnlinePlayerList").OnUpdateData(e);
this.stOnLineUser = null;
} else this.stOnLineUser = e;
}
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BJL_NewPlayerList: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "88f54LCuIFDnLTosBM/hKlT", "BJL_NewPlayerList");
cc.Class({
extends: cc.Component,
properties: {
pfNodeUserView: cc.Prefab,
nodeOtehrPlayer: cc.Node,
nodeBankerInfo: cc.Node,
nodeSelfInfo: cc.Node,
nodeSelfJetton: cc.Node,
jettonArea: cc.Node,
aryNodeBetArea: [ cc.Node ],
nodeStar: [ cc.Node ],
nodeNewArea: cc.Node,
pfJetton: cc.Prefab,
pfGameEndScore: cc.Prefab,
pfStar: cc.Prefab,
pfWinerAnim: cc.Prefab,
pfStar_Particle: cc.Prefab
},
onLoad: function() {
this.fSountTime = 0;
this.fTimeCount = 0;
this.fBeforeTime = 0;
this.bLoadFinish = !1;
this.bUpdateScore = !1;
this.lAryOnlineUserBet = [];
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.bStarBet = [];
memset(this.bStarBet, !1, this.nodeStar.length);
this._jsGameAction = [];
this._jsBetAction = [];
this.GameEndCallBack = null;
this._jsEndJettonAction = [];
this.OnInitNodePool();
},
start: function() {},
onDestroy: function() {
this.JettonPool.clear();
},
OnInitNodePool: function() {
this.JettonPool = new cc.NodePool();
},
OnCreateJetton: function() {
var e = null;
(e = this.JettonPool.size() > 0 ? this.JettonPool.get() : cc.instantiate(this.pfJetton)).getComponent("jsJetton").OnResetJetton();
return e;
},
OnPutJetton: function(e) {
"prefab_BJLJetton" == e.name && this.JettonPool.put(e);
},
OnInitNodeUser: function(e) {
this.nodeOnLineUser = [];
if (this.pfNodeUserView && e) {
var t = cc.instantiate(this.pfNodeUserView);
e.addChild(t);
for (var i = t.children, n = 0; n < i.length; n++) this.nodeOnLineUser.push(i[n]);
}
this.wAryChairID = [];
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
},
OnLoadUserInfo: function(e, t, i) {
this.wMeChairID = t;
this.wMostWinChairID = INVALID_CHAIR;
this.wMostBetChairID = INVALID_CHAIR;
this.stOnLineUser = i.concat();
PlayerManager.DeleteUserItemByAll();
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
for (var n = 0; n < this.nodeOnLineUser.length; n++) if (this.nodeOnLineUser[n]) {
var a = this.nodeOnLineUser[n].getComponent("jsPlayerItem");
a.OnInitUserInfo();
if (this.stOnLineUser[n] && this.stOnLineUser[n].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[n].dwGameID) {
var o = PlayerManager.GetMeUserItem();
this.stOnLineUser[n].dwGameID == o.GetGameID() && (this.stOnLineUser[n].wChairID = t);
var s = this.nodeOnLineUser[n].getComponent("jsFrameUser"), r = this.stOnLineUser[n].wChairID, c = PlayerManager.GetUserItemByTableInfo(e, r);
if (!c) {
(c = PlayerManager.SetUserItem(this.stOnLineUser[n])).pGlobalData.wTableID = e;
c.pGlobalData.wChairID = r;
}
s.SetUserDataItem(c, a.OnLoadUserInfo.bind(a));
0 == n ? this.wMostWinChairID = r : 1 == n && (this.wMostBetChairID = r);
this.wAryChairID[n] = r;
}
}
this.wAryChairID[this.nodeOnLineUser.length] = t;
this.bLoadFinish = !0;
if (this.bUpdateScore) {
this.UpdateOnlineUserScore();
this.bUpdateScore = !1;
}
},
OnLoadJettonInfo: function(e) {
e && 0 != e.length ? this.lAryJetton = e.concat() : cc.warn("OnLoadJettonInfo Error:lAryJetton is invalid");
},
OnPlaceJettonAction: function(e, t, i, n, a) {
var o = !0, s = null;
if (null != e) for (var r = 0; r < e.length; r++) if (e[r].wChairID == t) {
o = !1;
s = this.nodeOnLineUser[r];
break;
}
if (this.wMeChairID != t) if (null != s && this.aryNodeBetArea[i]) {
this.OnBetByList(s, n, i, a);
this.OnUpdateScore(t, n, !0);
} else o && this.nodeOtehrPlayer && this.OnJettonAction(this.nodeOtehrPlayer, n, i, a); else if (this.nodeSelfInfo) {
this.OnJettonAction(this.nodeSelfInfo, n, i, a);
this.OnUpdateScore(t, n, !0);
}
this.OnMostWinBetAction(t, i);
},
OnGameEndJettonAction: function(e, t, i, n) {
this.GameEndCallBack = n;
this._jsGameAction.length = 0;
if (0 != i) {
this.nodeBankerInfo ? 0 == e.length ? this.OnMoveJettonToBanker(e, t, !0) : this.OnMoveJettonToBanker(e, t, !1) : this.OnMoveJettonToWiner(t);
this.OnActionBegan();
} else this.OnShowGameScore(t, !1);
},
OnLoadWinTarget: function(e, t) {
var i = [], n = !1;
e[this.wMeChairID] > 0 && i.push(this.nodeSelfInfo);
if (!n) for (var a = 0; a < e.length; a++) if (e[a] > 0 && a != this.wMeChairID) {
n = !0;
break;
}
(n || 0 == i.length) && t && i.push(this.nodeOtehrPlayer);
return i;
},
OnMoveJettonToBanker: function(e, t, i) {
for (var n = this, a = [], o = 0; o < this.aryNodeBetArea.length; o++) {
for (var s = !1, r = 0; r < e.length; r++) if (o == e[r]) {
s = !0;
break;
}
if (!s) for (var c = 0; c < this.aryNodeBetArea[o].children.length; c++) for (var l = 0; l < this.aryNodeBetArea[o].children[c].children.length; l++) {
var h = new Object();
h.nodeJetton = this.aryNodeBetArea[o].children[c].children[l];
h.cbArea = o;
a.push(h);
}
}
for (var u = [], d = 0; d < this.aryNodeBetArea.length; d++) for (var m = 0; m < this.aryNodeBetArea[d].children.length; m++) {
var f = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), p = this.aryNodeBetArea[d].children[m].convertToNodeSpaceAR(f);
u.push(p);
}
var _ = [];
_[0] = "Action_MoveToBanker";
_[1] = a.concat();
_[2] = u;
_[3] = 1800;
_[4] = !0;
_[5] = function(a) {
var o = [];
o[0] = "Action_dt";
o[1] = a;
n._jsGameAction.push(o);
if (i) {
var s = [];
s[0] = "Action_ShowScore";
s[1] = t;
s[2] = !0;
n._jsGameAction.push(s);
} else n.OnMoveJettonToWinArea(e, t);
};
this._jsGameAction.push(_);
},
OnMoveJettonToWinArea: function(e, t) {
for (var i = this, n = 0, a = 0; a < t.length; a++) t[a] >= 0 && (n += t[a]);
var o = this.GetJettonAry(n), s = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), r = this.nodeNewArea.convertToNodeSpaceAR(s), c = [];
c[0] = "Action_MoveToArea";
c[1] = this.nodeNewArea;
c[2] = r;
c[3] = o;
c[4] = e;
c[5] = 1800;
c[6] = function(e) {
var n = [];
n[0] = "Action_dt";
n[1] = e;
n[2] = function(e) {
e.OnMoveJettonToWiner(t);
};
i._jsGameAction.push(n);
};
this._jsGameAction.push(c);
},
OnMoveJettonToWiner: function(e) {
var t = this, i = [], n = this.OnLoadWinTarget(e, !0), a = this.OnLoadWinTarget(e, !1), o = [];
memset(o, 0, 60 * this.aryNodeBetArea.length, n.length);
for (var s = 0, r = 0, c = 0, l = 0, h = 0; h < n.length; h++) n[h] == this.nodeSelfInfo ? c = h : l = h;
for (var u = 0; u < this.aryNodeBetArea.length; u++) for (var d = 0; d < this.aryNodeBetArea[u].children.length; d++) {
this.aryNodeBetArea[u].children[d].children.length > s && (s = this.aryNodeBetArea[u].children[d].children.length);
this.aryNodeBetArea[u].children[d].getComponent(cc.Layout).enabled = !1;
for (var m = 0; m < this.aryNodeBetArea[u].children[d].children.length; m++) {
var f = n[n.length > 1 ? r % 5 != 0 ? l : c : 0].convertToWorldSpaceAR(cc.v2(0, 0));
o[r] = this.aryNodeBetArea[u].children[d].children[m].convertToNodeSpaceAR(f);
var p = new Object();
p.nodeJetton = this.aryNodeBetArea[u].children[d].children[m];
p.cbArea = r++;
p.childrenIndex = m;
i.push(p);
}
}
var _ = [];
_[0] = "Action_ShowScore";
_[1] = e;
_[2] = !0;
if (i.length > 0) {
var S = [];
S[0] = "Action_MoveToWiner";
S[1] = i;
S[2] = n;
S[3] = o;
S[4] = 1500;
S[5] = .002;
S[6] = 1.3;
S[7] = a;
S[8] = function(e) {
var i = [];
i[0] = "Action_dt";
i[1] = e;
t._jsGameAction.push(i);
t._jsGameAction.push(_);
};
this._jsGameAction.push(S);
} else this._jsGameAction.push(_);
},
OnBetByList: function(e, t, i, n) {
this.OnJettonAction(this.nodeOtehrPlayer, t, i, n);
},
OnHeadAction: function(e) {
var t = e.getComponent("jsPlayerItem"), i = t.nodeUserInfo, n = cc.v2(0, 0);
"left" == t.strAction ? n = cc.v2(-20, 0) : "right" == t.strAction ? n = cc.v2(20, 0) : "up" == t.strAction ? n = cc.v2(0, 20) : "down" == t.strAction && (n = cc.v2(0, -20));
var a = cc.sequence(cc.moveBy(.03, n), cc.delayTime(.03), cc.moveBy(.03, n.neg()));
i.runAction(a);
},
OnBetByOther: function(e, t, i) {
var n = [];
n[0] = e;
n[1] = t;
n[2] = i;
this._jsBetAction.push(n);
},
OnOtherBetAction: function() {
if (this._jsBetAction.length > 0) {
var e = this._jsBetAction.concat();
this._jsBetAction = [];
var t = this.lAryJetton.length > 2 ? 2 : this.lAryJetton.length - 1, i = [], n = [], a = [];
memset(i, 0, this.aryNodeBetArea.length);
for (var o = 0; o < this.aryNodeBetArea.length; o++) {
n[o] = [];
a[o] = [];
}
for (var s = 0; s < e.length; s++) {
var r = e.shift(), c = r[0], l = r[1], h = r[2];
i[l] += c;
n[l].push(h);
a[l].push(r);
}
for (var u = 0; u < this.aryNodeBetArea.length; u++) {
var d = this.GetJettonAry(i[u], t);
if (d.length > n[u].length) for (var m = 0; m < a[u].length; m++) {
var f = a[u][m], p = f[0], _ = f[1], S = f[2];
this.OnJettonAction(this.nodeOtehrPlayer, p, _, S);
} else for (var g = 0; g < d.length; g++) this.OnJettonAction(this.nodeOtehrPlayer, d[g], u, n[u][g]);
}
}
},
playBtnOtherUser: function() {
var e = cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.05, .9), cc.scaleTo(.05, 1));
this.nodeOtehrPlayer.runAction(e);
},
OnJettonAction: function(e, t, i, n) {
if (0 == i) {
1;
}
var a = this, o = this.OnCreateJetton();
o.getComponent("jsJetton").OnInitJetton(this.lAryJetton, t);
var s = this.aryNodeBetArea[i], r = void 0, c = e;
if (e == this.nodeSelfInfo) {
c = this.jettonArea.getChildByName("Dis_chip_btn_" + t);
r = s.getChildByName("mePos");
} else {
r = s.getChildByName(t + "Pos");
this.playBtnOtherUser();
}
r.getComponent(cc.Layout).enabled = !0;
var l = c.convertToWorldSpaceAR(cc.v2(0, 0)), h = this.nodeNewArea.convertToNodeSpaceAR(l), u = s.convertToWorldSpaceAR(cc.v2(r.x, r.y + 30 + 6 * r.childrenCount)), d = this.nodeNewArea.convertToNodeSpaceAR(u), m = Math.sqrt((d.x - h.x) * (d.x - h.x) + (d.y - h.y) * (d.y - h.y)) / 3e3, f = cc.sequence(cc.scaleTo(0, 1.5), cc.spawn(cc.moveTo(.9 * m, d), cc.scaleTo(.9 * m, 1.2), cc.sequence(cc.delayTime(m / 2), cc.callFunc(function() {
if (0 == a.fSountTime) {
var e = "GameFrame/Audio/Bet" + parseInt(2 * Math.random());
window.mfConfig.PlayAudio(e);
a.fSountTime = .5;
}
}))), cc.scaleTo(.1 * m, 1), cc.callFunc(function() {
o.removeFromParent();
r.childrenCount <= 10 && r.addChild(o);
o.setPosition(cc.v2(0, 0));
}));
this.nodeNewArea.addChild(o);
o.setPosition(h);
o.runAction(f);
},
OnUpdateScore: function(e, t, i) {
i && (this.lAryOnlineUserBet[e] += t);
if (IsFindArrayValue(this.wAryChairID, e)) for (var n = 0; n < this.nodeOnLineUser.length + 1; n++) {
var a = null;
if (a = n < this.nodeOnLineUser.length ? this.nodeOnLineUser[n] : this.nodeSelfInfo) {
var o = a.getComponent("jsFrameUser");
this.wAryChairID[n] == e && o.UpdateGameScore(-this.lAryOnlineUserBet[e]);
}
}
},
OnShowGameScore: function(e, t) {
for (var i = 0; i < this.nodeOnLineUser.length + 1; i++) {
var n = null, a = INVALID_CHAIR;
if (i < this.nodeOnLineUser.length) {
if (this.stOnLineUser && this.stOnLineUser[i] && this.stOnLineUser[i].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[i].dwGameID) {
n = this.nodeOnLineUser[i];
a = this.stOnLineUser[i].wChairID;
}
} else {
n = this.nodeSelfInfo;
a = this.wMeChairID;
}
if (a != INVALID_CHAIR && n) {
if ((0 != this.lAryOnlineUserBet[a] || 0 != e[a]) && this.pfGameEndScore && t) {
var o = [];
o[0] = "Action_ShowUserScore";
o[1] = n;
o[2] = e[a];
this._jsGameAction.push(o);
}
var s = n.getComponent("jsFrameUser");
if (t) {
var r = [];
r[0] = "Action_UpdateScore";
r[1] = s;
r[2] = e[a];
this._jsGameAction.push(r);
} else s.UpdateGameScore(e[a]);
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
OnGameEndCallBack: function() {
if (this.GameEndCallBack) {
var e = [];
e[0] = "Action_EndCallBack";
e[1] = this.GameEndCallBack;
this._jsGameAction.push(e);
this.GameEndCallBack = null;
}
},
GetBetAreaRandomVet2: function(e) {
return cc.v2(0, 0);
},
OnLoadBetInfoCreateJetton: function(e, t) {
var n = this.OnCreateJetton();
n.getComponent("jsJetton").OnInitJetton(this.lAryJetton, t);
e.addChild(n);
var a = this.GetBetAreaRandomVet2(i);
n.setPosition(a);
},
OnLoadBetInfo: function(e, t, i, n) {
for (var a = 0; a < e.length; a++) if (e[a] > 0) {
var o = 0;
if (n.length > a && n[a] > 0) {
o = n[a];
for (var s = this.GetJettonAry(o), r = 0; r < s.length; r++) this.OnLoadBetInfoCreateJetton(this.aryNodeBetArea[a].getChildByName("mePos"), s[r]);
}
o = e[a] - o;
for (var c = this.GetJettonAry(o), l = 0; l < c.length; l++) this.OnLoadBetInfoCreateJetton(this.aryNodeBetArea[a].getChildByName(c[l] + "Pos"), c[l]);
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.lAryOnlineUserBet = i.concat();
this.bLoadFinish ? this.UpdateOnlineUserScore() : this.bUpdateScore = !0;
memset(this.bStarBet, !1, this.nodeStar.length);
for (var h = 0; h < this.nodeStar.length; h++) if (t[h] && t[h] > 0) {
this.bStarBet[h] = !0;
if (this.pfStar) {
var u = cc.instantiate(this.pfStar);
this.nodeStar[h].addChild(u);
u.setPosition(cc.v2(0, 0));
}
}
},
GetJettonAry: function(e, t) {
var i = [];
i = this.lAryJetton ? this.lAryJetton.concat() : [ 1e3, 1e4, 5e4, 1e5, 5e5 ];
for (var n = [], a = 2 == arguments.length ? t : 4; a >= 0; a--) if (parseInt(e / i[a]) > 0) {
for (var o = parseInt(e / i[a]), s = 0; s < o; s++) n.push(i[a]);
e %= i[a];
}
return n;
},
UpdateOnlineUserScore: function() {
var e = this.lAryOnlineUserBet.concat();
if (e) for (var t = 0; t < e.length; t++) e[t] > 0 && this.OnUpdateScore(t, e[t], !1);
},
OnMostWinBetAction: function(e, t) {
var i = this;
if (e == this.wMostWinChairID && !this.bStarBet[t] && this.pfStar && this.pfStar_Particle) {
var n = this.nodeOnLineUser[0].convertToWorldSpaceAR(cc.v2(0, 0)), a = this.nodeStar[t].convertToNodeSpaceAR(n), o = (Math.sqrt(a.x * a.x + a.y * a.y), 
cc.sequence(cc.jumpTo(.5, cc.v2(0, 0), 50, 1), cc.callFunc(function() {
var e = cc.instantiate(i.pfStar);
i.nodeStar[t].addChild(e);
e.setPosition(cc.v2(0, 0));
}), cc.removeSelf())), s = cc.instantiate(this.pfStar_Particle);
this.nodeStar[t].addChild(s);
s.setPosition(a);
s.runAction(o);
this.bStarBet[t] = !0;
}
},
OnActionBegan: function() {
var e = this, t = this;
if (this._jsGameAction.length > 0) {
var i = this._jsGameAction.shift();
if ("Action_MoveToBanker" == i[0]) (function() {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = 0, l = function(e) {
var i = n[e], r = cc.v2(i.nodeJetton.x, i.nodeJetton.y), l = a[i.cbArea], h = Math.sqrt((l.x - r.x) * (l.x - r.x) + (l.y - r.y) * (l.y - r.y)) / o;
c = Math.max(c, h);
i.nodeJetton.runAction(cc.sequence(cc.callFunc(function() {
if (0 == e) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(h, a[i.cbArea]), cc.callFunc(function(e) {
s && t.OnPutJetton(e);
})));
}, h = 0; h < n.length; h++) l(h);
r && r(c + .2);
e.OnActionBegan();
})(); else if ("Action_MoveToArea" == i[0]) (function() {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = 0, h = function(i) {
var c = e.OnCreateJetton();
c.getComponent("jsJetton").OnInitJetton(e.lAryJetton, o[i]);
n.addChild(c);
c.setPosition(a);
var h = s[parseInt(Math.random() * s.length)], u = e.GetBetAreaRandomVet2(h), d = e.aryNodeBetArea[h].convertToWorldSpaceAR(u), m = n.convertToNodeSpaceAR(d), f = Math.sqrt((m.x - a.x) * (m.x - a.x) + (m.y - a.y) * (m.y - a.y)) / r;
l = Math.max(l, f);
c.runAction(cc.sequence(cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(f, m), cc.callFunc(function() {
var e = t.aryNodeBetArea[h].getChildByName(o[i] + "Pos");
c.parent = e;
c.setPosition(cc.v2(0, 0));
})));
}, u = 0; u < o.length; u++) h(u);
c && c(l + .2);
e.OnActionBegan();
})(); else if ("Action_MoveToWiner" == i[0]) (function() {
var t = e, n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = i[7], h = i[8], u = 0, d = [];
memset(d, 0, a.length);
for (var m = function(i) {
var h = 0;
h = i < a.length ? i : parseInt(Math.random() * a.length);
var m = r * d[h];
d[h]++;
var f = 1 == d[h], p = n[i], _ = o[p.cbArea];
_.y = _.y + 30 + 6 * p.childrenIndex;
var S = Math.sqrt((_.x - p.nodeJetton.x) * (_.x - p.nodeJetton.x) + (_.y - p.nodeJetton.y) * (_.y - p.nodeJetton.y)) / s;
u = Math.max(u, S + m);
var g = cc.sequence(cc.delayTime(m), cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(S, _).easing(cc.easeBackIn()), cc.callFunc(function() {
var e = a[h];
if (h < l.length && f && t.pfWinerAnim) {
var i = cc.sequence(cc.delayTime(c), cc.removeSelf()), n = cc.instantiate(t.pfWinerAnim);
e.addChild(n);
n.runAction(i);
}
}), cc.callFunc(function(e) {
t.OnPutJetton(e);
})), C = new Object();
C.node = p.nodeJetton;
C.act = g;
e._jsEndJettonAction.push(C);
}, f = 0; f < n.length; f++) m(f);
h && h(u + .2);
e.OnActionBegan();
})(); else if ("Action_ShowScore" == i[0]) {
var n = i[1], a = i[2];
this.OnShowGameScore(n, a);
this.OnGameEndCallBack();
this.OnActionBegan();
} else if ("Action_ShowUserScore" == i[0]) {
var o = i[1], s = i[2], r = cc.instantiate(this.pfGameEndScore), c = r.getComponent("jsGameEndScore");
o.addChild(r);
c.InitGameScore(s);
this.OnActionBegan();
} else if ("Action_WinScore" == i[0]) {
var l = i[1], h = i[2], u = cc.sequence(cc.delayTime(h), cc.removeSelf()), d = cc.instantiate(this.pfWinerAnim);
l.addChild(d);
d.runAction(u);
this.OnActionBegan();
} else if ("Action_UpdateScore" == i[0]) {
i[1].UpdateGameScore();
this.OnActionBegan();
} else if ("Action_EndCallBack" == i[0]) {
var m = i[1];
m && m();
} else if ("Action_dt" == i[0]) {
var f = i[1], p = i[2];
this.node.runAction(cc.sequence(cc.delayTime(f), cc.callFunc(function() {
p && p(t);
t.OnActionBegan();
})));
}
}
},
ResetGameView: function() {
for (var e = 0; e < this.aryNodeBetArea.length; e++) for (var t = 0; t < this.aryNodeBetArea[e].children.length; t++) for (var i = this.aryNodeBetArea[e].children[t].children, n = i.length, a = 0; a < n; a++) this.OnPutJetton(i[0]);
for (var o = 0; o < this.nodeStar.length; o++) this.nodeStar[o].removeAllChildren();
memset(this.bStarBet, 0, this.nodeStar.length);
for (var s = 0; s < this.nodeOnLineUser.length + 1; s++) {
var r = null;
if (r = s < this.nodeOnLineUser.length ? this.nodeOnLineUser[s] : this.nodeSelfInfo) {
for (var c = [], l = 0; l < r.childrenCount; l++) "pfGameEndScore" == r.children[l].name && c.push(r.children[l]);
for (var h = 0; h < c.length; h++) c[h].removeFromParent();
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
update: function(e) {
if (this.fSountTime > 0) {
this.fSountTime -= e;
this.fSountTime < 0 && (this.fSountTime = 0);
}
this.fTimeCount += e;
if (parseInt(this.fTimeCount / .5) > this.fBeforeTime) {
this.fBeforeTime++;
this.OnOtherBetAction();
}
if (this._jsEndJettonAction.length > 0) for (var t = Math.min(30, this._jsEndJettonAction.length), i = 0; i < t; i++) {
var n = this._jsEndJettonAction.shift();
n && n.node.runAction(n.act);
}
}
});
cc._RF.pop();
}, {} ],
BJL_NewTableCardPannel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1eb48pi651K5p8N+OfO7YL3", "BJL_NewTableCardPannel");
var n = e("BJL_NewCard"), a = cc.Class({
extends: cc.Component,
properties: {
m_cbCardCount: [],
m_cbCardArray: [],
m_nPlayerPoint: 0,
m_nBankerPoint: 0,
m_CardPrefab: cc.Prefab,
m_aPlayerCard: {
default: [],
type: cc.Node
},
m_aBankerCard: {
default: [],
type: cc.Node
},
m_aPlayerCardJs: {
default: [],
type: n
},
m_aBankerCardJs: {
default: [],
type: n
},
m_GameCardType: cc.Node,
pfGameCardType_Skeleton: cc.Prefab,
PokerNumLab: cc.Label,
qiepai: cc.Node
},
onLoad: function() {
for (var e = 0; e < 3; ++e) {
this.m_aPlayerCardJs[e] = this.m_aPlayerCard[e].getComponent("BJL_NewCard");
this.m_aBankerCardJs[e] = this.m_aBankerCard[e].getComponent("BJL_NewCard");
}
this.HideAllCard();
},
HideAllCard: function() {
for (var e = 0; e < this.m_aPlayerCardJs.length; ++e) {
this.m_aPlayerCardJs[e].node.active = !0;
this.m_aPlayerCardJs[e].node.active = !1;
}
for (e = 0; e < this.m_aBankerCardJs.length; ++e) {
this.m_aBankerCardJs[e].node.active = !0;
this.m_aBankerCardJs[e].node.active = !1;
}
this.m_GameCardType.active = !1;
},
ResetData: function(e, t, i, n, a) {
this.m_cbCardCount = e;
this.m_cbCardArray = t;
this.m_nPlayerPoint = i;
this.m_nBankerPoint = n;
this.m_GameCardType.active = !0;
this.m_GameCardType.getChildByName("type_bankerbg").getChildByName("type_bankerpoint").getComponent(cc.Label).string = 0;
this.m_GameCardType.getChildByName("type_playerbg").getChildByName("type_playerpoint").getComponent(cc.Label).string = 0;
this.UpdateView(a);
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardLogicValue: function(e) {
var t = 15 & e, i = t;
t >= 10 && (i = 0);
return i;
},
UpdateView: function(e) {
var t = this;
if (null != this.m_cbCardCount) if (e) for (var i = this, n = 0, a = 0, o = 0; o < 3; ++o) {
if (o < this.m_cbCardCount[0]) {
(function() {
s = cc.v2(t.m_aPlayerCard[o].x, t.m_aPlayerCard[o].y);
var e = new cc.instantiate(t.m_CardPrefab);
t.node.addChild(e);
e.opacity = 0;
e.x = 885;
e.y = 57;
r = [ 0, 0, 90 ];
var l = o;
c = cc.sequence(cc.delayTime(n), cc.callFunc(function() {
i.MinusPokerNum();
e.opacity = 255;
2 == l ? window.mfConfig.PlayAudio("138/Audio/bjl_player_add", !1, window.mfConfig.fSound) : window.mfConfig.PlayAudio("138/Audio/bjl_send_card_player", !1, window.mfConfig.fSound);
}), cc.moveTo(.2, s), cc.rotateTo(0 == r[l] ? 0 : .1, r[l]), cc.scaleTo(.2, 0, 1), cc.callFunc(function() {
e.getComponent("BJL_NewCard").ResetCardData(i.m_cbCardArray[0][l]);
for (var t = 0, n = 0; n < l + 1; ++n) t += i.GetCardLogicValue(i.m_cbCardArray[0][n]);
t %= 10;
i.m_GameCardType.getChildByName("type_playerbg").getChildByName("type_playerpoint").getComponent(cc.Label).string = t;
i.m_aPlayerCardJs[l].ResetCardData(i.m_cbCardArray[0][l]);
}), cc.scaleTo(.2, 1, 1), cc.delayTime(.2), cc.callFunc(function() {
i.m_aPlayerCard[l].active = !0;
i.m_aPlayerCardJs[l].node.active = !0;
}), cc.delayTime(.1), cc.callFunc(function() {
e.destroy();
}));
e.runAction(c);
n = 1 * ++a;
})();
}
if (o < this.m_cbCardCount[1]) {
var s, r, c;
(function() {
s = cc.v2(t.m_aBankerCard[o].x, t.m_aBankerCard[o].y);
var e = new cc.instantiate(t.m_CardPrefab);
t.node.addChild(e);
e.opacity = 0;
e.x = 885;
e.y = 57;
r = [ 0, 0, -90 ];
var l = o;
c = cc.sequence(cc.delayTime(n), cc.callFunc(function() {
i.MinusPokerNum();
e.opacity = 255;
2 == l ? window.mfConfig.PlayAudio("138/Audio/bjl_banker_add", !1, window.mfConfig.fSound) : window.mfConfig.PlayAudio("138/Audio/bjl_send_card_banker", !1, window.mfConfig.fSound);
}), cc.moveTo(.2, s), cc.rotateTo(0 == r[l] ? 0 : .1, r[l]), cc.scaleTo(.2, 0, 1), cc.callFunc(function() {
e.getComponent("BJL_NewCard").ResetCardData(i.m_cbCardArray[1][l]);
for (var t = 0, n = 0; n < l + 1; ++n) t += i.GetCardLogicValue(i.m_cbCardArray[1][n]);
t %= 10;
i.m_GameCardType.getChildByName("type_bankerbg").getChildByName("type_bankerpoint").getComponent(cc.Label).string = t;
i.m_aBankerCardJs[l].ResetCardData(i.m_cbCardArray[1][l]);
}), cc.scaleTo(.2, 1, 1), cc.delayTime(.2), cc.callFunc(function() {
i.m_aBankerCard[l].active = !0;
i.m_aBankerCardJs[l].node.active = !0;
}), cc.delayTime(.1), cc.callFunc(function() {
e.destroy();
}));
e.runAction(c);
n = 1 * ++a;
})();
}
var l = 1 * (this.m_cbCardCount[0] + this.m_cbCardCount[1]), h = 1;
this.m_nPlayerPoint >= 8 && 2 == this.m_cbCardCount[0] && (h = 0);
var u = 1;
this.m_nBankerPoint >= 8 && 2 == this.m_cbCardCount[1] && (u = 0);
var d = 1;
this.m_nPlayerPoint >= 8 && 2 == this.m_cbCardCount[0] && (d = 2);
var m = 1;
this.m_nBankerPoint >= 8 && 2 == this.m_cbCardCount[1] && (m = 2);
var f = 0;
this.GetCardValue(this.m_cbCardArray[0][0]) == this.GetCardValue(this.m_cbCardArray[0][1]) && (f = 1);
var p = 0;
this.GetCardValue(this.m_cbCardArray[1][0]) == this.GetCardValue(this.m_cbCardArray[1][1]) && (p = 1);
var _ = cc.sequence(cc.delayTime(l), cc.callFunc(function() {
i.m_nPlayerPoint > i.m_nBankerPoint || i.m_nPlayerPoint < i.m_nBankerPoint || (i.m_nPlayerPoint, 
i.m_nBankerPoint);
}), cc.callFunc(function() {
(i.m_nPlayerPoint < 8 || i.m_nPlayerPoint >= 8 && 3 == i.m_cbCardCount[0]) && window.mfConfig.PlayAudio("138/Audio/bjl_send_card_player", !1, window.mfConfig.fSound);
}), cc.delayTime(h), cc.callFunc(function() {
if (i.m_nPlayerPoint < 8 || i.m_nPlayerPoint >= 8 && 3 == i.m_cbCardCount[0]) {
var e = "138/Audio/bjl_point_" + i.m_nPlayerPoint;
window.mfConfig.PlayAudio(e, !1, window.mfConfig.fMusic);
}
}), cc.delayTime(d), cc.callFunc(function() {
(i.m_nBankerPoint < 8 || i.m_nBankerPoint >= 8 && 3 == i.m_cbCardCount[1]) && window.mfConfig.PlayAudio("138/Audio/bjl_send_card_banker", !1, window.mfConfig.fSound);
}), cc.delayTime(u), cc.callFunc(function() {
if (i.m_nBankerPoint < 8 || i.m_nBankerPoint >= 8 && 3 == i.m_cbCardCount[1]) {
var e = "138/Audio/bjl_point_" + i.m_nBankerPoint;
window.mfConfig.PlayAudio(e, !1, window.mfConfig.fMusic);
}
}), cc.delayTime(m), cc.callFunc(function() {
i.m_nPlayerPoint > i.m_nBankerPoint ? window.mfConfig.PlayAudio("138/Audio/bjl_player_win", !1, window.mfConfig.fMusic) : i.m_nPlayerPoint < i.m_nBankerPoint ? window.mfConfig.PlayAudio("138/Audio/bjl_banker_win", !1, window.mfConfig.fMusic) : i.m_nPlayerPoint == i.m_nBankerPoint && window.mfConfig.PlayAudio("138/Audio/bjl_he", !1, window.mfConfig.fMusic);
}), cc.delayTime(f), cc.callFunc(function() {
i.GetCardValue(i.m_cbCardArray[0][0]) == i.GetCardValue(i.m_cbCardArray[0][1]) && window.mfConfig.PlayAudio("138/Audio/bjl_player_pair", !1, window.mfConfig.fMusic);
}), cc.delayTime(p), cc.callFunc(function() {
i.GetCardValue(i.m_cbCardArray[1][0]) == i.GetCardValue(i.m_cbCardArray[1][1]) && window.mfConfig.PlayAudio("138/Audio/bjl_banker_pair", !1, window.mfConfig.fMusic);
}));
this.node.runAction(_);
} else {
for (var S = 0; S < this.m_cbCardCount[0]; ++S) {
this.m_aPlayerCardJs[S].ResetCardData(this.m_cbCardArray[0][S]);
this.m_aPlayerCardJs[S].node.active = !0;
}
for (S = 0; S < this.m_cbCardCount[1]; ++S) {
this.m_aBankerCardJs[S].ResetCardData(this.m_cbCardArray[1][S]);
this.m_aBankerCardJs[S].node.active = !0;
}
this.m_GameCardType.getChildByName("type_playerbg").getChildByName("type_playerpoint").getComponent(cc.Label).string = this.m_nPlayerPoint;
this.m_GameCardType.getChildByName("type_bankerbg").getChildByName("type_bankerpoint").getComponent(cc.Label).string = this.m_nBankerPoint;
this.m_nPlayerPoint > this.m_nBankerPoint || this.m_nPlayerPoint < this.m_nBankerPoint || (this.m_nPlayerPoint, 
this.m_nBankerPoint);
}
},
MinusPokerNum: function() {
this.PokerNum--;
this.PokerNumLab.string = "" + this.PokerNum;
},
IsEnoughPokerNum: function(e) {
if (e) {
var t = this;
this.qiepai.active = !0;
var i = this.qiepai.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "animation");
i.setCompleteListener(function() {
t.qiepai.active = !1;
t.InitPokerNum(416);
});
} else if (this.PokerNum < 6) {
var n = this;
this.qiepai.active = !0;
var a = this.qiepai.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !1, "animation");
a.setCompleteListener(function() {
n.qiepai.active = !1;
n.InitPokerNum(416);
});
}
},
InitPokerNum: function(e) {
this.PokerNum = e;
console.log("this.PokerNum = " + this.PokerNum);
this.PokerNumLab.string = "" + this.PokerNum;
}
});
t.exports.BJL_TableCardPannel = a;
cc._RF.pop();
}, {
BJL_NewCard: "BJL_NewCard"
} ],
BJL_NewTableResultPannel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "915eco16UdJIIZDp55/ndZq", "BJL_NewTableResultPannel");
cc.Class({
extends: cc.Component,
properties: {
m_nPlayerPoint: 0,
m_nBankerPoint: 0,
m_bPlayer: 0,
m_bDraw: 0,
m_bBanker: 0,
m_bPlayerPair: 0,
m_bBankerPair: 0,
m_labPlayerPoint: cc.Label,
m_labBankerPoint: cc.Label,
m_sprPlayer: cc.Sprite,
m_sprDraw: cc.Sprite,
m_sprBanker: cc.Sprite,
m_sprPlayerPair: cc.Sprite,
m_sprBankerPair: cc.Sprite
},
ctor: function() {
this.m_bPlayer = !1;
this.m_bDraw = !1;
this.m_bBanker = !1;
this.m_bPlayerPair = !1;
this.m_bBankerPair = !1;
},
onLoad: function() {
this.UpdateView();
},
HideAllFlag: function() {
this.m_labPlayerPoint.node.active = !1;
this.m_labBankerPoint.node.active = !1;
this.m_sprPlayer.node.active = !1;
this.m_sprDraw.node.active = !1;
this.m_sprBanker.node.active = !1;
this.m_sprPlayerPair.node.active = !1;
this.m_sprBankerPair.node.active = !1;
},
ResetData: function(e) {
this.m_nPlayerPoint = e.nPlayerPoint;
this.m_nBankerPoint = e.nBankerPoint;
this.m_bPlayer = e.bPlayer;
this.m_bDraw = e.bDraw;
this.m_bBanker = e.bBanker;
this.m_bPlayerPair = e.bPlayerPair;
this.m_bBankerPair = e.bBankerPair;
this.UpdateView();
},
UpdateView: function() {
this.HideAllFlag();
this.m_labPlayerPoint.string = this.m_nPlayerPoint;
this.m_labBankerPoint.string = this.m_nBankerPoint;
1 == this.m_bPlayer && (this.m_sprPlayer.node.active = !0);
1 == this.m_bDraw && (this.m_sprDraw.node.active = !0);
1 == this.m_bBanker && (this.m_sprBanker.node.active = !0);
1 == this.m_bPlayerPair && (this.m_sprPlayerPair.node.active = !0);
1 == this.m_bBankerPair && (this.m_sprBankerPair.node.active = !0);
}
});
cc._RF.pop();
}, {} ],
BJL_NewTimeDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1148+/khJJDqqFErW1PYs1", "BJL_NewTimeDown");
cc.Class({
extends: cc.Component,
properties: {
nodeTimeTip: cc.Node,
labelTime: cc.Label,
timeProgressBar: cc.ProgressBar,
cbActionTime: 5
},
fGameCount: 0,
bPlaySound: !1,
bPlayAction: !1,
onLoad: function() {
this.cbBeforeTime = 0;
this.bSound = !1;
this.timeProgressBar.totalLength = .8;
},
OnReset: function() {
this.bPlaySound = !1;
this.bPlayAction = !1;
this.bSound = !1;
this.cbBeforeTime = 0;
},
OnSetGameTime: function(e, t, i) {
this.OnReset();
this.fGameCount = e;
this.maxTime = this.fGameCount;
this.bPlaySound = t;
this.bPlayAction = i;
},
update: function(e) {
this.fGameCount > 0 ? this.fGameCount -= e : this.fGameCount = 0;
var t = parseInt(Math.ceil(this.fGameCount));
if (this.bPlaySound || this.bPlayAction) {
if (t <= this.cbActionTime + 1 && !this.bSound) {
this.cbBeforeTime = t;
this.bSound = !0;
}
if (this.cbBeforeTime - t == 1) {
if (this.bPlaySound) {
window.mfConfig.PlayAudio("GameFrame/Audio/TimeDown");
}
this.cbBeforeTime = t;
}
}
if (t > 0) {
this.timeProgressBar.node.active = !0;
this.labelTime.string = "" + t;
this.timeProgressBar.progress = this.fGameCount / this.maxTime;
this.timeProgressBar.node.getChildByName("bar").color = new cc.color(252 - 208 * this.timeProgressBar.progress, 40 + 164 * this.timeProgressBar.progress, 40 + 13 * this.timeProgressBar.progress);
this.nodeTimeTip && (this.nodeTimeTip.active = !0);
} else {
this.timeProgressBar.node.active = !1;
this.labelTime.string = "";
this.timeProgressBar.progress = 0;
this.nodeTimeTip && (this.nodeTimeTip.active = !1);
}
}
});
cc._RF.pop();
}, {} ],
BJL_NewXiaoLuItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "64168iuxI9PXqVK0be31+Es", "BJL_NewXiaoLuItem");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
BJL_NewXiaoQiangLuItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "592540tbyxLarfNDCg0a8ry", "BJL_NewXiaoQiangLuItem");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
BJL_NewZhuZaiLuItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ff8b3zQCeBPXbhys+uY8Kv/", "BJL_NewZhuZaiLuItem");
var n = e("BJL_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_TexturePlayerPair: cc.SpriteFrame,
m_TextureBankerPair: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_sprLeftTopFlg: cc.Sprite,
m_sprRightBottomFlg: cc.Sprite
},
onLoad: function() {
this.m_XPos = 0;
this.m_YPos = 0;
this.m_GameResult = new n.tagTableResult();
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_sprLeftTopFlg.node.active = !1;
this.m_sprRightBottomFlg.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (1 == this.m_GameResult.bDraw) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureDraw;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
if (1 == this.m_GameResult.bPlayerPair) {
this.m_sprLeftTopFlg.node.active = !0;
this.m_sprLeftTopFlg.spriteFrame = this.m_TexturePlayerPair;
}
if (1 == this.m_GameResult.bBankerPair) {
this.m_sprRightBottomFlg.node.active = !0;
this.m_sprRightBottomFlg.spriteFrame = this.m_TextureBankerPair;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
BJL_NewCMD_Game: "BJL_NewCMD_Game"
} ],
BPacketAide: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1be021f/ZEZKfhIDyTs3/1", "BPacketAide");
window.DTP_NULL = 0;
window.tagDataDescribe = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wDataSize = 0;
this.wDataDescribe = 0;
}
});
window.SendPacketHelper_GetPacket = function(e, t, i) {
var n = new tagDataDescribe();
n.wDataSize = t;
n.wDataDescribe = i;
n.cbDataBuffer = e.concat();
return n;
};
window.RecvPacketHelper_GetPacket = function(e, t, i) {
var n = new tagDataDescribe(), a = n.GetDataSize();
if (t > 0) {
n.init(e, i);
n.cbDataBuffer = e.slice(i + a, i + a + n.wDataSize);
}
return n;
};
cc._RF.pop();
}, {} ],
BPacket: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "13812VJF61IKZb9vEGkUTEE", "BPacket");
window.VER_BUILD = 1;
window.VER_PRDCT = 1;
window.PROCESS_VERSION = function(e, t, i) {
return (window.VER_PRDCT << 24) + (e << 16) + (t << 8) + i;
};
window.REV_PROCESS_VERSION3 = function(e) {
return (e >> 16 & 255) + "." + (e >> 8 & 255) + "." + (255 & e);
};
window.INVALID_WORD = 65535;
window.MAX_CONTENT = 512;
window.PORT_AUTO_SELECT = INVALID_WORD;
window.PORT_LOGON = 1700;
window.PORT_CENTER = 1710;
window.PORT_MANAGER = 1720;
window.PORT_MSG_SERVER = 17300;
window.PORT_CLUSTER = 1740;
window.DK_MAPPED = 1;
window.DK_ENCRYPT = 2;
window.DK_COMPRESS = 4;
window.SOCKET_TCP_BUFFER = 16384;
window.SOCKET_TCP_PACKET = SOCKET_TCP_BUFFER - 8;
window.SOCKET_UDP_BUFFER = 16384;
window.SOCKET_UDP_PACKET = SOCKET_UDP_BUFFER - 8;
window.TCP_Info = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbDataKind = 0;
this.cbCheckCode = 0;
this.wPacketSize = 0;
},
init: function(e) {
this.cbDataKind = Value_GetByte(e, 0);
this.cbCheckCode = Value_GetByte(e, 1);
this.wPacketSize = Value_GetWord(e, 2);
}
});
window.TCP_Command = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wMainCmdID = 0;
this.wSubCmdID = 0;
},
initWtihHead: function(e) {
this.wMainCmdID = Value_GetWord(e, 4);
this.wSubCmdID = Value_GetWord(e, 6);
}
});
window.TCP_HeadSize = 8;
window.TCP_Head = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbDataKind = 0;
this.cbCheckCode = 0;
this.wPacketSize = 0;
this.wMainCmdID = 0;
this.wSubCmdID = 0;
}
});
window.TCP_Validate = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szValidateKey = [];
ZeroArray(this.szValidateKey, 64);
}
});
window.TCP_Buffer = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.TCPHead = new TCP_Head();
this.cbBuffer = [];
}
});
window.MDM_KN_COMMAND = 0;
window.SUB_KN_DETECT_SOCKET = 1;
window.SUB_KN_SHUT_DOWN_SOCKET = 2;
window.SUB_KN_VALIDATE_SOCKET = 3;
window.SUB_KN_VALIDATE_SOCKET_MOBILE = 4;
window.SUB_KN_VALIDATE_SOCKET_WEB = 5;
window.g_dwPacketKey = 2774181210;
window.g_encryptkey = [ 18, 242, 59, 161, 192, 32, 79, 76, 19, 77, 46, 124, 177, 160, 167, 188, 147, 98, 78, 167, 8, 91, 44, 30, 3, 116, 145, 162, 185, 130, 30, 60 ];
window.g_SendByteMap = [ 105, 47, 106, 179, 151, 15, 183, 150, 163, 135, 7, 102, 147, 238, 253, 118, 81, 107, 158, 36, 186, 49, 243, 85, 101, 55, 137, 239, 125, 142, 41, 73, 211, 236, 94, 219, 154, 96, 56, 68, 90, 139, 70, 104, 123, 75, 72, 136, 205, 190, 46, 51, 144, 112, 217, 114, 108, 83, 225, 25, 214, 204, 52, 169, 166, 248, 115, 187, 19, 165, 241, 182, 65, 192, 149, 37, 63, 133, 178, 74, 254, 226, 129, 210, 162, 5, 200, 1, 28, 185, 180, 152, 113, 160, 67, 26, 42, 172, 35, 216, 17, 95, 146, 14, 181, 99, 197, 61, 116, 77, 34, 191, 184, 13, 11, 59, 24, 40, 91, 140, 22, 215, 111, 157, 122, 20, 220, 189, 76, 167, 203, 4, 132, 177, 0, 138, 255, 64, 212, 92, 234, 130, 131, 119, 16, 173, 126, 228, 6, 128, 32, 199, 23, 175, 221, 176, 39, 86, 100, 246, 247, 208, 8, 194, 141, 229, 3, 227, 171, 145, 143, 84, 198, 33, 240, 252, 193, 109, 237, 242, 110, 134, 230, 87, 60, 121, 97, 250, 156, 21, 82, 50, 9, 213, 44, 53, 117, 244, 29, 174, 233, 232, 31, 93, 161, 120, 218, 231, 58, 12, 78, 66, 224, 69, 170, 103, 38, 159, 88, 245, 164, 54, 30, 195, 155, 207, 222, 43, 124, 148, 188, 202, 71, 223, 62, 80, 201, 235, 48, 45, 2, 98, 153, 18, 209, 57, 249, 251, 27, 79, 89, 206, 168, 10, 127, 196 ];
window.g_RecvByteMap = [ 134, 87, 240, 166, 131, 85, 148, 10, 162, 192, 253, 114, 209, 113, 103, 5, 144, 100, 243, 68, 125, 189, 120, 152, 116, 59, 95, 248, 88, 198, 222, 202, 150, 173, 110, 98, 19, 75, 216, 156, 117, 30, 96, 227, 194, 239, 50, 1, 238, 21, 191, 51, 62, 195, 221, 25, 38, 245, 208, 115, 184, 107, 234, 76, 137, 72, 211, 94, 39, 213, 42, 232, 46, 31, 79, 45, 128, 109, 210, 249, 235, 16, 190, 57, 171, 23, 157, 183, 218, 250, 40, 118, 139, 203, 34, 101, 37, 186, 241, 105, 158, 24, 11, 215, 43, 0, 2, 17, 56, 177, 180, 122, 53, 92, 55, 66, 108, 196, 15, 143, 205, 185, 124, 44, 228, 28, 146, 254, 149, 82, 141, 142, 132, 77, 181, 9, 47, 26, 135, 41, 119, 164, 29, 170, 52, 169, 102, 12, 229, 74, 7, 4, 91, 242, 36, 224, 188, 123, 18, 217, 93, 204, 84, 8, 220, 69, 64, 129, 252, 63, 214, 168, 97, 145, 199, 153, 155, 133, 78, 3, 90, 104, 71, 6, 112, 89, 20, 67, 230, 127, 49, 111, 73, 176, 163, 223, 255, 106, 172, 151, 86, 236, 231, 130, 61, 48, 251, 225, 161, 244, 83, 32, 138, 193, 60, 121, 99, 54, 206, 35, 126, 154, 226, 233, 212, 58, 81, 167, 147, 165, 182, 207, 201, 200, 140, 237, 33, 178, 13, 27, 174, 70, 179, 22, 197, 219, 159, 160, 65, 246, 187, 247, 175, 14, 80, 136 ];
window.s_NormalLastColorPokerKing0 = "MPWh0vYpm/AcHnUn1bvxAg==";
cc._RF.pop();
}, {} ],
BRNN_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2c49c0TwZBHrYtkEVERtkUb", "BRNN_CMD_Game");
var n = MAX_CHAIR, a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_END = s;
t.exports.CT_SPECIAL_NONIU = 0;
t.exports.CT_SPECIAL_NIU1 = 1;
t.exports.CT_SPECIAL_NIU2 = 2;
t.exports.CT_SPECIAL_NIU3 = 3;
t.exports.CT_SPECIAL_NIU4 = 4;
t.exports.CT_SPECIAL_NIU5 = 5;
t.exports.CT_SPECIAL_NIU6 = 6;
t.exports.CT_SPECIAL_NIU7 = 7;
t.exports.CT_SPECIAL_NIU8 = 8;
t.exports.CT_SPECIAL_NIU9 = 9;
t.exports.CT_SPECIAL_NIUNIU = 10;
t.exports.CT_FOUR_FLOWER = 11;
t.exports.CT_FIVE_FLOWER = 12;
t.exports.CT_BOMB = 13;
t.exports.CT_WU_XIAO_NIU = 14;
t.exports.KIND_ID = 141;
t.exports.GAME_PLAYER = n;
t.exports.GAME_NAME = "百人牛牛";
t.exports.MAX_COUNT = 5;
t.exports.AREA_COUNT = 8;
t.exports.JETTON_COUNT = 5;
t.exports.AREA_MAX = 8;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_USER_BET = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_C_USER_BET = 1;
cc._RF.pop();
}, {} ],
BRNN_CardNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "15756xSOy5CN4dBX4QzonqW", "BRNN_CardNode");
var n = 0, a = 1, o = 2;
cc.Class({
extends: cc.Component,
properties: {
nCard_Width: 0,
nCard_Height: 0,
cbCard_Data: 0,
cbCard_DataIndex: 0,
cbCard_Value: 0,
cbCard_Color: 0,
szCard_Name: "",
mCard_ViewID: 0,
mCard_ChairID: 0,
cbCard_Status: 0,
cbCard_Mark: 0,
pCard_BankerSign: null,
bCard_EnableSelect: !1,
bCard_Select: !1,
bCard_Move: !1,
bCard_Touch: !1,
bCard_Swallows: !1
},
onLoad: function() {
this.initData();
},
initData: function() {
this.nCard_Width = 156;
this.nCard_Height = 226;
this.cbCard_Data = 0;
this.cbCard_DataIndex = 0;
this.cbCard_Value = 0;
this.cbCard_Color = 0;
this.szCard_Name = "";
this.mCard_ViewID = 0;
this.mCard_ChairID = null;
this.cbCard_Status = 0;
this.cbCard_Mark = 0;
this.pCard_BankerSign = 0;
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return 240 & e;
},
SetStatus: function(e) {
this.cbCard_Status = e;
},
GetStatus: function() {
return this.cbCard_Status;
},
OpenDisableStatus: function() {
this.bCard_EnableSelect = !0;
this.node.color = cc.color(170, 170, 170);
},
CloseDisableStatus: function() {
this.bCard_EnableSelect = !1;
this.node.color = cc.color(255, 255, 255);
},
SetSelect: function(e) {
this.bCard_Select = e;
},
GetSelect: function() {
return this.bCard_Select;
},
SetSwallows: function(e) {
this.bCard_Swallows = e;
},
GetSwallows: function() {
return this.bCard_Swallows;
},
SetCardData: function(e, t, i) {
var n = this.GetCardColor(i) >> 4, a = n;
1 == n && (a = 2);
2 == n && (a = 3);
3 == n && (a = 1);
var o = 78 == i || 79 == i ? this.GetCardValue(i) % 14 : this.GetCardValue(i) - 1, s = this.node.getComponent(cc.Sprite);
s.spriteFrame = s.spriteFrame.clone();
s.spriteFrame.setRect(cc.rect(this.nCard_Width * o, this.nCard_Height * a, this.nCard_Width, this.nCard_Height));
this.cbCard_Data = i;
this.cbCard_Value = o;
this.cbCard_Color = a;
this.cbCard_DataIndex = t;
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
this.node.setScale(e, e);
},
GetCardData: function() {
return this.cbCard_Data;
},
ResetData: function() {
this.SetStatus(n);
this.cbCard_Mark = !1;
this.SetSelect(!1);
this.node.color = new cc.Color(255, 255, 255);
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
SetFrontCardTexture: function(e) {
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
var t = this.node.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(this.nCard_Width * cbValue, this.nCard_Height * cbColor, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetBackCardTexture: function(e) {
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
var t = this.node.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(2 * this.nCard_Width, 4 * this.nCard_Height, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetEndCardTexture: function(e) {
this.node.setScale(e, e);
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
},
SetOntouch: function(e) {
this.SetSelect(e);
},
SetpromptCardTexture: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
},
OnCardClickBegin: null,
OnCardClickEnded: null,
OnCardButtonEvent: function() {
if (!this.OnCardClickBegin || !this.OnCardClickBegin(this)) {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
} else {
this.node.setPositionY(this.node.getPositionY() + 30);
this.SetSelect(!0);
}
this.OnCardClickEnded && this.OnCardClickEnded(this);
}
},
OnCardUpspringEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(a);
this.node.setPositionY(this.node.getPositionY() + 30);
this.cbCard_Mark = !0;
this.SetSwallows(!0);
this.SetSelect(!0);
}
},
OnCardDownEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(o);
this.node.setPositionY(this.node.getPositionY() - 30);
this.cbCard_Mark = !1;
this.SetSwallows(!0);
this.SetSelect(!1);
}
},
TurnhandLayout: function() {
this.SetSelect(!1);
},
SubAlign: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
}
});
cc._RF.pop();
}, {} ],
BRNN_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3c93cwrm3hFmJJ9ruL87s4o", "BRNN_GameEngine");
var n = e("BRNN_CMD_Game"), a = cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("BRNN_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.ResetGameEngine();
this.cbGameStatus = 0, this.m_fRoundTime = 0, this.playerCards = [], this.playerCardsType = [], 
this.areasWinResult = [];
this.keepBetObj = [];
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
this.pGameViewJs.PlaySound("BackgroundMusic");
},
OnEventSceneMessage: function(e, t, i, a) {
for (var o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i), s = o.tGameRecord.length - 1; s >= 0 && !(this.pGameViewJs.gameRecordMe.length >= 5); s--) {
var r = o.tGameRecord[s], c = [];
c.push(r.bWinTian);
c.push(r.bWinDi);
c.push(r.bWinXuan);
c.push(r.bWinHuang);
this.pGameViewJs.gameRecordMe.unshift(c);
}
this.pGameViewJs.RefreshGameRecord();
switch (e) {
case n.GAME_SCENE_FREE:
return this.OnSceneFree(o, a);

case n.GAME_SCENE_PLAY:
case n.GAME_SCENE_END:
return this.OnSceneEnd(o, a);
}
return !0;
},
OnSceneFree: function(e, t) {
this.SetGameStatus(n.GAME_SCENE_FREE);
this.cbGameStatus = n.GAME_SCENE_FREE;
this.pGameViewJs.lBetChip = e.BetChips;
this.pGameViewJs.bEnableSysBanker = e.bEnableSysBanker;
this.lUserAreaLimit = e.UserAreaBetLimit;
this.lBetChip = e.BetChips;
this.pGameViewJs.ShowBetChip();
this.pGameViewJs.OnFrameInitJetton(e.BetChips);
this.pGameViewJs.ShowBetJetton(!1);
this.m_fRoundTime = e.TimeLeave;
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(n.GAME_SCENE_FREE);
return !0;
},
OnSceneEnd: function(e, t) {
var i = this;
this.SetGameStatus(n.GAME_SCENE_FREE);
this.cbGameStatus = e.GameStatus;
this.pGameViewJs.lBetChip = e.BetChips;
this.pGameViewJs.bEnableSysBanker = e.bEnableSysBanker;
this.lUserAreaLimit = e.UserAreaBetLimit;
this.lBetChip = e.BetChips;
this.pGameViewJs.lAryAllJettonScore = e.AreaTotalBet;
this.pGameViewJs.lAryUserJettonScore = e.UserAreaBet;
this.pGameViewJs.ShowBetChip();
this.pGameViewJs.UpdateTableBetInfo();
this.pGameViewJs.OnFrameInitJetton(e.BetChips);
this.m_fRoundTime = e.TimeLeave;
this.pGameViewJs.ShowBetLayer(!0);
var a = e.AreaTotalBet, o = e.MostWinUserAreaBet, s = 0, r = 0, c = 0;
e.UserAreaBet.forEach(function(e, t, i) {
s += e;
});
e.MostWinUserAreaBet.forEach(function(e, t, i) {
r += e;
});
e.lMostBet.forEach(function(e, t, i) {
c += e;
});
var l = [];
memset(l, 0, n.GAME_PLAYER);
e.wOnlineUserChairID[0] != INVALID_CHAIR && (l[e.wOnlineUserChairID[0]] = r);
e.wOnlineUserChairID[1] != INVALID_CHAIR && (l[e.wOnlineUserChairID[1]] = c);
l[this.GetMeChairID()] = s;
this.pGameViewJs.OnFrameBetInfo(a, o, l);
if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
this.pGameViewJs.showSendHandCardBack();
this.pGameViewJs.ShowBetJetton(!0);
for (var h = 0; h < e.UserAreaBet.length; h++) if (e.UserAreaBet[h] > 0) {
this.SetGameStatus(n.GAME_SCENE_PLAY);
break;
}
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(n.GAME_SCENE_PLAY);
} else if (this.cbGameStatus == n.GAME_SCENE_END) {
this.pGameViewJs.ShowBetJetton(!1);
var u = [];
e.cbTableCardArray.forEach(function(e, t, i) {
u.push(e.Cards);
});
this.playerCards = u;
this.playerCardsType = [];
e.CardType.forEach(function(e, t, n) {
i.playerCardsType.push(e - 1);
});
this.pGameViewJs.ShowGameEndWithGameScene(!1);
this.pGameViewJs.OnWaitStatus(!0);
var d = [];
memset(d, 0, n.GAME_PLAYER);
INVALID_CHAIR != e.wOnlineUserChairID[0] && (d[e.wOnlineUserChairID[0]] = e.lOnlineUserScore[0]);
INVALID_CHAIR != e.wOnlineUserChairID[1] && (d[e.wOnlineUserChairID[1]] = e.lOnlineUserScore[1]);
d[this.GetMeChairID()] = e.lPlayAllScore;
this.pGameViewJs.OnFrameGameEndAction([], d, !1);
}
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnGameStart(t, i);

case n.SUB_S_USER_BET:
return this.OnGameUserBet(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t, i);

case n.SUB_S_GAME_END:
return this.OnGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnShowUserList(t, i);
}
return !0;
},
OnGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.pGameViewJs.ResetValue();
this.pGameViewJs.DeleteCard();
this.SetGameStatus(n.GAME_SCENE_FREE);
this.cbGameStatus = n.GAME_SCENE_FREE;
this.m_fRoundTime = i.TimeLeave;
this.pGameViewJs.OnWaitStatus(!1);
this.pGameViewJs.ShowBetLayer(!1);
this.pGameViewJs.ShowBetJetton(!1);
this.pGameViewJs.OnFrameResetView();
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(n.GAME_SCENE_FREE);
this.bFirstBet = !0;
return !0;
},
OnGameStart: function(e, t) {
var i = this, a = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.m_fRoundTime = a.TimeLeave;
this.pGameViewJs.ResetValue();
this.pGameViewJs.ShowSendHandCard(function() {
i.pGameViewJs.OnBetBegin(function() {
i.cbGameStatus = n.GAME_SCENE_PLAY;
i.pGameViewJs.ShowGameStatus(n.GAME_SCENE_PLAY);
i.SetTime(!0);
i.pGameViewJs.ShowBetLayer(!0);
i.pGameViewJs.ShowBetJetton(!0);
});
});
return !0;
},
OnGameUserBet: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
var n = i.AreaIndex - 1;
if (null != n) {
this.pGameViewJs.PlaceUserJetton(i.ChairID, n, i.BetScore);
if (this.GetMeChairID() == i.ChairID) {
this.SetGameStatus(GAME_STATUS_PLAY);
this.pGameViewJs.UpdateBetJetton();
}
if (!this.bClickKeepBet) {
this.bFirstBet && (this.keepBetObj = []);
this.keepBetObj.push(i);
}
this.bFirstBet = !1;
this.pGameViewJs.BtnKeepBet.interactable = !1;
return !0;
}
} else if (1001 == i.RetCode) {
var a = StringFormat(Language_GetTxtByID(i.RetCode), OnIntScore(this.lUserAreaLimit));
ManagerHelp_SetSystemLabel(a);
} else {
var o = Language_GetTxtByID(i.RetCode);
ManagerHelp_SetSystemLabel(o);
}
},
OnGameOthersBet: function(e, t) {
var i = this;
window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e).UsersBetList.forEach(function(e, t, n) {
if (i.GetMeChairID() != e.ChairID) {
var a = e.AreaIndex - 1;
null != a && i.pGameViewJs.PlaceUserJetton(e.ChairID, a, e.BetScore);
}
});
return !0;
},
OnGameEnd: function(e, t) {
var i = this, a = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GAME_SCENE_END;
var o = [];
memset(o, 0, MAX_CHAIR);
a.UserWinList.forEach(function(e, t, i) {
null == e.WinScore.high && null == e.WinScore.low ? o[e.ChairID] = e.WinScore : o[e.ChairID] = 0;
});
this.pGameViewJs.lAllUserScore = o;
this.m_fRoundTime = a.TimeLeave;
this.pGameViewJs.ShowBetJetton(!1);
var s = [];
a.SortAreaCards.forEach(function(e, t, i) {
s.push(e.Cards);
});
this.playerCards = s;
this.playerCardsType = [];
a.CardTypeArray.forEach(function(e, t, n) {
i.playerCardsType.push(e - 1);
});
this.areasWinResult = a.AreaIndex;
var r = this;
this.pGameViewJs.OnBetFinish(function() {
r.pGameViewJs.ShowGameEndWithGameScene(!0);
});
this.m_fRoundTime = 0;
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(n.GAME_SCENE_END);
return !0;
},
OnShowUserList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.ShowUserlist(i);
return !0;
},
sendPackageUserBet: function(e) {
this.bClickKeepBet = null;
var t = window.net.netSerializer.packMsg("CMD_C_UserBet", e);
this.SendGameData(n.SUB_C_USER_BET, t, t.length);
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.m_fRoundTime, e);
},
OnButtonKeepBet: function() {
var e = this;
if (0 != this.keepBetObj.length) if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
var t = this.pGameViewJs.lMeScore, i = 0, a = 0, o = 0;
this.keepBetObj.forEach(function(e, t, n) {
i += e.BetScore;
1 == e.AreaIndex || 3 == e.AreaIndex || 5 == e.AreaIndex || 7 == e.AreaIndex ? o += e.BetScore : a += e.BetScore;
});
if (t < i) {
this.pGameViewJs.BtnKeepBet.interactable = !1;
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1002));
} else if (t < a * this.pGameViewJs.bBeiShu5 + o * this.pGameViewJs.bBeiShu10) {
this.pGameViewJs.BtnKeepBet.interactable = !1;
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1009));
} else {
this.pGameViewJs.BtnKeepBet.interactable = !1;
this.bClickKeepBet = !0;
this.keepBetObj = GetCombineJettonAry(this.keepBetObj, this.lBetChip);
this.keepBetObj.forEach(function(t, i, n) {
var a = {};
a.AreaIndex = parseInt(t.AreaIndex);
a.BetScore = t.BetScore;
e.sendPackageUserBet(a);
});
}
} else ManagerHelp_SetSystemLabel(Language_GetTxtByID(1006)); else ManagerHelp_SetSystemLabel(Language_GetTxtByID(1004));
}
});
t.exports.GameEngineJs = a;
cc._RF.pop();
}, {
BRNN_CMD_Game: "BRNN_CMD_Game"
} ],
BRNN_GameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7f43ezDBHhC8oQKVi8UxEBY", "BRNN_GameLogic");
t.exports.MAX_COUNT = 5;
t.exports.LOGIC_MASK_COLOR = 240;
t.exports.LOGIC_MASK_VALUE = 15;
t.exports.OX_VALUE0 = 0;
t.exports.OX_VALUE0 = 0;
t.exports.OX_THREE_SAME = 102;
t.exports.OX_FOURKING = 103;
t.exports.OX_FIVEKING = 104;
t.exports.OX_FOUR_SAME = 105;
t.exports.OX_FIVEXNIU = 106;
t.exports.CT_SPECIAL_NONIU = 0;
t.exports.CT_SPECIAL_NIU1 = 1;
t.exports.CT_SPECIAL_NIU2 = 2;
t.exports.CT_SPECIAL_NIU3 = 3;
t.exports.CT_SPECIAL_NIU4 = 4;
t.exports.CT_SPECIAL_NIU5 = 5;
t.exports.CT_SPECIAL_NIU6 = 6;
t.exports.CT_SPECIAL_NIU7 = 7;
t.exports.CT_SPECIAL_NIU8 = 8;
t.exports.CT_SPECIAL_NIU9 = 9;
t.exports.CT_SPECIAL_NIUNIU = 10;
t.exports.CT_TRUE_NIUNIUXW = -1;
t.exports.CT_TRUE_NIUNIUDW = -1;
t.exports.CT_FOUR_FLOWER = 11;
t.exports.CT_FIVE_FLOWER = 12;
t.exports.CT_BOMB = 13;
t.exports.CT_WU_XIAO_NIU = 14;
var n = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66 ];
t.exports.m_cbCardListData = n;
var a = cc.Class({
properties: {
cbFourCount: 0,
cbThreeCount: 0,
cbDoubleCount: 0,
cbSignedCount: 0,
cbFourLogicVolue: [],
cbThreeLogicVolue: [],
cbDoubleLogicVolue: [],
cbSignedLogicVolue: [],
cbFourCardData: [],
cbThreeCardData: [],
cbDoubleCardData: [],
cbSignedCardData: []
},
clear: function() {
this.cbFourCount = 0;
this.cbThreeCount = 0;
this.cbDoubleCount = 0;
this.cbSignedCount = 0;
this.cbFourLogicVolue = [];
ZeroArray(this.cbFourLogicVolue, 1);
this.cbThreeLogicVolue = [];
ZeroArray(this.cbThreeLogicVolue, 1);
this.cbDoubleLogicVolue = [];
ZeroArray(this.cbDoubleLogicVolue, 2);
this.cbSignedLogicVolue = [];
ZeroArray(this.cbSignedLogicVolue, 5);
this.cbFourCardData = [];
ZeroArray(this.cbFourCardData, 5);
this.cbThreeCardData = [];
ZeroArray(this.cbThreeCardData, 5);
this.cbDoubleCardData = [];
ZeroArray(this.cbDoubleCardData, 5);
this.cbSignedCardData = [];
ZeroArray(this.cbSignedCardData, 5);
}
});
t.exports.tagAnalyseResult = a;
var o = cc.Class({
statics: {
instance: null
},
ctor: function() {
o.instance = this;
},
GetCardType: function(e, t) {
var i = [];
ZeroArray(i, 5);
i = e.concat();
var n = [];
ZeroArray(n, 5);
n = e.concat();
this.SortCardList(e, t);
this.SortCardList(i, t);
var a = [];
ZeroArray(a, 5);
a = e.concat();
var o = 0, s = [];
ZeroArray2(s, 0, 5);
var r = 0, c = [];
ZeroArray(c, 2);
s[0] = i[o];
for (var l = 0, h = 0, u = 0; u < t; u++) {
10 != this.GetCardLogicValue(i[u]) && 11 != this.GetCardLogicValue(i[u]) || l++;
this.GetCardValue(i[u]) >= 11 && this.GetCardValue(i[u]) <= 13 && h++;
}
for (var d = 0, m = 0; m < 5; m++) d += this.GetCardValue(e[m]);
if (d <= 10) return 14;
if (this.GetCardValue(i[0]) == this.GetCardValue(i[1]) && this.GetCardValue(i[1]) == this.GetCardValue(i[2]) && this.GetCardValue(i[2]) == this.GetCardValue(i[3]) || this.GetCardValue(i[1]) == this.GetCardValue(i[2]) && this.GetCardValue(i[2]) == this.GetCardValue(i[3]) && this.GetCardValue(i[3]) == this.GetCardValue(i[4])) return 13;
if (5 == h) return 12;
if (4 == h && 5 == l) return 11;
if (l >= 3) {
if (4 == this.GetCardColor(i[0]) && 4 == this.GetCardColor(i[1])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return -1;
}
if (4 == this.GetCardColor(i[0])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return i[0], -1;
}
return this.RetType(this.GetCardLogicValue(i[3]) + this.GetCardLogicValue(i[4]));
}
if (2 == l || 1 == l && 4 == this.GetCardColor(i[0])) {
if (4 == this.GetCardColor(i[0]) && 4 == this.GetCardColor(i[1])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return -1;
}
if (4 == this.GetCardColor(i[0])) {
for (o = 1; o < t; o++) for (var f = 1; f < t; f++) if (f != o) for (var p = 1; p < t; p++) if (p != o && p != f && (this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[f]) + this.GetCardLogicValue(i[p])) % 10 == 0) {
for (var _ = 0, S = 1; S < t; S++) if (S != o && S != f && S != p) {
c[_] = i[S];
_++;
}
e[0] = i[o];
e[1] = i[f];
e[2] = i[p];
e[3] = i[0];
e[4] = c[0];
return i[0], -1;
}
var g = [];
ZeroArray(g, 4);
for (var C = 0, w = 1; w < t; w++) for (var b = 1; b < t; b++) if (w != b) {
var A = (this.GetCardLogicValue(i[w]) + this.GetCardLogicValue(i[b])) % 10;
if (A > C) {
C = A;
var v = 0;
g[0] = i[w];
g[1] = i[b];
for (var G = 1; G < t; G++) if (G != w && G != b) {
c[v] = i[G];
v++;
}
g[2] = c[0];
g[3] = c[1];
}
}
e[0] = i[0];
e[1] = g[2];
e[2] = g[3];
e[3] = g[0];
e[4] = g[1];
if (1 == l && 4 == this.GetCardColor(i[0])) {
for (o = 1; o < t; o++) for (var I = 1; I < t; I++) if (I != o && (this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[I])) % 10 == 0) {
for (var D = 0, y = 1; y < t; y++) if (y != o && y != I) {
c[D] = i[y];
D++;
}
e[0] = i[0];
e[1] = c[0];
e[2] = c[1];
e[3] = i[o];
e[4] = i[I];
return n[0], -1;
}
var E = [];
ZeroArray(E, 4);
for (var L = 0, T = 1; T < t; T++) for (var N = 1; N < t; N++) if (T != N) {
var R = (this.GetCardLogicValue(i[T]) + this.GetCardLogicValue(i[N])) % 10;
if (R > L) {
L = R;
var B = 0;
E[0] = i[T];
E[1] = i[N];
for (var M = 1; M < t; M++) if (M != T && M != N) {
c[B] = i[M];
B++;
}
E[2] = c[0];
E[3] = c[1];
}
}
e[0] = i[0];
e[1] = E[2];
e[2] = E[3];
e[3] = E[0];
e[4] = E[1];
return this.RetType(this.GetCardLogicValue(E[0]) + this.GetCardLogicValue(E[1]));
}
return this.RetType(this.GetCardLogicValue(g[0]) + this.GetCardLogicValue(g[1]));
}
if ((this.GetCardLogicValue(i[2]) + this.GetCardLogicValue(i[3]) + this.GetCardLogicValue(i[4])) % 10 == 0) {
for (var P = 0, O = 0; O < t; O++) 2 != O && 3 != O && 4 != O && (c[P++] = i[O]);
var U = [];
ZeroArray(U, 5);
U[0] = i[2];
U[1] = i[3];
U[2] = i[4];
U[3] = c[0];
U[4] = c[1];
for (var F = 0; F < t; F++) {
cc.assert(U[F] >= 0 && U[F] <= 13 || U[F] >= 17 && U[F] <= 29 || U[F] >= 33 && U[F] <= 45 || U[F] >= 49 && U[F] <= 61 || U[F] >= 65 && U[F] <= 66);
e[F] = U[F];
}
return 10;
}
for (o = 1; o < t; o++) for (var k = 1; k < t; k++) if (k != o) {
if ((this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[k])) % 10 == 0) {
for (var x = 0, V = 1; V < t; V++) if (V != o && V != k) {
c[x] = i[V];
x++;
}
var J = [];
ZeroArray(J, 5);
J[0] = i[0];
J[1] = i[o];
J[2] = i[k];
J[3] = c[0];
J[4] = c[1];
for (var H = 0; H < t; H++) {
cc.assert(J[H] >= 0 && J[H] <= 13 || J[H] >= 17 && J[H] <= 29 || J[H] >= 33 && J[H] <= 45 || J[H] >= 49 && J[H] <= 61 || J[H] >= 65 && J[H] <= 66);
e[H] = J[H];
}
if (r <= c[1] % 10 && 0 == (r = this.GetCardLogicValue(c[1]) % 10)) return 10;
}
}
if (0 != r) return this.RetType(r);
}
if (1 == l) {
for (var W = 1; W < t; W++) for (var j = 1; j < t; j++) if (j != W && (this.GetCardLogicValue(i[W]) + this.GetCardLogicValue(i[j])) % 10 == 0) {
for (var Y = 0, z = 1; z < t; z++) if (z != W && z != j) {
c[Y] = i[z];
Y++;
}
if (r <= (this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1])) % 10) {
r = this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1]) % 10;
e[0] = i[0];
e[1] = i[j];
e[2] = i[W];
e[3] = c[0];
e[4] = c[1];
if (0 == r) return 10;
}
}
if (0 != r) return this.RetType(r);
l = 0;
}
if (0 == l) {
for (o = 0; o < t; o++) for (var X = 0; X < t; X++) if (X != o) for (var K = 0; K < t; K++) if (K != o && K != X) {
var Z = this.GetCardLogicValue(i[o]);
Z += this.GetCardLogicValue(i[X]);
if ((Z += this.GetCardLogicValue(i[K])) % 10 == 0) {
for (var q = 0, Q = 0; Q < t; Q++) if (Q != o && Q != X && Q != K) {
c[q] = i[Q];
q++;
}
var $ = [];
ZeroArray($, 5);
$[0] = i[o];
$[1] = i[X];
$[2] = i[K];
$[3] = c[0];
$[4] = c[1];
for (var ee = 0; ee < t; ee++) {
cc.assert($[ee] >= 0 && $[ee] <= 13 || $[ee] >= 17 && $[ee] <= 29 || $[ee] >= 33 && $[ee] <= 45 || $[ee] >= 49 && $[ee] <= 61 || $[ee] >= 65 && $[ee] <= 66);
e[ee] = $[ee];
}
if (r <= (this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1])) % 10 && 0 == (r = this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1]) % 10)) return 10;
}
}
return 0 != r ? this.RetType(r) : 0;
}
return 0;
},
GetTimes: function(e, t) {
if (5 != t) return 0;
var i = this.GetCardType(e, 5);
if (i < 7) return 1;
if (i < 9) return 2;
if (9 == i) return 3;
if (i <= 11) return 4;
if (12 == i) return 5;
if (13 == i) return 6;
if (14 == i) return 8;
cc.assert(FALSE);
return 0;
},
GetOxCard: function(e, t) {
cc.assert(5 == t, "Error OxCardCount:" + e + "cbCardData:" + e);
var i = [];
ZeroArray(i, 5);
var n = [];
ZeroArray(n, 5);
n = e;
for (var a = 0, o = 0; o < t; o++) {
i[o] = this.GetCardLogicValue(e[o]);
a += i[o];
}
for (o = 0; o < t - 1; o++) for (var s = o + 1; s < t; s++) if ((a - i[o] - i[s]) % 10 == 0) {
for (var r = 0, c = 0; c < t; c++) c != o && c != s && (e[r++] = n[c]);
e[r++] = n[o];
e[r++] = n[s];
var l = (i[o] + i[s]) % 10;
0 == l && (l = 10);
return l;
}
return 0;
},
RetType: function(e) {
switch (e %= 10) {
case 0:
return 10;

case 1:
return 1;

case 2:
return 2;

case 3:
return 3;

case 4:
return 4;

case 5:
return 5;

case 6:
return 6;

case 7:
return 7;

case 8:
return 8;

case 9:
return 9;
}
return !1;
},
IsletValue: function(e, t) {
for (var i = 0, n = 0; n < t; n++) i += this.GetCardValue(t[n]);
cc.assert(0 == i, "Error Sum:" + Sum);
return i % 10 == 0;
},
SortCardList: function(e, t) {
var i = [];
ZeroArray(i, 5);
for (var n = 0; n < t; n++) i[n] = this.GetCardNewValue(e[n]);
var a = !0, o = 0, s = t - 1;
do {
a = !0;
for (var r = 0; r < s; r++) if (i[r] < i[r + 1] || i[r] == i[r + 1] && e[r] < e[r + 1]) {
o = e[r];
e[r] = e[r + 1];
e[r + 1] = o;
o = i[r];
i[r] = i[r + 1];
i[r + 1] = o;
a = !1;
}
s--;
} while (0 == a);
},
RanCardList: function(e, t) {
var i = [];
i = i.concat(n);
var a = 0, o = 0;
do {
o = Value_GetRandomlet(0, cbMaxCount - a);
cbCardData[a++] = i[o];
i[o] = i[cbMaxCount - a];
} while (a < cbMaxCount);
},
CompareCard: function(e, t, i, n, a) {
if (n != a) return n > a;
e = [];
if (n == TRUE) {
var o = this.GetCardType(t, i), s = this.GetCardType(e, i);
if (s != o) return s > o;
switch (o) {
case 105:
case 102:
var r = [];
ZeroArray(r, 5);
var c = [];
ZeroArray(c, 5);
r = r.concat(e);
c = c.concat(o);
this.SortCardList(r, i);
this.SortCardList(c, i);
if (this.GetCardValue(r[2.5]) > this.GetCardValue(c[2.5])) break;
}
}
r = [];
ZeroArray(r, 5);
c = [];
ZeroArray(c, 5);
r = r.concat(e);
c = c.concat(o);
this.SortCardList(r, i);
this.SortCardList(c, i);
var l = this.GetCardValue(c[0]), h = this.GetCardValue(r[0]);
return l != h ? h > l : !(this.GetCardColor(r[0]) > this.GetCardColor(c[0])) && void 0;
},
BarRenCompareCard: function(e, t, i) {
var n = this.GetCardType(e, i), a = this.GetCardType(t, i);
if (n != a) return a > n;
if (n == a) {
var o = [];
ZeroArray(o, 5);
var s = [];
ZeroArray(s, 5);
o = e;
s = t;
this.SortCardList(o, i);
this.SortCardList(s, i);
var r = this.GetCardValue(o[0]), c = this.GetCardValue(s[0]), l = this.GetCardColor(o[0]), h = this.GetCardColor(s[0]);
return r < c || r == c && l < h;
}
},
GetCardNewValue: function(e) {
var t = this.GetCardColor(e), i = this.GetCardValue(e);
return 4 == t ? i + 13 + 2 : i;
},
GetCardLogicValue: function(e) {
var t = this.GetCardValue(e);
t > 10 && (t = 10);
return 4 == this.GetCardColor(e) ? 11 : t;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return (240 & e) >> 4;
}
});
t.exports.GameLogic = o;
cc._RF.pop();
}, {} ],
BRNN_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f485asHZKlM9oEb/5tj+Vc3", "BRNN_GameView");
var n = e("BRNN_CMD_Game"), a = n.AREA_COUNT;
cc.Class({
extends: GameFrameView,
properties: {
nodeNiuResults: [ cc.Node ],
betAreaLights: [ cc.Node ],
winAreaLights: [ cc.Node ],
nodeStartCard: cc.Node,
nodeHandsPais: [ cc.Node ],
pfCard: cc.Prefab,
BtnKeepBet: cc.Button,
nodeScoreTian: [ cc.Label ],
nodeScoreNum: [ cc.Label ],
nodeJetton: [ cc.Node ],
nodeJettonSelect: [ cc.Node ],
nodeWaitStatus: cc.Node,
startBetSpine: sp.Skeleton,
stopBetSpine: sp.Skeleton,
pfRecordItem: cc.Prefab,
recordContainers: [ cc.Node ],
nodeTime: cc.Node,
labelGameStatus: cc.Label,
nodePlayerList: cc.Node,
nodeMenu: cc.Node,
nodeHelp: cc.Node
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnFrameViewLoad: function() {
this.wCurrentBanker = 0, this.bEnableSysBanker = !0, this.lMeScore = 0, this.lAryUserJettonScore = [], 
this.lAryAllJettonScore = [], this.lBetChip = [], this.curArea = 0, this.curBet = 0, 
this.bCurEnableBet = !1, this.gameRecordMe = [], this.bBeiShu5 = 5;
this.bBeiShu10 = 10;
this.NiuStrConfig = [ "No Cattle", "Cattle 1", "Cattle 2", "Cattle 3", "Cattle 4", "Cattle 5", "Cattle 6", "Cattle 7", "Cattle 8", "Cattle 9", "Cattle Cattle", "Streaky Cattle", "Streaky Cattle", "Bomb Cattle", "Five Small Cattle" ];
this.AreaSizeConfig = {};
this.AreaSizeConfig[0] = {
w: 200,
h: 100
};
this.AreaSizeConfig[1] = {
w: 220,
h: 180
};
this.AreaSizeConfig[2] = {
w: 250,
h: 120
};
this.AreaSizeConfig[3] = {
w: 250,
h: 180
};
this.AreaSizeConfig[4] = {
w: 250,
h: 120
};
this.AreaSizeConfig[5] = {
w: 250,
h: 180
};
this.AreaSizeConfig[6] = {
w: 200,
h: 100
};
this.AreaSizeConfig[7] = {
w: 220,
h: 180
};
this.recordPool = new cc.NodePool();
this.lAryUserJettonScore = [];
ZeroArray(this.lAryUserJettonScore, n.AREA_MAX);
this.lAryAllJettonScore = [];
ZeroArray(this.lAryAllJettonScore, n.AREA_MAX);
this.ResetValue();
},
OnButtnEvent: function(e) {
"BtnGameRule" == e.target.name && (this.nodeHelp.active = !0);
},
ShowBetChip: function() {
for (var e = 0; e < n.JETTON_COUNT; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
},
ShowBetLayer: function(e) {
for (var t = 0; t < a; t++) {
this.nodeScoreTian[t].string = "0";
this.nodeScoreNum[t].string = "0";
if (!e) {
this.nodeScoreTian[t].node.parent.active = !1;
this.nodeScoreNum[t].node.parent.active = !1;
}
}
},
ShowBetJetton: function(e) {
if (e) {
for (var t = INVALID_BYTE, i = INVALID_BYTE, a = n.JETTON_COUNT - 1; a >= 0; --a) {
var o = this.lMeScore >= this.bBeiShu5 * this.lBetChip[a];
this.nodeJetton[a].getComponent(cc.Button).interactable = o;
o && this.curBet == this.lBetChip[a] && (t = a);
o && i == INVALID_BYTE && (i = a);
0 != a || o || (this.bCurEnableBet = !1);
}
t == INVALID_BYTE && (t = i);
0 == this.curBet && this.lMeScore >= this.bBeiShu5 * this.lBetChip[0] && (t = 0);
t != INVALID_BYTE && this.ClickJettonBtn(null, t);
this.BtnKeepBet.interactable = this.bCurEnableBet;
if (0 == this.pGameEngineJs.keepBetObj.length) this.BtnKeepBet.interactable = !1; else {
for (var s = 0, r = 0; r < this.pGameEngineJs.keepBetObj.length; r++) s += this.pGameEngineJs.keepBetObj[r].BetScore;
this.lMeScore < s && (this.BtnKeepBet.interactable = !1);
}
} else {
for (var c = n.JETTON_COUNT - 1; c >= 0; --c) {
this.nodeJetton[c].getComponent(cc.Button).interactable = !1;
this.nodeJettonSelect[c].active = !1;
}
this.BtnKeepBet.interactable = !1;
}
},
UpdateBetArray: function(e, t, i) {
e == this.pGameEngineJs.GetMeChairID() && (this.lAryUserJettonScore[t] += i);
this.lAryAllJettonScore[t] += i;
this.UpdateTableBetInfo();
},
UpdateTableBetInfo: function() {
for (var e = 0; e < a; e++) {
if (this.lAryAllJettonScore[e] > 0) {
this.nodeScoreTian[e].node.parent.active = !0;
this.nodeScoreTian[e].string = OnIntScore(this.lAryAllJettonScore[e]);
}
if (this.lAryUserJettonScore[e] > 0) {
this.nodeScoreNum[e].node.parent.active = !0;
this.nodeScoreNum[e].string = OnIntScore(this.lAryUserJettonScore[e]);
}
}
},
UpdateBetJetton: function() {
for (var e = INVALID_BYTE, t = INVALID_BYTE, i = n.JETTON_COUNT - 1; i >= 0; --i) {
var a = this.lMeScore >= this.lBetChip[i] * this.bBeiShu5;
this.nodeJetton[i].getComponent(cc.Button).interactable = a;
this.nodeJettonSelect[i].active = a;
a && this.curBet == this.lBetChip[i] && (e = i);
a && t == INVALID_BYTE && (t = i);
0 != i || a || (this.bCurEnableBet = !1);
}
e == INVALID_BYTE && (e = t);
0 == this.curBet && this.lMeScore >= this.bBeiShu5 * this.lBetChip[0] && (e = 0);
e != INVALID_BYTE && this.ClickJettonBtn(null, e);
this.BtnKeepBet.interactable = this.bCurEnableBet;
},
ShowGameEndWithGameScene: function(e) {
var t = this;
if (this.pGameEngineJs.areasWinResult.length > 0) {
var i = [];
i.push(this.pGameEngineJs.areasWinResult[0]);
i.push(this.pGameEngineJs.areasWinResult[2]);
i.push(this.pGameEngineJs.areasWinResult[4]);
i.push(this.pGameEngineJs.areasWinResult[6]);
this.gameRecordMe.push(i);
this.gameRecordMe.length > 5 && this.gameRecordMe.shift();
}
if (e) this.ShowOpenHandCardAni(); else {
for (var n = 0; n < 5; n++) {
var a = this.nodeHandsPais[n];
a && a.removeAllChildren();
for (var o = 0; o < 5; o++) {
var s = cc.instantiate(this.pfCard);
a.addChild(s, 1, o);
s.getComponent("BRNN_CardNode").SetCardData(.6, n, this.pGameEngineJs.playerCards[n][o]);
}
}
this.pGameEngineJs.playerCardsType.forEach(function(e, i, n) {
var a = t.nodeNiuResults[i];
a.active = !0;
t.ShowNiu(e, a, i);
});
}
},
OnBetBegin: function(e) {
var t = this;
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
this.startBetSpine.node.active = !0;
PlaySkeletonAnimation(this.startBetSpine, !1, "animation").setCompleteListener(function() {
t.startBetSpine.node.active = !1;
e && e();
});
},
OnBetFinish: function(e) {
var t = this;
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
this.stopBetSpine.node.active = !0;
PlaySkeletonAnimation(this.stopBetSpine, !1, "animation").setCompleteListener(function() {
t.stopBetSpine.node.active = !1;
e && e();
});
},
ShowOpenHandCardAni: function() {
for (var e = this, t = 0, i = 0, n = [ 0, 1, 2, 3, 4 ], a = [], o = 0; o < 5; o++) {
var s = e.nodeHandsPais[o];
s.i = n[o];
s.pfCardPrefab = e.pfCard;
s.runAction(cc.sequence(cc.delayTime(.8 * t++), cc.callFunc(function(t) {
var i = this;
a = [];
var n = t.getChildren();
n.forEach(function(e, t, i) {
a.push(e.getPosition());
});
t.getComponent(cc.Layout).enabled = !1;
n.forEach(function(a, o, s) {
a.runAction(cc.sequence(cc.moveTo(.2, n[2].getPositionX(), n[2].getPositionY()), cc.callFunc(function(i) {
i.getComponent("BRNN_CardNode").SetCardData(.6, t.i, e.pGameEngineJs.playerCards[t.i][o]);
}.bind(i))));
});
}.bind(this))));
s.runAction(cc.sequence(cc.delayTime(.2 + .8 * i++), cc.callFunc(function(t) {
var i = this;
t.getChildren().forEach(function(n, o, s) {
if (a[o]) if (4 == o) {
n.runAction(cc.sequence(cc.moveTo(.2, a[o].x, a[o].y), cc.callFunc(function(e) {
var i = this;
t.getComponent(cc.Layout).enabled = !0;
var n = this.nodeNiuResults[t.i];
n.active = !0;
this.ShowNiu(this.pGameEngineJs.playerCardsType[t.i], n, t.i);
4 == t.i && this.pGameEngineJs.areasWinResult.forEach(function(e, t, n) {
var a = i.winAreaLights[t];
if (e && !a.active) {
a.active = !0;
var o = a.getComponent(sp.Skeleton);
0 == t || 1 == t || 6 == t || 7 == t ? PlaySkeletonAnimation(o, !0, "yuan") : PlaySkeletonAnimation(o, !0, "fang");
}
});
this.PlaySound("OutCard");
}.bind(i))));
4 == t.i && n.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(t) {
var i = [];
this.pGameEngineJs.areasWinResult.forEach(function(e, t, n) {
e && i.push(t);
});
e.OnFrameGameEndAction(i, e.lAllUserScore, !0);
e.RefreshGameRecord(!0);
}.bind(i))));
} else n.runAction(cc.moveTo(.2, a[o].x, a[o].y));
});
}.bind(this))));
}
},
ShowSendHandCard: function(e) {
var t = 0, i = 0;
this.nodeNiuResults.forEach(function(e, t, i) {
e.active = !1;
});
for (var n = 0; n < 5; n++) {
var a = this.nodeHandsPais[n];
a && a.removeAllChildren();
for (var o = 0; o < 5; o++) {
var s = cc.instantiate(this.pfCard);
this.nodeStartCard.addChild(s, -(5 * n + o));
s.getComponent("BRNN_CardNode").SetCardData(.6, o, 67);
s.j = n;
s.i = o;
s.pfCardPrefab = this.pfCard;
s.handsPai = a;
var r = this.nodeStartCard.getPosition(), c = a.getPosition(), l = [];
this.getBezierRoute(r, c, l, n);
s.stopAllActions();
0 == n ? s.runAction(cc.sequence(cc.delayTime(t + .02 * ++i), cc.spawn(cc.moveTo(.4, cc.v2(a.getPositionX() - this.nodeStartCard.getPositionX(), a.getPositionY() - this.nodeStartCard.getPositionY())), cc.scaleTo(.2, .6)), cc.callFunc(function(e) {
var t = cc.instantiate(e.pfCardPrefab);
e.handsPai.addChild(t, 1, e.j);
t.getComponent("BRNN_CardNode").SetCardData(.6, e.i, 67);
0 == e.i && this.PlaySound("DispatchCard");
}.bind(this)), cc.removeSelf())) : s.runAction(cc.sequence(cc.delayTime(t + .02 * ++i), cc.bezierTo(.4, l), cc.callFunc(function(t) {
var i = cc.instantiate(t.pfCardPrefab);
t.handsPai.addChild(i, 1, t.i);
i.getComponent("BRNN_CardNode").SetCardData(.6, t.i, 67);
4 == t.i && this.PlaySound("DispatchCard");
4 == t.i && 4 == t.j && e && e();
}.bind(this)), cc.removeSelf()));
}
t += .2;
}
},
showSendHandCardBack: function() {
this.nodeNiuResults.forEach(function(e, t, i) {
e.active = !1;
});
for (var e = 0; e < 5; e++) {
var t = this.nodeHandsPais[e];
t && t.removeAllChildren();
for (var i = 0; i < 5; i++) {
var n = cc.instantiate(this.pfCard);
t.addChild(n, 1, i);
n.getComponent("BRNN_CardNode").SetCardData(.6, i, 67);
}
}
},
getBezierRoute: function(e, t, i, n) {
i.push(e);
var a = cc.v2(0, 0);
if (0 == n) {
a.x = (t.x - e.x) / 2;
a.y = (t.y - e.y) / 2;
} else if (1 == n) {
a.x = t.x - 150;
a.y = e.y + 200;
} else if (2 == n) {
a.x = t.x - 75;
a.y = e.y + 200;
} else if (3 == n) {
a.x = t.x + 75;
a.y = e.y + 200;
} else if (4 == n) {
a.x = t.x + 150;
a.y = e.y + 200;
}
i.push(a);
i.push(t);
},
ShowNiu: function(e, t, i) {
var a = t.getChildByName("bg1"), o = t.getChildByName("bg2"), s = t.getChildByName("bg3"), r = t.getChildByName("lblWin");
a.active = e == n.CT_SPECIAL_NONIU;
o.active = e >= n.CT_SPECIAL_NIU1 && e <= n.CT_SPECIAL_NIU9;
s.active = e >= n.CT_SPECIAL_NIUNIU;
r.getComponent(cc.Label).string = this.NiuStrConfig[e];
e >= n.CT_SPECIAL_NIU1 && e <= n.CT_SPECIAL_NIUNIU && this.ShowCardTypePoint(i, e);
},
ShowCardTypePoint: function(e, t) {
for (var i = this.nodeHandsPais[e], n = 3; n < 5; n++) {
i.children[n].y = 20;
}
},
ResetValue: function() {
var e = PlayerManager.GetMeUserItem();
if (null != e) {
this.lMeScore = e.GetUserScore();
this.bCurEnableBet = !0;
}
},
DeleteCard: function() {
for (var e = 0; e < n.MAX_COUNT; e++) {
var t = this.nodeHandsPais[e];
t && t.removeAllChildren();
}
this.nodeNiuResults.forEach(function(e, t, i) {
e.active = !1;
});
this.winAreaLights.forEach(function(e, t, i) {
e.active = !1;
});
this.recordContainers.forEach(function(e, t, i) {
e.children.forEach(function(e, t, i) {
e.opacity = 255;
e.stopAllActions();
});
});
ZeroArray(this.lAryUserJettonScore, n.AREA_MAX);
ZeroArray(this.lAryAllJettonScore, n.AREA_MAX);
},
PlaceUserJetton: function(e, t, i) {
var n = this;
if (e != INVALID_CHAIR) {
this.UpdateBetArray(e, t, i);
this.PlaySound("Addgold");
var a = parseInt(Math.random() * (this.AreaSizeConfig[t].w - 60)), o = parseInt(Math.random() * (this.AreaSizeConfig[t].h - 60)), s = cc.v2(a + 30, o + 30);
this.OnFramePlaceJetton(e, t, i, s);
} else {
if (this.lMeScore < i) {
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1002));
return;
}
this.light && this.light.active && (this.light.active = !1);
this.betAreaLights.forEach(function(e, i, a) {
e.active = i == t;
i == t && (n.light = e);
});
this.scheduleOnce(function() {
n.light.active = !1;
}, .1);
var r = {};
r.AreaIndex = t + 1;
r.BetScore = i;
this.pGameEngineJs.sendPackageUserBet(r);
}
},
OnPlaceJetton: function(e, t) {
this.curArea = parseInt(t);
if (this.bCurEnableBet) {
if (this.lAryUserJettonScore[this.curArea] + this.curBet > this.pGameEngineJs.lUserAreaLimit) {
var i = StringFormat(Language_GetTxtByID(1001), OnIntScore(this.pGameEngineJs.lUserAreaLimit));
ManagerHelp_SetSystemLabel(i);
} else {
var a = 0, o = 0;
this.lAryUserJettonScore.forEach(function(e, t, i) {
0 == t || 2 == t || 4 == t || 6 == t ? o += e : a += e;
});
0 == this.curArea || 2 == this.curArea || 4 == this.curArea || 6 == this.curArea ? o += this.curBet : a += this.curBet;
if (this.lMeScore < a * this.bBeiShu5 + o * this.bBeiShu10) {
var s = Language_GetTxtByID(1009);
ManagerHelp_SetSystemLabel(s);
} else this.pGameEngineJs.cbGameStatus == n.GAME_SCENE_PLAY && 0 != this.curBet && this.PlaceUserJetton(INVALID_CHAIR, this.curArea, this.curBet);
}
} else {
var r = Language_GetTxtByID(1002);
ManagerHelp_SetSystemLabel(r);
}
},
ClickJettonBtn: function(e, t) {
this.curBet = this.lBetChip[t];
for (var i = 0; i < n.JETTON_COUNT; i++) this.nodeJettonSelect[i].active = !1;
this.nodeJettonSelect[t].active = !0;
},
RefreshGameRecord: function(e) {
var t = this;
if (e) {
var i = this.gameRecordMe[this.gameRecordMe.length - 1];
this.recordContainers.forEach(function(e, n, a) {
var o = null;
o = t.recordPool.size() > 0 ? t.recordPool.get() : cc.instantiate(t.pfRecordItem);
e.addChild(o);
var s = o.getChildByName("win"), r = o.getChildByName("lost");
s.active = i[n];
r.active = !i[n];
});
} else this.gameRecordMe.forEach(function(e, i, n) {
t.recordContainers.forEach(function(i, n, a) {
var o = null;
o = t.recordPool.size() > 0 ? t.recordPool.get() : cc.instantiate(t.pfRecordItem);
i.addChild(o);
var s = o.getChildByName("win"), r = o.getChildByName("lost");
s.active = 1 == e[n];
r.active = 0 == e[n];
});
});
this.recordContainers.forEach(function(e, i, n) {
if (e.children.length > 5) {
var a = e.children[0];
a.opacity = 255;
a.stopAllActions();
t.recordPool.put(a);
}
});
e && this.recordContainers.forEach(function(e, t, i) {
var n = e.children.length;
e.children.forEach(function(e, t, i) {
t == n - 1 && e.runAction(cc.repeatForever(cc.blink(2, 1)));
});
});
},
PlaySound: function(e) {
"BackgroundMusic" == e ? window.mfConfig.PlayAudio("141/Audio/NN_Bg", !0, window.mfConfig.fMusic) : "Addgold" == e ? window.mfConfig.PlayAudio("141/Audio/ADD_GOLD", !1, window.mfConfig.fMusic) : "DispatchCard" == e ? window.mfConfig.PlayAudio("141/Audio/DISPATCH_CARD", !1, window.mfConfig.fMusic) : "OutCard" == e && window.mfConfig.PlayAudio("141/Audio/OUT_CARD", !1, window.mfConfig.fMusic);
},
ShowUserlist: function(e) {
var t = [], i = {};
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
e.MostBetUsers.forEach(function(e, n, a) {
(i = {}).dwGameID = e.GameID;
i.wChairID = e.ChairID;
i.szNickName = ToUnicode(e.NickName);
i.cbFaceID = e.FaceID;
i.cbFrameID = e.FrameID;
i.cbMemberOrder = e.VipLv;
i.lUserScore = e.UserScore;
i.lBetScore = e.TotalBet;
i.cbWinCount = e.WinCount;
t.push(i);
});
this.node.getComponent("jsPlayerList").OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
SetTimeClock: function(e, t) {
this.nodeTime.getComponent("BRNN_NewTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "preparing";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "betting";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "lottery draw";
return;
}
},
OnFrameViewDestroy: function() {
this.recordPool.clear();
},
OnFrameUpdateUserScore: function(e) {
this.lMeScore = PlayerManager.GetMeUserItem().GetUserScore();
}
});
cc._RF.pop();
}, {
BRNN_CMD_Game: "BRNN_CMD_Game"
} ],
BRNN_NewTimeDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ede3dUdUp9MwrK4dFa1u3W9", "BRNN_NewTimeDown");
cc.Class({
extends: cc.Component,
properties: {
nodeTimeTip: cc.Node,
labelTime: cc.Label,
timeProgressBar: cc.ProgressBar,
cbActionTime: 5
},
fGameCount: 0,
bPlaySound: !1,
bPlayAction: !1,
onLoad: function() {
this.cbBeforeTime = 0;
this.bSound = !1;
this.timeProgressBar.totalLength = .8;
},
OnReset: function() {
this.bPlaySound = !1;
this.bPlayAction = !1;
this.bSound = !1;
this.cbBeforeTime = 0;
},
OnSetGameTime: function(e, t, i) {
this.OnReset();
this.fGameCount = e;
this.maxTime = this.fGameCount;
this.bPlaySound = t;
this.bPlayAction = i;
},
update: function(e) {
this.fGameCount > 0 ? this.fGameCount -= e : this.fGameCount = 0;
var t = parseInt(Math.ceil(this.fGameCount));
if (this.bPlaySound || this.bPlayAction) {
if (t <= this.cbActionTime + 1 && !this.bSound) {
this.cbBeforeTime = t;
this.bSound = !0;
}
if (this.cbBeforeTime - t == 1) {
if (this.bPlaySound) {
window.mfConfig.PlayAudio("GameFrame/Audio/TimeDown");
}
this.cbBeforeTime = t;
}
}
if (t > 0) {
this.timeProgressBar.node.active = !0;
this.labelTime.string = "" + t;
this.timeProgressBar.progress = this.fGameCount / this.maxTime;
this.timeProgressBar.node.getChildByName("bar").color = new cc.color(252 - 208 * this.timeProgressBar.progress, 40 + 164 * this.timeProgressBar.progress, 40 + 13 * this.timeProgressBar.progress);
this.nodeTimeTip && (this.nodeTimeTip.active = !0);
} else {
this.timeProgressBar.node.active = !1;
this.labelTime.string = "";
this.timeProgressBar.progress = 0;
this.nodeTimeTip && (this.nodeTimeTip.active = !1);
}
}
});
cc._RF.pop();
}, {} ],
BRSS_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3d205Cw7GRPZIVbl6ELxxjz", "BRSS_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeStartFontbg0: cc.Node,
nodeStartFontbg1: cc.Node,
nodeEndFontbg0: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node
},
StartCompareAction: function() {
this.nodeStartFontbg0.active = !0;
this.nodeStartFontbg1.active = !0;
var e = this;
this.nodeStartFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 90, this.nodeStartFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(t) {
e.SetStartFontAction();
})));
this.nodeStartFontbg1.runAction(cc.moveTo(.3, -90, this.nodeStartFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
e.ResetAllStartNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
ResetAllStartNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllStartNode();
}));
this.node.runAction(t);
},
ResetAllStartNode: function() {
this.nodeStartFontbg0.x = -this.node.width / 2;
this.nodeStartFontbg1.x = this.node.width / 2;
this.nodeStartFontbg0.active = !1;
this.nodeStartFontbg1.active = !1;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
this.node.x = 0;
},
StartGameEndAction: function(e) {
this.nodeEndFontbg0.active = !0;
var t = this;
this.nodeEndFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 0, this.nodeEndFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(i) {
t.SetGameEndFontAction(e);
})));
},
SetGameEndFontAction: function(e) {
this.nodeFont2.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
var t = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(i) {
null != e && e(t);
t.ResetAllEndNodeAction();
})));
},
ResetAllEndNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllEndNode();
}));
this.node.runAction(t);
},
ResetAllEndNode: function() {
this.nodeEndFontbg0.x = -this.node.width / 2;
this.nodeEndFontbg0.active = !1;
this.nodeFont2.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.node.x = 0;
}
});
cc._RF.pop();
}, {} ],
BRSS_NewBanker: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da584oTRJZKv7JC2KpkYHmi", "BRSS_NewBanker");
var n = cc.Class({
extends: cc.Component,
statics: {
self: null
},
properties: {
ScrollView: cc.ScrollView,
ScrollViewContent: cc.Node,
pfBankerItem: cc.Prefab,
btnApplyBanker: cc.Node,
btnCancelBanker: cc.Node,
labelApplyCondition: cc.Label
},
onLoad: function() {
n.self = this;
},
InitGameView: function(e) {
this.GameViewJs = e;
},
UpdateApplyCondition: function(e) {
this.labelApplyCondition.string = OnScoreToString(e);
},
UpdateApplyButtonStatus: function(e) {
if (e) {
this.btnApplyBanker.active = !1;
this.btnCancelBanker.active = !0;
this.btnApplyBanker.interactable = !0;
} else {
this.btnApplyBanker.active = !0;
this.btnCancelBanker.active = !1;
this.btnCancelBanker.interactable = !0;
}
},
OnEventClick: function(e, t) {
var i = e.target, n = parseInt(t);
if ("btnApplyBanker" == i.name) {
this.GameViewJs.OnApplyAndCancelBanker(n);
this.btnApplyBanker.interactable = !1;
} else if ("btnCancelBanker" == i.name) {
this.GameViewJs.OnApplyAndCancelBanker(n);
this.btnCancelBanker.interactable = !1;
}
}
});
cc._RF.pop();
}, {} ],
BRSS_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41b80WLW19Eh78i4pVNcvGG", "BRSS_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_END = s;
t.exports.MAX_COUNT = 1;
t.exports.AREA_COUNT = 4;
t.exports.JETTON_COUNT = 5;
t.exports.AREA_MAX = 4;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_C_PLACE_JETTON = 1;
cc._RF.pop();
}, {} ],
BRSS_NewCardNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d0bdJ4FWZLC74yJ9c8C9aq", "BRSS_NewCardNode");
var n = 0, a = 1, o = 2;
cc.Class({
extends: cc.Component,
properties: {
nCard_Width: 0,
nCard_Height: 0,
cbCard_Data: 0,
cbCard_DataIndex: 0,
cbCard_Value: 0,
cbCard_Color: 0,
szCard_Name: "",
mCard_ViewID: 0,
mCard_ChairID: 0,
cbCard_Status: 0,
cbCard_Mark: 0,
pCard_BankerSign: null,
bCard_EnableSelect: !1,
bCard_Select: !1,
bCard_Move: !1,
bCard_Touch: !1,
bCard_Swallows: !1
},
onLoad: function() {
this.initData();
},
initData: function() {
this.nCard_Width = 156;
this.nCard_Height = 226;
this.cbCard_Data = 0;
this.cbCard_DataIndex = 0;
this.cbCard_Value = 0;
this.cbCard_Color = 0;
this.szCard_Name = "";
this.mCard_ViewID = 0;
this.mCard_ChairID = null;
this.cbCard_Status = 0;
this.cbCard_Mark = 0;
this.pCard_BankerSign = 0;
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return 240 & e;
},
SetStatus: function(e) {
this.cbCard_Status = e;
},
GetStatus: function() {
return this.cbCard_Status;
},
OpenDisableStatus: function() {
this.bCard_EnableSelect = !0;
this.node.color = cc.color(170, 170, 170);
},
CloseDisableStatus: function() {
this.bCard_EnableSelect = !1;
this.node.color = cc.color(255, 255, 255);
},
SetSelect: function(e) {
this.bCard_Select = e;
},
GetSelect: function() {
return this.bCard_Select;
},
SetSwallows: function(e) {
this.bCard_Swallows = e;
},
GetSwallows: function() {
return this.bCard_Swallows;
},
SetCardData: function(e, t, i) {
var n = this.GetCardColor(i) >> 4, a = 78 == i || 79 == i ? this.GetCardValue(i) % 14 : this.GetCardValue(i) - 1, o = this.node.getComponent(cc.Sprite);
o.spriteFrame = o.spriteFrame.clone();
var s = n;
1 == n && (s = 2);
2 == n && (s = 3);
3 == n && (s = 1);
o.spriteFrame.setRect(cc.rect(this.nCard_Width * a, this.nCard_Height * s, this.nCard_Width, this.nCard_Height));
this.cbCard_Data = i;
this.cbCard_Value = a;
this.cbCard_Color = s;
this.cbCard_DataIndex = t;
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
this.node.setScale(e, e);
},
GetCardData: function() {
return this.cbCard_Data;
},
ResetData: function() {
this.SetStatus(n);
this.cbCard_Mark = !1;
this.SetSelect(!1);
this.node.color = new cc.Color(255, 255, 255);
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
SetFrontCardTexture: function(e) {
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
var t = this.node.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(this.nCard_Width * cbValue, this.nCard_Height * cbColor, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetBackCardTexture: function(e) {
this.node.width = this.nCard_Width;
this.node.height = this.nCard_Height;
var t = this.node.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(2 * this.nCard_Width, 4 * this.nCard_Height, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetEndCardTexture: function(e) {
this.node.setScale(e, e);
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
},
SetOntouch: function(e) {
this.SetSelect(e);
},
SetpromptCardTexture: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
},
OnCardClickBegin: null,
OnCardClickEnded: null,
OnCardButtonEvent: function() {
if (!this.OnCardClickBegin || !this.OnCardClickBegin(this)) {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
} else {
this.node.setPositionY(this.node.getPositionY() + 30);
this.SetSelect(!0);
}
this.OnCardClickEnded && this.OnCardClickEnded(this);
}
},
OnCardUpspringEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(a);
this.node.setPositionY(this.node.getPositionY() + 30);
this.cbCard_Mark = !0;
this.SetSwallows(!0);
this.SetSelect(!0);
}
},
OnCardDownEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(o);
this.node.setPositionY(this.node.getPositionY() - 30);
this.cbCard_Mark = !1;
this.SetSwallows(!0);
this.SetSelect(!1);
}
},
TurnhandLayout: function() {
this.SetSelect(!1);
},
SubAlign: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
}
});
cc._RF.pop();
}, {} ],
BRSS_NewEnd: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "69fa8sf28pMYYqfGP8YEC5U", "BRSS_NewEnd");
var n = cc.Class({
extends: cc.Component,
statics: {
self: null
},
properties: {},
onLoad: function() {
n.self = this;
},
OnEventClick: function(e, t) {
"LayerEnd" == e.target.name && this.node.removeFromParent();
}
});
cc._RF.pop();
}, {} ],
BRSS_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6a2cQJaaZAYpx4R5PQXeuW", "BRSS_NewGameEngine");
var n = e("BRSS_NewCMD_Game"), a = n.AREA_COUNT, o = e("BRSS_NewGameLogic").GameLogic;
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameLogic = new o();
this.pGameViewJs = this.pGameView.getComponent("BRSS_NewGameView");
this.pGameViewJs.pGameEngineJs = this;
this.ResetGameEngine();
},
OnFrameEngineStart: function() {
this.cbGameStatus = 0;
this.fRoundTime = 0, this.lMinTake = 0;
this.playerCards = [];
ZeroArray2(this.playerCards, n.AREA_COUNT + 1, 1);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("135/Audio/BackGround", !0);
},
OnEventSceneMessage: function(e, t, i, o) {
for (var s = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i).tGameRecord, r = 0; r < s.length; r++) {
var c = s[r].Cards, l = {};
l.bWinTian = this.pGameLogic.BarRenCompareCard(c[0], c[1]);
l.bWinDi = this.pGameLogic.BarRenCompareCard(c[0], c[2]);
l.bWinXuan = this.pGameLogic.BarRenCompareCard(c[0], c[3]);
l.bWinHuang = this.pGameLogic.BarRenCompareCard(c[0], c[4]);
l.bType = [];
for (var h = 0; h < a; h++) l.bType[h] = this.pGameLogic.BarRenCompareCard(c[0], c[h + 1]);
l.bCard = [];
for (var u = 0; u < a + 1; u++) l.bCard[u] = c[u];
this.pGameViewJs.gameRecordList.push(l);
}
this.pGameViewJs.ShowGameRecord();
this.pGameViewJs.updateAreaResult();
this.cbGameStatus = e;
switch (e) {
case n.GAME_SCENE_FREE:
return this.OnGameSceneFree(i, o);

case n.GAME_SCENE_PLAY:
case n.GAME_SCENE_END:
return this.OnGameSceneEnd(i, o);
}
return !0;
},
OnGameSceneFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.pGameViewJs.lBetChip = i.BetChips;
this.pGameViewJs.lMeMaxScore = i.lUserMaxScore;
this.pGameViewJs.wCurrentBanker = INVALID_CHAIR;
this.pGameViewJs.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.AreaBetLimit;
this.lUserLimitScore = i.UserBetLimit;
this.lMinTake = i.RetainScore;
this.fRoundTime = i.TimeLeave;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip();
this.pGameViewJs.OnFrameInitJetton(i.BetChips);
this.pGameViewJs.ShowBetJetton(!1);
return !0;
},
OnGameSceneEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.pGameViewJs.lBetChip = i.BetChips;
this.pGameViewJs.wCurrentBanker = INVALID_CHAIR;
this.pGameViewJs.bEnableSysBanker = i.bEnableSysBanker;
this.pGameViewJs.lMeCurGameScore = i.lPlayAllScore;
this.pGameViewJs.lMeMaxScore = i.lUserMaxScore;
this.pGameViewJs.lAreaLimitScore = i.AreaBetLimit;
var o = i.lOnlineUserScore.concat(), s = i.wOnlineUserChairID.concat();
this.pGameViewJs.lAryAllJettonScore = i.AreaTotalBet.concat();
this.pGameViewJs.lAryUserJettonScore = i.UserAreaBet.concat();
this.lAreaLimitScore = i.AreaBetLimit;
this.lUserLimitScore = i.UserBetLimit;
this.lMinTake = i.RetainScore;
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip();
this.pGameViewJs.UpdateTableBetInfo();
this.pGameViewJs.OnFrameInitJetton(i.BetChips);
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ShowBetLayer(!0);
for (var r = [], c = [], l = 0, h = 0, u = 0, d = 0; d < a; d++) {
r[d] = i.AreaTotalBet[d];
c[d] = i.MostWinUserAreaBet[d];
l += i.UserAreaBet[d];
h += i.MostWinUserAreaBet[d];
u += i.lMostBet[d];
}
var m = [];
memset(m, 0, n.GAME_PLAYER);
s[0] != INVALID_CHAIR && (m[s[0]] = h);
s[1] != INVALID_CHAIR && (m[s[1]] = u);
m[this.GetMeChairID()] = l;
this.pGameViewJs.OnFrameBetInfo(r, c, m);
this.pGameViewJs.UpdateTableBetInfo();
if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
this.pGameViewJs.ShowBetJetton(!0);
for (var f = 0; f < i.UserAreaBet.length; f++) if (i.UserAreaBet[f] > 0) {
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(GAME_STATUS_PLAY);
} else if (this.cbGameStatus == n.GAME_SCENE_END) {
this.pGameViewJs.ShowBetJetton(!1);
this.playerCards = i.cbTableCardArray;
this.pGameViewJs.ShowGameEndWithGameScene(!1);
this.pGameViewJs.OnWaitStatus(!0);
for (var p = [], _ = 1; _ <= 4; ++_) {
this.pGameLogic.BarRenCompareCard(i.cbTableCardArray[0], i.cbTableCardArray[_]) && p.push(_ - 1);
}
var S = [];
memset(S, 0, n.GAME_PLAYER);
INVALID_CHAIR != s[0] && (S[s[0]] = o[0]);
INVALID_CHAIR != s[1] && (S[s[1]] = o[1]);
S[this.GetMeChairID()] = i.lPlayAllScore;
this.pGameViewJs.OnFrameGameEndAction(p, S, !1);
}
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnSocketSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnSocketSubSGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnSocketSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);

case n.SUB_S_GAME_END:
return this.OnSocketSubGameEnd(t, i);
}
return !0;
},
OnSocketSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.node.stopAllActions();
this.pGameViewJs.ResetValue();
this.pGameViewJs.DeleteCard();
this.cbGameStatus = n.GAME_SCENE_FREE;
this.fRoundTime = i.TimeLeave;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.OnWaitStatus(!1);
this.pGameViewJs.ShowBetLayer(!1);
this.pGameViewJs.ShowBetJetton(!1);
this.pGameViewJs.OnFrameResetView();
return !0;
},
OnSocketSubSGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.cbGameStatus = n.GAME_SCENE_PLAY;
this.fRoundTime = i.TimeLeave;
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ResetValue();
this.pGameViewJs.DeleteCard();
this.pGameViewJs.ShowBetLayer(!0);
this.pGameViewJs.ShowBetJetton(!0);
this.pGameViewJs.OnBetBegin();
return !0;
},
OnSocketSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
this.pGameViewJs.PlaceUserJetton(i.ChairID, i.AreaIndex, i.BetScore);
if (this.GetMeChairID() == i.ChairID) {
this.SetGameStatus(GAME_STATUS_PLAY);
this.pGameViewJs.UpdateBetJetton();
}
return !0;
}
var n = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(n);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var n = t.UsersBetList[i];
this.GetMeChairID() != n.ChairID && this.pGameViewJs.PlaceUserJetton(n.ChairID, n.AreaIndex, n.BetScore);
}
return !0;
},
OnSocketSubGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GAME_SCENE_END;
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
var a = [];
memset(a, 0, MAX_CHAIR);
for (var o = i.UserWinList.length, s = 0; s < o; s++) {
var r = i.UserWinList[s];
null == r.WinScore.high && null == r.WinScore.low ? a[r.ChairID] = r.WinScore : a[r.ChairID] = 0;
}
this.pGameViewJs.lMeCurGameScore = a[this.GetMeChairID()];
this.pGameViewJs.lAllUserScore = a;
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ShowBetJetton(!1);
this.playerCards = i.AreaCards;
var c = this;
this.pGameViewJs.OnBetFinish(function() {
c.pGameViewJs.ShowGameEndWithGameScene(!0);
});
this.fRoundTime = 0;
this.SetTime(!1);
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.fRoundTime, e);
}
});
cc._RF.pop();
}, {
BRSS_NewCMD_Game: "BRSS_NewCMD_Game",
BRSS_NewGameLogic: "BRSS_NewGameLogic"
} ],
BRSS_NewGameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f24df9iYKVJHLQTGIlRQasq", "BRSS_NewGameLogic");
t.exports.MAX_COUNT = 5;
t.exports.LOGIC_MASK_COLOR = 240;
t.exports.LOGIC_MASK_VALUE = 15;
t.exports.OX_VALUE0 = 0;
t.exports.OX_VALUE0 = 0;
t.exports.OX_THREE_SAME = 102;
t.exports.OX_FOURKING = 103;
t.exports.OX_FIVEKING = 104;
t.exports.OX_FOUR_SAME = 105;
t.exports.OX_FIVEXNIU = 106;
t.exports.CT_SPECIAL_NIU1 = 1;
t.exports.CT_SPECIAL_NIU2 = 2;
t.exports.CT_SPECIAL_NIU3 = 3;
t.exports.CT_SPECIAL_NIU4 = 4;
t.exports.CT_SPECIAL_NIU5 = 5;
t.exports.CT_SPECIAL_NIU6 = 6;
t.exports.CT_SPECIAL_NIU7 = 7;
t.exports.CT_SPECIAL_NIU8 = 8;
t.exports.CT_SPECIAL_NIU9 = 9;
t.exports.CT_SPECIAL_NIUNIU = 10;
t.exports.CT_TRUE_NIUNIUXW = 11;
t.exports.CT_TRUE_NIUNIUDW = 12;
t.exports.CT_TRUE_NIUNIUDUIW = 13;
t.exports.CT_SILVER_NIU = 14;
t.exports.CT_GOLD_NIU = 15;
t.exports.CT_BOMB = 16;
t.exports.CT_WU_XIAO_NIU = 17;
var n = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 ];
t.exports.m_cbCardListData = n;
var a = cc.Class({
properties: {
cbFourCount: 0,
cbThreeCount: 0,
cbDoubleCount: 0,
cbSignedCount: 0,
cbFourLogicVolue: [],
cbThreeLogicVolue: [],
cbDoubleLogicVolue: [],
cbSignedLogicVolue: [],
cbFourCardData: [],
cbThreeCardData: [],
cbDoubleCardData: [],
cbSignedCardData: []
},
clear: function() {
this.cbFourCount = 0;
this.cbThreeCount = 0;
this.cbDoubleCount = 0;
this.cbSignedCount = 0;
this.cbFourLogicVolue = [];
ZeroArray(this.cbFourLogicVolue, 1);
this.cbThreeLogicVolue = [];
ZeroArray(this.cbThreeLogicVolue, 1);
this.cbDoubleLogicVolue = [];
ZeroArray(this.cbDoubleLogicVolue, 2);
this.cbSignedLogicVolue = [];
ZeroArray(this.cbSignedLogicVolue, 5);
this.cbFourCardData = [];
ZeroArray(this.cbFourCardData, 5);
this.cbThreeCardData = [];
ZeroArray(this.cbThreeCardData, 5);
this.cbDoubleCardData = [];
ZeroArray(this.cbDoubleCardData, 5);
this.cbSignedCardData = [];
ZeroArray(this.cbSignedCardData, 5);
}
});
t.exports.tagAnalyseResult = a;
var o = cc.Class({
statics: {
instance: null
},
ctor: function() {
o.instance = this;
},
GetCardType: function(e, t) {
var i = [];
ZeroArray(i, 5);
i = e.concat();
var n = [];
ZeroArray(n, 5);
n = e.concat();
this.SortCardList(e, t);
this.SortCardList(i, t);
var a = [];
ZeroArray(a, 5);
a = e.concat();
var o = 0, s = [];
ZeroArray2(s, 0, 5);
var r = 0, c = [];
ZeroArray(c, 2);
s[0] = i[o];
for (var l = 0, h = 0, u = 0; u < t; u++) {
10 != this.GetCardLogicValue(i[u]) && 11 != this.GetCardLogicValue(i[u]) || l++;
this.GetCardValue(i[u]) >= 11 && this.GetCardValue(i[u]) <= 13 && h++;
}
if (this.GetCardValue(i[0]) == this.GetCardValue(i[1]) && this.GetCardValue(i[1]) == this.GetCardValue(i[2]) && this.GetCardValue(i[2]) == this.GetCardValue(i[3]) || this.GetCardValue(i[1]) == this.GetCardValue(i[2]) && this.GetCardValue(i[2]) == this.GetCardValue(i[3]) && this.GetCardValue(i[3]) == this.GetCardValue(i[4])) return 16;
if (5 == h) return 15;
if (4 == h && 5 == l) return 14;
if (l >= 3) {
if (4 == this.GetCardColor(i[0]) && 4 == this.GetCardColor(i[1])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return 12;
}
if (4 == this.GetCardColor(i[0])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return 66 == i[0] ? 12 : 11;
}
return this.RetType(this.GetCardLogicValue(i[3]) + this.GetCardLogicValue(i[4]));
}
if (2 == l || 1 == l && 4 == this.GetCardColor(i[0])) {
if (4 == this.GetCardColor(i[0]) && 4 == this.GetCardColor(i[1])) {
e[0] = i[0];
e[1] = i[3];
e[2] = i[4];
e[3] = i[1];
e[4] = i[2];
return 12;
}
if (4 == this.GetCardColor(i[0])) {
for (o = 1; o < t; o++) for (var d = 1; d < t; d++) if (d != o) for (var m = 1; m < t; m++) if (m != o && m != d && (this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[d]) + this.GetCardLogicValue(i[m])) % 10 == 0) {
for (var f = 0, p = 1; p < t; p++) if (p != o && p != d && p != m) {
c[f] = i[p];
f++;
}
e[0] = i[o];
e[1] = i[d];
e[2] = i[m];
e[3] = i[0];
e[4] = c[0];
return 66 == i[0] ? 12 : 11;
}
var _ = [];
ZeroArray(_, 4);
for (var S = 0, g = 1; g < t; g++) for (var C = 1; C < t; C++) if (g != C) {
var w = (this.GetCardLogicValue(i[g]) + this.GetCardLogicValue(i[C])) % 10;
if (w > S) {
S = w;
var b = 0;
_[0] = i[g];
_[1] = i[C];
for (var A = 1; A < t; A++) if (A != g && A != C) {
c[b] = i[A];
b++;
}
_[2] = c[0];
_[3] = c[1];
}
}
e[0] = i[0];
e[1] = _[2];
e[2] = _[3];
e[3] = _[0];
e[4] = _[1];
if (1 == l && 4 == this.GetCardColor(i[0])) {
for (o = 1; o < t; o++) for (var v = 1; v < t; v++) if (v != o && (this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[v])) % 10 == 0) {
for (var G = 0, I = 1; I < t; I++) if (I != o && I != v) {
c[G] = i[I];
G++;
}
e[0] = i[0];
e[1] = c[0];
e[2] = c[1];
e[3] = i[o];
e[4] = i[v];
return 66 == n[0] ? 12 : 11;
}
var D = [];
ZeroArray(D, 4);
for (var y = 0, E = 1; E < t; E++) for (var L = 1; L < t; L++) if (E != L) {
var T = (this.GetCardLogicValue(i[E]) + this.GetCardLogicValue(i[L])) % 10;
if (T > y) {
y = T;
var N = 0;
D[0] = i[E];
D[1] = i[L];
for (var R = 1; R < t; R++) if (R != E && R != L) {
c[N] = i[R];
N++;
}
D[2] = c[0];
D[3] = c[1];
}
}
e[0] = i[0];
e[1] = D[2];
e[2] = D[3];
e[3] = D[0];
e[4] = D[1];
return this.RetType(this.GetCardLogicValue(D[0]) + this.GetCardLogicValue(D[1]));
}
return this.RetType(this.GetCardLogicValue(_[0]) + this.GetCardLogicValue(_[1]));
}
if ((this.GetCardLogicValue(i[2]) + this.GetCardLogicValue(i[3]) + this.GetCardLogicValue(i[4])) % 10 == 0) {
for (var B = 0, M = 0; M < t; M++) 2 != M && 3 != M && 4 != M && (c[B++] = i[M]);
var P = [];
ZeroArray(P, 5);
P[0] = i[2];
P[1] = i[3];
P[2] = i[4];
P[3] = c[0];
P[4] = c[1];
for (var O = 0; O < t; O++) {
cc.assert(P[O] >= 0 && P[O] <= 13 || P[O] >= 17 && P[O] <= 29 || P[O] >= 33 && P[O] <= 45 || P[O] >= 49 && P[O] <= 61 || P[O] >= 65 && P[O] <= 66);
e[O] = P[O];
}
return 10;
}
for (o = 1; o < t; o++) for (var U = 1; U < t; U++) if (U != o) {
if ((this.GetCardLogicValue(i[o]) + this.GetCardLogicValue(i[U])) % 10 == 0) {
for (var F = 0, k = 1; k < t; k++) if (k != o && k != U) {
c[F] = i[k];
F++;
}
var x = [];
ZeroArray(x, 5);
x[0] = i[0];
x[1] = i[o];
x[2] = i[U];
x[3] = c[0];
x[4] = c[1];
for (var V = 0; V < t; V++) {
cc.assert(x[V] >= 0 && x[V] <= 13 || x[V] >= 17 && x[V] <= 29 || x[V] >= 33 && x[V] <= 45 || x[V] >= 49 && x[V] <= 61 || x[V] >= 65 && x[V] <= 66);
e[V] = x[V];
}
if (r <= c[1] % 10 && 0 == (r = this.GetCardLogicValue(c[1]) % 10)) return 10;
}
}
if (0 != r) return this.RetType(r);
}
if (1 == l) {
for (var J = 1; J < t; J++) for (var H = 1; H < t; H++) if (H != J && (this.GetCardLogicValue(i[J]) + this.GetCardLogicValue(i[H])) % 10 == 0) {
for (var W = 0, j = 1; j < t; j++) if (j != J && j != H) {
c[W] = i[j];
W++;
}
if (r <= (this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1])) % 10) {
r = this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1]) % 10;
e[0] = i[0];
e[1] = i[H];
e[2] = i[J];
e[3] = c[0];
e[4] = c[1];
if (0 == r) return 10;
}
}
if (0 != r) return this.RetType(r);
l = 0;
}
if (0 == l) {
for (o = 0; o < t; o++) for (var Y = 0; Y < t; Y++) if (Y != o) for (var z = 0; z < t; z++) if (z != o && z != Y) {
var X = this.GetCardLogicValue(i[o]);
X += this.GetCardLogicValue(i[Y]);
if ((X += this.GetCardLogicValue(i[z])) % 10 == 0) {
for (var K = 0, Z = 0; Z < t; Z++) if (Z != o && Z != Y && Z != z) {
c[K] = i[Z];
K++;
}
var q = [];
ZeroArray(q, 5);
q[0] = i[o];
q[1] = i[Y];
q[2] = i[z];
q[3] = c[0];
q[4] = c[1];
for (var Q = 0; Q < t; Q++) {
cc.assert(q[Q] >= 0 && q[Q] <= 13 || q[Q] >= 17 && q[Q] <= 29 || q[Q] >= 33 && q[Q] <= 45 || q[Q] >= 49 && q[Q] <= 61 || q[Q] >= 65 && q[Q] <= 66);
e[Q] = q[Q];
}
if (r <= (this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1])) % 10 && 0 == (r = this.GetCardLogicValue(c[0]) + this.GetCardLogicValue(c[1]) % 10)) return 10;
}
}
return 0 != r ? this.RetType(r) : 0;
}
return 0;
},
GetTimes: function(e, t) {
if (5 != t) return 0;
var i = this.GetCardType(e, 5);
if (i < 7) return 1;
if (i < 9) return 2;
if (9 == i) return 3;
if (i <= 14) return 4;
if (15 == i) return 5;
if (16 == i) return 6;
if (17 == i) return 8;
cc.assert(FALSE);
return 0;
},
GetOxCard: function(e, t) {
cc.assert(5 == t, "Error OxCardCount:" + e + "cbCardData:" + e);
var i = [];
ZeroArray(i, 5);
var n = [];
ZeroArray(n, 5);
n = e;
for (var a = 0, o = 0; o < t; o++) {
i[o] = this.GetCardLogicValue(e[o]);
a += i[o];
}
for (o = 0; o < t - 1; o++) for (var s = o + 1; s < t; s++) if ((a - i[o] - i[s]) % 10 == 0) {
for (var r = 0, c = 0; c < t; c++) c != o && c != s && (e[r++] = n[c]);
e[r++] = n[o];
e[r++] = n[s];
var l = (i[o] + i[s]) % 10;
0 == l && (l = 10);
return l;
}
return 0;
},
RetType: function(e) {
switch (e %= 10) {
case 0:
return 10;

case 1:
return 1;

case 2:
return 2;

case 3:
return 3;

case 4:
return 4;

case 5:
return 5;

case 6:
return 6;

case 7:
return 7;

case 8:
return 8;

case 9:
return 9;
}
return !1;
},
IsletValue: function(e, t) {
for (var i = 0, n = 0; n < t; n++) i += this.GetCardValue(t[n]);
cc.assert(0 == i, "Error Sum:" + Sum);
return i % 10 == 0;
},
SortCardList: function(e, t) {
var i = [];
ZeroArray(i, 5);
for (var n = 0; n < t; n++) i[n] = this.GetCardNewValue(e[n]);
var a = !0, o = 0, s = t - 1;
do {
a = !0;
for (var r = 0; r < s; r++) if (i[r] < i[r + 1] || i[r] == i[r + 1] && e[r] < e[r + 1]) {
o = e[r];
e[r] = e[r + 1];
e[r + 1] = o;
o = i[r];
i[r] = i[r + 1];
i[r + 1] = o;
a = !1;
}
s--;
} while (0 == a);
},
RanCardList: function(e, t) {
var i = [];
i = i.concat(n);
var a = 0, o = 0;
do {
o = Value_GetRandomlet(0, cbMaxCount - a);
cbCardData[a++] = i[o];
i[o] = i[cbMaxCount - a];
} while (a < cbMaxCount);
},
CompareCard: function(e, t, i, n, a) {
if (n != a) return n > a;
e = [];
if (n == TRUE) {
var o = this.GetCardType(t, i), s = this.GetCardType(e, i);
if (s != o) return s > o;
switch (o) {
case 105:
case 102:
var r = [];
ZeroArray(r, 5);
var c = [];
ZeroArray(c, 5);
r = r.concat(e);
c = c.concat(o);
this.SortCardList(r, i);
this.SortCardList(c, i);
if (this.GetCardValue(r[2.5]) > this.GetCardValue(c[2.5])) break;
}
}
r = [];
ZeroArray(r, 5);
c = [];
ZeroArray(c, 5);
r = r.concat(e);
c = c.concat(o);
this.SortCardList(r, i);
this.SortCardList(c, i);
var l = this.GetCardValue(c[0]), h = this.GetCardValue(r[0]);
return l != h ? h > l : !(this.GetCardColor(r[0]) > this.GetCardColor(c[0])) && void 0;
},
BarRenCompareCard: function(e, t) {
var i = this.GetCardValue(e), n = this.GetCardValue(t);
return i != n ? i < n : this.GetCardColor(e) > this.GetCardColor(t);
},
GetCardNewValue: function(e) {
var t = this.GetCardColor(e), i = this.GetCardValue(e);
return 4 == t ? i + 13 + 2 : i;
},
GetCardLogicValue: function(e) {
var t = this.GetCardValue(e);
t > 10 && (t = 10);
return 4 == this.GetCardColor(e) ? 11 : t;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return (240 & e) >> 4;
}
});
t.exports.GameLogic = o;
cc._RF.pop();
}, {} ],
BRSS_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7c599AbgAJGUJFao43IJ8We", "BRSS_NewGameView");
var n = e("BRSS_NewCMD_Game"), a = e("BRSS_NewGameLogic").GameLogic, o = n.AREA_COUNT;
cc.Class({
extends: GameFrameView,
properties: {
pGameLogic: cc.Node,
nodeMenu: cc.Node,
LayerTrend: cc.Node,
nodeCardType: cc.Node,
nodeEndAnim: cc.Node,
nodeWin: cc.Node,
nodeStartCard: cc.Node,
nodeHandsPai: cc.Node,
nodeScoreTian: [ cc.Label ],
nodeScoreNum: [ cc.Label ],
compareAnim: cc.Node,
nodeJettonLayer: cc.Node,
nodeJetton: [ cc.Node ],
nodeJettonSelect: [ cc.Node ],
nodeWaitStatus: cc.Node,
nodeTime: cc.Node,
labelGameStatus: cc.Label,
nodePlayerList: cc.Node,
pfResultItem: cc.Prefab,
pfTrend: cc.Prefab,
pCardPrefab: cc.Prefab
},
OnFrameViewLoad: function() {
this.pGameLogic = a.instance;
this.lMeMaxScore = 0, this.lMeScore = 0, this.lAryUserJettonScore = [], this.lAryAllJettonScore = [], 
this.lMeCurGameScore = 0, this.lBetChip = [], this.lCurrentArea = 0, this.lCurrentJetton = 0, 
this.bCurEnableBet = !1, this.lAryUserJettonScore = [];
ZeroArray(this.lAryUserJettonScore, n.AREA_MAX);
this.lAryAllJettonScore = [];
ZeroArray(this.lAryAllJettonScore, n.AREA_MAX);
this.gameRecordList = [];
this.ResetValue();
},
ResetValue: function() {
var e = PlayerManager.GetMeUserItem();
if (null != e) {
this.lMeScore = e.GetUserScore();
this.bCurEnableBet = !0;
}
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnButtnEvent: function(e) {
if ("btnGameRecord" == e.target.name) {
var t = cc.instantiate(this.pfTrend);
this.nodeRootCanvas.addChild(t);
this.LayerTrend = t;
this.ShowGameRecord();
}
},
ShowBetChip: function() {
for (var e = 0; e < n.JETTON_COUNT; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
},
ShowBetLayer: function(e) {
for (var t = 1; t <= o; t++) {
this.nodeScoreTian[t - 1].string = "0";
this.nodeScoreNum[t - 1].string = "0";
if (!e) {
this.nodeScoreTian[t - 1].node.parent.active = !1;
this.nodeScoreNum[t - 1].node.parent.active = !1;
}
}
},
ShowBetJetton: function(e) {
if (e) {
for (var t = INVALID_BYTE, i = INVALID_BYTE, a = n.JETTON_COUNT - 1; a >= 0; --a) {
var o = !(this.lMeScore < 13 * this.lBetChip[a]);
this.nodeJetton[a].getComponent(cc.Button).interactable = o;
o && this.lCurrentJetton == this.lBetChip[a] && (t = a);
o && i == INVALID_BYTE && (i = a);
0 != a || o || (this.bCurEnableBet = !1);
}
t == INVALID_BYTE && (t = i);
0 == this.lCurrentJetton && this.lMeScore >= 13 * this.lBetChip[0] && (t = 0);
t != INVALID_BYTE && this.ClickJettonBtn(null, t);
} else for (var s = n.JETTON_COUNT - 1; s >= 0; --s) {
this.nodeJetton[s].getComponent(cc.Button).interactable = !1;
this.nodeJettonSelect[s].active = !1;
}
},
UpdateBetJetton: function() {
for (var e = 0, t = 0; t < n.AREA_MAX; t++) e += this.lAryUserJettonScore[t];
for (var i = INVALID_BYTE, a = INVALID_BYTE, o = n.JETTON_COUNT - 1; o >= 0; --o) {
var s = this.lMeScore - 13 * e >= 13 * this.lBetChip[o];
this.nodeJetton[o].getComponent(cc.Button).interactable = s;
this.nodeJettonSelect[o].active = s;
s && this.lCurrentJetton == this.lBetChip[o] && (i = o);
s && a == INVALID_BYTE && (a = o);
0 != o || s || (this.bCurEnableBet = !1);
}
i == INVALID_BYTE && (i = a);
0 == this.lCurrentJetton && this.lMeScore >= 13 * this.lBetChip[0] && (i = 0);
i != INVALID_BYTE && this.ClickJettonBtn(null, i);
},
UpdateBetArray: function(e, t, i) {
e == this.pGameEngineJs.GetMeChairID() && (this.lAryUserJettonScore[t - 1] += i);
this.lAryAllJettonScore[t - 1] += i;
this.UpdateTableBetInfo();
},
UpdateTableBetInfo: function() {
for (var e = 1; e <= o; e++) {
if (this.lAryAllJettonScore[e - 1] > 0) {
this.nodeScoreTian[e - 1].node.parent.active = !0;
this.nodeScoreTian[e - 1].string = OnIntScore(this.lAryAllJettonScore[e - 1]);
}
if (this.lAryUserJettonScore[e - 1] > 0) {
this.nodeScoreNum[e - 1].node.parent.active = !0;
this.nodeScoreNum[e - 1].string = OnIntScore(this.lAryUserJettonScore[e - 1]);
}
}
},
ShowGameEndWithGameScene: function(e) {
if (e) this.ShowSendHandCardAni(); else for (var t = 0; t < 5; t++) {
var i = "HandCardLayer" + t, n = this.nodeHandsPai.getChildByName(i), a = cc.instantiate(this.pCardPrefab);
n.addChild(a);
a.getComponent("BRSS_NewCardNode").SetCardData(.6, t, this.pGameEngineJs.playerCards[t]);
t > 0 && this.showAreaType(t, !1);
}
},
OnBetBegin: function() {
var e = this.compareAnim.getComponent("BRSS_NewActionHelp");
e.ResetAllStartNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
},
OnBetFinish: function(e) {
var t = this.compareAnim.getComponent("BRSS_NewActionHelp");
t.ResetAllEndNode();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
e ? t.StartGameEndAction(e) : t.StartGameEndAction();
},
ShowSendHandCardAni: function() {
var e = this, t = this;
this.PlaySound("DispatchCard");
for (var i = function(i) {
var n = "HandCardLayer" + i, a = e.nodeHandsPai.getChildByName(n), o = cc.instantiate(e.pCardPrefab);
e.nodeStartCard.addChild(o, -5 * i);
o.getComponent("BRSS_NewCardNode").SetCardData(.6, 0, 67);
o.j = i;
o.i = 0;
o.pfCardPrefab = e.pCardPrefab;
o.handsPai = a;
var s = e.nodeStartCard.getPosition(), r = cc.v2(a.getPositionX(), a.getPositionY() - 150), c = [];
e.getBezierRoute(s, r, c, i);
o.runAction(cc.sequence(cc.bezierTo(.4, c), cc.callFunc(function(e) {
var n = cc.instantiate(e.pfCardPrefab);
e.handsPai.addChild(n, 1, e.j);
n.getComponent("BRSS_NewCardNode").SetCardData(.6, e.i, 67);
n.runAction(cc.sequence(cc.delayTime(0 + 1 * i), cc.scaleTo(.4, 0, .6), cc.callFunc(function(n) {
n.getComponent("BRSS_NewCardNode").SetCardData(.6, e.i, t.pGameEngineJs.playerCards[i]);
}.bind(this)), cc.scaleTo(.4, .6, .6), cc.callFunc(function(e) {
this.showCardType(i);
this.PlaySound("OutCard");
}.bind(this))));
}.bind(e)), cc.removeSelf()));
}, n = 0; n < 5; n++) i(n);
},
showCardType: function(e) {
if (e > 0) {
if (this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[e])) {
var t = "PokerArea" + (e - 1);
this.nodeWin.getChildByName(t).getChildByName("nodeLight").active = !0;
this.nodeWin.getChildByName(t).getChildByName("nodeLight").getComponent(cc.Animation).play();
}
}
this.showAreaType(e, !0);
if (4 == e) {
for (var i = [], n = 1; n <= 4; ++n) {
this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[n]) && this.lAryAllJettonScore[n - 1] > 0 && i.push(n - 1);
}
this.OnFrameGameEndAction(i, this.lAllUserScore, !0);
this.AddGameResult();
}
},
showAreaType: function(e, t) {
var i = this, n = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[e]), a = this.pGameLogic.GetCardValue(this.pGameEngineJs.playerCards[e]), o = "cardType" + e, s = cc.find(o, this.nodeCardType);
cc.find("typeBg", s).active = !0;
cc.find("typeBg/lblType", s).getComponent(cc.Label).string = "x" + a;
if (e > 0) {
var r = cc.find("typeWin", s), c = cc.find("typeLose", s);
if (n) {
r.active = !0;
c.active = !1;
} else {
r.active = !1;
c.active = !0;
}
if (n && t) {
var l = cc.find("nodeAnim", s);
l.active = !0;
var h = l.getComponent(sp.Skeleton);
if (1 == e) {
PlaySkeletonAnimation(h, !1, "long2").setCompleteListener(function() {
l.active = !1;
});
this.PlaySound("animal0");
} else if (2 == e) {
PlaySkeletonAnimation(h, !1, "feng").setCompleteListener(function() {
l.active = !1;
});
this.PlaySound("animal1");
} else if (3 == e) {
PlaySkeletonAnimation(h, !1, "feng").setCompleteListener(function() {
l.active = !1;
});
this.PlaySound("animal2");
} else if (4 == e) {
PlaySkeletonAnimation(h, !1, "feng").setCompleteListener(function() {
l.active = !1;
});
this.PlaySound("animal3");
}
}
}
if (4 == e) {
for (var u = [], d = 1; d <= 4; ++d) {
this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[d]) && this.lAryAllJettonScore[d - 1] > 0 && u.push(d - 1);
}
setTimeout(function() {
if (4 == u.length) {
i.nodeEndAnim.active = !0;
var e = cc.find("animAllLoses", i.nodeEndAnim);
e.active = !0;
var t = e.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation");
} else if (0 == u.length) {
i.nodeEndAnim.active = !0;
var n = cc.find("animAllKills", i.nodeEndAnim);
n.active = !0;
var a = n.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !1, "animation");
}
}, t ? 1e3 : 0);
}
},
updateAreaResult: function() {
for (var e = [], t = this.gameRecordList.length, i = (e = t > 6 ? this.gameRecordList.slice(t - 6, t) : this.gameRecordList.slice(0, t)).length, n = 0; n < 4; n++) {
var a = "PokerArea" + n, o = cc.find(a, this.nodeWin), s = cc.find("nodeResult/content", o);
s.removeAllChildren();
for (var r = 0; r < i; r++) {
var c = cc.instantiate(this.pfResultItem);
s.addChild(c);
var l = cc.find("iconWin", c), h = cc.find("iconLose", c);
if (e[r].bType[n]) {
l.active = !0;
h.active = !1;
} else {
l.active = !1;
h.active = !0;
}
r == i - 1 && c.runAction(cc.sequence(cc.delayTime(.5), cc.fadeOut(.5), cc.fadeIn(.5), cc.fadeOut(.5), cc.fadeIn(.5), cc.fadeOut(.5), cc.fadeIn(.5)));
}
}
},
getBezierRoute: function(e, t, i, n) {
i.push(e);
var a = cc.v2(0, 0);
if (0 == n) {
a.x = (t.x - e.x) / 2;
a.y = (t.y - e.y) / 2;
} else if (1 == n) {
a.x = t.x - 150;
a.y = e.y + 200;
} else if (2 == n) {
a.x = t.x - 75;
a.y = e.y + 200;
} else if (3 == n) {
a.x = t.x + 75;
a.y = e.y + 200;
} else if (4 == n) {
a.x = t.x + 150;
a.y = e.y + 200;
}
i.push(a);
i.push(t);
},
AddGameResult: function() {
this.gameRecordList.length > 15 && this.gameRecordList.splice(0, 1);
var e = {};
e.bWinTian = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[1]);
e.bWinDi = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[2]);
e.bWinXuan = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[3]);
e.bWinHuang = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[4]);
e.bType = [];
for (var t = 0; t < o; t++) e.bType[t] = this.pGameLogic.BarRenCompareCard(this.pGameEngineJs.playerCards[0], this.pGameEngineJs.playerCards[t + 1]);
e.bCard = [];
for (var i = 0; i < o + 1; i++) e.bCard[i] = this.pGameEngineJs.playerCards[i];
this.gameRecordList.push(e);
this.ShowGameRecord();
this.updateAreaResult();
},
DeleteCard: function() {
var e = this.nodeJettonLayer.getChildByName("nodeBetChip");
e && e.removeAllChildren();
for (var t = 0; t < 5; t++) {
var i = "HandCardLayer" + t, a = this.nodeHandsPai.getChildByName(i);
a && a.removeAllChildren();
}
for (var o = 0; o < 4; o++) {
var s = "PokerArea" + o;
this.nodeWin.getChildByName(s).getChildByName("nodeLight").active = !1;
this.nodeWin.getChildByName(s).getChildByName("nodeLight").getComponent(cc.Animation).stop();
}
ZeroArray(this.lAryUserJettonScore, n.AREA_MAX);
ZeroArray(this.lAryAllJettonScore, n.AREA_MAX);
for (var r = 0; r < 5; r++) {
var c = "cardType" + r, l = cc.find(c, this.nodeCardType), h = cc.find("typeBg", l);
if (h) {
cc.find("lblType", h).getComponent(cc.Label).string = "";
h.active = !1;
}
var u = cc.find("typeWin", l);
u && (u.active = !1);
var d = cc.find("typeLose", l);
d && (d.active = !1);
var m = cc.find("nodeAnim", l);
m && (m.active = !1);
this.nodeEndAnim.active = !1;
cc.find("animAllKills", this.nodeEndAnim).active = !1;
cc.find("animAllLoses", this.nodeEndAnim).active = !1;
}
},
PlaceUserJetton: function(e, t, i) {
if (e != INVALID_CHAIR) {
this.UpdateBetArray(e, t, i);
this.PlaySound("Addgold");
var a = parseInt(200 * Math.random()), s = parseInt(170 * Math.random()), r = cc.v2(a + 50, s + 50);
this.OnFramePlaceJetton(e, t - 1, i, r);
} else {
for (var c = 0, l = 1; l <= o; ++l) c += this.lAryUserJettonScore[l - 1] || 0;
if (this.lMeScore < c + i) return;
if (this.lMeMaxScore < c + i) return;
var h = {};
h.AreaIndex = t;
h.BetScore = i;
var u = window.net.netSerializer.packMsg("CMD_C_UserBet", h);
this.pGameEngineJs.SendGameData(n.SUB_C_PLACE_JETTON, u, u.length);
}
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
OnFrameEventUserScore: function(e, t) {
return !0;
},
OnPlaceJetton: function(e, t) {
this.lCurrentArea = parseInt(t);
this.lMeScore = this.pGameEngineJs.jsMeUserItem.GetUserScore();
for (var i = 0, a = 0; a < n.AREA_MAX; a++) i += this.lAryUserJettonScore[a] || 0;
if (this.lMeScore - i < this.pGameEngineJs.lMinTake) {
var s = "Current gold coin is lower than " + OnIntScore(this.pGameEngineJs.lMinTake) + "，please recharge first";
cc.warn(s);
ManagerHelp_SetSystemLabel(s);
} else if (this.bCurEnableBet) {
for (var r = 0, c = 1; c <= o; c++) {
if (this.lCurrentArea == c && this.lAryAllJettonScore[c - 1] + this.lCurrentJetton > this.pGameEngineJs.lAreaLimitScore) {
var l = "The current area is full" + OnIntScore(this.pGameEngineJs.lAreaLimitScore) + ", unable to bet";
cc.warn(l);
ManagerHelp_SetSystemLabel(l);
return;
}
r += this.lAryUserJettonScore[c - 1];
}
if (r + this.lCurrentJetton > this.pGameEngineJs.lUserLimitScore) {
var h = "Individual total bet" + OnIntScore(this.pGameEngineJs.lUserLimitScore) + ", your bet is full";
cc.warn(h);
ManagerHelp_SetSystemLabel(h);
} else this.pGameEngineJs.cbGameStatus == n.GAME_SCENE_PLAY && 0 != this.lCurrentJetton && this.PlaceUserJetton(INVALID_CHAIR, this.lCurrentArea, this.lCurrentJetton);
} else {
var u = "The current gold coin is not enough to bet!";
cc.warn(u);
ManagerHelp_SetSystemLabel(u);
}
},
ClickJettonBtn: function(e, t) {
this.lCurrentJetton = this.lBetChip[t];
for (var i = 0; i < n.JETTON_COUNT; i++) this.nodeJettonSelect[i].active = !1;
this.nodeJettonSelect[t].active = !0;
},
SetGameSprite: function(e, t) {
cc.loader.loadRes(t, cc.SpriteFrame, function(t, i) {
t ? cc.warn("self.node.Error.spriteFrame.is.null") : e && (e.getComponent(cc.Sprite).spriteFrame = i);
});
},
UpdateGold: function() {
this.nodeViewUser[0].getChildByName("UserInfoBg").getChildByName("labelUserScore").getComponent(cc.Label).string = window.OnScoreToString(this.lMeScore + this.lMeCurGameScore);
this.lMeScore += this.lMeCurGameScore;
},
ShowGameRecord: function() {
if (!(this.gameRecordList.length < 0) && cc.isValid(this.LayerTrend)) {
this.LayerTrend.getComponent("BRSS_NewTrend").OnUpdateRecore(this);
}
},
PlaySound: function(e) {
"BackgroundMusic" == e && window.mfConfig.PlayAudio("135/Audio/BackGround", !0, window.mfConfig.fMusic);
"Click" == e && window.mfConfig.PlayAudio("135/Audio/Click", !1, window.mfConfig.fMusic);
"Addgold" == e && window.mfConfig.PlayAudio("135/Audio/ADD_GOLD", !1, window.mfConfig.fMusic);
"addGoldEx" == e && window.mfConfig.PlayAudio("135/Audio/ADD_GOLD_EX", !1, window.mfConfig.fMusic);
"GameStart" == e && window.mfConfig.PlayAudio("135/Audio/GAME_START", !1, window.mfConfig.fMusic);
"EndWin" == e && window.mfConfig.PlayAudio("135/Audio/END_WIN", !1, window.mfConfig.fMusic);
"EndLost" == e && window.mfConfig.PlayAudio("135/Audio/END_LOST", !1, window.mfConfig.fMusic);
"EndDraw" == e && window.mfConfig.PlayAudio("135/Audio/END_DRAW", !1, window.mfConfig.fMusic);
"TimeWarimg" == e && window.mfConfig.PlayAudio("135/Audio/niu-clock", !1, window.mfConfig.fMusic);
"DispatchCard" == e && window.mfConfig.PlayAudio("135/Audio/DISPATCH_CARD", !1, window.mfConfig.fMusic);
"OutCard" == e && window.mfConfig.PlayAudio("135/Audio/OUT_CARD", !1, window.mfConfig.fMusic);
"animal0" == e && window.mfConfig.PlayAudio("135/Audio/animal0", !1, window.mfConfig.fMusic);
"animal1" == e && window.mfConfig.PlayAudio("135/Audio/animal1", !1, window.mfConfig.fMusic);
"animal2" == e && window.mfConfig.PlayAudio("135/Audio/animal2", !1, window.mfConfig.fMusic);
"animal3" == e && window.mfConfig.PlayAudio("135/Audio/animal3", !1, window.mfConfig.fMusic);
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
SetTimeClock: function(e, t) {
this.nodeTime.getComponent("jsTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "Have a rest";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "Bet in time";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "";
return;
}
}
});
cc._RF.pop();
}, {
BRSS_NewCMD_Game: "BRSS_NewCMD_Game",
BRSS_NewGameLogic: "BRSS_NewGameLogic"
} ],
BRSS_NewTrend: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41e036R2K5MQ4TCnAbGJJ4C", "BRSS_NewTrend");
cc.Class({
extends: cc.Component,
properties: {
ScrollView: cc.ScrollView,
ScrollViewContent: cc.Node,
lblWinRate: [ cc.Label ],
pfTrendItem: cc.Prefab
},
OnUpdateRecore: function(e) {
this.ScrollViewContent.removeAllChildren();
for (var t = [ 1, 2, 3, 4, 0 ], i = e.gameRecordList.length, n = 0; n < i; n++) {
var a = cc.instantiate(this.pfTrendItem);
this.ScrollViewContent.addChild(a, 100, "RecordItem");
for (var o = e.gameRecordList[n], s = 0; s < 5; s++) {
var r = "nodeRecord/card" + s, c = cc.find(r, a), l = cc.find("typeBg", c), h = cc.find("typeWin", c), u = cc.find("typeLose", c);
l.zIndex = 1;
h.zIndex = 2;
u.zIndex = 3;
var d = cc.instantiate(e.pCardPrefab);
c.addChild(d);
d.zIndex = 0;
d.getComponent("BRSS_NewCardNode").SetCardData(.6, s, o.bCard[t[s]]);
l.active = !0;
var m = e.pGameLogic.GetCardValue(o.bCard[t[s]]);
cc.find("typeBg/lblType", c).getComponent(cc.Label).string = "x" + m;
if (4 != s) if (o.bType[s]) {
h.active = !0;
u.active = !1;
} else {
h.active = !1;
u.active = !0;
}
}
if (n == i - 1) {
a.getChildByName("im_uptodate").active = !0;
}
}
i > 6 && this.ScrollView.scrollToRight(0);
for (var f = [ [ 0 ], [ 0 ], [ 0 ], [ 0 ] ], p = 0; p < i; p++) for (var _ = e.gameRecordList[p], S = 0; S < 4; S++) 1 == _.bType[S] && f[S]++;
for (var g = 0; g < 4; g++) {
var C = keepTwoDecimalFull(f[g] / i), w = Math.round(100 * C);
this.lblWinRate[g].string = w + "%";
}
}
});
cc._RF.pop();
}, {} ],
BRSS_NewUserChatItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a984aWUtTRPMYz8GgV1f44a", "BRSS_NewUserChatItem");
cc.Class({
extends: cc.Component,
properties: {
LabelStr: cc.Label,
UserImage: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
BRSS_NewUserInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "88ac0n1PHhN2qWC0eBFEOMk", "BRSS_NewUserInfo");
var n = cc.Class({
extends: cc.Component,
properties: {
wBankerChairId: [],
szBankerUserName: [],
wBankerScore: []
},
onLoad: function() {
this.wBankerChairId = [];
this.szBankerUserName = [];
this.wBankerScore = [];
ZeroArray(this.wBankerChairId, 20);
ZeroArray(this.szBankerUserName, 20);
ZeroArray(this.wBankerScore, 20);
},
SetBankerListInfo: function(e, t, i, n) {
this.wBankerChairId[e] = n;
this.szBankerUserName[e] = t;
this.wBankerScore[e] = i;
}
});
t.exports.tagBankerList = n;
cc._RF.pop();
}, {} ],
BigWin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5f54b0tlU5II6qweFmvnrrn", "BigWin");
cc.Class({
extends: cc.Component,
properties: {
numLabel: cc.Label,
spWin: cc.Node
},
start: function() {
this.spWin.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
"Win_disappear" == e.animation.name && this.callback && this.callback();
}.bind(this));
},
playNumChange: function(e, t, i) {
this.unscheduleAllCallbacks();
t = t || 1;
this.isPlay = !0;
this.TagNum = e;
this.curNum = 0;
this.numLabel.string = "0.00";
this.addNum = this.TagNum / (60 * t);
this.callback = i;
this.spWin.getComponent(sp.Skeleton).animation = "Win_start";
this.spWin.getComponent(sp.Skeleton).addAnimation(0, "Win_keep", !0);
},
update: function(e) {
if (this.isPlay) {
this.curNum += this.addNum;
if (this.curNum >= this.TagNum) {
this.curNum = this.TagNum;
this.isPlay = !1;
this.scheduleOnce(function() {
this.spWin.getComponent(sp.Skeleton).animation = "Win_disappear";
}.bind(this), 1);
}
this.numLabel.string = OnScoreToString(this.curNum);
}
}
});
cc._RF.pop();
}, {} ],
BoxSerializer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd9d5VB58lPU6itzszl7MV+", "BoxSerializer");
cc.Class({
properties: {},
ctor: function() {
this.MAGIC = 2037952207;
this.INT_SIZE = 4;
this.SHORT_SZIE = 2;
},
initHeader: function() {
var e = {};
e.magic = {
value: this.MAGIC,
length: this.INT_SIZE
};
e.version = {
value: 0,
length: this.SHORT_SZIE
};
e.flag = {
value: 0,
length: this.SHORT_SZIE
};
e.boxSize = {
value: 0,
length: this.INT_SIZE
};
e.cmd = {
value: 0,
length: this.INT_SIZE
};
e.ret = {
value: 0,
length: this.INT_SIZE
};
e.sn = {
value: 0,
length: this.INT_SIZE
};
return e;
},
getHeaderPropertyList: function() {
return [ "magic", "version", "flag", "boxSize", "cmd", "ret", "sn" ];
},
transformArrayBufferToBase64: function(e) {
for (var t = "", i = new Uint8Array(e), n = i.byteLength, a = 0; a < n; a++) t += String.fromCharCode(i[a]);
return window.btoa(t);
},
str2ab: function(e) {
for (var t = new ArrayBuffer(e.length), i = new Uint8Array(t), n = 0, a = e.length; n < a; n++) i[n] = e.charCodeAt(n);
return t;
},
buf2hex: function(e) {
return Array.prototype.map.call(new Uint8Array(e), function(e) {
return ("00" + e.toString(16)).slice(-2);
}).join("");
},
ab2str: function(e) {
return String.fromCharCode.apply(null, new Uint8Array(e));
},
packBox: function(e, t, i, n) {
var a = this.initHeader(), o = this.transformArrayBufferToBase64(i), s = this.str2ab(o);
a.ret.value = isValidType(n) ? n : qf.net.netSerializer.getRetID();
a.cmd.value = e;
a.sn.value = t;
a.flag.value = 2;
var r = this.getBoxSize(a, s);
a.boxSize.value = r;
for (var c = 0, l = new ArrayBuffer(r), h = new DataView(l), u = this.getHeaderPropertyList(), d = u.length, m = 0; m < d; m++) {
var f = a[u[m]];
f.length === this.INT_SIZE ? h.setInt32(c, f.value) : f.length === this.SHORT_SZIE && h.setInt16(c, f.value);
c += f.length;
}
var p = new Uint8Array(s), _ = s.byteLength;
for (m = 0; m < _; m++) {
h.setUint8(c, p[m]);
c += 1;
}
return l;
},
unpackBox: function(e) {},
getBoxSize: function(e, t) {
var i = this.getHeaderSize(e);
t && (i += t.byteLength);
return i;
},
getHeaderSize: function(e) {
var t = 0;
for (var i in e) t += e[i].length;
return t;
}
});
cc._RF.pop();
}, {} ],
1: [ function(e, t, i) {
i.endianness = function() {
return "LE";
};
i.hostname = function() {
return "undefined" != typeof location ? location.hostname : "";
};
i.loadavg = function() {
return [];
};
i.uptime = function() {
return 0;
};
i.freemem = function() {
return Number.MAX_VALUE;
};
i.totalmem = function() {
return Number.MAX_VALUE;
};
i.cpus = function() {
return [];
};
i.type = function() {
return "Browser";
};
i.release = function() {
return "undefined" != typeof navigator ? navigator.appVersion : "";
};
i.networkInterfaces = i.getNetworkInterfaces = function() {
return {};
};
i.arch = function() {
return "javascript";
};
i.platform = function() {
return "browser";
};
i.tmpdir = i.tmpDir = function() {
return "/tmp";
};
i.EOL = "\n";
}, {} ],
2: [ function(e, t, i) {
(function(e) {
function t(e, t) {
for (var i = 0, n = e.length - 1; n >= 0; n--) {
var a = e[n];
if ("." === a) e.splice(n, 1); else if (".." === a) {
e.splice(n, 1);
i++;
} else if (i) {
e.splice(n, 1);
i--;
}
}
if (t) for (;i--; i) e.unshift("..");
return e;
}
var n = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, a = function(e) {
return n.exec(e).slice(1);
};
i.resolve = function() {
for (var i = "", n = !1, a = arguments.length - 1; a >= -1 && !n; a--) {
var s = a >= 0 ? arguments[a] : e.cwd();
if ("string" != typeof s) throw new TypeError("Arguments to path.resolve must be strings");
if (s) {
i = s + "/" + i;
n = "/" === s.charAt(0);
}
}
return (n ? "/" : "") + (i = t(o(i.split("/"), function(e) {
return !!e;
}), !n).join("/")) || ".";
};
i.normalize = function(e) {
var n = i.isAbsolute(e), a = "/" === s(e, -1);
(e = t(o(e.split("/"), function(e) {
return !!e;
}), !n).join("/")) || n || (e = ".");
e && a && (e += "/");
return (n ? "/" : "") + e;
};
i.isAbsolute = function(e) {
return "/" === e.charAt(0);
};
i.join = function() {
var e = Array.prototype.slice.call(arguments, 0);
return i.normalize(o(e, function(e, t) {
if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
return e;
}).join("/"));
};
i.relative = function(e, t) {
e = i.resolve(e).substr(1);
t = i.resolve(t).substr(1);
function n(e) {
for (var t = 0; t < e.length && "" === e[t]; t++) ;
for (var i = e.length - 1; i >= 0 && "" === e[i]; i--) ;
return t > i ? [] : e.slice(t, i - t + 1);
}
for (var a = n(e.split("/")), o = n(t.split("/")), s = Math.min(a.length, o.length), r = s, c = 0; c < s; c++) if (a[c] !== o[c]) {
r = c;
break;
}
var l = [];
for (c = r; c < a.length; c++) l.push("..");
return (l = l.concat(o.slice(r))).join("/");
};
i.sep = "/";
i.delimiter = ":";
i.dirname = function(e) {
var t = a(e), i = t[0], n = t[1];
if (!i && !n) return ".";
n && (n = n.substr(0, n.length - 1));
return i + n;
};
i.basename = function(e, t) {
var i = a(e)[2];
t && i.substr(-1 * t.length) === t && (i = i.substr(0, i.length - t.length));
return i;
};
i.extname = function(e) {
return a(e)[3];
};
function o(e, t) {
if (e.filter) return e.filter(t);
for (var i = [], n = 0; n < e.length; n++) t(e[n], n, e) && i.push(e[n]);
return i;
}
var s = "b" === "ab".substr(-1) ? function(e, t, i) {
return e.substr(t, i);
} : function(e, t, i) {
t < 0 && (t = e.length + t);
return e.substr(t, i);
};
}).call(this, e("_process"));
}, {
_process: 3
} ],
3: [ function(e, t, i) {
var n, a, o = t.exports = {};
function s() {
throw new Error("setTimeout has not been defined");
}
function r() {
throw new Error("clearTimeout has not been defined");
}
(function() {
try {
n = "function" == typeof setTimeout ? setTimeout : s;
} catch (e) {
n = s;
}
try {
a = "function" == typeof clearTimeout ? clearTimeout : r;
} catch (e) {
a = r;
}
})();
function c(e) {
if (n === setTimeout) return setTimeout(e, 0);
if ((n === s || !n) && setTimeout) {
n = setTimeout;
return setTimeout(e, 0);
}
try {
return n(e, 0);
} catch (t) {
try {
return n.call(null, e, 0);
} catch (t) {
return n.call(this, e, 0);
}
}
}
var l, h = [], u = !1, d = -1;
function m() {
if (u && l) {
u = !1;
l.length ? h = l.concat(h) : d = -1;
h.length && f();
}
}
function f() {
if (!u) {
var e = c(m);
u = !0;
for (var t = h.length; t; ) {
l = h;
h = [];
for (;++d < t; ) l && l[d].run();
d = -1;
t = h.length;
}
l = null;
u = !1;
(function(e) {
if (a === clearTimeout) return clearTimeout(e);
if ((a === r || !a) && clearTimeout) {
a = clearTimeout;
return clearTimeout(e);
}
try {
a(e);
} catch (t) {
try {
return a.call(null, e);
} catch (t) {
return a.call(this, e);
}
}
})(e);
}
}
o.nextTick = function(e) {
var t = new Array(arguments.length - 1);
if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
h.push(new p(e, t));
1 !== h.length || u || c(f);
};
function p(e, t) {
this.fun = e;
this.array = t;
}
p.prototype.run = function() {
this.fun.apply(null, this.array);
};
o.title = "browser";
o.browser = !0;
o.env = {};
o.argv = [];
o.version = "";
o.versions = {};
function _() {}
o.on = _;
o.addListener = _;
o.once = _;
o.off = _;
o.removeListener = _;
o.removeAllListeners = _;
o.emit = _;
o.prependListener = _;
o.prependOnceListener = _;
o.listeners = function(e) {
return [];
};
o.binding = function(e) {
throw new Error("process.binding is not supported");
};
o.cwd = function() {
return "/";
};
o.chdir = function(e) {
throw new Error("process.chdir is not supported");
};
o.umask = function() {
return 0;
};
}, {} ],
CMD_Commom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1545eHeII1GRLprB9Qlhknw", "CMD_Commom");
e("ACMD_AStruct");
window.MDM_CM_SYSTEM = 1e3;
window.SUB_CM_SYSTEM_MESSAGE = 1;
window.SUB_CM_ACTION_MESSAGE = 2;
window.SUB_CM_DOWN_LOAD_MODULE = 3;
window.SMT_CHAT = 1;
window.SMT_EJECT = 2;
window.SMT_GLOBAL = 4;
window.SMT_PROMPT = 8;
window.SMT_TABLE_ROLL = 16;
window.SMT_CLOSE_ROOM = 256;
window.SMT_CLOSE_GAME = 512;
window.SMT_CLOSE_LINK = 1024;
window.CMD_CM_SystemMessage = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wType = 0;
this.wLength = 0;
this.szString = [];
ZeroArray(this.szString, 1024);
}
});
window.ACT_BROWSE = 1;
window.ACT_DOWN_LOAD = 2;
window.BRT_IE = 1;
window.BRT_PLAZA = 2;
window.BRT_WINDOWS = 4;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_GameServer: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "20a65crWoVMI6OZNx/Af5Zm", "CMD_GameServer");
e("ACMD_AStruct");
window.MDM_GR_LOGON = 1;
window.SUB_GR_LOGON_USERID = 1;
window.SUB_GR_LOGON_MOBILE = 2;
window.SUB_GR_LOGON_ACCOUNTS = 3;
window.SUB_GR_LOGON_MOBILE_WITH_RES_V = 4;
window.GR_LOGON_MB_EC_RES_ERROR = 1;
window.SUB_GR_LOGON_SUCCESS = 100;
window.SUB_GR_LOGON_FAILURE = 101;
window.SUB_GR_LOGON_FINISH = 102;
window.SUB_GR_LOGON_FAILURE_NEW = 103;
window.SUB_GR_UPDATE_NOTIFY = 200;
window.SYS_COLOR = 16771584;
window.NAME_PREFIX = 16711935;
window.TEXT_COLOR = 16777215;
window.SMALL_HORN = 39423;
window.CMD_GR_LogonMobile = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wGameID = 0;
this.dwPlazaVersion = 0;
this.dwGameVersion = 0;
this.cbDeviceType = 0;
this.lConfigValue = 0;
this.wBehaviorFlags = 0;
this.wPageTableCount = 0;
this.dwUserID = 0;
this.szPassword = [];
this.szMachineID = [];
this.szOpenID = [];
this.dwChannelID = 0;
ZeroArray(this.szPassword, LEN_MD5);
ZeroArray(this.szMachineID, LEN_MACHINE_ID);
ZeroArray(this.szOpenID, LEN_OPENID);
}
});
window.CMD_GR_LogonMobileWithResV = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wGameID = 0;
this.dwPlazaVersion = 0;
this.dwGameVersion = 0;
this.cbDeviceType = 0;
this.dwConfigValue = 0;
this.wBehaviorFlags = 0;
this.wPageTableCount = 0;
this.dwUserID = 0;
this.szPassword = [];
this.szMachineID = [];
this.szOpenID = [];
this.dwChannelID = 0;
ZeroArray(this.szPassword, LEN_MD5);
ZeroArray(this.szMachineID, LEN_MACHINE_ID);
ZeroArray(this.szOpenID, LEN_OPENID);
}
});
window.CMD_GR_LogonAccounts = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPlazaVersion = 0;
this.dwFrameVersion = 0;
this.dwGameVersion = 0;
this.szPassword = [];
this.szAccounts = [];
this.zMachineID = [];
this.dwChannelID = 0;
ZeroArray(this.szPassword, LEN_MD5);
ZeroArray(this.szAccounts, LEN_ACCOUNTS);
ZeroArray(this.zMachineID, LEN_MACHINE_ID);
}
});
window.CMD_GR_LogonSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserRight = 0;
this.dwMasterRight = 0;
this.cbMemberOrder = 0;
this.dwMemberExp = 0;
}
});
window.CMD_GR_LogonFailureNew = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wMainId = 0;
this.wSubId = 0;
this.dwStatusCode = 0;
this.nErrorCode = 0;
this.wKindID = 0;
this.wServerID = 0;
this.szDescribeString = [];
memset(this.szDescribeString, 0, 128);
}
});
window.CMD_GR_UpdateNotify = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbMustUpdatePlaza = 0;
this.cbMustUpdateClient = 0;
this.cbAdviceUpdateClient = 0;
this.dwCurrentPlazaVersion = 0;
this.dwCurrentFrameVersion = 0;
this.dwCurrentClientVersion = 0;
this.szDownloadUrl = [];
ZeroArray(this.szDownloadUrl, 255);
}
});
window.MDM_GR_CONFIG = 2;
window.SUB_GR_CONFIG_COLUMN = 100;
window.SUB_GR_CONFIG_SERVER = 101;
window.SUB_GR_CONFIG_PROPERTY = 102;
window.SUB_GR_CONFIG_FINISH = 103;
window.SUB_GR_CONFIG_USER_RIGHT = 104;
window.SUB_GR_CONFIG_TABLE = 105;
window.CMD_GR_ConfigColumn = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbColumnCount = 0;
this.ColumnItem = [];
ZeroArray(this.ColumnItem, MAX_COLUMN);
}
});
window.CMD_GR_ConfigServer = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableCount = 0;
this.wChairCount = 0;
this.wServerType = 0;
this.dwServerRule = 0;
this.wRevenueRatio = 0;
this.lServiceScore = 0;
}
});
window.CMD_GR_ConfigProperty = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbPropertyCount = 0;
this.PropertyInfo = [];
for (window.i = 0; i < MAX_PROPERTY; i++) this.PropertyInfo[i] = new _PropertyInfo();
}
});
window.CMD_GR_ConfigUserRight = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserRight = 0;
}
});
window.tagTableConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbConfigType = 0;
this.wTableCount = 0;
this.lConfigScore = [];
ZeroArray(this.lConfigScore, MAX_TABLE);
}
});
window.MDM_GR_USER = 3;
window.SUB_GR_USER_RULE = 1;
window.SUB_GR_USER_LOOKON = 2;
window.SUB_GR_USER_SITDOWN = 3;
window.SUB_GR_USER_STANDUP = 4;
window.SUB_GR_USER_INVITE = 5;
window.SUB_GR_USER_INVITE_REQ = 6;
window.SUB_GR_USER_REPULSE_SIT = 7;
window.SUB_GR_USER_KICK_USER = 8;
window.SUB_GR_USER_INFO_REQ = 9;
window.SUB_GR_USER_CHAIR_REQ = 10;
window.SUB_GR_USER_CHAIR_INFO_REQ = 11;
window.SUB_GR_USER_WAIT_DISTRIBUTE = 12;
window.SUB_GR_USER_UPDATE_VIEW_WND = 13;
window.SUB_GR_USER_CREATE_PRIVATE_TABLE = 14;
window.SUB_GR_USER_ENTER_PRIVATE_TABLE = 15;
window.SUB_GR_USER_DISMISS_PRIVATE_TABLE = 16;
window.SUB_GR_USER_OWNER_ENABLE_PRIVATE_TABLE = 17;
window.SUB_GR_USER_CREATE_CUSTOM_TABLE = 18;
window.SBU_GR_USER_ENTER_CUSTOM_TABLE = 19;
window.SBU_GR_USER_ONLINE_PLAYER_REQ = 20;
window.SUB_GR_USER_ENTER = 100;
window.SUB_GR_USER_SCORE = 101;
window.SUB_GR_USER_STATUS = 102;
window.SUB_GR_REQUEST_FAILURE = 103;
window.SUB_GR_USER_AWARD = 104;
window.SUB_GR_USER_GOLD = 105;
window.SUB_GR_GIVE_PROMPT = 106;
window.SUB_GR_GAME_CUSTOM_DATA = 107;
window.SUB_GR_GIVE_PROMPT_VERIFY = 108;
window.SUB_GR_USER_EXP_CHANGE = 109;
window.SUB_GR_USER_CHAT = 201;
window.SUB_GR_USER_EXPRESSION = 202;
window.SUB_GR_WISPER_CHAT = 203;
window.SUB_GR_WISPER_EXPRESSION = 204;
window.SUB_GR_COLLOQUY_CHAT = 205;
window.SUB_GR_COLLOQUY_EXPRESSION = 206;
window.SUB_GR_PROPERTY_BUY = 300;
window.SUB_GR_PROPERTY_SUCCESS = 301;
window.SUB_GR_PROPERTY_FAILURE = 302;
window.SUB_GR_PROPERTY_MESSAGE = 303;
window.SUB_GR_PROPERTY_EFFECT = 304;
window.SUB_GR_PROPERTY_TRUMPET = 305;
window.SUB_GR_PROPERTY_LIST = 306;
window.SUB_GR_PROPERTY_LIST_ITEM = 307;
window.CMD_GR_UserLookon = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.wChairID = 0;
}
});
window.CMD_GR_UserSitDown = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.wChairID = 0;
this.szPassword = [];
ZeroArray(this.szPassword, LEN_PASSWORD);
}
});
window.CMD_GR_UserStandUp = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.wChairID = 0;
this.cbForceLeave = 0;
}
});
window.CMD_GR_UpdateViewWnd = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wStartTableID = 0;
this.wTableCount = 0;
}
});
window.CMD_GR_UserInvite = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.dwUserID = 0;
}
});
window.CMD_GR_UserInviteReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.dwUserID = 0;
}
});
window.tagUserPrivateTableCfg = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwOwnerUserId = 0;
this.szOwnerUserNickName = [];
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.dwPlayCount = 0;
this.szTableName = [];
this.szPassWord = [];
this.dwCustomRuleDataBufLen = 0;
this.cbCustomRuleDataBuf = [];
ZeroArray(this.szOwnerUserNickName, LEN_NICKNAME);
ZeroArray(this.szTableName, LEN_PRIVATE_TABLE_NAME);
ZeroArray(this.szPassWord, LEN_PASSWORD);
ZeroArray(this.cbCustomRuleDataBuf, 512);
}
});
window.USE_AGENT_SELF = 0;
window.USE_AGENT_OTHER = 1;
window.USE_AGENT_AA = 2;
window.USE_AGENT_COIN = 3;
window.USE_AGENT_WITHHOLD_DYNAMIC_JOIN = 4;
window.USE_AGENT_OPEN = 5;
window.CMD_GR_UserCreatePrivateTable_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.tableCfg = new tagUserPrivateTableCfg();
this.cbUseAgent = 0;
this.dwAgentId = 0;
this.wUserCount = 0;
this.dwGroupID = 0;
}
});
window.CMD_GR_UserCreatePrivateTable_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwResult = 0;
this.dwPrivateTableId = 0;
}
});
window.CMD_GR_UserEnterPrivateTable_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableId = 0;
}
});
window.CMD_GR_UserEnterPrivateTable_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRet = 0;
}
});
window.UDISMISS_PRIVATE_TABLE_STATUS_NONE = 0;
window.UDISMISS_PRIVATE_TABLE_STATUS_AGREE = 1;
window.UDISMISS_PRIVATE_TABLE_STATUS_DISAGREE = 2;
window.CMD_GR_UserDismissPrivateTable_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.wTableId = 0;
this.dwAgreeStatus = 0;
}
});
window.PTDRS_RESULT_WAIT = 0;
window.PTDRS_RESULT_DISMISS = 1;
window.PTDRS_RESULT_CONTINUE = 2;
window.tagPrivateTableDismissRoteStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bDismissRotingFlag = 0;
this.bAllOnlineUserVoted = 0;
this.bAllUserVoted = 0;
this.dwVotedResult = 0;
this.dwLastSeconds = 0;
this.dwUserCount = 0;
this.dwUserId = [];
this.dwDismissStatus = [];
ZeroArray(this.dwUserId, MAX_CHAIR);
ZeroArray(this.dwDismissStatus, MAX_CHAIR);
}
});
window.CMD_GR_UserDismissPrivateTable_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.wTableId = 0;
this.dwAgreeStatus = 0;
this.ptdrStatus = new tagPrivateTableDismissRoteStatus();
}
});
window.UCPT_RET_OK = 0;
window.UCPT_RET_OWNER_INFO_ERROR = 1;
window.UCPT_RET_NEED_MORE_ROOM_CARD = 2;
window.UCPT_RET_NOT_ENABLE_PRIVATE_TABLE = 3;
window.UCPT_RET_ROOM_NOT_FIND = 4;
window.UCPT_RET_ROOM_FULL = 5;
window.UCPT_RET_NOT_MORE_TABLE = 6;
window.UCPT_RET_AGENT_ERROR = 7;
window.UCPT_RET_AGENT_UNAUTHORIZED = 8;
window.UCPT_RET_ENABLE_CREATE = 9;
window.UCPT_RET_SCORE_NO_ENOUGH = 10;
window.UCPT_RET_ERROR_ROOM = 11;
window.UCPT_RET_AGENT_OPEN_OK = 12;
window.UCPT_RET_CREATER_NEED_MORE_ROOM_CARD = 13;
window.UCPT_RET_AGENT_OPEN_ERROR = 14;
window.UCPT_RET_AGENT_OPEN_ENABLE = 15;
window.UCPT_RET_AGENT_NEED_MORE_ROOM_CARD = 16;
window.UCPT_RET_GROUP_OWNER_NEED_MORE_ROOM_CARD = 17;
window.UCPT_RET_GAME_STARTED = 18;
window.UCPT_RET_GROUP_ENABLE_OTHER_JOIN = 19;
window.CMD_GR_UserScore = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.UserScore = new _MobileUserScore();
}
});
window.CMD_GR_MobileUserScore = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.UserScore = new _MobileUserScore();
}
});
window.CMD_GR_UserExpChange = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lExpChange = 0;
}
});
window.CMD_GR_Award = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.dwExperience = 0;
this.dwGold = 0;
this.dwMedal = 0;
this.cbPropType = 0;
this.dwPropCount = 0;
}
});
window.CMD_GR_UserStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.UserStatus = new _UserStatus();
}
});
window.CMD_GR_GameUserStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.UserStatus = new CMD_GR_UserStatus();
this.wKindID = 0;
this.dwPrivateTableId = 0;
this.cbUseAgent = 0;
this.dwGameID = 0;
}
});
window.CMD_GR_CreateOpen = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableId = 0;
this.dwPlayCount = 0;
this.dwGroupID = 0;
this.wKindID = 0;
this.wUserCount = 0;
}
});
window.CMD_GR_DissOpen = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableId = 0;
this.dwGroupID = 0;
}
});
window.CMD_GR_RequestFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nErrorCode = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, 256);
}
});
window.CMD_GR_WaitDistribute_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwErrorCode = 0;
}
});
window.CMD_GR_C_UserChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GR_S_UserChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wStringIndex = 0;
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GR_C_UserExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wItemIndex = 0;
this.dwTargetUserID = 0;
}
});
window.CMD_GR_S_UserExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wItemIndex = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
this.szServerId = [];
ZeroArray(this.szServerId, LEN_USER_CHAT);
}
});
window.CMD_GR_C_WisperChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GR_S_WisperChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GR_C_WisperExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wItemIndex = 0;
this.dwTargetUserID = 0;
}
});
window.CMD_GR_S_WisperExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wItemIndex = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
}
});
window.CMD_GR_ColloquyChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
wChatLength = 0;
dwChatColor = 0;
dwSendUserID = 0;
dwConversationID = 0;
this.dwTargetUserID = [];
this.szChatString = [];
ZeroArray(this.dwTargetUserID, 16);
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GR_C_InviteUser = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.dwSendUserID = 0;
}
});
window.CMD_GR_S_InviteUser = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
}
});
window.CMD_GR_C_PropertyBuy = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbRequestArea = 0;
this.cbConsumeScore = 0;
this.wItemCount = 0;
this.wPropertyIndex = 0;
this.dwTargetUserID = 0;
}
});
window.CMD_GR_S_PropertySuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbRequestArea = 0;
this.wItemCount = 0;
this.wPropertyIndex = 0;
this.dwSourceUserID = 0;
this.dwTargetUserID = 0;
}
});
window.CMD_GR_PropertyFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wRequestArea = 0;
this.nErrorCode = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, 256);
}
});
window.CMD_GR_S_PropertyMessage = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropertyIndex = 0;
this.wPropertyCount = 0;
this.dwSourceUserID = 0;
this.dwTargerUserID = 0;
}
});
window.CMD_GR_S_PropertyEffect = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wUserID = 0;
this.cbMemberOrder = 0;
}
});
window.CMD_GR_C_SendTrumpet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbRequestArea = 0;
this.wPropertyIndex = 0;
this.TrumpetColor = 0;
this.szTrumpetContent = [];
ZeroArray(this.szTrumpetContent, TRUMPET_MAX_CHAR);
}
});
window.CMD_GR_S_SendTrumpet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropertyIndex = 0;
this.dwSendUserID = 0;
this.TrumpetColor = 0;
this.szSendNickName = [];
this.szTrumpetContent = [];
ZeroArray(this.szSendNickName, 32);
ZeroArray(this.szTrumpetContent, TRUMPET_MAX_CHAR);
}
});
window._GameProperty = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropID = 0;
this.cbPropertyType = 0;
this.cbServiceArea = 0;
this.szPropertyName = [];
this.szRegulationsInfo = [];
this.lPropertyGold = 0;
this.dwValidTime = 0;
ZeroArray(this.szPropertyName, 32);
ZeroArray(this.szRegulationsInfo, 256);
}
});
window.MAX_GAME_PROPERTY_COUNT = 32;
window.CMD_GR_UserRepulseSit = cc.Class({
extends: CMD_Struct,
ctor: function() {
wTableID = 0;
wChairID = 0;
dwUserID = 0;
dwRepulseUserID = 0;
}
});
window.CMD_GR_S_GivePrompt = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbGiveTimes = 0;
this.lLessScore = 0;
this.lGiveAmount = 0;
}
});
window._GameCustomData = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lCatchFishCount = [];
this.dwTodayPlayTime = 0;
this.dwLastLoginTime = 0;
this.lCatchSmallBoss = 0;
ZeroArray(this.lCatchFishCount, 6);
}
});
window.CMD_GR_S_GameCustomData = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.cbGameCustomData = [];
ZeroArray(this.cbGameCustomData, MAX_GAME_CUSTOM_DATA);
}
});
window.UR_LIMIT_SAME_IP = 1;
window.UR_LIMIT_WIN_RATE = 2;
window.UR_LIMIT_FLEE_RATE = 4;
window.UR_LIMIT_GAME_SCORE = 8;
window.CMD_GR_UserRule = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbRuleMask = 0;
this.wMinWinRate = 0;
this.wMaxFleeRate = 0;
this.lMaxGameScore = 0;
this.lMinGameScore = 0;
}
});
window.CMD_GR_UserInfoReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserIDReq = 0;
this.wTablePos = 0;
}
});
window.CMD_GR_ChairUserInfoReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.wChairID = 0;
}
});
window.MDM_GR_STATUS = 4;
window.SUB_GR_TABLE_INFO = 100;
window.SUB_GR_TABLE_STATUS = 101;
window.SUB_GR_PRIVATE_TABLE_INFO = 102;
window.SUB_GR_PRIVATE_TABLE_STATUS_INFO = 103;
window.CMD_GR_TableInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableCount = 0;
this.TableStatusArray = [];
ZeroArrayStruct(this.TableStatusArray, 512, _TableStatus);
}
});
window.CMD_GR_TableStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.TableStatus = new _TableStatus();
}
});
window.tagPrivateTableInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwOwnerUserId = 0;
this.szTableOwnerNickName = [];
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.szRoomName = [];
this.wServerId = 0;
this.wTableId = INVALID_WORD;
this.dwPlayCount = 0;
ZeroArray(this.szTableOwnerNickName, LEN_NICKNAME);
ZeroArray(this.szRoomName, LEN_PRIVATE_TABLE_NAME);
}
});
window.tagPrivateTableAttribute = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwOwnerUserId = 0;
this.szTableOwnerNickName = [];
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.szRoomName = [];
this.wServerId = 0;
this.wTableId = INVALID_WORD;
this.dwPlayCount = 0;
this.dwLastPlayedCount = 0;
this.dwPrivateTableId = 0;
ZeroArray(this.szTableOwnerNickName, LEN_NICKNAME);
ZeroArray(this.szRoomName, LEN_PRIVATE_TABLE_NAME);
}
});
window.CMD_GR_PrivateTableInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.privateTableInfo = new tagPrivateTableInfo();
}
});
window.CMD_GR_PrivateTableStatusInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.privateTableInfo = new tagPrivateTableInfo();
this.dwPrivateTableId = 0;
this.dwLastPlayedCount = 0;
this.ptdrStatus = new tagPrivateTableDismissRoteStatus();
}
});
window.MDM_GR_INSURE = 5;
window.SUB_GR_QUERY_INSURE_INFO = 1;
window.SUB_GR_SAVE_SCORE_REQUEST = 2;
window.SUB_GR_TAKE_SCORE_REQUEST = 3;
window.SUB_GR_TRANSFER_SCORE_REQUEST = 4;
window.SUB_GR_QUERY_USER_INFO_REQUEST = 5;
window.SUB_GR_USER_INSURE_INFO = 100;
window.SUB_GR_USER_INSURE_SUCCESS = 101;
window.SUB_GR_USER_INSURE_FAILURE = 102;
window.SUB_GR_USER_TRANSFER_USER_INFO = 103;
window.CMD_GR_C_QueryInsureInfoRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
}
});
window.CMD_GR_C_SaveScoreRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.lSaveScore = 0;
}
});
window.CMD_GR_C_TakeScoreRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.lTakeScore = 0;
this.szInsurePass = [];
ZeroArray(this.szInsurePass, LEN_PASSWORD);
}
});
window.CMD_GP_C_TransferScoreRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.cbByNickName = 0;
this.lTransferScore = 0;
this.szNickName = [];
this.szInsurePass = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
ZeroArray(this.szInsurePass, LEN_PASSWORD);
}
});
window.CMD_GR_C_QueryUserInfoRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.cbByNickName = 0;
this.szNickName = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
}
});
window.CMD_GR_S_UserInsureInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.wRevenueTake = 0;
this.wRevenueTransfer = 0;
this.wServerID = 0;
this.lUserScore = 0;
this.lUserInsure = 0;
this.lTransferPrerequisite = 0;
}
});
window.CMD_GR_S_UserInsureSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.lUserScore = 0;
this.lUserInsure = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, 128);
}
});
window.CMD_GR_S_UserInsureFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.nErrorCode = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, 128);
}
});
window.CMD_GR_S_UserTransferUserInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbActivityGame = 0;
this.dwTargetGameID = 0;
this.szNickName = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
}
});
window.MDM_GR_MANAGE = 6;
window.SUB_GR_SEND_WARNING = 1;
window.SUB_GR_SEND_MESSAGE = 2;
window.SUB_GR_LOOK_USER_IP = 3;
window.SUB_GR_KILL_USER = 4;
window.SUB_GR_LIMIT_ACCOUNS = 5;
window.SUB_GR_SET_USER_RIGHT = 6;
window.SUB_GR_QUERY_OPTION = 7;
window.SUB_GR_OPTION_SERVER = 8;
window.SUB_GR_OPTION_CURRENT = 9;
window.SUB_GR_LIMIT_USER_CHAT = 10;
window.SUB_GR_KICK_ALL_USER = 11;
window.SUB_GR_DISMISSGAME = 12;
window.SUB_GR_GET_STOCK = 13;
window.SUB_GR_MODIFY_STOCK = 14;
window.CMD_GR_SendWarning = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChatLength = 0;
this.dwTargetUserID = 0;
this.szWarningMessage = [];
ZeroArray(this.szWarningMessage, LEN_USER_CHAT);
}
});
window.CMD_GR_SendMessage = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbGame = 0;
this.cbRoom = 0;
this.cbAllRoom = 0;
this.wChatLength = 0;
this.szSystemMessage = [];
ZeroArray(this.szSystemMessage, LEN_USER_CHAT);
}
});
window.CMD_GR_LookUserIP = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
}
});
window.CMD_GR_KickUser = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
}
});
window.CMD_GR_LimitAccounts = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
}
});
window.CMD_GR_SetUserRight = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
this.cbGameRight = 0;
this.cbAccountsRight = 0;
this.cbLimitRoomChat = 0;
this.cbLimitGameChat = 0;
this.cbLimitPlayGame = 0;
this.cbLimitSendWisper = 0;
this.cbLimitLookonGame = 0;
}
});
window.CMD_GR_OptionCurrent = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRuleMask = 0;
this.ServerOptionInfo = new _ServerOptionInfo();
}
});
window.CMD_GR_ServerOption = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.ServerOptionInfo = new _ServerOptionInfo();
}
});
window.CMD_GR_KickAllUser = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szKickMessage = [];
ZeroArray(this.szKickMessage, LEN_USER_CHAT);
}
});
window.CMD_GR_DismissGame = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wDismissTableNum = 0;
}
});
window.CMD_GR_GameStock = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lStockScore = 0;
this.lDeductScore = 0;
this.wDeductScale = 0;
}
});
window.CMD_GR_ModifyStock = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lModifyStock = 0;
this.wDeductScale = 0;
}
});
window.CMD_GR_ModifyStockRecord = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.wServerID = 0;
this.lStockScore = 0;
this.lModefyStockScore = 0;
this.lModefyDeductScore = 0;
}
});
window.OSF_ROOM_CHAT = 1;
window.OSF_GAME_CHAT = 2;
window.OSF_ROOM_WISPER = 3;
window.OSF_ENTER_TABLE = 4;
window.OSF_ENTER_SERVER = 5;
window.OSF_SEND_BUGLE = 12;
window.CMD_GR_OptionServer = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbOptionFlags = 0;
this.cbOptionValue = 0;
}
});
window.CMD_GR_LimitUserChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwTargetUserID = 0;
this.cbLimitFlags = 0;
this.cbLimitValue = 0;
}
});
window.MDM_GR_MATCH = 7;
window.SUB_GR_MATCH_FEE = 400;
window.SUB_GR_MATCH_NUM = 401;
window.SUB_GR_LEAVE_MATCH = 402;
window.SUB_GR_MATCH_INFO = 403;
window.SUB_GR_MATCH_WAIT_TIP = 404;
window.SUB_GR_MATCH_RESULT = 405;
window.SUB_GR_MATCH_STATUS = 406;
window.SUB_GR_USER_MATCH_STATUS = 407;
window.SUB_GR_MATCH_DESC = 408;
window.SUB_GR_MATCH_TIME = 409;
window.SUB_GR_REWARD_INFO = 412;
window.SUB_GR_MATCH_RANK = 413;
window.SUB_GR_MATCH_USER_OUT = 414;
window.SUB_GR_MATCH_INFO_ER_SPARROWS = 410;
window.SUB_GR_MATCH_RECORD = 411;
window.RECORD_MATCH_TIME = 900;
window.MDM_GF_FRAME = 100;
window.SUB_GF_GAME_OPTION = 1;
window.SUB_GF_USER_READY = 2;
window.SUB_GF_LOOKON_CONFIG = 3;
window.SUB_GF_TABLE_OWNER_CHANGE = 4;
window.SUB_GF_PRIVATE_TABLE_STATUS_BEGAN = 2100;
window.SUB_GF_PRIVATE_TABLE_STATUS = 2101;
window.SUB_GF_PRIVATE_TABLE_STATUS_ENDED = 2102;
window.SUB_GF_PRIVATE_TABLE_STATUS_DATA = 2103;
window.SUB_GF_PRIVATE_TABLE_END_START = 2001;
window.SUB_GF_PRIVATE_TABLE_END = 2e3;
window.SUB_GF_PRIVATE_TABLE_END_FINISH = 2010;
window.SUB_GF_PRIVATE_TABLE_END_DATA = 2011;
window.SUB_GF_SOCKET_PING = 20;
window.SUB_GF_USER_CHAT = 10;
window.SUB_GF_USER_EXPRESSION = 11;
window.SUB_GF_DEFINE_CUSTOM_GAME_RULE = 50;
window.SUB_GF_GAME_PROP = 1717;
window.SUB_GF_BUY_PROP_FAILED = 1718;
window.SUB_GF_BUY_PROP_SUCCESS = 1719;
window.SUB_GF_USER_PROP = 1720;
window.SUB_GF_USER_PROP_STATUS = 1721;
window.SUB_GF_BUY_PRESENT_SUCCESS = 1722;
window.SUB_GF_GAME_STATUS = 100;
window.SUB_GF_GAME_SCENE = 101;
window.SUB_GF_LOOKON_STATUS = 102;
window.SUB_GF_ONLINE_USER = 103;
window.SUB_GF_TOP_USER = 104;
window.SUB_GF_SYSTEM_MESSAGE = 200;
window.SUB_GF_ACTION_MESSAGE = 201;
window.CMD_GF_GameOption = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbAllowLookon = 0;
this.dwFrameVersion = 0;
this.dwClientVersion = 0;
}
});
window.CMD_GF_LookonConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.cbAllowLookon = 0;
}
});
window.CMD_GF_SOCKET_PING = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbPing = 0;
}
});
window.CMD_GF_LookonStatusv = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bAllowLookon = 0;
}
});
window.CMD_GF_TableOwnerChange = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwOldOwner = 0;
this.dwCurrentOwner = 0;
this.wTableId = 0;
}
});
window.CMD_GF_GameStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbGameStatus = 0;
this.cbAllowLookon = 0;
}
});
window.CMD_GF_C_UserChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wStringIndex = 0;
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GF_S_UserChat = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wStringIndex = 0;
this.wChatLength = 0;
this.dwChatColor = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
this.szChatString = [];
ZeroArray(this.szChatString, LEN_USER_CHAT);
}
});
window.CMD_GF_C_UserExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lItemIndex = 0;
this.dwTargetUserID = 0;
this.szServerId = [];
ZeroArray(this.szServerId, LEN_USER_CHAT);
}
});
window.CMD_GF_S_UserExpression = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lItemIndex = 0;
this.dwSendUserID = 0;
this.dwTargetUserID = 0;
this.szServerId = [];
ZeroArray(this.szServerId, LEN_USER_CHAT);
}
});
window.CMD_GF_S_UserBuyPresent = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSendChairID = 0;
this.wRecvChairID = 0;
this.wPropID = 0;
}
});
window.CMD_GF_S_BuyPropFailed = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbErrorCode = 0;
}
});
window.CMD_GF_C_BuyProp = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropID = 0;
this.wTargetChairID = 0;
}
});
window.tagRecordNetCmdBuf = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwDataLen = 0;
this.wMainId = 0;
this.wSubId = 0;
this.cbData.length = SOCKET_TCP_PACKET;
}
});
window.GCD_FANG = 1;
window.GCD_GOLD = 2;
window.GCD_GOLDFIELD = 4;
window.tagGameCutsomData = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwMaxMut = 0;
this.dwGameModel = 0;
this.dwGameRule = 0;
this.dwCutsomRule = 0;
this.dwCutsomRuleEx = 0;
this.wUserCount = 0;
this.wCardCount = 0;
this.dwProcessRule = 0;
this.lCellScore = 0;
}
});
window.MAX_STATUS_COUNT = 100;
window.tagGameCutsomStatusData = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lUserCount = 0;
this.lUserScore = [];
memset(this.lUserScore, 0, window.MAX_STATUS_COUNT);
}
});
window.tagResultProperty = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbGameCount = 0;
this.cbPeopleCount = 0;
this.cbDissStatus = 0;
},
Init: function() {
this.cbGameCount = 0;
this.cbPeopleCount = 0;
this.cbDissStatus = 0;
}
});
window.tagResultPeople = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.Init();
},
Init: function() {
this.byActive = 0;
this.byAnGangCount = 0;
this.byMingGangCount = 0;
this.byDianPaoCount = 0;
this.byZiMoCount = 0;
this.wHaveHorseCount = 0;
this.byHuPaiCount = 0;
this.byPlayResult = 0;
this.lZongFen = 0;
this.byOxCount = 0;
this.byWinCount = 0;
this.byBoomCount = 0;
this.byChunTianCount = 0;
this.lMaxWinSore = 0;
this.byFanChunTianCount = 0;
this.lEndGunTimes = 0;
this.lSawtTimes = 0;
this.wSpecialCount = 0;
this.byDefeatedCount = 0;
}
});
window.MAX_RESULT_PEOPLE = 100;
window.tagResultGame = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.Init();
},
Init: function() {
this.tResultProperty = new tagResultProperty();
this.tResultPeople = [];
ZeroArrayStruct(this.tResultPeople, MAX_RESULT_PEOPLE, tagResultPeople);
}
});
window._OnLineUserTag = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSendTag = 0;
}
});
window._OnLineUserInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
this.wChairID = 0;
this.szNickName = [];
this.cbFaceID = 0;
this.cbFrameID = 0;
this.cbMemberOrder = 0;
this.lUserScore = 0;
this.lBetScore = 0;
this.cbWinCount = 0;
memset(this.szNickName, 0, LEN_NICKNAME);
}
});
window.MDM_GF_GAME = 200;
window.DTP_GR_TABLE_PASSWORD = 1;
window.DTP_GR_NICK_NAME = 10;
window.DTP_GR_GROUP_NAME = 11;
window.DTP_GR_UNDER_WRITE = 12;
window.DTP_GR_USER_MEDAL = 13;
window.DTP_GR_USER_LOVELINESS = 14;
window.DTP_GR_USER_NOTE = 20;
window.DTP_GR_CUSTOM_FACE = 21;
window.DTP_GR_GAME_CUSTOMDATA = 22;
window.REQUEST_FAILURE_NORMAL = 0;
window.REQUEST_FAILURE_NOGOLD = 1;
window.REQUEST_FAILURE_NOSCORE = 2;
window.REQUEST_FAILURE_PASSWORD = 3;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_GenericMatch: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "785cd9O6ZNKAYHIwZ04FHWh", "CMD_GenericMatch");
e("ACMD_AStruct");
window.MDM_GENERIC_MATCH_FRAMEWORK = 506;
window.SUB_MATCH_OPTION = 0;
window.SUB_MATCH_STATUS = 1;
window.SUB_USER_MATCH_RANK = 2;
window.SUB_USER_MATCH_STATUS = 3;
window.SUB_USER_MATCH_SCORE_RESET = 4;
window.SUB_USER_MATCH_SCORE_CHANGE = 5;
window.SUB_USER_SIGN_IN_MATCH = 6;
window.SUB_USER_SIGN_OUT_MATCH = 7;
window.SUB_MATCH_ROUND_OPTION = 8;
window.SUB_MATCH_ROUND_STATUS = 9;
window.SUB_MATCH_RESULT = 10;
window.SUB_MATCH_LAST_TIME = 11;
window.GMF_REWARD_ITEM_MAX_COUNT = 5;
window.GMF_REWARD_MAX_REWARD_TOP_N = 30;
window.GMF_MATCH_NAME_LEN = 32;
window.GMF_SUB_TYPE_DYNAMIC_TIME_MATCH = 2;
window.GMF_MS_STATUS_SLEEP = 1;
window.GMF_MS_STATUS_START = 2;
window.GMF_MS_STATUS_END = 3;
window.GMF_MS_STATUS_CHECKING_START = 4;
window.GMF_UMS_NOT_SIGNUPED = 0;
window.GMF_UMS_SIGNUPED = 1;
window.GMF_UMS_SIGNUP_FAILED = 2;
window.GMF_UMS_QUIT_SIGNUP = 3;
window.GMF_UMS_PLAYING_MATCH = 4;
window.GMF_UMS_FINISH_MATCH = 5;
window.GMF_USM_NORMAL = 0;
window.GMF_USM_RS_OK = 0;
window.GMF_USM_RS_LACK_SCORE = 1;
window.GMF_USM_RS_SIGNUP_TIME_END = 2;
window.GMF_USM_RS_SIGNUP_NM_MAX = 3;
window.GMF_USM_RS_LACK_MEDAL = 4;
window.GMF_USM_RS_GOLD_OUT_ROOM_LIMIT = 5;
window.GMF_USM_RS_UNKNOW_ERROR = 6;
window.GMF_USM_RS_SIGNUP_LIMIT_MC_EXIST = 7;
window.GMF_USM_RS_OUT_OF_FIELD_TIMES_PER_DAY = 8;
window.GMF_USM_RS_ALREAY_SIGNUP = 9;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_LogonServer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0cba5C2pjVOY4B9cXyfos1b", "CMD_LogonServer");
e("ACMD_AStruct");
window.MDM_GP_LOGON = 1;
window.SUB_GP_LOGON_GAMEID = 1;
window.SUB_GP_LOGON_ACCOUNTS = 2;
window.SUB_GP_REGISTER_ACCOUNTS = 3;
window.SUB_GP_REGISTER_ACCOUNTS_BY_MB = 4;
window.SUB_GP_VERIFICATION_CODE = 8;
window.SUB_GP_LOGON_SUCCESS = 100;
window.SUB_GP_LOGON_FAILURE = 101;
window.SUB_GP_LOGON_FINISH = 102;
window.SUB_GP_VALIDATE_MBCARD = 103;
window.SUB_GP_LOGIN_AWARD = 104;
window.MDM_MB_LOGON = 100;
window.SUB_MB_LOGON_GAMEID = 1;
window.SUB_MB_LOGON_ACCOUNTS = 2;
window.SUB_MB_LOGON_OTPCODE = 3;
window.SUB_MB_LOGON_TOKEN = 4;
window.SUB_MB_CHECK_VERSION = 5;
window.SUB_MB_FILL_ACCOUNT = 6;
window.SUB_MB_USER_REQUEST_FAILURE = 7;
window.SUB_MB_REGISTER_ACCOUNTS_BY_VERIFICATION = 8;
window.SUB_MB_UPDATE_EXTERN_FACE_URL = 9;
window.SUB_MB_QUERY_EXTERN_FACE_URL = 10;
window.SUB_MB_LOGON_SUCCESS = 100;
window.SUB_MB_LOGON_FAILURE = 101;
window.SUB_GP_LOGON_FINISH = 102;
window.SUB_GP_VALIDATE_MBCARD = 103;
window.SUB_GP_LOGIN_AWARD = 104;
window.SUB_MB_LOWTTERY_LIST = 105;
window.SUB_MB_LOGON_RESULT = 110;
window.SUB_MB_UPDATE_NOTIFY = 200;
window.SUB_MB_RESOURCE_NEED_UPDATE = 201;
window.CMD_GP_RegisterAccountsByMobile = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPlazaVersion = 0;
this.szMachineID = [];
this.szLogonPass = [];
this.szInsurePass = [];
this.wFaceID = 0;
this.cbGender = 0;
this.szAccounts = [];
this.szNickName = [];
this.szSpreader = [];
this.szPassPortID = [];
this.szCompellation = [];
this.szMobilePhone = [];
this.cbValidateFlags = 0;
this.dwMBVerifyCode = 0;
this.dwResType = 0;
this.dwResVersion = 0;
this.dwExtensionID = 0;
memset(this.szMachineID, 0, LEN_MACHINE_ID);
memset(this.szLogonPass, 0, LEN_MD5);
memset(this.szInsurePass, 0, LEN_MD5);
memset(this.szAccounts, 0, LEN_ACCOUNTS);
memset(this.szNickName, 0, LEN_NICKNAME);
memset(this.szSpreader, 0, LEN_ACCOUNTS);
memset(this.szPassPortID, 0, LEN_PASS_PORT_ID);
memset(this.szCompellation, 0, LEN_COMPELLATION);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_GP_ModifyLogonPass = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szDesPassword = [];
this.szScrPassword = [];
memset(this.szDesPassword, 0, LEN_PASSWORD);
memset(this.szScrPassword, 0, LEN_PASSWORD);
}
});
window.CMD_GP_ModifyInsurePass = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szNewPassword = [];
this.szOldPassword = [];
ZeroArray(this.szNewPassword, LEN_PASSWORD);
ZeroArray(this.szOldPassword, LEN_PASSWORD);
}
});
window.PWD_TYPE_NONE = 0;
window.PWD_TYPE_LOGON = 1;
window.PWD_TYPE_BANK = 2;
window.CMD_GP_ForgetLogonPass = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szAccounts = [];
this.szMobilePhone = [];
this.szPassword = [];
this.szMachineID = [];
this.dwVerificationCode = 0;
this.cbPassType = 0;
this.dwChannelID = 0;
memset(this.szAccounts, 0, LEN_ACCOUNTS);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
memset(this.szPassword, 0, LEN_PASSWORD);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.CMD_GP_SystemFaceInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbFaceID = 0;
this.cbFrameID = 0;
this.dwUserID = 0;
this.szPassword = [];
this.szLogonGUID = [];
this.szMachineID = [];
memset(this.szPassword, 0, LEN_PASSWORD);
memset(this.szLogonGUID, 0, LEN_GUID);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.CMD_MB_LogonGameID = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wModuleID = 0;
this.dwPlazaVersion = 0;
this.cbDeviceType = 0;
this.dwGameID = 0;
this.szPassword = [];
this.szMachineID = [];
this.szMobilePhone = [];
}
});
window.CMD_MB_LogonAccounts = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wModuleID = 0;
this.dwPlazaVersion = 0;
this.cbDeviceType = 0;
this.szPassword = [];
this.szMachineID = [];
this.szMobilePhone = [];
this.dwChannelID = 0;
memset(this.szPassword, 0, LEN_PASSWORD);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_MB_RegisterAccounts = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wModuleID = 0;
this.dwPlazaVersion = 0;
this.cbDeviceType = 0;
this.szLogonPass = [];
this.szMachineID = [];
this.szOpenID = [];
this.szMobilePhone = [];
this.dwChannelID = 0;
this.dwMBVerifyCode = 0;
this.dwAgentID = 0;
memset(this.szLogonPass, 0, LEN_MD5);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
memset(this.szOpenID, 0, LEN_MACHINE_ID);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_GP_LogonSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wFaceID = 0;
this.dwUserID = 0;
this.dwGameID = 0;
this.dwGroupID = 0;
this.dwCustomID = 0;
this.lUserMedal = 0;
this.dwExperience = 0;
this.dwLoveLiness = 0;
this.lUserScore = 0;
this.lUserInsure = 0;
this.lPlatformCoin = 0;
this.lVolume = 0;
this.cbGender = 0;
this.cbMoorMachine = 0;
this.cbPaid = 0;
this.cbGiveTimes = 0;
this.szAccounts = [];
this.szNickName = [];
this.szGroupName = [];
this.szMobilePhone = [];
this.cbShowServerStatus = 0;
this.dwIp = 0;
memset(this.szAccounts, 0, LEN_ACCOUNTS);
memset(this.szNickName, 0, LEN_ACCOUNTS);
memset(this.szGroupName, 0, LEN_GROUP_NAME);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_MB_LogonOtherPlatform = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wModuleID = 0;
this.dwPlazaVersion = 0;
this.cbDeviceType = 0;
this.szOpenID = [];
this.wPlatformID = 0;
this.szMachineID = [];
this.szMobilePhone = [];
this.dwChannelID = 0;
this.dwSpreadId = 0;
memset(this.szOpenID, 0, LEN_OPENID);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_MB_LogonSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbFaceID = 0;
this.cbFrameID = 0;
this.dwUserID = 0;
this.dwGameID = 0;
this.dwExperience = 0;
this.szNickName = [];
memset(this.szNickName, 0, LEN_NICKNAME);
this.szAccounts = [];
memset(this.szAccounts, 0, LEN_ACCOUNTS);
this.lUserScore = 0;
this.lUserInsure = 0;
this.dwIp = 0;
this.cbMemberOrder = 0;
this.dwMemberExp = 0;
this.dwAgentId = 0;
this.dwSpreadId = 0;
this.dwRegChannelID = 0;
this.cbSuperPartner = 0;
this.cbCheckAccounts = 0;
}
});
window.CMD_MB_LogonFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nResultCode = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, 128);
}
});
window.CMD_GP_OperateSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nResultCode = 0;
this.wSourceMainId = 0;
this.wSourceSubId = 0;
this.szDescribeString = [];
memset(this.szDescribeString, 0, 128);
}
});
window.CMD_GP_GetVerificationCode = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szAccounts = [];
memset(this.szAccounts, 0, LEN_ACCOUNTS);
this.szMobilePhone = [];
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
this.szMachineID = [];
memset(this.szMachineID, 0, LEN_MACHINE_ID);
this.cbOutType = [];
this.dwChannelID = 0;
}
});
window.CMD_GP_BindPhoneNumber = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szMobilePhone = [];
this.szPassword = [];
this.dwVerificationCode = 0;
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
memset(this.szPassword, 0, LEN_PASSWORD);
}
});
window.HOT_UPDATE = 1;
window.WHOLE_PACKAGE = 2;
window.CMD_MB_UpdateNotify = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbUpdateType = 0;
this.dwCurrentVersion = 0;
this.szDownLoad = [];
memset(this.szDownLoad, 0, LEN_MB_DOWNLOAD_URL);
}
});
window.CMD_MB_MoblieVersion = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwChannelID = 0;
this.wKindID = 0;
this.cbMemberOrder = 0;
this.dwVersion = 0;
}
});
window.CMD_MB_FillAccount = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szAccounts = [];
this.szPassword = [];
this.szLogonGUID = [];
this.szMachineID = [];
memset(this.szAccounts, 0, LEN_ACCOUNTS);
memset(this.szPassword, 0, LEN_MD5);
memset(this.szLogonGUID, 0, LEN_GUID);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.DTP_GP_GROUP_INFO = 1;
window.DTP_GP_MEMBER_INFO = 2;
window.DTP_GP_UNDER_WRITE = 3;
window.DTP_GP_STATION_URL = 4;
window.DTP_GP_GAME_CUSTOMDATA = 5;
window.DTP_GP_UserGUID = 6;
window.DTP_GP_MobilePhone = 7;
window.DTP_GP_LOCK_SERVERID = 8;
window.DTP_GP_GAME_AGENT = 9;
window.DTP_GP_BENEFITS = 10;
window.DTP_GP_EXCHANGE_STATUS = 11;
window.DTP_GP_FIRST_TOPUP = 12;
window.DTP_GP_SUPER_PARTNER = 13;
window.DTP_GP_CHECK_ACCOUNTS = 14;
window.DTP_GP_UI_ALIPAY = 14;
window.DTP_GP_UI_BANK_CARD = 15;
window.DTP_GP_GroupInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGroupID = 0;
this.szGroupName = [];
ZeroArray(this.szGroupName, LEN_GROUP_NAME);
}
});
window.SYSTEMTIME = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wYear = 0;
this.wMonth = 0;
this.wDayOfWeek = 0;
this.wDay = 0;
this.wHour = 0;
this.wMinute = 0;
this.wSecond = 0;
this.wMilliseconds = 0;
}
});
window.DTP_GP_MemberInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbMemberOrder = 0;
this.pMemberOverDate = new SYSTEMTIME();
this.dwMemberStatus = 0;
this.dwMemberExp = 0;
}
});
window.MDM_MB_SERVER_LIST = 101;
window.SUB_MB_GET_SERVER = 1;
window.SUB_MB_GET_ROOM_LIST = 2;
window.SUB_MB_LIST_KIND = 100;
window.SUB_MB_LIST_SERVER = 101;
window.SUB_MB_LIST_CONFIG = 102;
window.SUB_MB_LIST_TYPE = 103;
window.SUB_GP_NOTICE = 106;
window.SUB_GP_LIST_AREA = 107;
window.SUB_GP_LIST_FIELD = 108;
window.SUB_MB_LIST_FINISH = 200;
window.SUB_MB_ROOM_INFO = 300;
window.MDM_GP_SERVER_LIST = 2;
window.SUB_GP_GET_LIST = 1;
window.SUB_GP_GET_SERVER = 2;
window.SUB_GP_GET_ONLINE = 3;
window.SUB_GP_GET_COLLECTION = 4;
window.SUB_GP_LIST_TYPE = 100;
window.SUB_GP_LIST_KIND = 101;
window.SUB_GP_LIST_NODE = 102;
window.SUB_GP_LIST_PAGE = 103;
window.SUB_GP_LIST_SERVER = 104;
window.SUB_GP_VIDEO_OPTION = 105;
window.SUB_GP_NOTICE = 106;
window.SUB_GP_LIST_FINISH = 200;
window.SUB_GP_SERVER_FINISH = 201;
window.SUB_GR_KINE_ONLINE = 300;
window.SUB_GR_SERVER_ONLINE = 301;
window.SUB_GR_FIELD_ONLINE = 302;
window.CMD_GP_UserSaveScore = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.lSaveScore = 0;
this.szMachineID = [];
ZeroArray(this.szMachineID, LEN_MACHINE_ID);
}
});
window.CMD_GP_UserTakeScore = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.lTakeScore = 0;
this.szPassword = [];
this.szMachineID = [];
memset(this.szPassword, 0, LEN_MD5);
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.MDM_GP_USER_SERVICE = 3;
window.DBR_GP_USER_SAVE_SCORE = 30;
window.DBR_GP_USER_TAKE_SCORE = 31;
window.DBR_GP_USER_TRANSFER_SCORE = 32;
window.SUB_GP_MODIFY_MACHINE = 100;
window.SUB_GP_MODIFY_LOGON_PASS = 101;
window.SUB_GP_MODIFY_INSURE_PASS = 102;
window.SUB_GP_MODIFY_UNDER_WRITE = 103;
window.SUB_GP_GETVERIFICATIONCODE = 104;
window.SUB_GP_BINDPHONENUMBER = 105;
window.SUB_GP_FORGET_LOGON_PASS = 106;
window.SUB_GP_USER_FACE_INFO = 200;
window.SUB_GP_SYSTEM_FACE_INFO = 201;
window.SUB_GP_CUSTOM_FACE_INFO = 202;
window.SUB_GP_USER_INDIVIDUAL = 301;
window.SUB_GP_QUERY_INDIVIDUAL = 302;
window.SUB_GP_MODIFY_INDIVIDUAL = 303;
window.SUB_GP_QUERY_MEMBER_INFO = 304;
window.SUB_GP_SEND_SMS_RET = 305;
window.SUB_GP_USER_SAVE_SCORE = 400;
window.SUB_GP_USER_TAKE_SCORE = 401;
window.SUB_GP_USER_TRANSFER_SCORE = 402;
window.SUB_GP_USER_INSURE_INFO = 403;
window.SUB_GP_QUERY_INSURE_INFO = 404;
window.SUB_GP_USER_INSURE_SUCCESS = 405;
window.SUB_GP_USER_INSURE_FAILURE = 406;
window.SUB_GP_QUERY_USER_INFO_REQUEST = 407;
window.SUB_GP_QUERY_USER_INFO_RESULT = 408;
window.SUB_GP_GET_RANKINGS = 409;
window.SUB_GP_GET_RANK_REWARD = 410;
window.SUB_GP_GET_MATCH_RANK = 411;
window.SUB_GP_GET_LOGON_REWARD = 412;
window.SUB_GP_GET_NOTICE = 413;
window.SUB_GP_QUERY_INSURE_INFO_PC = 414;
window.SUB_GP_PLATFORM_COIN_EXCHANGE = 415;
window.SUB_GP_QUERY_LOCK_INFO = 416;
window.SUB_GP_QUERY_IS_ANY_TASK_COMPLETE = 417;
window.SUB_GP_LOAD_MESIGNINFO = 418;
window.SUB_GP_LOAD_SIGNCONFIGE = 419;
window.SUB_SIGNRESULT = 420;
window.SUB_SIGN_REQUEST = 421;
window.SUB_GP_RECEIVE_BENEFITS = 422;
window.SUB_GP_RECEIVE_RED_ENVELOPE = 423;
window.SUB_GP_EXCHANGE = 428;
window.SUB_GP_BIND_ALIPAY = 417;
window.SUB_GP_BIND_BANK_CARD = 418;
window.SUB_GP_QUERY_BIND = 419;
window.SUB_GP_REGISTERSAGENT = 430;
window.SUB_GP_QUERY_EXTENSION = 431;
window.SUB_GP_QUERY_EXTERNFACE_URL = 432;
window.SUB_GP_UPDATE_EXTERNFACE_URL = 433;
window.SUB_GP_LOAD_SIGNAWARDBOXCON = 422;
window.SUB_SIGNBOXRESULT = 423;
window.SUB_LOAD_MONEYTCONFIG = 501;
window.SUB_LOAD_MEMONEYTINFO = 502;
window.SUB_GET_MEMTRESULT = 504;
window.SUB_GP_BINDRESULT = 505;
window.SUB_MB_LOWTTERY_AWARD = 422;
window.SUB_MB_GET_EMONEY_LOTTERY_INFO = 423;
window.SUB_QUERY_PRIVATE_TABLE_RECORD = 424;
window.SUB_QUERY_PRIVATE_TABLE_GAME_RECORD = 425;
window.SUB_GP_QUERY_PRIVATE_TABLE_INFO = 426;
window.SUB_GP_QUERY_DRAW_REPLAY_DATA = 427;
window.SUB_GP_QUERY_DRAW_REPLAY_DATA_END = 507;
window.SUB_QUERY_PRIVATE_TABLE_RECORD_BY_GROUP = 508;
window.SUB_GP_OPERATE_SUCCESS = 900;
window.SUB_GP_OPERATE_FAILURE = 901;
window.SUB_GP_SENDVCODE_RESULT = 902;
window.SUB_GP_BINDPHONENUMBER_RESULT = 903;
window.SUB_MB_LOWTTERY_AWARD_RESULT_TO_PLAYER = 916;
window.SUB_MB_LOWTTERY_INFO_TO_PLAYER = 918;
window.CMD_GP_QueryInsureInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window.MAX_DESCRIBE_STRING_COUNT = 128;
window.CMD_GP_UserInsureSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.lUserScore = 0;
this.lUserInsure = 0;
this.lVolume = 0;
this.lUserPlatformCoin = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, MAX_DESCRIBE_STRING_COUNT);
}
});
window.CMD_GP_UserInsureFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nResultCode = 0;
this.szDescribeString = [];
ZeroArray(this.szDescribeString, MAX_DESCRIBE_STRING_COUNT);
}
});
window.CMD_GP_UserInsureInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wRevenueTake = 0;
this.wRevenueTransfer = 0;
this.wServerID = 0;
this.lUserScore = 0;
this.lUserInsure = 0;
this.lTransferPrerequisite = 0;
this.cbShowInterface = 0;
}
});
window.CMD_GP_QueryUserMemberInfo_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
}
});
window.CMD_GP_QueryUserMemberInfo_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.cbMemberOrder = 0;
this.dwMemberExp = 0;
}
});
window.ExChangeGold = 0;
window.ExChangeZuan = 1;
window.ExChangeRetSuccess = 0;
window.ExChangeRetVolume = 1;
window.ExChangeRetCoin = 2;
window.CMD_GP_ExchangeRequest = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwExchangeCount = 0;
this.cbType = 0;
this.cbRes = 0;
}
});
window.ExBindRetSuccess = 0;
window.ExBindRetEroMeUserID = 1;
window.ExBindRetEroOtherGameID = 2;
window.ExBindRetEroSelf = 3;
window.ExBindRetEroAgentID = 4;
window.ExBindRetEroIsSpread = 6;
window.CMD_GP_BindAgentIdRet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbResultCode = 0;
}
});
window.CMD_GP_BindAgentIdReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwAgentId = 0;
}
});
window.AgentIdRetReReq = 7;
window.AgentIdRetUpAgentId = 8;
window.CMD_GP_RegistersAgentIdRet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbResultCode = 0;
}
});
window.CMD_GP_RegistersAgentIdReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
this.szCompellation = [];
this.szMobilePhone = [];
this.dwUpAgentId = 0;
memset(this.szCompellation, 0, LEN_COMPELLATION);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_GP_QueryAgentRet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbResultCode = 0;
this.dwGameID = 0;
this.szCompellation = [];
this.szMobilePhone = [];
this.dwTimestamp = 0;
this.cbResultStatus = 0;
this.dwUpAgentId = 0;
this.dwPlayerNumber = 0;
this.dwSpreadNumber = 0;
memset(this.szCompellation, 0, LEN_COMPELLATION);
memset(this.szMobilePhone, 0, LEN_MOBILE_PHONE);
}
});
window.CMD_GP_QueryAgentReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
}
});
window.CMD_GP_QueryLockInfo_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window.CMD_GP_QueryLockInfo_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.dwKindId = 0;
this.dwServerId = 0;
}
});
window.CMD_GP_BindPhoneNumber_result = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwResultCode = 0;
}
});
window.CMD_GP_QueryPrivateTableInfoReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableId = 0;
}
});
window.CMD_GP_QueryPrivateTableInfoRes = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableId = 0;
this.dwServerId = 0;
}
});
window.MAX_GAME_RECORD_PLAYER_COUNT = 9;
window.tagPrivateTableRecord = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwDrawId = 0;
this.wKindId = 0;
this.lTimestamp = 0;
this.dwPrivateTableId = 0;
this.dwOwnerUserId = 0;
this.dwPalyCount = 0;
this.dwRealPlayCount = 0;
this.dwUserCount = 0;
this.dwUserId = [];
this.dwGameId = [];
this.szNickName = [];
this.lUserTotalScore = [];
ZeroArray(this.dwUserId, MAX_GAME_RECORD_PLAYER_COUNT);
ZeroArray(this.dwGameId, MAX_GAME_RECORD_PLAYER_COUNT);
ZeroArray2(this.szNickName, MAX_GAME_RECORD_PLAYER_COUNT, LEN_NICKNAME);
ZeroArray(this.lUserTotalScore, MAX_GAME_RECORD_PLAYER_COUNT);
}
});
window.CMD_QueryPrivateTableRecord_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.wKindID = 0;
this.wCurrentPage = 0;
}
});
window.CMD_QueryPrivateTableRecordByGroup_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwGroupID = 0;
this.wCurrentPage = 0;
}
});
window.MAX_PRIVATE_TABLE_RECORD_COUNT = 20;
window.CMD_QueryPrivateTableRecord_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwRecordCount = 0;
this.aPrivateTableRecord = [];
ZeroArrayStruct(this.aPrivateTableRecord, MAX_PRIVATE_TABLE_RECORD_COUNT, tagPrivateTableRecord);
}
});
window.tagGameRecord = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRecordId = 0;
this.lTimestamp = 0;
this.dwUserCount = 0;
this.dwUserId = [];
this.lUserScore = [];
ZeroArray(this.dwUserId, MAX_GAME_RECORD_PLAYER_COUNT);
ZeroArray(this.lUserScore, MAX_GAME_RECORD_PLAYER_COUNT);
}
});
window.tagPrivateTableGameRecord = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwPrivateTableRecordId = 0;
this.gameRecord = new tagGameRecord();
}
});
window.CMD_QueryPrivateTableGameRecord_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRecordId = 0;
}
});
window.MAX_PRIVATE_TABLE_PLAY_COUNT = 32;
window.CMD_QueryPrivateTableGameRecord_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRecordCount = 0;
this.aPrivateTableGameRecord = [];
ZeroArrayStruct(this.aPrivateTableGameRecord, MAX_PRIVATE_TABLE_PLAY_COUNT, tagPrivateTableGameRecord);
}
});
window.CMD_GP_QueryDrawReplayData_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwDrawId = 0;
}
});
window.CMD_GP_QueryDrawReplayData_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwDrawId = 0;
this.dwReplayDataLen = 0;
this.cbReplayData = [];
this.cbReplayData.length = 0;
}
});
window.CMD_MB_UpdateExternFaceURL = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
this.szExternFaceUrl = [];
ZeroArray(this.szExternFaceUrl, LEN_WECHAT_FACE_URL);
}
});
window.CMD_GP_UpdateExternFaceURL = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwResultCode = 0;
}
});
window.CMD_MB_QueryExternFaceURL = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
}
});
window.CMD_GP_QueryExternFaceURL = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameId = 0;
this.szExternFaceUrl = [];
ZeroArray(this.szExternFaceUrl, LEN_WECHAT_FACE_URL);
}
});
window.MDM_SIGN = 601;
window.SUB_GET_SIGNCONFIG = 1;
window.SUB_GET_MESIGNINFO = 2;
window.SUB_GET_SIGNAWARDBOXCON = 3;
window.SUB_GETSIGNBOX_REQUEST = 4;
window.CMD_MB_C_QuerySignConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window._GameSignAward = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.cbItemCount = 0;
this.tAwardItem = [];
memset(this.tAwardItem, MAX_SIGN_BOXAWARD_ITEM, _LoginAwardItem);
}
});
window._LoginAwardItem = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwAwardID = 0;
this.dwAwardType = 0;
this.dwAwardSubType = 0;
this.dwAwardCount = 0;
this.wProbability = 0;
this.dwAwardType1 = 0;
this.dwAwardCount1 = 0;
this.dwAwardType2 = 0;
this.dwAwardCount2 = 0;
this.dwAwardType3 = 0;
this.dwAwardCount3 = 0;
}
});
window.CMD_MB_C_QueryMeSignInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window._GameMeSignInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.cbItemCount = 0;
this.tSignItem = [];
memset(this.tSignItem, MAX_SIGN_AWARD_ITEM_NEW, _MeSignItemInfo);
}
});
window._MeSignItemInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbSignType = 0;
this.cbSignItem = 0;
this.cbIsToday = 0;
}
});
window.CMD_GP_GetLogonReward = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.wKindID = 0;
this.cbAwardID = 0;
this.szPassword = [];
memset(this.szPassword, 0, LEN_PASSWORD);
}
});
window._GameSignResult = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbAwardID = 0;
this.bSuccess = 0;
this.szTextReturn = [];
memset(this.szTextReturn, 0, MAX_ITEM_DESC_LEN);
}
});
window.CMD_GP_GetRankings = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.wListID = 0;
}
});
window._UserRankings = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szNickName = [];
memset(this.szNickName, 0, LEN_NICKNAME);
this.lRankData = 0;
this.cbMemberOrder = 0;
this.cbFaceID = 0;
this.cbFrameID = 0;
this.lTotalBet = 0;
this.lNewCasinNum = 0;
this.lLevelBenefits = 0;
}
});
window._TopRankings = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwMyRank = 0;
this.lMyRankData = 0;
this.wRecordCount = 0;
this.Rankings = [];
memset(this.Rankings, MAX_RECORD_COUNT, _UserRankings);
}
});
window._AlipayInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szPassword = [];
memset(this.szPassword, 0, LEN_PASSWORD);
this.szLogonGUID = [];
memset(this.szLogonGUID, 0, LEN_GUID);
this.szAliAccount = [];
memset(this.szAliAccount, 0, LEN_ALIPAY);
this.szRealname = [];
memset(this.szRealname, 0, LEN_COMPELLATION);
this.szMachineID = [];
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window._BankCardInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szPassword = [];
memset(this.szPassword, 0, LEN_PASSWORD);
this.szLogonGUID = [];
memset(this.szLogonGUID, 0, LEN_GUID);
this.szRealname = [];
memset(this.szRealname, 0, LEN_COMPELLATION);
this.szBankCard = [];
memset(this.szBankCard, 0, LEN_BANK_CARD);
this.wBankNum = 0;
this.szMachineID = [];
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.CMD_GP_BindAliPay = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.AlipayInfo = new _AlipayInfo();
this.dwVerificationCode = 0;
}
});
window.CMD_GP_BindBankCard = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.BankCardInfo = new _BankCardInfo();
this.dwVerificationCode = 0;
}
});
window.CMD_GP_BindBankCard = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.BankCardInfo = new _BankCardInfo();
this.dwVerificationCode = 0;
}
});
window.CMD_GP_QueryIndividual = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window._ExchangeLimit = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwMinmumScore = 0;
this.dwMaxmumScore = 0;
this.dwMinmumSpreadAward = 0;
this.dwMaxmumSpreadAward = 0;
this.wRevenueRatio = 0;
this.dwReservedNumScore = 0;
this.dwReservedNumSpreadAward = 0;
}
});
window._ReceiveBenefits = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szLogonGUID = [];
memset(this.szLogonGUID, 0, LEN_GUID);
this.szMachineID = [];
memset(this.szMachineID, 0, LEN_MACHINE_ID);
}
});
window.CMD_GP_ReceiveBenefitsSuccess = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lScore = 0;
this.lInsureScore = 0;
this.nRemainingBenfits = 0;
this.wSubCmdID = 0;
}
});
window.DTP_GP_UI_NICKNAME = 1;
window.DTP_GP_UI_USER_NOTE = 2;
window.DTP_GP_UI_UNDER_WRITE = 3;
window.DTP_GP_UI_QQ = 4;
window.DTP_GP_UI_EMAIL = 5;
window.DTP_GP_UI_SEAT_PHONE = 6;
window.DTP_GP_UI_MOBILE_PHONE = 7;
window.DTP_GP_UI_COMPELLATION = 8;
window.DTP_GP_UI_DWELLING_PLACE = 9;
window.DTP_GP_UI_PASSPORTID = 10;
window.DTP_GP_UI_AGE = 11;
window.DTP_GP_UI_KINDID = 12;
window.DTP_GP_UI_GENDER = 13;
window.DTP_GP_UI_ALIPAY = 14;
window.DTP_GP_UI_BANK_CARD = 15;
window.DTP_GP_UI_EXCHANGE_LIMIT = 16;
window.CMD_GP_ModifyIndividual = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.dwSpreaderID = 0;
this.szPassword = [];
memset(this.szPassword, 0, LEN_PASSWORD);
this.szLogonGUID = [];
memset(this.szLogonGUID, 0, LEN_GUID);
}
});
window.SendPacketHelper_GetPacketNickName = function(e) {
var t = [];
memset(t, 0, LEN_NICKNAME);
SetArrayFormUtf8(t, e);
return SendPacketHelper_GetPacket(Value_GetArrayBytes(t, "szNickName"), 2 * LEN_NICKNAME, DTP_GP_UI_NICKNAME);
};
window.CMD_GP_UserIndividual = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
}
});
window.SUB_GP_LUCKGUY_INFO = 601;
window.SUB_GP_LUCKGUY_AWARD = 602;
window.SUB_GP_LUCKGUY_RECORD = 603;
window.CMD_GP_REQUEST_LUCKGUY = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.szPassword = [];
memset(this.szPassword, 0, LEN_PASSWORD);
}
});
window.CMD_GP_LUCKGUY_INFO = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSubCmdID = 0;
this.dwUserID = 0;
this.nFreeCount = 0;
this.nGameCount = 0;
this.nAlreadyCount = 0;
this.nAllowCount = 0;
this.tLuckItem = [];
memset(this.tLuckItem, 8, CMD_GP_LUCKGUY_INFO_ITEM);
}
});
window.CMD_GP_LUCKGUY_INFO_ITEM = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wItemIndex = 0;
this.wItemType = 0;
this.nItemCount = 0;
this.nSort = 0;
}
});
window.CMD_GP_LUCKGUY_AWARD = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSubCmdID = 0;
this.dwUserID = 0;
this.nItemIndex = 0;
this.nItemType = 0;
this.nItemCount = 0;
this.lCurScore = 0;
}
});
window.CMD_GP_LUCKGUY_RECORD = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSubCmdID = 0;
this.dwUserID = 0;
this.tLuckRecord = [];
memset(this.tLuckRecord, 6, CMD_GP_LUCKGUY_RECORD_ITEM);
}
});
window.CMD_GP_LUCKGUY_RECORD_ITEM = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nItemCount = 0;
this.nSendStatus = 0;
this.dwTimestamp = 0;
}
});
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_MsgService: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "720d2ohTnlAuZPd2KLaO3bv", "CMD_MsgService");
e("ACMD_AStruct");
window.MDM_MS_CONNECTION = 1e3;
window.SUB_CONNECTION_VERIFICATION = 18;
window.MDM_MAIL_SYSTEM = 1001;
window.SUB_MAIL_USER_QUERY = 0;
window.SUB_MAIL_USER_NEW_MAIL = 1;
window.SUB_MAIL_USER_READ = 2;
window.SUB_MAIL_USER_GET_ATTACHMENT = 3;
window.SUB_MAIL_USER_DELETE = 4;
window.SUB_MAIL_SYS_SEND = 5;
window.SUB_MAIL_SYS_PUSH = 6;
window.MDM_SYS_MSG = 1002;
window.SUB_SYS_MSG_PUSH_CLIENT = 0;
window.SUB_SYS_GAME_WIN_SOCRE_NTF = 1;
window.SUB_SYS_CATCH_FISH_NTF = 2;
window.MDM_USER_SERVICE = 1004;
window.SUB_USER_ACTION = 0;
window.SUB_NOTIFY_RECHARGE = 1;
window.SUB_WEB_NOTIFY_USER = 2;
window.SYS_MSG_TYPE_REPLAY_MSG = 0;
window.SYS_MSG_TYPE_WIN_BROADCAST = 1;
window.SYS_MSG_PUSH_OP_ADD = 0;
window.SYS_MSG_PUSH_OP_UPDATE = 1;
window.SYS_MSG_PUSH_OP_REMOVE = 2;
window.TYPE_READ = 0;
window.TYPE_RECEIVE = 1;
window.EM_ErrorCode = cc.Enum({
EC_OK: 0,
EC_LOGON_AT_OTHER_PLACE: 1,
EC_LOGON_GUID_ERROR: 2,
EC_LACK_OF_SCORE: 1001,
EC_TOO_MUCH_SCORE: 1002,
EC_MAIL_NOT_FIND: 3001,
EC_MAIL_REREAD: 3002,
EC_MAIL_REGET_ATTACHMENT: 3003,
EC_MAIL_REDELETE: 3004,
EC_UNKNOWN: 1e5
});
window.CMD_UserConnectionVerificationReq = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.szLogonGUID = [];
memset(this.szLogonGUID, 0, LEN_GUID);
}
});
window.CMD_UserConnectionVerificationRes = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.dwResult = 0;
}
});
window.CMD_SysMsgPushClient_Ntf = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwOpType = 0;
this.msgInfo = new tagSysMessageInfo();
}
});
window.tagSysMessageInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwId = 0;
this.dwType = 0;
this.dwChannelId = 0;
this.dwStartTime = 0;
this.dwEndTime = 0;
this.dwUpdateTime = 0;
this.dwLoopCycle = 0;
this.cbNullity = 0;
this.szMessage = [];
memset(this.szMessage, 0, LEN_MAX_SYS_MSG);
}
});
window.CMD_UserWinScoreMessageBroadCast_Ntf = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.szNickName = [];
memset(this.szNickName, 0, LEN_NICKNAME);
this.dwVipLv = 0;
this.dwKindId = 0;
this.wFieldId = 0;
this.wServerId = 0;
this.lWinScore = 0;
}
});
window.CMD_UserCatchFishWinScoreMessageBroadCast_Ntf = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.szNickName = [];
memset(this.szNickName, 0, LEN_NICKNAME);
this.dwVipLv = 0;
this.dwKindId = 0;
this.wFieldId = 0;
this.wServerId = 0;
this.lWinScore = 0;
this.lBulletScore = 0;
this.dwFishKind = 0;
this.lFishWinTimes = 0;
this.szFishName = [];
memset(this.szFishName, 0, LEN_NICKNAME);
}
});
window.tagEmalInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lId = 0;
this.dwChannelId = 0;
this.dwType = 0;
this.dwSrcUserId = 0;
this.dwTarUserId = 0;
this.lSendTimeStamp = 0;
this.cbReadState = 0;
this.cbAttachmentState = 0;
this.lAttachedScore = 0;
this.szTitle = [];
memset(this.szTitle, 0, LEN_MAIL_TITLE);
this.szBody = [];
memset(this.szBody, 0, LEN_MAIL_BODY);
}
});
window.CMD_QueryUserMailList_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
}
});
window.CMD_QueryUserMailList_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.mailInfo = new tagEmalInfo();
}
});
window.CMD_UserNewMail_Ntf = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.mailInfo = new tagEmalInfo();
}
});
window.CMD_UserReadMail_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
}
});
window.CMD_UserReadMail_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
this.dwErrorCode = 0;
}
});
window.CMD_ReceiveMailAttachment_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
}
});
window.CMD_ReceiveMailAttachment_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
this.dwErrorCode = 0;
this.lMailAttachedScore = 0;
}
});
window.CMD_UserDeleteMail_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
}
});
window.CMD_UserDeleteMail_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserId = 0;
this.lMailId = 0;
this.dwErrorCode = 0;
}
});
window.CMD_SysSendMail_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwType = 0;
this.dwSrcUserId = 0;
this.dwTarUserId = 0;
this.dwAttachmentState = 0;
this.nAttachedScore = 0;
this.szTitle = [];
memset(this.szTitle, 0, LEN_MAIL_TITLE);
this.szBody = [];
memset(this.szBody, 0, LEN_MAIL_BODY);
}
});
window.CMD_SysSendMail_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lMailId = 0;
this.dwErrorCode = 0;
}
});
window.CMD_SysPushMail_Req = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.mailInfo = new tagEmalInfo();
}
});
window.CMD_SysPushMail_Res = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lMailId = 0;
this.dwErrorCode = 0;
}
});
window.CMD_PushUserAction = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nUserAction = 0;
this.nUserCmd = 0;
}
});
window.CMD_NotifyRcharge = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwUserID = 0;
this.lAmount = 0;
this.lAddScore = 0;
this.cbFisrtRecharge = 0;
this.szOrderID = [];
memset(this.szOrderID, 0, LEN_UNDER_WRITE);
}
});
window.USER_ACTION_NONE = 0;
window.USER_ACTION_PAYRESULT = 1;
window.USER_ACTION_SERVICE = 2;
window.MDM_CS_BROAD_CAST = 600;
window.SUB_S_USER_BRAOD_CAST = 1;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_TaskLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bcac1R5f2tKFqLJExeHeG6u", "CMD_TaskLogic");
e("ACMD_AStruct");
window.MDM_PLATFORM_TASK = 500;
window.SUB_TASK_GET_TASK_DES_LIST_REQ = 1;
window.SUB_TASK_GET_TASK_DES_LIST_RES = 2;
window.SUB_TASK_GET_USER_TASK_SCHEDULE_LIST_REQ = 3;
window.SUB_TASK_GET_USER_TASK_SCHEDULE_LIST_RES = 4;
window.SUB_TASK_USER_GET_TASK_AWARED_REQ = 5;
window.SUB_TASK_GET_USER_TASK_AWARED_RES = 6;
window.TASK_TYPE_NEWBIE = 0;
window.TASK_TYPE_EVERYDAY = 1;
window.TASK_TYPE_PLATFORM = 2;
window.ITEM_ID_MONEY = 0;
window.ITEM_ID_LOTTERY = 1;
window.MDM_GAMETABLE_TASK = 501;
window.SUB_GT_TASK_RANDOM_TASK_NTF = 1;
window.SUB_GT_TASK_TASK_STATUS_NTF = 2;
window.LEN_TASK_NAME = 64;
window.LEN_TASK_DES = 128;
window.LEN_TASK_REWARD_DES = 32;
window.NUM_NEWBIE_TASK_LIST = 25;
window.NUM_EVERYDAY_TASK_LIST = 25;
window.TASK_CPT_PLAYCOUNT = 0;
window.TASK_CPY_PLAYTIME = 1;
window.TASK_CPY_PLAYWIN = 2;
window.TASK_CPY_ACTION_COUNT = 3;
window.TASK_MAX_NUM = 100;
window.UI_FOROM_ID_LOGIN = 10;
window.UI_FOROM_ID_HALL = 20;
window.UI_FOROM_ID_USERINFO = 30;
window.UI_FOROM_ID_LOGINGIVE = 40;
window.UI_FOROM_ID_HELP = 50;
window.UI_FOROM_ID_ACTIVITY = 60;
window.UI_FOROM_ID_SET = 70;
window.UI_FOROM_ID_SHOP = 80;
window.UI_FOROM_ID_RECEIVE = 90;
window.UI_FOROM_ID_TOP = 100;
window.UI_FOROM_ID_TASK = 110;
window.UI_FOROM_ID_CHAT = 120;
window.UI_FOROM_ID_REGISTER = 130;
window.GTASK_STATUS_START = 0;
window.GTASK_STATUS_COMPLETE = 1;
window.GTASK_STATUS_FAILED = 2;
window.MDM_CONTINUE_WIN_TASK = 503;
window.SUB_CWT_GET_TASK_DES = 1;
window.SUB_CWT_GET_USER_SCHEDULE = 2;
window.SUB_CWT_GET_REWARD = 3;
window.CWT_MAX_LV_COUNT = 5;
window.CWT_GUS_RT_SUCESS = 0;
window.CWT_GUS_RT_FAILED = 1;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_UserPack: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fdf63TVWW5CH7WmxAhPWhoZ", "CMD_UserPack");
e("ACMD_AStruct");
window.MDM_USER_PACK = 504;
window.SUB_QUERY_USER_PACK = 1;
window.SUB_OP_USERPACK_ITEM = 2;
window.PACK_OP_TYPE = {};
PACK_OP_TYPE.OP_UP_I_EQUIPED = 1;
PACK_OP_TYPE.OP_UP_I_DISARM = 2;
PACK_OP_TYPE.OP_UP_I_SYNTHESIS = 4;
PACK_OP_TYPE.OP_UP_I_BUYBACK = 8;
PACK_OP_TYPE.OP_UP_I_USE = 16;
window.VIP_TYPE = {};
VIP_TYPE.VIP_1 = 1;
VIP_TYPE.VIP_2 = 2;
VIP_TYPE.VIP_3 = 3;
VIP_TYPE.VIP_4 = 4;
VIP_TYPE.VIP_5 = 5;
VIP_TYPE.VIP_COUNT = 6;
window.IsEquipedAble = function(e) {
return 0 != (PACK_OP_TYPE.OP_UP_I_EQUIPED & e);
};
window.IsDisarmAble = function(e) {
return 0 != (PACK_OP_TYPE.OP_UP_I_DISARM & e);
};
window.IsSynthesisAble = function(e) {
return 0 != (PACK_OP_TYPE.OP_UP_I_SYNTHESIS & e);
};
window.IsBuybackAble = function(e) {
return 0 != (PACK_OP_TYPE.OP_UP_I_BUYBACK & e);
};
window.IsUseAble = function(e) {
return 0 != (PACK_OP_TYPE.OP_UP_I_USE & e);
};
window.OP_UI_I_RESULT_OK = 1;
window.OP_UI_I_RESULT_ERROR = 2;
window.MAX_USER_PACK_BOX_COUNT = 128;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
CMD_YQMatch: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6de36HzqlRKYIJN2Uv91GqR", "CMD_YQMatch");
e("ACMD_AStruct");
window.MDM_YQMATCH = 502;
window.SUB_YQM_MATCH_SCORE_RESET = 0;
window.SUB_YQM_MATCH_SCORE_CHANGE = 1;
window.SUB_YQM_MATCH_OPTION = 3;
window.SUB_YQM_MATCH_STATUS = 4;
window.SUB_YQM_MATCH_RANK = 5;
window.SUB_YQM_MATCH_RESULT = 6;
window.SUB_YQM_USER_MATCH_STATUS = 7;
window.SUB_YQM_MATCH_TIME_LEFT = 9;
window.SUB_YQM_MATCH_USER_QUIT_JOIN = 10;
window.YQM_MATCH_STATUS_START = 0;
window.YQM_MATCH_STATUS_END = 1;
window.YQM_MATCH_STATUS_CHECKING_START = 2;
window.YQM_MATCH_STATUS_SLEEP = 3;
window.YQM_UMS_NOT_SIGNUPED = 0;
window.YQM_UMS_SIGNUPED = 1;
window.YQM_UMS_SIGNUP_FAILED = 2;
window.YQM_UMS_QUIT_SIGNUP = 3;
window.YQM_UMS_PLAYING_MATCH = 4;
window.YQM_UMS_FINISH_MATCH = 5;
window.YQM_UMS_SF_EC_OK = 0;
window.YQM_UMS_SF_EC_LACK_SCORE = 1;
window.YQM_UMS_SF_EC_SIGNUP_TIME_END = 2;
window.YQM_UMS_SF_EC_SIGNUP_NM_MAX = 3;
window.YQM_UMS_SF_EC_LACK_MEDAL = 4;
window.YQM_UMS_SF_EC_GOLD_OUT_ROOM_LIMIT = 5;
window.YQM_UMS_SF_EC_UNKNOW_ERROR = 6;
window.YQM_UMS_SF_EC_SIGNUP_LIMIT_MC_EXIST = 7;
window.YQM_UMS_SF_EC__OUT_OF_FIELD_TIMES_PER_DAY = 8;
window.YQM_MATCH_REWARD_ITEM_MAX_COUNT = 5;
window.YQM_MATCH_REWARD_MAX_REWARD_TOP_N = 10;
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
COLOR_JPRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "53724IRGu5Guoc1wOwnPmaR", "COLOR_JPRule");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
close: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
COLOR_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8db84M5UexEvp5yXOCItgnQ", "COLOR_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node,
nodeCloud0: cc.Node,
nodeCloud1: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeCloud0.active = !1;
this.nodeCloud1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllNode();
}));
this.node.runAction(t);
},
StartCompareAction: function(e, t) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.nodeCloud0.active = !0;
this.nodeCloud1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetStartFontAction();
if (null != i.callbackIng) {
i.callbackIng(i);
i.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameEndAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameBeginAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.callbackFinish = e;
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetStartGameAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
SetStartGameAction: function() {
this.nodeFont4.active = !0;
this.nodeFont5.active = !0;
this.nodeFont4.scaleX = 1;
this.nodeFont4.scaleY = 0;
this.nodeFont5.scaleX = 1;
this.nodeFont5.scaleY = 0;
var e = this;
this.nodeFont4.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont5.runAction(cc.scaleTo(.3, 1, 1));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.3, 1, 1));
}
});
cc._RF.pop();
}, {} ],
COLOR_NewBetArea: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ef575dT58FOk7PSPBjYLVCm", "COLOR_NewBetArea");
cc.Class({
extends: cc.Component,
properties: {
nodeJettonArea: cc.Node,
labelAllBet: cc.Label,
labelMeBet: cc.Label
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
COLOR_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c4b49sshE1Ed7L9MMSUqv48", "COLOR_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY, r = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_BET = s;
t.exports.GAME_SCENE_END = r;
t.exports.AREA_MAX = 6;
t.exports.JETTON_NUM = 5;
t.exports.COLOR_NUM = 3;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_C_PLACE_JETTON = 1;
cc._RF.pop();
}, {} ],
COLOR_NewDiceAction: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79eafj+SzVJtJJ77F/w+Ow8", "COLOR_NewDiceAction");
cc.Class({
extends: cc.Component,
properties: {
actionNodes: [ cc.Sprite ],
actionSprites: [ cc.SpriteFrame ],
areaStep0: 50,
areaStep1: -100,
areaStep2: -250,
areaYup: -300,
areaYdown: -350,
colorCvIndex: [],
startYs: [],
preIndexs: [],
circles: [],
wFrames: [],
wSpeeds: [],
wCacheSpeeds: [],
targetIndexs: [],
targetY: [],
curIndexs: [],
ftimes: [],
isPlaying: !1,
callback: null
},
start: function() {
for (var e = 0; e < this.actionNodes.length; e++) this.startYs[e] = this.actionNodes[e].node.y;
this.colorCvIndex = [ 15, 5, 45, 55, 25, 35 ];
this.preIndexs = [ 0, 0, 0 ];
this.isPlaying = !1;
},
SetPreStartShow: function(e) {
3 != e.length && cc.warn("StartAnimation---:" + e.length);
this.isPlaying = !1;
for (var t = 0; t < this.actionNodes.length; t++) {
this.preIndexs[t] = parseInt(this.RandInt(0, 5) + "0");
this.actionNodes[t].spriteFrame = this.actionSprites[this.preIndexs[t]];
this.actionNodes[t].node.y = this.startYs[t];
}
},
StartAnimation: function(e, t) {
3 != e.length && cc.warn("StartAnimation---:" + e.length);
this.callback = t;
this.isPlaying = !0;
for (var i = 0; i < this.actionNodes.length; i++) {
this.ftimes[i] = 0;
this.circles[i] = 0;
this.targetY[i] = this.RandInt(this.areaYdown, this.areaYup);
this.targetIndexs[i] = this.colorCvIndex[e[i] - 1];
this.wSpeeds[i] = this.RandInt(250, 350);
this.wFrames[i] = 1.5 / this.wSpeeds[i];
this.curIndexs[i] = this.preIndexs[i];
}
},
RandInt: function(e, t) {
return parseInt(Math.random() * (t - e + 1) + e, 10);
},
Lerp: function(e, t, i) {
return (i - e) / (t - e);
},
update: function(e) {
if (this.isPlaying) {
for (var t = 0, i = 0; i < this.actionNodes.length; i++) {
if (this.actionNodes[i].node.y > this.areaStep0) {
this.wSpeeds[i] += 100 * e + this.RandInt(1, 5);
this.wCacheSpeeds[i] = this.wSpeeds[i];
this.wFrames[i] = 1.5 / this.wSpeeds[i];
} else if (this.actionNodes[i].node.y > this.areaStep1) {
this.wSpeeds[i] += 10 * e;
this.wCacheSpeeds[i] = this.wSpeeds[i];
this.wFrames[i] = 1.5 / this.wSpeeds[i];
} else if (this.actionNodes[i].node.y > this.areaStep2) {
this.wSpeeds[i] -= 200 * e;
this.wCacheSpeeds[i] = this.wSpeeds[i];
this.wFrames[i] = 1.5 / this.wSpeeds[i];
} else {
this.wSpeeds[i] = (1 - this.Lerp(this.areaStep1, this.targetY[i], this.actionNodes[i].node.y)) * this.wCacheSpeeds[i];
this.wFrames[i] = 1.5 / this.wSpeeds[i];
this.wFrames[i] > .05 && (this.wFrames[i] = .05);
if (this.curIndexs[i] == this.targetIndexs[i]) {
t++;
continue;
}
}
this.ftimes[i] += e;
var n = !1;
if (this.ftimes[i] > this.wFrames[i]) {
this.ftimes[i] = this.ftimes[i] - this.wFrames[i];
n = !0;
}
if (n) {
this.curIndexs[i] = (this.curIndexs[i] + 1) % this.actionSprites.length;
this.actionNodes[i].spriteFrame = this.actionSprites[this.curIndexs[i]];
0;
}
this.actionNodes[i].node.y -= this.wSpeeds[i] * e;
}
if (t == this.actionNodes.length) {
cc.log("结束");
this.isPlaying = !1;
this.callback && this.callback();
}
}
}
});
cc._RF.pop();
}, {} ],
COLOR_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9a90fWA8TpMNLh8/jy1dVdg", "COLOR_NewGameEngine");
var n = e("COLOR_NewCMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
grandPercent: 0,
majorPercent: 0,
minorPercent: 0,
miniGold: 0
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("COLOR_NewGameView");
this.pGameViewJs.pGameEngineJs = this;
this.ResetGameEngine();
},
OnFrameEngineStart: function() {
this.cbGameStatus = 0;
this.cbCurrJettonIndex = 0;
this.stGameRecord = [];
this.dwRecordCount = 0;
this.lAllBet = [];
memset(this.lAllBet, 0, n.AREA_MAX);
this.lPlayBet = [];
memset(this.lPlayBet, 0, n.AREA_MAX);
cc.audioEngine.stopAll();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("134/Audio/Bg", !0);
},
ResetGameEngine: function() {},
OnEventSceneMessage: function(e, t, i, a) {
this.cbGameStatus = e;
switch (e) {
case n.GAME_SCENE_FREE:
return this.OnGameSceneFree(i, a);

case n.GAME_SCENE_PLAY:
case n.GAME_SCENE_END:
return this.OnGameSceneEnd(i, a);
}
return !0;
},
OnGameSceneFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.lAreaLimitScore;
this.fRoundTime = i.cbTimeLeave - 1;
this.arrBetChip = i.lBetChip;
this.lMinTake = i.lMinTake;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
this.pGameViewJs.SetLastColor(i.cbLastColor);
this.pGameViewJs.SetJackpot(i.lJackpotScore, i.cbLuckColor);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
this.grandPercent = i.cbGrandPercent;
this.majorPercent = i.cbMajorPercent;
this.minorPercent = i.cbMinorPercent;
this.miniGold = i.lMiniAwardGold;
this.stGameRecord = [];
for (var o = 0; o < i.AreaCardsList.length; o++) this.stGameRecord.push(i.AreaCardsList[o].Cards);
this.pGameViewJs.UpdateGameRecord();
return !0;
},
OnGameSceneEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.lAreaLimitScore;
this.fRoundTime = i.cbTimeLeave - 1;
this.arrBetChip = i.lBetChip;
this.lAllBet = i.lAllBet;
this.lPlayBet = i.lPlayBet;
this.cbTableCardArray = i.cbTableCardArray.concat();
var a = i.lMostWin.concat(), o = i.lMostBet.concat(), s = i.lOnlineUserScore.concat(), r = i.wOnlineUserChairID.concat(), c = i.lPlayAllScore;
this.lMinTake = i.lMinTake;
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
for (var l = 0; l < n.AREA_MAX; ++l) this.pGameViewJs.ShowUserJettonWithGameScene(l, this.lAllBet[l], this.lPlayBet[l]);
this.pGameViewJs.SetLastColor(i.cbLastColor);
this.pGameViewJs.SetJackpot(i.lJackpotScore, i.cbLuckColor);
this.pGameViewJs.SetPreDice();
this.pGameViewJs.ShowUserBetInfo(this.lAllBet, a, this.lPlayBet, o, r);
if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
this.SetTime(!0);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var h = 0; h < n.AREA_MAX; h++) if (this.lPlayBet[h] > 0) {
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
} else if (this.cbGameStatus == n.GAME_SCENE_END) {
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!0);
var u = [];
memset(u, 0, n.GAME_PLAYER);
r[0] != INVALID_CHAIR && (u[r[0]] = s[0]);
r[1] != INVALID_CHAIR && (u[r[1]] = s[1]);
u[this.GetMeChairID()] = c;
this.pGameViewJs.OnWaitStatus(!0);
}
this.grandPercent = i.cbGrandPercent;
this.majorPercent = i.cbMajorPercent;
this.minorPercent = i.cbMinorPercent;
this.miniGold = i.lMiniAwardGold;
this.stGameRecord = [];
for (var d = 0; d < i.AreaCardsList.length; d++) this.stGameRecord.push(i.AreaCardsList[d].Cards);
this.pGameViewJs.UpdateGameRecord();
},
OnFrameButtonJackPotDraw: function(e, t, i, n, a, o) {
var s = this;
GameFrameView.instances && GameFrameView.instances.strJackPotDrawPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotDrawPath, cc.Prefab, function(r, c) {
if (!r) {
var l = cc.instantiate(c);
s.jackPotTurnItemJs = l.getComponent("jsNewJackPotDraw");
s.jackPotTurnItemJs.doDraw(t, i, n, a, o);
e.addChild(l);
}
});
},
OnFrameButtonJackPotRecord: function(e, t) {
var i = this;
GameFrameView.instances && GameFrameView.instances.strJackPotRecordPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotRecordPath, cc.Prefab, function(n, a) {
if (!n) {
var o = cc.instantiate(a);
i.jsJackpotRank = o.getComponent("jsNewJackPotDrawRecord");
i.jsJackpotRank.jsGameEngine = i;
i.jsJackpotRank.setData(OnIntScore(e), t);
i.nodeRootCanvas.addChild(o);
}
});
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnSocketSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnSocketSubSGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnSocketSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t);

case n.SUB_S_GAME_END:
return this.OnSocketSubGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);
}
},
OnSocketSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.cbGameStatus = n.GAME_SCENE_FREE;
this.fRoundTime = i.TimeLeave;
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.SetGameStatus(GAME_STATUS_FREE);
memset(this.lAllBet, 0, n.AREA_MAX);
memset(this.lPlayBet, 0, n.AREA_MAX);
this.pGameViewJs.OnResetGameView();
return !0;
},
OnSocketSubSGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.cbGameStatus = n.GAME_SCENE_PLAY;
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ChangeJettonState(!1);
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowStartBet();
return !0;
},
OnSocketSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
if (this.GetMeChairID() == i.ChairID) {
this.lPlayBet[i.AreaIndex - 1] += i.BetScore;
this.SetGameStatus(GAME_STATUS_PLAY);
}
this.pGameViewJs.PlaceJettonAction(i.ChairID, i.BetScore, i.AreaIndex - 1);
this.lAllBet[i.AreaIndex - 1] += i.BetScore;
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a], !0);
this.pGameViewJs.ChangeJettonState(!1);
return !0;
}
var o = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(o);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var a = t.UsersBetList[i];
if (this.GetMeChairID() != a.ChairID) {
this.pGameViewJs.PlaceJettonAction(a.ChairID, a.BetScore, a.AreaIndex - 1);
this.lAllBet[a.AreaIndex - 1] += a.BetScore;
for (var o = 0; o < n.AREA_MAX; o++) this.pGameViewJs.ShowUserJettonWithGameScene(o, this.lAllBet[o], this.lPlayBet[o]);
}
}
return !0;
},
OnSocketSubGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GAME_SCENE_END;
this.fRoundTime = i.TimeLeave;
this.cbTableCardArray = i.TableCard.concat();
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ChangeJettonState(!0);
var a = [];
memset(a, 0, MAX_CHAIR);
for (var o = i.UserWinList.length, s = 0; s < o; s++) {
var r = i.UserWinList[s];
null == r.WinScore.high && null == r.WinScore.low ? a[r.ChairID] = r.WinScore : a[r.ChairID] = 0;
}
for (var c = 0, l = i.jackpotWinScore.length, h = 0; h < l; h++) {
var u = i.jackpotWinScore[h];
null == u.WinScore.high && null == u.WinScore.low && u.ChairID == this.GetMeChairID() && (c = u.WinScore);
}
var d = this;
this.pGameViewJs.OnBetFinish(function() {
d.pGameViewJs.ShowDiceResult(d.cbTableCardArray, a, i.lJackpotScore, i.cbLuckColor);
i.WinJackpotScore > 0 && i.WinJackpotPercent > 0 && d.pGameViewJs.ShowJackPotWin(i.WinJackpotScore, i.WinJackpotPercent, c);
});
this.stGameRecord.push(this.cbTableCardArray);
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.fRoundTime, e);
},
OnButtonJetton: function(e, t) {
this.cbCurrJettonIndex = t;
this.pGameViewJs.SetBtnSelectState(t);
},
OnPlaceJetton: function(e, t) {
for (var i = this.arrBetChip[this.cbCurrJettonIndex], a = this.jsMeUserItem.GetUserScore(), o = 0, s = 0; s < n.AREA_MAX; s++) o += this.lPlayBet[s];
a + o < this.lMinTake ? 0 == GetProject().cbCheckAccounts ? ManagerHelp_SetSystemLabel("The current gold coin is below " + OnIntScore(this.lMinTake) + ", please recharge first") : ManagerHelp_SetSystemLabel("Not enough diamonds") : this.cbGameStatus == n.GAME_SCENE_BET && a >= i && this.SendPlaceJetton(t, i);
},
SendPlaceJetton: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e) + 1;
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
}
});
cc._RF.pop();
}, {
COLOR_NewCMD_Game: "COLOR_NewCMD_Game"
} ],
COLOR_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "672b2L6Oi5M/5dyy1WflWOP", "COLOR_NewGameView");
var n = e("COLOR_NewCMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
arrChipItem: [ cc.Label ],
arrBetArea: [ cc.Node ],
labelGameStatus: cc.Label,
nodeGameTime: cc.Node,
_jsGameEndAction: [],
GameStatusAnim: cc.Node,
nodeWaitStatus: cc.Node,
nodePlayerList: cc.Node,
pMenuLayer: cc.Node,
minColorSprites: [ cc.SpriteFrame ],
lastColorNodes: [ cc.Sprite ],
jackpotLabel: cc.Label,
jackColorNodes: [ cc.Sprite ],
nodeGameDice: cc.Node,
gameEndNode: cc.Node,
pfGameRecord: cc.Prefab,
pfGameRule: cc.Prefab,
gameRecordNode: null,
gameRuleNode: null,
nodeMenu: cc.Node,
nodeJackPotTurn: cc.Node,
UserScore: cc.Node,
nodeJackpot: cc.Node,
pfJpRule: cc.Prefab
},
OnFrameViewLoad: function() {
this.strJackPotRecordPath = "AGameHelp/NewJackpot/pfNewJackPot";
this.strJackPotDrawPath = "AGameHelp/NewJackpot/pfNewJackPotDraw";
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnResetGameView: function() {
for (var e = 0; e < n.AREA_MAX; e++) this.ShowUserJettonWithGameScene(e, 0, 0);
this.OnFrameResetView();
this.OnWaitStatus(!1);
this.SetPreDice();
},
SetLastColor: function(e) {
3 != e.length && ManagerHelp_SetSystemLabel("LastColor length is error :" + e.length);
for (var t = 0; t < e.length; t++) this.lastColorNodes[t].spriteFrame = this.minColorSprites[e[t] - 1];
},
SetJackpot: function(e, t) {
3 != t.length && ManagerHelp_SetSystemLabel("jackpot length is error :" + t.length);
for (var i = 0; i < t.length; i++) this.jackColorNodes[i].spriteFrame = this.minColorSprites[t[i] - 1];
this.updateJackpot(e);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("color_jackpot_control").setNumNew(e, t);
this.pGameEngineJs.jsJackpotRank && this.pGameEngineJs.jsJackpotRank.jsJackPotDraw && this.pGameEngineJs.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
OnFrameEventUserScore: function(e, t) {
return !0;
},
ShowJackPotWin: function(e, t, i) {
var n = this;
n.winJackpotScore = i;
this.scheduleOnce(function() {
this.pGameEngineJs.OnFrameButtonJackPotDraw(this.nodeJackPotTurn, t / 100, parseInt(e / t * 10), function() {
n.winJackpotScore = 0;
}, e, i);
}.bind(this), 3.5);
},
OnSubStake: function(e) {
var t = this.UserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
SetPreDice: function() {
this.nodeGameDice.getComponent("COLOR_NewDiceAction").SetPreStartShow([ 0, 0, 0 ]);
for (var e = 0; e < this.arrBetArea.length; e++) this.arrBetArea[e].children[0].getComponent(cc.Button).interactable = !0;
this.ShowGameEnd(!1);
},
SetDiceArea: function(e) {
for (var t = 0; t < this.arrBetArea.length; t++) {
for (var i = !1, n = 0; n < e.length; n++) t == e[n] - 1 && (i = !0);
this.arrBetArea[t].children[0].getComponent(cc.Button).interactable = i;
}
},
ShowDiceResult: function(e, t, i, n) {
this.nodeGameDice.getComponent("COLOR_NewDiceAction").StartAnimation(e, function() {
this.SetJackpot(i, n);
this.SetLastColor(e);
this.SetDiceArea(e);
this.UpdateGameRecord();
this.OnFrameGameEndAction(e, t, !0, function() {
this.ShowGameEnd(!0, t[this.GetMeChairID()]);
}.bind(this));
}.bind(this));
},
ShowGameEnd: function(e, t) {
if (null != t && 0 != t) {
this.gameEndNode.active = e;
var i = this.node.getComponent("jsPlayerList").nodeSelfInfo.getComponent("jsFrameUser");
this.gameEndNode.getChildByName("PlayerIcon").getComponent(cc.Sprite).spriteFrame = i.spUserHead.spriteFrame;
this.gameEndNode.getChildByName("Name").getComponent(cc.Label).string = i.labelNickName.string;
var n = t > 0;
this.gameEndNode.getChildByName("WinBg").active = n;
this.gameEndNode.getChildByName("Medal").active = n;
this.gameEndNode.getChildByName("WinFrame").active = n;
this.gameEndNode.getChildByName("WinScore").active = n;
this.gameEndNode.getChildByName("LoseBg").active = !n;
this.gameEndNode.getChildByName("LoseScore").active = !n;
t > 0 ? this.gameEndNode.getChildByName("WinScore").getComponent(cc.Label).string = "+" + OnScoreToString(t) : this.gameEndNode.getChildByName("LoseScore").getComponent(cc.Label).string = OnScoreToString(t);
} else this.gameEndNode.active = !1;
},
ShowGameRecord: function() {
if (null == this.gameRecordNode || null == this.gameRecordNode) {
this.gameRecordNode = cc.instantiate(this.pfGameRecord);
this.nodeRootCanvas.addChild(this.gameRecordNode);
}
this.gameRecordNode.active = !0;
this.gameRecordNode.getComponent("COLOR_NewRecord").Init(this.pGameEngineJs.stGameRecord);
},
UpdateGameRecord: function() {
null != this.gameRecordNode && null != this.gameRecordNode && this.gameRecordNode.active && this.gameRecordNode.getComponent("COLOR_NewRecord").Init(this.pGameEngineJs.stGameRecord);
},
onButtonJp: function() {
this.pGameEngineJs.OnFrameButtonJackPotRecord(this.curJackpotScore, this);
},
ShowGameRule: function() {
if (null == this.gameRuleNode || null == this.gameRuleNode) {
this.gameRuleNode = cc.instantiate(this.pfGameRule);
this.nodeRootCanvas.addChild(this.gameRuleNode);
}
this.gameRuleNode.active = !0;
this.gameRuleNode.getComponent("COLOR_NewRule").Init(this.pGameEngineJs.grandPercent, this.pGameEngineJs.majorPercent, this.pGameEngineJs.minorPercent, this.pGameEngineJs.miniGold);
},
showHelpPanel: function() {
this.onButtonJPRule();
},
onButtonJPRule: function() {
var e = cc.instantiate(this.pfJpRule);
this.nodeRootCanvas.addChild(e, 999);
},
ShowBetChip: function(e) {
for (var t = 0, i = 0; i < n.JETTON_NUM; i++) {
t = OnIntScore(e[i]);
this.arrChipItem[i] && (this.arrChipItem[i].string = t);
}
this.OnFrameInitJetton(e);
},
ChangeJettonState: function(e) {
for (var t = 0, i = 0; i < n.AREA_MAX; i++) t += this.pGameEngineJs.lPlayBet[i];
var a = this.pGameEngineJs.jsMeUserItem.GetUserScore();
a -= t;
var o = this.pGameEngineJs.arrBetChip.concat(), s = [];
memset(s, !1, n.JETTON_NUM);
if (!e) for (var r = 0; r < n.JETTON_NUM && a >= o[r]; r++) s[r] = !0;
var c = this.pGameEngineJs.cbCurrJettonIndex;
if (s[c]) this.SetBtnSelectState(c); else for (var l = c - 1; l >= 0; l--) if (s[l]) {
this.pGameEngineJs.cbCurrJettonIndex = l;
c = l;
this.SetBtnSelectState(l);
break;
}
for (var h = 0; h < n.JETTON_NUM; h++) if (this.arrChipItem[h]) {
var u = this.arrChipItem[h].node.parent;
if (u) {
var d = u.getComponent(cc.Button);
this.OnSetBtnDisable(d, s[h]);
}
}
},
OnSetBtnDisable: function(e, t) {
e.interactable = t;
if (!t) {
e.node.getChildByName("Select").active = !1;
}
},
SetBtnSelectState: function(e) {
for (var t = 0; t < n.JETTON_NUM; t++) if (this.arrChipItem[t]) {
var i = this.arrChipItem[t].node.parent;
if (i) {
var a = i.getComponent(cc.Button).node.getChildByName("Select");
a && (a.active = t == e);
}
}
},
SetTimeClock: function(e, t) {
this.nodeGameTime.getComponent("jsTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowUserJettonWithGameScene: function(e, t, i, n) {
var a = this.arrBetArea[e].getComponent("COLOR_NewBetArea");
a.labelAllBet.getComponent("COLOR_NewGoldAnim").SetScore(OnIntScore(t), n);
a.labelMeBet.string = OnIntScore(i);
a.labelAllBet.node.parent.active = 0 != t;
a.labelMeBet.node.parent.active = 0 != i;
},
ShowUserBetInfo: function(e, t, i, a, o) {
for (var s = 0, r = 0, c = 0, l = 0; l < n.AREA_MAX; l++) {
s += i[l];
r += t[l];
c += a[l];
}
var h = [];
memset(h, 0, n.GAME_PLAYER);
o[0] != INVALID_CHAIR && (h[o[0]] = r);
o[1] != INVALID_CHAIR && (h[o[1]] = c);
h[this.GetMeChairID()] = s;
this.OnFrameBetInfo(e, t, h);
},
ShowStartBet: function() {
var e = this.GameStatusAnim.getComponent("COLOR_NewActionHelp");
e.ResetAllNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
},
OnBetFinish: function(e) {
var t = this.GameStatusAnim.getComponent("COLOR_NewActionHelp");
t.ResetAllNode();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
e ? t.StartGameEndAction(e) : t.StartGameEndAction();
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
PlaceJettonAction: function(e, t, i) {
var n = this.arrBetArea[i].getComponent("COLOR_NewBetArea").nodeJettonArea, a = n.width, o = n.height, s = parseInt(Math.random() * (a - 100)), r = parseInt(Math.random() * (o - 100)), c = cc.v2(s + 50, r + 50);
this.OnFramePlaceJetton(e, i, t, c);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "Have a rest";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "Bet in time";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "";
return;
}
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
}
});
cc._RF.pop();
}, {
COLOR_NewCMD_Game: "COLOR_NewCMD_Game"
} ],
COLOR_NewGoldAnim: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "28fffGxGzpENIIebiCUoQzK", "COLOR_NewGoldAnim");
cc.Class({
extends: cc.Component,
properties: {
isPlaying: !1
},
start: function() {},
SetScore: function(e, t) {
var i = this.node.getComponent(cc.Label);
if (i.string == e || this.isPlaying || !0 !== t) i.string = e; else {
this.isPlaying = !0;
var n = this, a = cc.sequence(cc.scaleTo(.25, 2), cc.scaleTo(.25, 1), cc.callFunc(function() {
n.isPlaying = !1;
i.string = e;
}));
this.node.runAction(a);
}
}
});
cc._RF.pop();
}, {} ],
COLOR_NewRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0fd4edQHMpAubugVOLcDpEj", "COLOR_NewRecord");
cc.Class({
extends: cc.Component,
properties: {
contentNode: cc.Node,
pfRecordItem: cc.Prefab,
colorSprites: [ cc.SpriteFrame ]
},
start: function() {},
Init: function(e) {
for (var t = e.length < 15 ? 0 : e.length - 15, i = 0; t < e.length; t++, i++) {
var n = void 0;
if (i < this.contentNode.childrenCount) n = this.contentNode.children[i]; else {
n = cc.instantiate(this.pfRecordItem);
this.contentNode.addChild(n);
}
n.getChildByName("ColorNode0").getComponent(cc.Sprite).spriteFrame = this.colorSprites[e[t][0] - 1];
n.getChildByName("ColorNode1").getComponent(cc.Sprite).spriteFrame = this.colorSprites[e[t][1] - 1];
n.getChildByName("ColorNode2").getComponent(cc.Sprite).spriteFrame = this.colorSprites[e[t][2] - 1];
n.getChildByName("New").active = t == e.length - 1;
n.getChildByName("Light").active = t == e.length - 1;
n.setPosition(cc.v2(0, 0));
}
},
onclose: function() {
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
COLOR_NewRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c65a8yB8JJKUb7Poi5jyUya", "COLOR_NewRule");
cc.Class({
extends: cc.Component,
properties: {
selectNode: [ cc.Node ],
contentNode: [ cc.Node ],
grandLabel: cc.Label,
majorLabel: cc.Label,
minorLabel: cc.Label,
miniLabel: cc.Label
},
start: function() {
this.OnButtonClick(this, 1);
},
Init: function(e, t, i, n) {},
OnButtonClick: function(e, t) {
for (var i = 0; i < this.selectNode.length; i++) {
var n = i == t;
this.selectNode[i].active = n;
this.contentNode[i].active = n;
}
},
OnClose: function() {
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
CUpdateDef: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c5c71ZmzcVF46zerdmZqj5B", "CUpdateDef");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.toVerProcess3 = function(e, t, i) {
return (this.ver_prdct << 24) + (e << 16) + (t << 8) + i;
};
e.toVerProcess = function(e) {
var t = e.split(".");
return this.toVerProcess3(parseInt(t[0]), parseInt(t[1]), parseInt(t[2]));
};
e.toVerForceProcess = function(e) {
var t = e.split(".");
return this.toVerProcess3(parseInt(t[0]), parseInt(t[1]), 0);
};
e.toVerShow3 = function(e) {
return (e >> 16 & 255) + "." + (e >> 8 & 255) + "." + (255 & e);
};
e.toVerShow4 = function(e) {
return (e >> 24 & 255) + "." + (e >> 16 & 255) + "." + (e >> 8 & 255) + "." + (255 & e);
};
e.package_version = "1.1.0";
e.none = "undefined";
e.check = "UPDATE_TASK_CHECK";
e.wait = "UPDATE_TASK_WAIT";
e.start = "UPDATE_TASK_START";
e.percent = "UPDATE_TASK_PERCENT";
e.finish = "UPDATE_TASK_FINISH";
e.check_ret_none = "0";
e.check_ret_hot = "1";
e.check_ret_force = "2";
e.ver_build = 1;
e.ver_prdct = 1;
return e;
}();
i.default = n;
cc._RF.pop();
}, {} ],
CUpdateHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6d5e1uMPWlLN5K42qTfZJsw", "CUpdateHelp");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function() {
function e() {}
e.getCachePath = function(e) {
return this.cache_path + e;
};
e.getVersionPath = function(e) {
return this.version_path + e;
};
e.localItem = function(e) {
return this.cache_path + e + "_ver";
};
e.cacheManifestPath = function(e) {
return this.project_name + ".manifest";
};
e.getResProjectPath = function(e, t) {
void 0 === t && (t = !0);
var i = this.version_path + e + "/" + this.project_name;
t && (i += ".manifest");
return i;
};
e.getResVersionPath = function(e, t) {
void 0 === t && (t = !0);
var i = this.version_path + e + "/" + this.version_name;
t && (i += ".manifest");
return i;
};
e.project_name = "project";
e.version_name = "version";
e.cache_path = "search_";
e.version_path = "version_";
return e;
}();
i.default = n;
cc._RF.pop();
}, {} ],
CUpdateManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dadcfOOAyxH5YC138JZUDSG", "CUpdateManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./CUpdateTask"), a = e("./CUpdateHelp"), o = e("./CUpdateDef"), s = function() {
function e() {
this.strUpdateUrl = "";
this.maxTaskCount = 3;
this.updateTaskList = null;
this.serverVersion = [];
this.needCheckUpdate = !1;
this.writablePath = "";
}
e.prototype.init = function() {
cc.sys.isNative ? this.needCheckUpdate = !0 : this.needCheckUpdate = !1;
this.updateTaskList = [];
cc.sys.isNative && (this.writablePath = jsb.fileUtils.getWritablePath());
this.getLocalVersion(0);
};
e.prototype.setUpdateUrl = function(e) {
this.strUpdateUrl = e;
};
e.prototype.setGamePath = function(e) {
var t = this.writablePath, i = a.default.getCachePath(0), n = [ t + i + "/" ];
for (var o in e) {
i = a.default.getCachePath(e[o]);
n.push(t + i + "/");
}
n.push("");
n.push(t);
var s = JSON.stringify(n);
cc.sys.localStorage.setItem("HotUpdateSearchPaths", s);
jsb.fileUtils.setSearchPaths(n);
};
e.prototype.updateCacheVersion = function(e) {
cc.log("CUpdateManager.updateCacheVersion:serverVersion=" + this.serverVersion[e]);
this.setCacheVersion(e, this.serverVersion[e]);
};
e.prototype.setCacheVersion = function(e, t) {
var i = a.default.localItem(e);
cc.sys.localStorage.setItem(i, t);
};
e.prototype.getCacheVersion = function(e) {
var t = a.default.localItem(e);
return cc.sys.localStorage.getItem(t);
};
e.prototype.setServerVersion = function(e, t) {
this.serverVersion[e] = t;
};
e.prototype.setServerVersionByProcessVer = function(e, t) {
var i = o.default.toVerShow3(t);
this.serverVersion[e] = i;
cc.log("CUpdateManager.ProcessVer:gameId=" + e + ", version=" + i);
};
e.prototype.getServerVersion = function(e) {
return this.serverVersion[e];
};
e.prototype.getProcessVersion = function(e) {
void 0 === e && (e = 0);
if (cc.sys.isNative) {
var t = this.getLocalVersion(e);
cc.log("getProcessVersion:version=" + t);
var i = o.default.toVerProcess(t);
cc.log("getProcessVersion:dwProcessVer=" + i);
return i;
}
return i = o.default.toVerProcess3(0, 0, 0);
};
e.prototype.checkCodeUpdate = function(e, t) {
void 0 === t && (t = void 0);
var i = this.strUpdateUrl.split("/"), n = i[i.length - 2];
this.serverVersion[0] = n;
var a = this.getLocalVersion(0);
cc.log("大厅检测版本更新 local_version = " + a);
if (cc.sys.isNative) {
var s = n.split("."), r = a.split(".");
if (r[0] !== s[0]) t(o.default.check_ret_force, 0, a); else if (r[1] < s[1] || r[2] < s[2]) {
e && this.addUpdateTask(0);
t(o.default.check_ret_hot, 0, a);
} else t(o.default.check_ret_none, 0, a);
} else t(o.default.check_ret_none, 0, a);
};
e.prototype.getLocalVersion = function(e, t) {
void 0 === e && (e = 0);
void 0 === t && (t = void 0);
var i = this, s = i.getCacheVersion(e);
window.LogSystem().AddLog("getLocalVersion gameId =" + e + " 缓存版本 cacheVersion = " + s);
cc.log("getLocalVersion:获取版本 gameId=" + e + ", cacheVersion=" + s);
if (s && "" != s) {
if (t) {
cc.log("callback gameId = " + e);
t(e, s);
}
return s;
}
cc.log("cc.sys.isNative:" + cc.sys.isNative);
if (!cc.sys.isNative) {
t && t(e, "0.0.0");
return "0.0.0";
}
var r = function(t, a, o) {
var s;
s = (t ? n.default.defaultManifest(e) : JSON.parse(a)).version;
i.setCacheVersion(e, s);
window.LogSystem().AddLog("getLocalVersion gameId =" + e + " error = " + t + " cache_version = " + s);
cc.log("getLocalVersion funCall0 cache_version = " + s);
o && o(e, s);
};
if (cc.sys.isNative) {
var c = this.writablePath + a.default.getCachePath(e) + "/" + a.default.getResProjectPath(e);
window.LogSystem().AddLog("getLocalVersion 加载缓存资源库 cache_version_path =" + c + " 文件是否存在 = " + jsb.fileUtils.isFileExist(c));
cc.log("加载缓存资源库 cache_version_path:" + c);
if (jsb.fileUtils.isFileExist(c)) {
cc.log("加载缓存资源库11 cache_version_path:" + c);
r(!1, jsb.fileUtils.getStringFromFile(c), t);
return;
}
}
if (cc.sys.isNative) {
var l = a.default.getResProjectPath(e, !0);
l = cc.url.raw("resources/" + l);
window.LogSystem().AddLog("getLocalVersion 加载本地版本库 local_version_path =" + l + " 文件是否存在 = " + jsb.fileUtils.isFileExist(l));
cc.log("加载本地版本库 local_version_path =" + l);
if (jsb.fileUtils.isFileExist(l)) {
r(!1, jsb.fileUtils.getStringFromFile(l), t);
return;
}
}
return o.default.package_version;
};
e.prototype.checkUpdate = function(e, t, i) {
void 0 === e && (e = 0);
void 0 === t && (t = !0);
void 0 === i && (i = void 0);
var s = this, r = function(t) {
var i = s.serverVersion[e];
cc.log("zzzzzz 版本检测: gameId = " + e + " cache_version = " + t + " server_version = " + i);
cc.systemEvent.emit(o.default.check + e, {
gameId: e,
cache_version: t,
server_version: i
});
}, c = s.getCacheVersion(e);
window.LogSystem().AddLog("子游戏版本检测更新 内存版本直接比对 gameid = " + e + " cacheVersion =" + c);
if (c && "" != c) {
window.LogSystem().AddLog("checkVersion!!! ");
r(c);
} else {
var l = function(t, i) {
var a = (t ? n.default.defaultManifest(e) : JSON.parse(i)).version;
r(a);
};
if (cc.sys.isNative) {
var h = this.writablePath + a.default.getCachePath(e) + "/" + a.default.getResProjectPath(e);
window.LogSystem().AddLog("子游戏版本检测更新 加载缓存资源库 cache_version_path =" + h + " 文件是否存在 = " + jsb.fileUtils.isFileExist(h));
if (jsb.fileUtils.isFileExist(h)) {
cc.log("CUpdateManager.checkUpdate.cache_gameId=" + e + ", cache_version=" + h);
l(!1, d = jsb.fileUtils.getStringFromFile(h));
return;
}
}
if (cc.sys.isNative) {
var u = cc.url.raw("resources/version_" + e + "/project.manifest");
window.LogSystem().AddLog("子游戏版本检测更新 加载本地版本库 local_version_path =" + u + " 文件是否存在 = " + jsb.fileUtils.isFileExist(u));
if (jsb.fileUtils.isFileExist(u)) {
var d = jsb.fileUtils.getStringFromFile(u);
cc.log("CUpdateManager.checkUpdate.local_gameId=" + e + ", local_version_path=" + u);
l(!1, d);
return;
}
}
l(!0, null);
}
};
e.prototype.isNeedHotUpdate = function(e, t) {
void 0 === e && (e = 0);
void 0 === t && (t = !0);
if (!cc.sys.isNative) return !1;
var i = this.getLocalVersion(e), n = this.getServerVersion(e), a = o.default.toVerProcess(i), s = o.default.toVerProcess(n);
window.LogSystem().AddLog("isNeedHotUpdate  gameId = " + e + " hot_cache =" + a + " hot_server = " + s);
cc.log("isNeedHotUpdate:ver_cache=" + i + ", ver_server=" + n + ", hot_cache=" + a + ", hot_server=" + s);
if (a < s) {
if (t) {
window.LogSystem().AddLog("isNeedHotUpdate 子游戏添加更新任务 gameId = " + e);
this.addUpdateTask(e);
}
return !0;
}
return !1;
};
e.prototype.addUpdateTask = function(e) {
if (!this.needCheckUpdate) return !1;
if (!this.findTask(e)) {
var t = new n.default(e);
this.updateTaskList.push(t);
this.tryNextUpdateTask();
window.LogSystem().AddLog("----------addUpdateTask");
cc.systemEvent.emit(o.default.wait + e, {
gameId: e,
check_ret_hot: o.default.check_ret_hot
});
return !0;
}
return !1;
};
e.prototype.tryNextUpdateTask = function() {
window.LogSystem().AddLog("tryNextUpdateTask");
if (0 != this.updateTaskList.length) {
cc.log("CUpdateManager.tryNextUpdateTask");
for (var e = 0, t = [], i = 0, n = this.updateTaskList.length; i < n; i++) {
(a = this.updateTaskList[i]).down_state == o.default.percent && e++;
a.down_state == o.default.wait && t.push(a);
}
if (e < this.maxTaskCount && t.length > 0) {
var a;
(a = t[0]).setFinishCallback(this.updateTaskFinish.bind(this));
a.startUpdateTask();
a.down_state = o.default.percent;
cc.systemEvent.emit(o.default.start + a.gameId, {
gameId: a.gameId
});
}
} else cc.log("CUpdateManager.tryNextUpdateTask doned");
};
e.prototype.updateTaskFinish = function(e) {
cc.log("CUpdateManager.updateTaskFinish:", e.gameId);
e.setFinishCallback(void 0);
e.down_state = o.default.finish;
this.updateTaskList.forEach(function(t, i, n) {
t.gameId == e.gameId && n.splice(i, 1);
});
this.tryNextUpdateTask();
var t = e.gameId;
this.updateCacheVersion(t);
cc.systemEvent.emit(o.default.finish + t, {
gameId: t
});
e.destory();
if (cc.sys.isNative) {
var i = this.writablePath + a.default.getCachePath(e.gameId) + "/" + a.default.cacheManifestPath();
jsb.fileUtils.isFileExist(i) && jsb.fileUtils.removeFile(i);
}
0 == t && setTimeout(function() {
cc.audioEngine.stopAll();
cc.game.restart();
cc.log("CUpdateManager.updateTaskFinish.restart");
}, .1);
};
e.prototype.resumeUpdateTask = function() {};
e.prototype.findTask = function(e) {
for (var t = 0, i = this.updateTaskList.length; t < i; t++) if (this.updateTaskList[t].gameId == e) return this.updateTaskList[t];
};
e.prototype.removeTask = function(e) {
this.updateTaskList.forEach(function(t, i, n) {
t.gameId == e && n.splice(i, 1);
});
};
e.prototype.resetCachePath = function(e) {
cc.log("CUpdateManager.resetCachePath:gameId=", e);
if (cc.sys.isNative) {
var t = this.writablePath + a.default.getCachePath(e);
jsb.fileUtils.isDirectoryExist(t) && jsb.fileUtils.removeDirectory(t);
var i = a.default.localItem(e);
cc.sys.localStorage.removeItem(i);
}
};
e.getInstance = function() {
e.instance || (e.instance = new e()).init();
return e.instance;
};
e.instance = null;
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"./CUpdateDef": "CUpdateDef",
"./CUpdateHelp": "CUpdateHelp",
"./CUpdateTask": "CUpdateTask"
} ],
CUpdateTask: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4d13nx6qBIfJfw7Y0jDYQT", "CUpdateTask");
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./CUpdateDef"), a = e("./CUpdateHelp"), o = e("./CUpdateManager"), s = function() {
function e(e) {
this.gameId = 0;
this.am = null;
this.down_state = n.default.none;
this.updateListener = null;
this.new_manifestUrl = "";
this.new_versionUrl = "";
this.cache_manifestUrl = "";
this.cache_versionUrl = "";
this.finish_callback = null;
this.gameId = e;
this.am = null;
this.down_state = n.default.wait;
this.percent = 0;
}
e.defaultManifest = function(e) {
var t = this.getUpdateUrl(e), i = {
assets: {},
searchPaths: []
};
i.packageUrl = t;
i.remoteManifestUrl = t + a.default.getResProjectPath(e);
i.remoteVersionUrl = t + a.default.getResVersionPath(e);
i.gameId = e;
i.version = n.default.package_version;
return i;
};
e.updateManifest = function(t, i) {
var n = e.getUpdateUrl(i);
t.packageUrl = n;
t.remoteManifestUrl = n + a.default.getResProjectPath(i);
t.remoteVersionUrl = n + a.default.getResVersionPath(i);
t.gameId = i;
t.searchPaths = [];
};
e.getUpdateUrl = function(e) {
var t = o.default.getInstance().strUpdateUrl, i = o.default.getInstance().getServerVersion(e);
if (0 == e) {
var n = t + a.default.getCachePath(e) + "/";
window.LogSystem().AddLog("getUpdateUrl skin_url =" + n + ", gameId=" + e);
cc.log("getUpdateUrl skin_url =" + n + ", gameId=" + e);
return n;
}
var s = t.split("/");
s[s.length - 2] = i;
var r = s.join("/") + a.default.getCachePath(e) + "/";
window.LogSystem().AddLog("getUpdateUrl skin_url =" + r + ", gameId=" + e);
cc.log("getUpdateUrl skin_url =" + r + ", gameId=" + e);
return r;
};
e.prototype.http_get = function(e, t) {
var i = cc.loader.getXMLHttpRequest();
i.open("GET", e, !0);
i.onerror = function() {
t && t(!1, "");
};
i.onreadystatechange = function() {
if (4 == i.readyState && i.status >= 200 && i.status <= 207) {
i.statusText;
var e = i.responseText;
t && t(!0, e);
}
};
i.send();
};
e.prototype.cacheVersion = function() {
var e = this;
window.LogSystem().AddLog("手动缓存最新版本文件 cacheVersion  self.new_manifestUrl = " + e.new_manifestUrl);
e.http_get(e.new_manifestUrl, function(t, i) {
if (t) {
if (!HelpIsJsonString(i)) {
setTimeout(function() {
e.cacheVersion();
}, 1e3);
return;
}
window.LogSystem().AddLog("手动缓存最新版本文件 self.cache_manifestUrl = " + e.cache_manifestUrl + " 是否存在此文件  = " + jsb.fileUtils.isFileExist(e.cache_manifestUrl));
var n = jsb.fileUtils.writeStringToFile(i, e.cache_manifestUrl);
cc.log("CUpdateTask:cache_manifestUrl=" + e.cache_manifestUrl + ", cache=true");
window.LogSystem().AddLog("手动缓存最新版本文件 self.cache_manifestUrl = " + e.cache_manifestUrl + " success = " + n);
var a = JSON.parse(i);
a.assets = {};
if (!o.default.getInstance().getServerVersion(e.gameId)) {
var s = a.version;
o.default.getInstance().setServerVersion(e.gameId, s);
window.LogSystem().AddLog("手动缓存最新版本文件 最新服务版本更新 version = " + s);
cc.log("CUpdateManager.serverVersion:gameId=" + e.gameId + ", version=" + s);
}
var r = JSON.stringify(a);
cc.log("CUpdateTask:cache_versionUrl=" + e.cache_versionUrl + ", cache=true");
jsb.fileUtils.writeStringToFile(r, e.cache_versionUrl);
e.onUpdateFinish();
} else setTimeout(function() {
e.cacheVersion();
}, 500);
});
};
e.prototype.startUpdateTask = function() {
var e = this.gameId, t = o.default.getInstance().writablePath + a.default.getCachePath(e) + "/" + a.default.getResProjectPath(e);
window.LogSystem().AddLog("startUpdateTask  gameId =" + e + " 加载缓存版本库 cache_version_path = " + t + " 路径是否存在 = " + jsb.fileUtils.isFileExist(t));
if (jsb.fileUtils.isFileExist(t)) {
cc.log("CUpdateTask.cache_version_path:", t);
var i = jsb.fileUtils.getStringFromFile(t);
window.LogSystem().AddLog("self.startTaskLogic  false0");
this.startTaskLogic(!1, i);
} else {
var n = a.default.getResProjectPath(e, !0);
n = cc.url.raw("resources/" + n);
cc.log("CUpdateTask.local_version_path:", n);
window.LogSystem().AddLog("startUpdateTask  gameId =" + e + " 加载本地版本库 local_version_path = " + n + " 路径是否存在 = " + jsb.fileUtils.isFileExist(n));
if (jsb.fileUtils.isFileExist(n)) {
i = jsb.fileUtils.getStringFromFile(n);
window.LogSystem().AddLog("self.startTaskLogic  false1");
this.startTaskLogic(!1, i);
} else {
window.LogSystem().AddLog("self.startTaskLogic  true, null ");
this.startTaskLogic(!0, null);
}
}
};
e.prototype.startTaskLogic = function(t, i) {
var n = this.gameId, s = o.default.getInstance();
cc.log("CUpdateTask.startUpdateTask00:", n);
var r = null;
r = t ? e.defaultManifest(n) : JSON.parse(i);
window.LogSystem().AddLog("startTaskLogic   cache_project = " + r);
e.updateManifest(r, n);
this.new_manifestUrl = r.remoteManifestUrl;
this.new_versionUrl = r.remoteVersionUrl;
var c = JSON.stringify(r), l = s.writablePath + a.default.getCachePath(n), h = s.writablePath + a.default.getCachePath(n) + "/" + a.default.getVersionPath(n);
window.LogSystem().AddLog("startTaskLogic   storagePath = " + l + " 是否存在此路径 ：" + jsb.fileUtils.isDirectoryExist(l));
window.LogSystem().AddLog("startTaskLogic   versionPath = " + h + " 是否存在此路径 ：" + jsb.fileUtils.isDirectoryExist(h));
if (!jsb.fileUtils.isDirectoryExist(l)) {
cc.log("create :storagePath： " + l);
jsb.fileUtils.createDirectory(l);
}
if (!jsb.fileUtils.isDirectoryExist(h)) {
cc.log("create :versionPath: " + h);
jsb.fileUtils.createDirectory(h);
}
var u = l + "/" + a.default.getResProjectPath(n);
cc.log("CUpdateTask.startUpdateTask11:" + u);
var d = jsb.fileUtils.writeStringToFile(c, u);
window.LogSystem().AddLog("startTaskLogic 文件是否写入成功：  " + d);
cc.log("文件是否写入成功：  " + d);
this.cache_manifestUrl = l + "/" + a.default.getResProjectPath(n);
this.cache_versionUrl = l + "/" + a.default.getResVersionPath(n);
this.am = new jsb.AssetsManager("", l);
var m = new jsb.Manifest(c, l);
this.am.loadLocalManifest(m, l);
this.updateListener = new jsb.EventListenerAssetsManager(this.am, this.onUpdateCallback.bind(this));
cc.eventManager.addListener(this.updateListener, this.gameId + 1);
this.am.update();
};
e.prototype.setFinishCallback = function(e) {
this.finish_callback = e;
};
e.prototype.onUpdateCallback = function(e) {
var t = !1, i = !1, a = !1;
switch (e.getEventCode()) {
case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
i = !0;
break;

case jsb.EventAssetsManager.UPDATE_PROGRESSION:
var o = e.getPercentByFile(), s = e.getTotalBytes(), r = e.getDownloadedBytes();
isNaN(o) && (o = 0);
var c = (100 * o).toFixed(0), l = s / 1024 / 1024, h = (r / 1024 / 1024).toFixed(2) + "MB/" + l.toFixed(2) + "MB";
this.percent = parseInt(c);
cc.systemEvent.emit(n.default.percent + this.gameId, {
gameId: this.gameId,
percent: c,
byte: h
});
break;

case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
cc.log("CUpdateTask.onUpdateCallback:Fail to download manifest file, hot update skipped.");
i = !0;
a = !0;
break;

case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
cc.log("CUpdateTask.onUpdateCallback:Already up to date with the latest remote version.");

case jsb.EventAssetsManager.UPDATE_FINISHED:
cc.log("CUpdateTask.onUpdateCallback:Update finished. " + e.getMessage());
t = !0;
cc.systemEvent.emit(n.default.percent + this.gameId, {
gameId: this.gameId,
percent: 100,
byte: 0
});
cc.log("CUpdateTask.onUpdateCallback:============percent", 100);
break;

case jsb.EventAssetsManager.UPDATE_FAILED:
cc.log("CUpdateTask.onUpdateCallback:Update failed. " + e.getMessage());
i = !0;
break;

case jsb.EventAssetsManager.ERROR_UPDATING:
cc.log("CUpdateTask.onUpdateCallback:Asset update error: " + e.getAssetId() + ", " + e.getMessage());
break;

case jsb.EventAssetsManager.ERROR_DECOMPRESS:
cc.log("CUpdateTask.onUpdateCallback:ERROR_DECOMPRESS:" + e.getMessage());
}
if (i) if (a) {
var u = this;
setTimeout(function() {
u.startUpdateTask();
}, 800);
} else {
var d = this;
setTimeout(function() {
d.am.downloadFailedAssets();
}, 800);
}
t && this.cacheVersion();
};
e.prototype.onUpdateFinish = function() {
cc.eventManager.removeListener(this.updateListener);
this.updateListener = null;
this.finish_callback && this.finish_callback(this, this.gameId);
};
e.prototype.destory = function() {
this.am = void 0;
this.finish_callback = void 0;
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"./CUpdateDef": "CUpdateDef",
"./CUpdateHelp": "CUpdateHelp",
"./CUpdateManager": "CUpdateManager"
} ],
Captain_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cd53bmwOsBAz4MX4y17FrCL", "Captain_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_SCENE_START = 1;
cc._RF.pop();
}, {} ],
Captain_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85b23tEPGZIxrCOaMOXvXfh", "Captain_GameEngine");
var n = e("Captain_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Captain_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("Captain_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/bgmuzic", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
console.log("Scene = ", a);
this.objSceneData = a;
this.jsGameView.OnLineConfig(a.LineBets, a.LineMuls);
this.jsGameView.updateJackpot(a.JackpotScore);
this.jsGameView.initIcons(a.Defaultshow);
this.jsGameView.initAutoPlayMenu(a.AutoRun);
a.FreeCount > 0 && this.jsGameView.updateLineScore(a.LineScore, a.LineMul);
a.FreeCount > 0 && this.jsGameView.OnFreeGameScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
console.log("objResult", i);
this.objResultData = i;
this.pGameViewJs.OnRollEnd(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i, a, o) {
var s = {};
s.LineScore = i;
s.LineMul = o;
if (15 == this.pGameViewJs.customData.length) {
s.TestItems = this.pGameViewJs.customData;
cc.error(s.TestItems);
}
var r = window.net.netSerializer.packMsg("CMD_C_UserRunReq", s);
this.SendGameData(n.SUB_C_SCENE_START, r, r.length);
this.pGameViewJs.customData.length = 0;
}
});
cc._RF.pop();
}, {
Captain_CMD_Game: "Captain_CMD_Game"
} ],
Captain_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d4b58x4ekdL27ev9tr3pgcc", "Captain_GameView");
var n = e("Captain_logic"), a = "Captain_pan2_control";
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
nodeSpineBg: cc.Node,
nodeUserScore: cc.Node,
nodeUserStake: cc.Node,
nodeUserWin: cc.Node,
nodeJackpot: cc.Node,
btn_sub: cc.Button,
btn_add: cc.Button,
btn_bet: cc.Button,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_stop: cc.Button,
btn_autoStop: cc.Button,
nodeLongPress: cc.Node,
roll_pans2: [ cc.Node ],
nodeFree: cc.Node,
nodeFreeGame: cc.Node,
noreFreeCount: cc.Node,
nodeFreeover: cc.Node,
nodeFreeOverSpine: cc.Node,
nodeFreeTimeBg: cc.Node,
node_dialogLayer: cc.Node,
nodeBig: cc.Node,
nodeGold: cc.Node,
nodeWinScore: cc.Node,
node_textwin: cc.Label,
nodeScatter4: cc.Node,
nodeScatter5: cc.Node,
nodeCustom: cc.Node,
pfRuleNode: cc.Prefab,
prefab_gold: cc.Prefab,
LineBetBigbg: cc.Node,
LineBetNode: cc.Node,
lineBetPrefab: cc.Prefab,
clickNode: cc.Node,
nodeJackPotTurn: cc.Node,
nodeLineAnim: cc.Node,
pfNodeLine: cc.Prefab,
nodeMenu: cc.Node,
Dis_AutoPlayLayer: cc.Node,
pfAutoPlay: cc.Prefab,
autoPlayNode: cc.Node,
nodeAinX5: cc.Node,
nodeAinPao: cc.Node,
leftLineNode: [ cc.Node ],
rightLineNode: [ cc.Node ],
lineFrame: [ cc.SpriteFrame ],
lineFrame1: [ cc.SpriteFrame ]
},
start: function() {
this.reSetLine();
},
reSetLine: function() {
for (var e = 0; e < this.leftLineNode.length; e++) {
var t = this.leftLineNode[e];
t && (t.getComponent(cc.Sprite).spriteFrame = this.lineFrame[e]);
}
for (var i = 0; i < this.rightLineNode.length; i++) {
var n = this.rightLineNode[i];
n && (n.getComponent(cc.Sprite).spriteFrame = this.lineFrame[i]);
}
},
OnFrameViewLoad: function() {
this.b_auto = !1;
this.canStart = !0;
this.b_roll = !1;
this.percent = 0;
this.arryGodPool = new cc.NodePool();
for (var e = 0; e < 200; e++) {
var t = cc.instantiate(this.prefab_gold);
this.arryGodPool.put(t);
}
this.btn_start.node.on("touchstart", function(e) {
if (this.i_freegameTimes <= 0) {
this.btn_start.scheduleOnce(function() {
t.canStart && (t.nodeLongPress.active = !0);
}, .1);
var t = this;
this.btn_start.scheduleOnce(function() {
t.b_auto = !0;
t.updateBanCyclePlay();
if (t.canStart) {
t.Dis_AutoPlayLayer.active = !0;
t.nodeLongPress.active = !1;
}
}, .5);
}
}, this);
this.btn_start.node.on("touchend", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.btn_start.node.on("touchcancel", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.initData();
this.m_ExitTime = 120;
this.schedule(this.ExitTime, 1);
this.i_freegameTimes = 0;
this.inFreeGame = !1;
this.lineCount = 0;
this.lineIndex = 0;
var i = cc.find("No_nodeContent/New Sprite/CustomEditBox", this.nodeCustom);
this.CustomEditbox = i.getComponent(cc.EditBox);
this.customData = [];
this.fastModel = !1;
this.bgSpineIndex = 0;
this.bgSpineSwitchTimes = 0;
this.WinJackpotScore = 0;
this.WinJackpotPercent = 0;
this.curJackpotScore = 0;
var n = cc.instantiate(this.pfNodeLine);
this.nodeLineAnim.addChild(n);
this.slot_line_control = n.getComponent("Captain_line_control");
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
initData: function() {
this.m_ExitTime = 0;
this.i_totalBetIndex = 0;
this.i_totalBet = [];
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
var t = PlayerManager.GetMeUserItem();
if (null == t) return !1;
var i = t.GetUserScore();
this.nodeUserScore.getComponent(cc.Label).string = OnScoreToString(i, 2);
},
ExitTime: function() {
var e = this;
e.m_ExitTime--;
if (e.m_ExitTime <= 0) {
e.unschedule(e.ExitTime);
ManagerHelp_SetSystemAlert("You have not played the game for a long time, please have a rest!", function() {
if (0 == GetServerRoom().GetEventCount()) {
e.jsGameEngine.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
} else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(e.jsGameEngine.GetMeTableID(), e.jsGameEngine.GetMeChairID(), !0);
e.scheduleOnce(e.jsGameEngine.OnFrameButtonBackGame.bind(e.jsGameEngine), .01);
}
});
}
},
OnEventUserEnter: function(e, t) {
cc.log("GameView.OnEventUserEnter.wChairID:", e.GetChairID(), "NickName:", e.GetNickNameUtf8());
var i = e.GetChairID();
this.SetUserActive(i, !0);
this.GetJsFrameUser(i).SetUserDataItem(e);
this.OnFrameUpdateUserScore(i);
this.OnFrameEventUserStatus(e, e.GetUserStatus(), t);
return !0;
},
ResetGameView: function() {
cc.log("GameView.ResetGameView");
this.ResetFrameData();
},
OnEventUserLeave: function(e, t, i) {
cc.log("GameView.OnEventUserLeave");
this.SetUserActive(t, !0);
if (0 != this.jsGameEngine.SwitchViewID(t)) {
this.GetJsFrameUser(t).labelNickName.string = "";
return !0;
}
},
OnLineConfig: function(e, t) {
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, 9);
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
OnFreeGameTimeUpdate: function() {
this.nodeFreeTimeBg.getChildByName("text_freegame").getComponent(cc.Label).string = "" + this.i_freegameTimes;
},
updateAutoPlayTimesUpdate: function() {
this.btn_autoStop.node.getChildByName("text_freegame").getComponent(cc.Label).string = "" + (-1 == this.i_autoPlayTimes ? "a" : this.i_autoPlayTimes);
},
onGotoFreeGame: function() {
var e = this;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/FreeGame_OK_2", !1, window.mfConfig.fSound);
this.nodeFreeTimeBg.active = !0;
this.OnFreeGameTimeUpdate();
this.nodeFree.active = !0;
this.noreFreeCount.getComponent(cc.Label).string = this.i_freegameTimes;
this.noreFreeCount.setScale(0);
this.noreFreeCount.runAction(cc.sequence(cc.scaleTo(.5, 1, 1), cc.delayTime(2), cc.moveTo(.2, -1500, 0)));
var t = this.nodeFreeGame.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
e.noreFreeCount.x = -250;
cc.audioEngine.stopAll();
e.nodeFree.active = !0;
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/free game", !0, window.mfConfig.fSound);
var t = {};
t.target = e.btn_start.node;
e.OnBtnStartClick(t);
});
},
stopAllAnim: function() {
for (var e = 0; e < 5; e++) {
this.roll_pans2[e].getComponent(a).stopAnim(0);
this.roll_pans2[e].getComponent(a).stopAnim(1);
this.roll_pans2[e].getComponent(a).stopAnim(2);
}
for (var t = 0; t < 5; t++) {
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 0);
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 1);
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 2);
}
},
OnCheckScore: function() {
var e = PlayerManager.GetMeUserItem();
if (null == e) return !1;
if (this.inFreeGame) return !0;
var t = e.GetUserScore(), i = this.TotalScore;
if (t < i) {
if (0 == GetProject().cbCheckAccounts) var n = "The current gold coin is below " + i / 1e3 + ", please recharge first"; else n = "Not enough diamonds";
ManagerHelp_SetSystemAlert(n, function(e, t) {
window.YQ_SYS_OK == t && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}, !0, window.BTN_CLOSE);
return !1;
}
return !0;
},
OnBtnStartClick: function(e) {
if ("Dis_btnsub" === e.target.getName()) {
this.i_totalBetIndex--;
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnadd" === e.target.getName()) {
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnfast" === e.target.getName()) {
this.fastModel = !1;
this.updateRollMode();
} else if ("Dis_btnslow" === e.target.getName()) {
this.fastModel = !0;
this.updateRollMode();
} else if ("btn_start" === e.target.getName()) {
if (!this.OnCheckScore()) return;
if (!this.canStart) return;
if (this.Dis_AutoPlayLayer.active) return;
this.reSetLine();
this.canStart = !1;
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/spin", !1, window.mfConfig.fSound);
this.stopAllAnim();
this.slot_line_control.resetLineInfo();
this.unschedule(this.playIconAnim);
this.nodeFree.active = !1;
this.nodeAinPao.getComponent(sp.Skeleton).animation = "animation";
this.i_freegameTimes >= 0 && this.inFreeGame ? this.bgSpineSwitchTimes = 0 : this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.lineCount = 0;
this.lineIndex = 0;
this.jsGameEngine.OnSendEventGameStart(9, this.TotalScore, this.LineBetNodeJs.i_betNum[this.LineBetNodeJs.i_betIndex], !1, this.LineBetNodeJs.i_lineMul[this.LineBetNodeJs.i_lineIndex]);
this.m_ExitTime = 120;
this.b_roll = !0;
if (this.i_freegameTimes > 0) {
this.i_freegameTimes--;
this.OnFreeGameTimeUpdate();
} else {
this.OnSubStake(-this.TotalScore);
if (this.i_autoPlayTimes > 0) {
this.i_autoPlayTimes--;
this.updateAutoPlayTimesUpdate();
}
}
if (this.i_freegameTimes >= 0 && this.inFreeGame) ; else {
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_autoStop.interactable = !1;
if (this.b_auto) {
this.btn_autoStop.node.active = !0;
this.btn_stop.node.active = !1;
} else {
this.btn_stop.node.active = !0;
this.btn_autoStop.node.active = !1;
}
0 == this.i_autoPlayTimes && (this.b_auto = !1);
}
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else if ("btn_quickstop" === e.target.getName() || "btn_autoStop" === e.target.getName()) {
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/reel_stop_01", !1, window.mfConfig.fSound);
this.b_auto = !1;
this.updateBanCyclePlay();
for (var t = 0; t < 5; t++) {
var i = n.tab_data[t];
this.roll_pans2[t].getComponent(a).quickstop(i);
}
if (this.i_freegameTimes > 0) for (var o = 0; o < 5; o++) this.roll_pans2[o].getComponent(a).unscheduleAllCallbacks();
this.btn_stop.unscheduleAllCallbacks();
this.scheduleOnce(function() {
this._onRollStop();
}, .1);
this.btn_stop.interactable = !1;
this.i_autoPlayTimes = 0;
this.btn_autoStop.interactable = !1;
}
},
OnSubStake: function(e) {
var t = this.nodeUserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
OnStakeUpdate: function() {
this.nodeUserWin.getComponent(cc.Label).string = "0.00";
for (var e = 0; e < this.i_totalBet.length; e++) if (this.i_totalBet[e].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = e;
break;
}
this.TotalScore = 9 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * 1e3 * parseFloat(this.LineBetNodeJs.multipleLbl.string);
this.nodeUserStake.getComponent(cc.Label).string = OnScoreToString(this.TotalScore, 2);
},
updateLineScore: function(e, t) {
this.LineBetNodeJs.updateLineScore(e, t);
},
updateRollMode: function() {
if (this.fastModel) {
this.btn_slow.node.active = !1;
this.btn_fast.node.active = !0;
} else {
this.btn_slow.node.active = !0;
this.btn_fast.node.active = !1;
}
this.updateBanCyclePlay();
},
updateBanCyclePlay: function() {
!this.b_auto || this.b_auto && !this.fastModel ? this.banCyclePlay = !1 : this.banCyclePlay = !0;
},
OnRollEnd: function(e) {
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/reel_start", !1, window.mfConfig.fSound);
if (null == e.WinJackpotScore.high && null == e.WinJackpotScore.low) {
this.WinJackpotScore = e.WinJackpotScore;
this.WinJackpotPercent = e.WinJackpotPercent;
}
for (var t = [], i = 0; i < 5; i++) {
t[i] = [];
for (var o = 0; o < 3; o++) t[i][o] = e.ItemsArry[3 * i + o] - 1;
}
var s = 0;
null == e.WinScore.high && null == e.WinScore.low && (s = e.WinScore);
n.setData(t, s);
this.b_roll = !1;
this.btn_stop.interactable = !0;
this.btn_autoStop.interactable = !0;
if (this.i_freegameTimes > 0) {
this.btn_stop.interactable = !1;
this.btn_autoStop.interactable = !1;
}
var r = .15;
if (this.fastModel) {
-.1;
.25;
r = .07;
}
for (var c = 0; c < 5; c++) for (var l = 0; l < 5; l++) this.roll_pans2[l].getComponent(a).roll(r, n.getValues(l), l);
0;
this.btn_stop.scheduleOnce(function() {
this.btn_stop.interactable = !1;
this.nodeScatter5.active = !1;
this._onRollStop();
}.bind(this), 12 * r + .5);
},
_onRollStop: function() {
this._onFiveWin();
},
_onFiveWin: function() {
this._onIsWin();
},
_onIsWin: function() {
var e = this.jsGameEngine.objResultData, t = e.WinLines.length;
t > 0 || this.isWinSpecial() ? this.playLineAnim(e.WinLines) : 0 == t && e.WinScatter.WinScore > 0 ? this.playEffect() : this.WinJackpotScore > 0 ? this.playJackpotAnim() : this._onRestBtn();
},
OnViewUpdate: function(e) {
this.bgSpineSwitchTimes += e;
if (this.bgSpineSwitchTimes >= 60) {
this.bgSpineSwitchTimes = 0;
this.bgSpineIndex++;
this.bgSpineIndex > 2 && (this.bgSpineIndex = 0);
var t = this.nodeSpineBg.getComponent(sp.Skeleton);
0 == this.bgSpineIndex ? PlaySkeletonAnimation(t, !0, "zi1") : 1 == this.bgSpineIndex ? PlaySkeletonAnimation(t, !0, "zi2") : 2 == this.bgSpineIndex && PlaySkeletonAnimation(t, !0, "zi3");
}
},
_onRestBtn: function() {
var e = this.jsGameEngine.objResultData, t = e.AddFreeCount, i = !1;
if (t > 0) if (this.i_freegameTimes > 0) {
cc.log("已经在免费游戏");
this.i_freegameTimes += t;
} else {
i = !0;
cc.log("开始进入免费游戏");
this.i_freegameTimes += t;
this.inFreeGame = !0;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.scheduleOnce(function() {
this.bgSpineSwitchTimes = 0;
var e = this.nodeSpineBg.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "mianfei");
this.onGotoFreeGame();
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !1;
this.btn_autoStop.interactable = !1;
this.btn_autoStop.node.active = !1;
}.bind(this), 2);
}
if (0 == this.i_freegameTimes && this.inFreeGame) {
this.inFreeGame = !1;
this.bgSpineSwitchTimes = 60;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/main/Score", !1, window.mfConfig.fSound);
var n = this.nodeFreeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "mfjs");
var a = this.nodeUserWin.getComponent(cc.Label).string, o = this.nodeFreeover.getComponent("Captain_text_control");
o.setNum(a);
o.scheduleOnce(function() {
this.nodeFreeover.active = !1;
this.nodeFreeTimeBg.active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/bgmuzic", !0, window.mfConfig.fSound);
}.bind(this), 3);
this.scheduleOnce(function() {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.btn_autoStop.interactable = !0;
this.btn_autoStop.node.active = !1;
this.canStart = !0;
if (this.b_auto) {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}
}.bind(this), 3);
} else if (i) this.canStart = !0; else {
if (!this.inFreeGame) if (this.b_auto && (this.i_autoPlayTimes > 0 || -1 == this.i_autoPlayTimes)) {
this.btn_autoStop.interactable = !0;
this.btn_autoStop.node.active = !0;
} else {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.btn_autoStop.node.active = !1;
}
this.canStart = !0;
}
if (this.i_freegameTimes > 0) {
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else {
this.btn_sub.interactable = !0;
this.btn_add.interactable = !0;
this.btn_bet.interactable = !0;
this.LineBetNodeJs.setBtnEnabled(!0);
}
var s = 0, r = e.WinLines.length;
r > 0 && !this.banCyclePlay && (s = 1 * r);
(this.b_auto && 0 == this.i_freegameTimes && (this.i_autoPlayTimes > 0 || -1 == this.i_autoPlayTimes) || this.i_freegameTimes > 0 && !i) && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), s);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("jsJackPotNum").setNumNew(e, t);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
initAutoPlayMenu: function(e) {
var t = cc.instantiate(this.pfAutoPlay);
t.getComponent("jsAutoPlay").initAutoPlayMenu(e, this.autoPleyItemCallBack.bind(this));
this.autoPlayNode.addChild(t);
},
autoPleyItemCallBack: function(e, t) {
this.Dis_AutoPlayLayer.active = !1;
this.i_autoPlayTimes = e.target.autoRun;
this.updateAutoPlayTimesUpdate();
this.b_auto = !0;
var i = {};
i.target = this.btn_start.node;
this.OnBtnStartClick(i);
},
initIcons: function(e) {
for (var t = [], i = 0, n = 0; n < 5; n++) {
t[n] = [];
for (var o = 0; o < 3; o++) {
t[n].push(e[i]);
i++;
}
}
for (var s = 0; s < 5; s++) this.roll_pans2[s].getComponent(a).setIcons(t[s], s);
var r = this;
this.schedule(function() {
r.percent += 1;
if (r.percent <= 100) {
r.updateBar.progress = r.percent / 100;
r.updatePrecent.string = r.percent + "%";
} else if (r.percent >= 151) {
r.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnGM" == i ? this.nodeCustom.active = !0 : "btnClose" == i ? this.nodeCustom.active = !1 : "btnOK" == i ? this.check() : "nodeJackpot" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore, this) : "btnHelp" == i ? this.showHelpPanel() : "Dis_BetNode" == i ? this.LineBetBigbg.active = !this.LineBetBigbg.active : "Dis_LineBetBigbg" == i ? this.LineBetBigbg.active = !1 : "clickNode" == i ? this.clickNode.active = !1 : "Dis_AutoPlayLayer" == i && (this.Dis_AutoPlayLayer.active = !1);
},
showHelpPanel: function() {
var e = cc.instantiate(this.pfRuleNode);
this.node_dialogLayer.addChild(e);
},
check: function() {
this.customData.length = 0;
var e = this.CustomEditbox.string.split(",");
if (15 != e.length) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var t = 0; t < 15; t++) if (e[t] < 1 || e[t] > 13) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var i = 0; i < 15; i++) {
var n = parseInt(e[i]);
this.customData.push(n);
}
this.nodeCustom.active = !1;
var a = {};
a.target = this.btn_start.node;
this.OnBtnStartClick(a);
},
OnFreeGameScene: function(e) {
cc.log("免费游戏场景恢复");
this.nodeFreeTimeBg.active = !0;
this.btn_add.interactable = !1;
this.btn_sub.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
this.i_freegameTimes = e.FreeCount;
this.inFreeGame = !0;
this.btn_start.node.active = !1;
this.btn_stop.node.active = !1;
this.btn_autoStop.node.active = !1;
this.OnFreeGameTimeUpdate();
this.bgSpineSwitchTimes = 0;
var t = this.nodeSpineBg.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "mianfei");
var i = 0;
i = null != e.FreeTotalWin.high && null != e.FreeTotalWin.low ? 0 : e.FreeTotalWin;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(i, 2);
this.OnStakeUpdate();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/free game", !0, window.mfConfig.fSound);
this.i_freegameTimes > 0 && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), 2);
},
playLineAnim: function(e) {
var t = this, i = this.jsGameEngine.objResultData;
this.lineCount = e.length;
this.lineID = [];
for (var n = 0; n < this.lineCount; n++) this.lineID[n] = e[n].LineID;
this.reSetLine();
for (var o = !1, s = 0; s < this.lineCount; s++) {
var r = e[s];
this.showLinePoint(r);
this.showLineNode(r.LineID);
(r.LeftWinItems.length >= 5 || r.RightWinItems.length >= 5) && (o = !0);
}
if (i.WinSpecial && (i.WinSpecial.LeftItemCount > 0 || i.WinSpecial.RightItemCount > 0)) {
if (0 == this.lineCount) for (var c = 0; c < 5; c++) {
this.roll_pans2[c].getComponent(a).setGray(!0, !1, 0);
this.roll_pans2[c].getComponent(a).setGray(!0, !1, 1);
this.roll_pans2[c].getComponent(a).setGray(!0, !1, 2);
}
if (i.WinSpecial.LeftItemCount > 0) for (var l = 0; l < i.WinSpecial.LeftItemCount; l++) this.roll_pans2[l].getComponent(a).showSpecial();
if (i.WinSpecial.RightItemCount > 0) for (var h = 0; h < i.WinSpecial.RightItemCount; h++) this.roll_pans2[4 - h].getComponent(a).showSpecial();
5 != i.WinSpecial.LeftItemCount && 5 != i.WinSpecial.RightItemCount || (o = !0);
}
this.slot_line_control.initLineData(this, this.lineID, this.lineCount, i);
if (o) {
this.nodeAinX5.active = !0;
var u = this.nodeAinX5.getComponent(sp.Skeleton);
PlaySkeletonAnimation(u, !1, "animation").setCompleteListener(function() {
this.nodeAinX5.active = !1;
this.slot_line_control.playAllLines(function() {
t.playEffect();
});
}.bind(this));
} else this.slot_line_control.playAllLines(function() {
t.playEffect();
});
},
showLineNode: function(e) {
var t = this.jsGameEngine.objResultData;
if (t) {
for (var i = null, n = 0; n < t.WinLines.length; n++) if (e == t.WinLines[n].LineID) {
i = t.WinLines[n];
break;
}
if (i) {
if (i.LeftWinItems.length > 0 && this.leftLineNode[e - 1]) {
this.leftLineNode[e - 1].getComponent(cc.Sprite).spriteFrame = this.lineFrame1[e - 1];
}
if (i.RightWinItems.length > 0 && this.rightLineNode[e - 1]) {
this.rightLineNode[e - 1].getComponent(cc.Sprite).spriteFrame = this.lineFrame1[e - 1];
}
}
}
},
playIconAnim: function() {
for (var e = 0; e < 5; e++) {
this.roll_pans2[e].getComponent(a).stopAnim(0);
this.roll_pans2[e].getComponent(a).stopAnim(1);
this.roll_pans2[e].getComponent(a).stopAnim(2);
}
var t = this.jsGameEngine.objResultData;
if (this.lineIndex >= this.lineCount && this.isWinSpecial()) {
this.showSpecial(t);
this.showLineWinScore(t.WinSpecial.WinScore);
this.lineIndex = 0;
} else {
var i = t.WinLines[this.lineIndex];
this.showLinePoint(i);
this.showLineWinScore(i.WinScore);
this.lineIndex++;
this.lineIndex >= this.lineCount && !this.isWinSpecial() && (this.lineIndex = 0);
}
},
isWinSpecial: function() {
var e = this.jsGameEngine.objResultData;
return !(!e.WinSpecial || !(e.WinSpecial.RightItemCount > 0 || e.WinSpecial.LeftItemCount > 0));
},
showLineWinScore: function(e) {
this.nodeWinScore.setScale(0);
this.node_textwin.string = OnScoreToString(e, 2);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.4, .8), cc.scaleTo(.4, .6), cc.delayTime(1), cc.callFunc(function(e) {
e.setScale(0);
})));
},
showSpecial: function(e) {
for (var t = 0; t < 5; t++) {
this.roll_pans2[t].getComponent(a).setGray(!0, !1, 0);
this.roll_pans2[t].getComponent(a).setGray(!0, !1, 1);
this.roll_pans2[t].getComponent(a).setGray(!0, !1, 2);
}
if (e.WinSpecial && (e.WinSpecial.LeftItemCount > 0 || e.WinSpecial.RightItemCount > 0)) {
if (e.WinSpecial.LeftItemCount > 0) for (var i = 0; i < e.WinSpecial.LeftItemCount; i++) this.roll_pans2[i].getComponent(a).showSpecial();
if (e.WinSpecial.RightItemCount > 0) for (var n = 0; n < e.WinSpecial.RightItemCount; n++) this.roll_pans2[4 - n].getComponent(a).showSpecial();
}
},
showLinePoint: function(e) {
for (var t = e.LineID, i = this.jsGameEngine.objSceneData.LinesArry[t - 1], n = 0; n < 5; n++) {
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 0);
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 1);
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 2);
}
for (var o = 0; o < e.LeftWinItems.length; o++) {
var s = parseInt((i.PosArry[o] - 1) % 3);
this.roll_pans2[o].getComponent(a).setGray(!1, !0, s);
this.roll_pans2[o].getComponent(a).playAnim(s);
}
for (var r = 0; r < e.RightWinItems.length; r++) {
var c = parseInt((i.PosArry[4 - r] - 1) % 3);
this.roll_pans2[4 - r].getComponent(a).setGray(!1, !0, c);
this.roll_pans2[4 - r].getComponent(a).playAnim(c);
}
},
playEffect: function() {
var e = 0;
if (this.jsGameEngine.objResultData.WinScatter.WinScore > 0) {
e = 2;
for (var t = 0; t < 5; t++) for (var i = this.roll_pans2[t].getComponent(a), o = 0; o < 3; o++) 11 == i.i_icons[o] && i.playAnim(o);
}
var s = this.jsGameEngine.objSceneData.WinLvArry;
n.i_win >= s[0] * this.TotalScore ? this.scheduleOnce(function() {
this.onPlayBigWin(n.i_win);
}, e) : this.scheduleOnce(function() {
this.FlyGold(!1);
}, e);
},
onPlayBigWin: function(e) {
this.jsGameEngine.onPlayBigWin(e, this.TotalScore, this.playBigAniOver.bind(this));
},
playBigAniOver: function() {
var e = this;
cc.audioEngine.stopAll();
this.inFreeGame ? window.mfConfig.PlayAudio("504/Audio/FreeGameBG", !0) : window.mfConfig.PlayAudio("504/Audio/bgmuzic", !0);
if (e.i_freegameTimes >= 0 && e.inFreeGame) {
var t = 1e3 * e.nodeUserWin.getComponent(cc.Label).string + n.i_win;
e.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(t, 2);
} else {
var i = 1e3 * e.nodeUserWin.getComponent(cc.Label).string + n.i_win;
e.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(i, 2);
}
if (e.WinJackpotScore > 0) {
e.OnSubStake(n.i_win);
e.playJackpotAnim();
} else {
e.OnSubStake(n.i_win);
e._onRestBtn();
if (e.jsGameEngine.objResultData.WinLines.length > 0 || e.isWinSpecial()) {
e.slot_line_control.stopAllLine();
e.slot_line_control.playLineAnim();
for (var o = 0; o < 5; o++) {
e.roll_pans2[o].getComponent(a).stopAnim(0);
e.roll_pans2[o].getComponent(a).stopAnim(1);
e.roll_pans2[o].getComponent(a).stopAnim(2);
}
if (!e.b_auto || e.b_auto && !e.fastModel) {
e.playIconAnim();
e.schedule(e.playIconAnim, 2);
e.banCyclePlay = !1;
} else e.banCyclePlay = !0;
}
}
},
EruptGold: function() {
var e = this, t = this.arryGodPool.get();
t.setPosition(cc.v2(Value_GetRandomInt(0, 100) - 50, -800 + Value_GetRandomInt(0, 100) - 50));
var i = .1 * Value_GetRandomInt(10, 13), n = Value_GetRandomInt(0, 360), a = Value_GetRandomInt(0, 360);
t.setScale(i, i);
t.angle = n;
t.rotation = a;
var o = Value_GetRandomInt(0, 1500) - 750, s = (o + t.x) / 2, r = [ t.getPosition(), cc.v2(s, 1e3 + Value_GetRandomInt(0, 1e3) + 100), cc.v2(o, -750) ];
t.runAction(cc.sequence(cc.bezierTo(1.5, r), cc.callFunc(function(t) {
t.removeFromParent();
e.arryGodPool.put(t);
}.bind(this))));
e.nodeGold.addChild(t);
},
FlyGold: function(e) {
var t = this;
this.node_textwin.string = OnScoreToString(n.i_win, 2);
this.nodeWinScore.getComponent("Captain_text_control").setNum(n.i_win / 1e3);
this.nodeWinScore.setScale(0);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(1.5), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(i) {
t.node_textwin.string = "";
i.setPosition(0, -200);
if (t.i_freegameTimes >= 0 && t.inFreeGame) {
var o = 1e3 * t.nodeUserWin.getComponent(cc.Label).string + n.i_win;
t.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(o, 2);
} else {
var s = 1e3 * t.nodeUserWin.getComponent(cc.Label).string + n.i_win;
t.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(s, 2);
}
if (t.WinJackpotScore > 0) {
t.OnSubStake(n.i_win);
t.playJackpotAnim();
} else {
e || t.OnSubStake(n.i_win);
t._onRestBtn();
if (t.jsGameEngine.objResultData.WinLines.length > 0 || t.isWinSpecial()) {
t.slot_line_control.stopAllLine();
t.slot_line_control.playLineAnim();
for (var r = 0; r < 5; r++) {
t.roll_pans2[r].getComponent(a).stopAnim(0);
t.roll_pans2[r].getComponent(a).stopAnim(1);
t.roll_pans2[r].getComponent(a).stopAnim(2);
}
if (!t.b_auto || t.b_auto && !t.fastModel) {
t.playIconAnim();
t.schedule(t.playIconAnim, 2);
t.banCyclePlay = !1;
} else t.banCyclePlay = !0;
}
}
})));
},
playJackpotAnim: function() {
var e = this;
this.jsGameEngine.OnFrameButtonJackPotDraw(e.nodeJackPotTurn, e.WinJackpotPercent / 100, parseInt(e.WinJackpotScore / e.WinJackpotPercent * 10), function() {
n.i_win = e.WinJackpotScore;
e.WinJackpotScore = 0;
e.WinJackpotPercent = 0;
e.FlyGold(!0);
});
}
});
cc._RF.pop();
}, {
Captain_logic: "Captain_logic"
} ],
Captain_Item: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4a645Ze6kRNz5R64qTFEkve", "Captain_Item");
cc.Class({
extends: cc.Component,
properties: {
icon: cc.Sprite
},
setData: function(e) {
this.icon.spriteFrame = e;
}
});
cc._RF.pop();
}, {} ],
Captain_bigwin_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "39fbe3bikxG6LmCBRe9jqMu", "Captain_bigwin_control");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {}
});
cc._RF.pop();
}, {} ],
Captain_jackpot_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5bc8a3xZM9N9qFKx+pBu/GO", "Captain_jackpot_control");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
cc.Class({
extends: cc.Component,
properties: {
nodeRollNum: [ cc.Node ],
isFirst: !0
},
setNumNew: function(e, t) {
var i = this, a = "" + e, o = a.length;
if (this.isFirst) {
for (var s = 11; s > 11 - o; s--) {
this.nodeRollNum[s].getComponent("Captain_rollNum").setData(a[s - (11 - o) - 1]);
}
this.isFirst = !1;
}
for (var r = 0, c = function(e) {
i.scheduleOnce(function(t, i) {
this.nodeRollNum[e].getComponent("Captain_rollNum").startRoll(t, 0, a[o - i - 1]);
}.bind(i, e, r), .1 * (11 - e));
if (++r >= o) return {
v: void 0
};
}, l = 11; l >= 0; l--) {
var h = c(l);
if ("object" === ("undefined" == typeof h ? "undefined" : n(h))) return h.v;
}
}
});
cc._RF.pop();
}, {} ],
Captain_jackpot_rank: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "786bc8Y/KhEVaceUjRHz9By", "Captain_jackpot_rank");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
nodeRankPng: [ cc.SpriteFrame ],
nodeMe: cc.Node,
pfJackpotRankItem: cc.Prefab
},
onLoad: function() {
this.rankInfo = null;
this.requestJackpotRank();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" == i && this.node.destroy();
},
requestJackpotRank: function() {
var e = this, t = GetProject().szGameJackpotUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(a, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
e.rankInfo = n;
e.showJackpotRankInfo(n.data);
e.showMyRankings(n.myrankings);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotRankInfo: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfJackpotRankItem);
this.nodeContent.addChild(n);
var a = e[i], o = cc.find("imRank", n), s = cc.find("lblRank", n);
if (i < 3) {
o.active = !0;
s.active = !1;
o.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[i];
} else {
o.active = !1;
s.active = !0;
s.getComponent(cc.Label).string = i + 1;
}
cc.find("lblNickName", n).getComponent(cc.Label).string = a.NickName;
cc.find("lblReward", n).getComponent(cc.Label).string = (a.WinJackpot / 1e3).toFixed(3);
}
},
showMyRankings: function(e) {
var t = cc.find("imRank", this.nodeMe), i = cc.find("lblRank", this.nodeMe), n = cc.find("imNoOnList", this.nodeMe), a = this.isInTop10();
if (-1 != a) if (a < 3) {
t.active = !0;
i.active = !1;
t.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[a];
} else {
t.active = !1;
i.active = !0;
i.getComponent(cc.Label).string = a + 1;
} else {
t.active = !1;
i.active = !1;
n.active = !0;
}
var o = PlayerManager.GetMeUserItem();
cc.find("lblNickName", this.nodeMe).getComponent(cc.Label).string = o.GetNickNameUtf8();
cc.find("lblReward", this.nodeMe).getComponent(cc.Label).string = (e.WinJackpot / 1e3).toFixed(3);
},
isInTop10: function() {
for (var e = this.rankInfo.data, t = this.rankInfo.myrankings, i = e.length, n = 0; n < i; n++) {
if (e[n].GameID == t.GameID) return n;
}
return -1;
}
});
cc._RF.pop();
}, {} ],
Captain_line_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0c657NaPxNBtJfDwjayxHVn", "Captain_line_control");
cc.Class({
extends: cc.Component,
properties: {
nodeLine: [ cc.Node ]
},
onLoad: function() {
this.lineID = [];
this.lineCount = 0;
this.lineIndex = 0;
},
initLineData: function(e, t, i, n) {
this.jsGameView = e;
this.lineID = this.lineID.concat(t);
this.lineCount = i;
this.resultData = n;
},
playAllLines: function(e) {
for (var t = 0; t < this.lineCount; t++) {
var i = this.nodeLine[this.lineID[t] - 1];
i.active = !0;
this.playSkeletonAnimation(i);
}
this.scheduleOnce(function() {
e && e();
}, 1.2);
},
playLineAnim: function() {
this.playLineUpdate();
this.schedule(this.playLineUpdate, 2);
},
playLineUpdate: function() {
this.jsGameView.reSetLine();
for (var e = 0; e < 9; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
if (this.lineIndex >= this.lineCount && this.isWinSpecial()) this.lineIndex = 0; else {
var i = this.lineID[this.lineIndex], n = this.nodeLine[i - 1];
n.active = !0;
this.playSkeletonAnimation(n);
this.jsGameView.showLineNode(i);
this.lineIndex++;
this.lineIndex >= this.lineCount && !this.isWinSpecial() && (this.lineIndex = 0);
}
},
isWinSpecial: function() {
var e = this.resultData;
return !(!e.WinSpecial || !(e.WinSpecial.RightItemCount > 0 || e.WinSpecial.LeftItemCount > 0));
},
stopAllLine: function() {
for (var e = 0; e < 9; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
},
resetLineInfo: function() {
for (var e = 0; e < 9; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
this.lineID.length = 0;
this.lineCount = 0;
this.lineIndex = 0;
this.unschedule(this.playLineUpdate);
},
playSkeletonAnimation: function(e) {
e.stopAllActions();
var t = cc.sequence(cc.fadeIn(.2), cc.fadeOut(.2));
e.runAction(cc.repeatForever(t));
},
stopSkeletonAnimation: function(e) {
e.stopAllActions();
}
});
cc._RF.pop();
}, {} ],
Captain_lines_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2f935XZuCBO35kXXtV0CeVN", "Captain_lines_control");
cc.Class({
extends: cc.Component,
properties: {
lines: {
default: [],
type: cc.Node
},
lefts: {
default: [],
type: cc.Node
},
rights: {
default: [],
type: cc.Node
},
i_nums: {
default: []
}
},
lightNum: function() {
for (var e = 0; e < this.nums.length; e++) this.nums[e];
},
playLineNum: function(e) {
this.nums = e;
this.schedule(this.lightNum, 1);
},
stop: function() {
this.unschedule(this.lightNum);
for (var e = 0; e < 9; e++) ;
},
showLine: function(e, t) {
this.lines[e].active = !0;
this.lines[e].getChildByName("text").getComponent(cc.Label).string = t + "";
this.scheduleOnce(function() {
this.lines[e].active = !1;
}, .3);
},
start: function() {
this.node.getChildByName("left"), this.node.getChildByName("right");
for (var e = 0; e < 9; e++) this.lines[e] = this.node.getChildByName("line" + (e + 1));
}
});
cc._RF.pop();
}, {} ],
Captain_logic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4d40a1KT0JGG4k5mI5mowy5", "Captain_logic");
t.exports = {
tab_data: null,
i_win: 0,
setData: function(e, t) {
this.tab_data = e;
this.i_win = t;
},
getValues: function(e) {
return this.tab_data[e];
}
};
cc._RF.pop();
}, {} ],
Captain_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "141c3DvrOFJCpgA4sqRNq6j", "Captain_pan2_control");
var n = [];
n[0] = "0";
n[1] = "1";
n[2] = "2";
n[3] = "3";
n[4] = "4";
n[5] = "5";
n[6] = "6";
n[7] = "7";
n[8] = "8";
n[9] = "9";
n[10] = "10";
n[11] = "11";
n[12] = "12";
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
sp_anim: {
default: null,
type: cc.Node
},
iconsVague: {
default: [],
type: cc.SpriteFrame
},
icons: {
default: [],
type: cc.SpriteFrame
},
icons_mofu: {
default: [],
type: cc.SpriteFrame
},
b_stop: {
default: !1
},
b_stoped: {
default: !1
},
i_icons: {
default: []
},
i_rollHeight: 153,
iconItem: cc.Prefab
},
onLoad: function() {},
playAnim: function(e) {
var t = this.node.getChildByName("anim" + e);
if (255 != t.opacity) {
t.getComponent(cc.Sprite).spriteFrame = null;
t.opacity = 255;
var i = t.getChildByName("skeletonNode").getComponent(sp.Skeleton);
i.loop = !1;
var a = GetServerRoom().GetGameServer().wKindID + "/AGameSpine/" + n[this.i_icons[e]];
cc.loader.loadRes(a, sp.SkeletonData, function(e, t) {
i.skeletonData = t;
i.animation = "animation";
});
}
},
stopAnim: function(e) {
var t = this.node.getChildByName("anim" + e);
t && (t.opacity = 0);
var i = t.getChildByName("skeletonNode").getComponent(sp.Skeleton);
i.skeletonData = null;
i.animation = null;
},
setIcons: function(e, t) {
this.i_icons = e;
this.setIcons2node(this.sp_mid, this.i_icons[0], this.i_icons[1], this.i_icons[2], this.i_icons[3]);
if (!this.isAddroll && (t || 0 == t)) {
this.isAddroll = !0;
this.createvVirtualRoll(t);
}
},
createvVirtualRoll: function(e) {
for (var t = 18 + 6 * e, i = 0; i < t; i++) {
var n = cc.instantiate(this.iconItem);
n.active = !0;
n.name = "i" + i;
n.setPosition(0, 253 * i - 253);
this.sp_top.addChild(n);
}
},
setGray: function(e, t, i) {
e ? this.sp_mid.getChildByName("i" + i) && (this.sp_mid.getChildByName("i" + i).color = new cc.Color(128, 128, 128)) : this.sp_mid.getChildByName("i" + i) && (this.sp_mid.getChildByName("i" + i).color = new cc.Color(255, 255, 255));
},
randomIcons: function(e) {
for (var t = 0; t < e.children.length; t++) {
var i = Math.floor(12 * Math.random()), n = e.getChildByName("i" + t);
if (n) {
n.getComponent("Captain_Item") && n.getComponent("Captain_Item").setData(this.iconsVague[i]);
n.slotId = 0;
e.getChildByName("iTop") && (e.getChildByName("iTop").active = !1);
}
}
},
setIcons2node: function(e, t, i, n) {
e.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.icons[t];
e.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.icons[i];
e.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.icons[n];
e.getChildByName("i0").slotId = t + 1;
e.getChildByName("i1").slotId = i + 1;
e.getChildByName("i2").slotId = n + 1;
if (e.getChildByName("iTop")) {
var a = Math.floor(12 * Math.random());
e.getChildByName("iTop").getComponent(cc.Sprite).spriteFrame = this.icons[a];
e.getChildByName("iTop").active = !0;
}
},
showSpecial: function() {
for (var e = this.sp_mid, t = 0; t < 3; t++) if (12 === e.getChildByName("i" + t).slotId || 11 === e.getChildByName("i" + t).slotId) {
this.setGray(!1, !0, t);
this.playAnim(t);
}
},
roll: function(e, t, i) {
var n = this;
this.i_icons = t;
var a = 5 + 2 * i;
this.sp_top.stopAllActions();
this.sp_top.y = 786;
this.sp_mid.stopAllActions();
this.sp_mid.y = 0;
this.randomIcons(this.sp_top);
this.randomIcons(this.sp_mid);
var o = cc.sequence(cc.moveBy(e, cc.v2(0, -n.i_rollHeight)), cc.callFunc(function(e) {})), s = cc.sequence(cc.moveBy(e * a, cc.v2(0, -n.i_rollHeight * a)), cc.callFunc(function(t) {
n.sp_mid.y = 800;
n.setIcons2node(n.sp_mid, n.i_icons[0], n.i_icons[1], n.i_icons[2], n.i_icons[3]);
var i = cc.sequence(cc.moveBy(e, cc.v2(0, -n.i_rollHeight)), cc.callFunc(function(e) {
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(e) {
n.sp_mid.setPosition(0, 0);
}));
n.sp_mid.stopAllActions();
n.sp_mid.runAction(i);
var a = cc.sequence(cc.moveBy(e, cc.v2(0, -n.i_rollHeight)), cc.callFunc(function(e) {
n.sp_top.y = 768;
}));
n.sp_top.runAction(a);
}));
this.sp_top.runAction(s);
this.sp_mid.runAction(o);
},
quickstop: function(e) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.setIcons(e);
},
quickstopItem: function(e, t) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.i_icons[e] = t;
this.sp_mid.getChildByName("i" + e).getComponent(cc.Sprite).spriteFrame = this.icons[t];
},
stopRoll: function(e) {
this.i_icons = e;
},
getPos: function(e) {
for (var t = [], i = 0; i < 4; i++) {
var n = this.sp_mid.getChildByName("i" + i).convertToWorldSpaceAR(cc.v2(0, 0)), a = e.convertToNodeSpaceAR(n);
t.push(a);
}
return t;
}
});
cc._RF.pop();
}, {} ],
Captain_rollNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fb83e6gR31Jb5wZqVEW/pkV", "Captain_rollNum");
cc.Class({
extends: cc.Component,
properties: {
nodeNum0: cc.Node,
nodeNum1: cc.Node
},
onLoad: function() {
this.startNum = 0;
},
setData: function(e) {
this.node.active = !0;
this.nodeNum0.getComponent(cc.Label).string = e;
this.nodeNum1.getComponent(cc.Label).string = e;
},
startRoll: function(e, t, i) {
var n = this;
this.nodeNum0.getComponent(cc.Label).string, this.nodeNum1.getComponent(cc.Label).string;
if (i != this.nodeNum0.getComponent(cc.Label).string && i != this.nodeNum1.getComponent(cc.Label).string) {
this.index = e;
this.startNum = t;
this.endNum = i;
this.stop = !1;
this.b_stoped = !1;
this.nodeNum0.getComponent(cc.Label).string = this.startNum++;
this.nodeNum1.getComponent(cc.Label).string = this.startNum++;
this.n_act1 = 1;
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act1++;
if (n.n_act1 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.n_act2 = 0;
var o = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act2++;
if (n.n_act2 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.nodeNum0.runAction(cc.repeatForever(a));
this.nodeNum1.runAction(cc.repeatForever(o));
}
}
});
cc._RF.pop();
}, {} ],
Captain_rule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ff687HldbdOuLLVMwJUwBZ0", "Captain_rule");
cc.Class({
extends: cc.Component,
properties: {
playNode1: cc.Node,
playNode2: cc.Node,
pageView: cc.PageView,
checkNode: [ cc.Node ]
},
onLoad: function() {},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"toggle1" == i ? this.pageView.scrollToPage(0) : "toggle2" == i ? this.pageView.scrollToPage(1) : "btnClose" == i && this.node.destroy();
},
OnPageEvent: function(e, t) {
for (var i = this.pageView.getCurrentPageIndex(), n = 0; n < this.checkNode.length; n++) this.checkNode[n].getComponent(cc.Toggle).isChecked = !1;
this.checkNode[i].getComponent(cc.Toggle).isChecked = !0;
}
});
cc._RF.pop();
}, {} ],
Captain_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6f0f1uwnQ5IVqp7MfiaCio7", "Captain_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e) {
this.i_num = parseFloat(e);
this.i_cur_num = 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
this.i_step = this.i_num / 100;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
}
}
});
cc._RF.pop();
}, {} ],
Color_rollNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ef41114MWFPC6w712OUdDa4", "Color_rollNum");
cc.Class({
extends: cc.Component,
properties: {
nodeNum0: cc.Node,
nodeNum1: cc.Node
},
onLoad: function() {
this.startNum = 0;
},
setData: function(e) {
this.nodeNum0.getComponent(cc.Label).string = e;
this.nodeNum1.getComponent(cc.Label).string = e;
},
startRoll: function(e, t, i) {
var n = this;
this.nodeNum0.getComponent(cc.Label).string, this.nodeNum1.getComponent(cc.Label).string;
if (i != this.nodeNum0.getComponent(cc.Label).string && i != this.nodeNum1.getComponent(cc.Label).string) {
this.index = e;
this.startNum = t;
this.endNum = i;
this.stop = !1;
this.b_stoped = !1;
this.nodeNum0.getComponent(cc.Label).string = this.startNum++;
this.nodeNum1.getComponent(cc.Label).string = this.startNum++;
this.n_act1 = 1;
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act1++;
if (n.n_act1 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.n_act2 = 0;
var o = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act2++;
if (n.n_act2 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.nodeNum0.runAction(cc.repeatForever(a));
this.nodeNum1.runAction(cc.repeatForever(o));
}
}
});
cc._RF.pop();
}, {} ],
CrearGuid: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cae276NcwRFoJstFCHMNEvV", "CrearGuid");
window.ObjGUID = cc.Class({
statics: {
instances: null
},
ctor: function() {
this.date = 0;
this.newGUID = null;
},
OnGetGUID: function() {
this.date = new Date();
var e = MF_LoadOnMainChannelID("H5_GUID");
if (null == e || null == e || "" == e) {
e = this.OnNewGUID();
MF_SaveOnMainChannelID("H5_GUID", e);
}
return e;
},
OnNewGUID: function() {
this.date = new Date();
for (var e = "", t = this.hexadecimal(this.getGUIDDate(), 16), i = this.hexadecimal(this.getGUIDTime(), 16), n = 0; n < 9; n++) e += Math.floor(16 * Math.random()).toString(16);
e += t;
e += i;
for (;e.length < 32; ) e += Math.floor(16 * Math.random()).toString(16);
return this.formatGUID(e);
},
getGUIDDate: function() {
return this.date.getFullYear() + this.addZero(this.date.getMonth() + 1) + this.addZero(this.date.getDay());
},
getGUIDTime: function() {
return this.addZero(this.date.getHours()) + this.addZero(this.date.getMinutes()) + this.addZero(this.date.getSeconds()) + this.addZero(parseInt(this.date.getMilliseconds() / 10));
},
addZero: function(e) {
return "NaN" != Number(e).toString() && e >= 0 && e < 10 ? "0" + Math.floor(e) : e.toString();
},
hexadecimal: function(e, t, i) {
return null != i ? parseInt(e.toString(), i).toString(t) : parseInt(e.toString()).toString(t);
},
formatGUID: function(e) {
return e.slice(0, 8) + e.slice(8, 12) + e.slice(12, 16) + e.slice(16, 20) + e.slice(20);
}
});
window.GetObjGuid = function() {
ObjGUID.instance || (ObjGUID.instance = new ObjGUID());
cc.assert(ObjGUID.instance, "ObjGUID.instance is null");
return ObjGUID.instance;
};
cc._RF.pop();
}, {} ],
FQZS_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dc8d6mPuVpCRK1jobQvB0Nt", "FQZS_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllNode();
}));
this.node.runAction(t);
},
StartCompareAction: function(e, t) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetStartFontAction();
if (null != i.callbackIng) {
i.callbackIng(i);
i.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameEndAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameBeginAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.callbackFinish = e;
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetStartGameAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
SetStartGameAction: function() {
this.nodeFont4.active = !0;
this.nodeFont5.active = !0;
this.nodeFont4.scaleX = 1;
this.nodeFont4.scaleY = 0;
this.nodeFont5.scaleX = 1;
this.nodeFont5.scaleY = 0;
var e = this;
this.nodeFont4.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont5.runAction(cc.scaleTo(.3, 1, 1));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.3, 1, 1));
}
});
cc._RF.pop();
}, {} ],
FQZS_NewApplyItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "517beUmCapEYrIhm4nJAtvm", "FQZS_NewApplyItem");
cc.Class({
extends: e("jsFrameUser"),
properties: {
lblZBJin: cc.Label
},
bindItemData: function(e) {
this.itemData = e;
var t = this.getUserItem(e);
this.SetUserDataItem(t);
this.setZBJin(e.lZBJin);
},
getUserItem: function(e) {
var t = this.jsUserItem;
null == t && (t = window.PlayerItem.create());
if (null != e.szNickName) {
t.SetNickName(e.szNickName);
t.SetNickNameUtf8(window.ToUtf8(e.szNickName));
}
null != e.cbMemberOrder && t.SetMemberOrder(e.cbMemberOrder);
null != e.cbFaceID && t.SetFaceID(e.cbFaceID);
null != e.cbFrameID && t.SetFaceFrameID(e.cbFrameID);
null != e.ip && (t.pGlobalData.ip = e.ip);
null != e.lUserScore && t.SetUserScore(e.lUserScore);
null != e.dwGameID && t.SetGameID(e.dwGameID);
return t;
},
setZBJin: function(e) {
null != this.lblZBJin && (this.lblZBJin.string = window.OnScoreToString(e));
}
});
cc._RF.pop();
}, {
jsFrameUser: "jsFrameUser"
} ],
FQZS_NewApplyList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5e5f27ikEVEeL4xwfNa6Qti", "FQZS_NewApplyList");
var n = e("FQZS_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
cpGameEngine: e("GameFrameEngine"),
cpGameView: e("GameFrameView"),
ndBtnApply: cc.Node,
ndBtnCancelApply: cc.Node,
lblRankInfo: cc.Label
},
ctor: function() {
this.cpApplyView = null;
this.resetApplyList(!1);
},
onLoad: function() {
this.cpGameEngine.cpApplyList = this;
},
onAlertApplyView: function(e, t) {
OnBtnClickAgainEvent(e.target);
if (null != this.cpApplyView) return !1;
var i = this, a = t || "";
"" == a && (a = n.KIND_ID + "/APrefab/FQZS_NewApplyView");
SceneManager_PushBack(window.SceneType.Prefab_Path, a, function(e, t) {
if (!e) {
t.zIndex = 3;
var n = t.getComponent("FQZS_NewApplyView");
i.cpApplyView = n;
n.bindData(i);
}
});
return !0;
},
onCancelBanker: function(e, t) {
OnBtnClickAgainEvent(e.target);
this.cancelBanker(function(e, t) {
e || null == t && "" == t || ManagerHelp_SetSystemLabel(t);
});
},
resetApplyList: function(e) {
this.arrApplyList = this.arrApplyList || [];
this.arrApplyList.splice(0, this.arrApplyList.length);
this.bMeApplied = !1;
this.lblRankInfo.string = "";
e && this.updateApplyView();
},
removeApplyList: function(e, t) {
for (var i = this.bMeApplied, n = this.arrApplyList, a = n.length, o = PlayerManager.GetMeUserItem().GetChairID(), s = -1, r = a - 1; r >= 0; --r) {
var c = n[r];
o == c.wApplyChairID && (s = r);
if (e == c.wApplyChairID) {
e == o && (this.bMeApplied = !1);
n.splice(r, 1);
t && this.updateApplyView();
}
}
this.updateRankInfo(s, n.length);
return i != this.bMeApplied;
},
getApplyItem: function(e) {
for (var t = this.arrApplyList, i = t.length - 1; i >= 0; --i) {
var n = t[i];
if (e == n.wApplyChairID) return n;
}
return null;
},
getApplyCount: function() {
return this.arrApplyList.length;
},
addApplyList: function(e, t, i) {
var n = this.bMeApplied, a = PlayerManager.GetMeUserItem().GetChairID();
e == a && (this.bMeApplied = !0);
for (var o = this.arrApplyList, s = o.length, r = !1, c = -1, l = s - 1; l >= 0; --l) {
var h = o[l];
a == e && (c = l);
if (!r && h.wApplyChairID == e) {
o[l] = t;
i && this.updateApplyView();
r = !0;
}
}
c < 0 && !r && this.bMeApplied && (c = s);
o.push(t);
n != this.bMeApplied && this.updateRankInfo(c, o.length);
i && this.updateApplyView();
return n != this.bMeApplied;
},
updateApplyView: function() {
null != this.cpApplyView && this.cpApplyView.updateApplyView();
},
updateRankInfo: function(e, t) {},
showApplyBanker: function(e) {
var t = this.cpGameEngine;
this.cpGameView.cpBankerUser.getBankerUser() == t.GetMeChairID() ? e = !1 : null == e && (e = !this.bMeApplied);
this.ndBtnApply.active = !1;
this.ndBtnCancelApply.active = !1;
},
cancelBanker: function(e) {
var t = this.cpGameEngine;
this.cpGameView, t.GetGameStatus(), t.GetMeChairID();
t.SendGameData(n.SUB_C_CANCEL_BANKER, 0, 0);
return !0;
}
});
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game",
GameFrameEngine: "GameFrameEngine",
GameFrameView: "GameFrameView"
} ],
FQZS_NewApplyView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b389in78pF1IkCvODi0Kkg", "FQZS_NewApplyView");
var n = e("FQZS_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
ndContent: cc.Node,
scrApplyList: cc.ScrollView,
pfApplyItem: cc.Prefab,
ndApplyBanker: cc.Node,
ndCancelBanker: cc.Node,
sldZBJin: cc.Slider,
lblZBJin: cc.Label,
lblZBJinMark: cc.Label,
btnZBJinSub: cc.Button,
btnZBJinAdd: cc.Button,
Bprogress: cc.ProgressBar
},
start: function() {
this.changeZBJinProgress(0);
window.SceneManager_AlertShow(this.ndContent);
},
onClose: function(e, t) {
OnBtnClickAgainEvent(e.target);
this.close();
},
onAddZBJin: function(e, t) {
this.changeZBJinProgress(.1);
},
onSubZBJin: function(e, t) {
this.changeZBJinProgress(-.1);
},
onSliderZBJin: function(e, t) {
this.changeZBJinProgress(0);
},
onApplyBanker: function(e, t) {
if (this.disableRepeatClick(e.target, 1)) {
var i = this.cpApplyList.cpGameEngine, a = i.lApplyBankerCondition, o = PlayerManager.GetMeUserItem();
if (o.GetUserScore() < a) {
var s = "金币不足" + OnIntScore(a) + ",不可以当庄!";
ManagerHelp_SetSystemLabel(s);
this.updateButtonStatus();
} else {
var r = GameFrameView.instances.cpBankerUser;
if (null != r) {
if (r.getBankerUser() == o.GetChairID()) {
ManagerHelp_SetSystemLabel("当前您已是庄家！");
return;
}
}
var c = new n.CMD_C_ApplyBanker();
c.lApplyBankerScore = this.getZBJin();
i.SendGameStruct(n.SUB_C_APPLY_BANKER, c);
}
}
},
onCancelBanker: function(e, t) {
if (this.disableRepeatClick(e.target, 1)) {
var i = this;
this.cpApplyList.cancelBanker(function(e, t) {
if (!e) {
null == t && "" == t || ManagerHelp_SetSystemLabel(t);
i.updateButtonStatus();
}
});
}
},
bindData: function(e) {
this.cpApplyList = e;
var t = e.cpGameEngine.lApplyBankerCondition, i = Math.floor(t / this.getMultiple()) + "";
this.lblZBJinMark.string = "上庄资金小于" + i + "将自动下庄";
this.lblZBJin.string = i;
this.updateSliderUI();
this.updateApplyView();
},
updateApplyView: function() {
this.updateApplyList();
this.updateButtonStatus();
this.updateSliderUI();
},
updateSliderUI: function() {
var e = this.cpApplyList.cpGameEngine.lApplyBankerCondition;
if (null != e) {
if (this.getMeScore() < e) {
var t = Math.floor(e / this.getMultiple()) + "";
this.lblZBJin.string = t;
this.sldZBJin.interactable = !1;
this.btnZBJinSub.interactable = !1;
this.btnZBJinAdd.interactable = !1;
} else {
this.sldZBJin.interactable = !0;
this.btnZBJinSub.interactable = !0;
this.btnZBJinAdd.interactable = !0;
}
}
},
getApplyList: function() {
return this.cpApplyList.arrApplyList;
},
updateApplyList: function() {
var e = this.getApplyList(), t = this.scrApplyList.content;
t.removeAllChildren();
var i = e.length, n = this.pfApplyItem, a = n.data.getContentSize(), o = t.getContentSize().width / a.width;
a.width *= o;
a.height *= o;
for (var s = 0; s < i; ++s) {
var r = cc.instantiate(n);
r.setContentSize(a);
r.setScale(o);
t.addChild(r);
this.bindApplyItem(r, e[s]);
}
var c = t.getComponent(cc.Layout);
null != c && c.updateLayout();
},
bindApplyItem: function(e, t) {
var i = e.getComponent("FQZS_NewApplyItem"), n = {};
n.szNickName = t.szNickName;
n.lZBJin = t.lBankerUserScore;
i.bindItemData(n);
},
updateApplyItem: function(e, t) {
var i = this.getApplyList(), n = this.scrApplyList.content.children;
t > n.length && (t = n.length);
for (var a = e; a < t; ++a) {
var o = n[a];
if (null != o) {
var s = i[a];
null != s && this.bindApplyItem(o, s);
}
}
},
updateButtonStatus: function(e) {
null == e && (e = this.cpApplyList.bMeApplied);
if (e) {
null != this.ndApplyBanker && (this.ndApplyBanker.active = !1);
null != this.ndCancelBanker && (this.ndCancelBanker.active = !0);
} else {
null != this.ndApplyBanker && (this.ndApplyBanker.active = !0);
null != this.ndCancelBanker && (this.ndCancelBanker.active = !1);
}
},
close: function() {
if (cc.isValid(this.node) && cc.isValid(this.node.parent)) {
null != this.cpApplyList && (this.cpApplyList.cpApplyView = null);
this.node.removeFromParent();
}
},
changeZBJinProgress: function(e) {
var t = this.sldZBJin, i = t.progress + e;
i - 1 > 1e-6 ? i = 1 : i < 1e-6 && (i = 0);
t.progress = i;
this.Bprogress.progress = i;
var n = this.getZBJin();
this.lblZBJin.string = window.OnScoreToString(n) + "";
},
getZBJin: function() {
var e = GameFrameEngine.instances, t = this.sldZBJin.progress, i = e.lApplyBankerCondition, n = this.getMeScore();
n < i && (n = i);
return Math.floor(i + (n - i) * t);
},
getMeScore: function() {
var e = GameFrameView.instances.cpMeUser;
return (null != e && e.jsUserItem ? e.jsUserItem : PlayerManager.GetMeUserItem()).GetUserScore();
},
setZBJin: function(e) {
null != this.lblZBJin && (this.lblZBJin.string = e + "");
},
disableRepeatClick: function(e, t) {
var i = e.getComponent(cc.Button);
if (!i.interactable) return !1;
i.interactable = !1;
null == t && (t = .3);
i.scheduleOnce(function() {
i.interactable = !0;
}, t);
return !0;
},
getMultiple: function() {
var e = GetProject().lBaseScore;
return null == e ? 1 : e;
}
});
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game"
} ],
FQZS_NewBankerUser: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3c253c7b8hH1JxOQlhS1OXM", "FQZS_NewBankerUser");
e("FQZS_NewCMD_Game");
var n = 0, a = 1;
cc.Class({
extends: e("jsFrameUser"),
properties: {
cpGameEngine: e("GameFrameEngine"),
cpGameView: e("GameFrameView"),
lblZBJin: cc.Label,
lblLianTip: cc.Label,
ndRealBanker: cc.Node,
ndNoneBanker: cc.Node
},
onLoad: function() {
this._super();
this.nBankerTime = 0;
this.lZBJin = 0;
this.cpGameView.cpBankerUser = this;
},
initBankerTime: function(e, t) {
this.nBankerTime = e;
var i = "连庄:" + e;
if (null != t) {
this.nMaxBankerTime = t;
i += "/" + t;
}
this.lblLianTip.string = i;
},
setBankerTime: function(e) {
this.nBankerTime = e;
var t = "连庄:" + e;
null != this.nMaxBankerTime && (t += "/" + this.nMaxBankerTime);
this.lblLianTip.string = t;
},
showSystemBanker: function(e) {
this.ndRealBanker.active = !e;
this.ndSystemBanker.active = e;
},
setZBJin: function(e, t) {
null == t && (t = !0);
this.lblZBJin.string = window.OnScoreToString(e);
t && (this.lZBJin = e);
},
changeZBJin: function(e, t) {
var i = this.lZBJin + e;
this.lblZBJin.string = window.OnScoreToString(i);
!0 === t && (this.lZBJin = i);
},
getZBJin: function() {
return this.lZBJin;
},
setBankerItemOnSceneFree: function(e) {
var t = e.wBankerUser;
this.wBankerUser = t;
this.initBankerTime(e.wBankerTime, e.wMaxBankerTime);
if (INVALID_CHAIR != t) {
this.showRealBanker();
var i = this.getValidBankerItem(t);
i.SetChairID(t);
i.SetNickName(e.szNickName);
i.SetNickNameUtf8(window.ToUtf8(e.szNickName));
i.SetUserScore(e.lBankerJinBi);
i.pGlobalData.dwGameID = e.dwGameID;
i.pGlobalData.szExternFaceUrl = window.ToUtf8(e.szExternFaceUrl);
this.setZBJin(e.lBankerScore);
this.SetUserDataItem(i);
} else this.showNoneBanker();
},
setBankerItemOnScenePlay: function(e) {
var t = e.wBankerUser;
this.wBankerUser = t;
if (INVALID_CHAIR != t) {
this.showRealBanker();
var i = this.getValidBankerItem(t);
i.SetChairID(e.wBankerUser);
i.SetNickName(e.szNickName);
i.SetNickNameUtf8(window.ToUtf8(e.szNickName));
i.SetUserScore(e.lBankerJinBi);
i.pGlobalData.dwGameID = e.dwGameID;
i.pGlobalData.szExternFaceUrl = window.ToUtf8(e.szExternFaceUrl);
this.SetUserDataItem(i);
this.setZBJin(e.lBankerScore);
} else this.showNoneBanker();
},
setBankerItemOnGameStart: function(e) {
var t = e.wBankerUser;
this.wBankerUser = t;
if (INVALID_CHAIR != t) {
this.showRealBanker();
var i = this.getValidBankerItem(t);
i.SetChairID(t);
i.SetUserScore(e.lBankerJinBi);
this.SetUserDataItem(i);
this.setZBJin(e.lBankerScore);
} else this.showNoneBanker();
},
setBankerItemOnChangeBanker: function(e, t) {
var i = e.wBankerUser;
this.wBankerUser = i;
if (INVALID_CHAIR != i) {
this.showRealBanker();
var n = this.getValidBankerItem(i);
if (null != t) {
var a = window.ToUtf8(t.szNickName);
n.SetChairID(i);
n.SetFaceID(t.cbFaceID);
n.SetFaceFrameID(t.cbFrameID);
n.SetMemberOrder(t.cbMemberOrder);
n.SetNickName(t.szNickName);
n.SetNickNameUtf8(a);
ManagerHelp_SetSystemLabel(a + "上庄了!");
}
n.SetChairID(i);
n.SetUserScore(e.lBankerJinBi);
n.SetNickName(e.szNickName);
n.SetNickNameUtf8(window.ToUtf8(e.szNickName));
n.pGlobalData.dwGameID = e.dwGameID;
n.pGlobalData.szExternFaceUrl = window.ToUtf8(e.szExternFaceUrl);
this.SetUserDataItem(n);
this.setZBJin(e.lBankerScore);
this.setBankerTime(0);
} else {
this.showNoneBanker();
ManagerHelp_SetSystemLabel("当前无人坐庄");
}
},
setBankerItemOnGameEnd: function(e) {
this.setBankerTime(e.iBankerTime);
},
setBankerItemOnEventUserScore: function(e) {
var t = this.getBankerUser();
if (INVALID_CHAIR != t) {
var i = e.GetChairID();
if (t == i) {
var n = this.getValidBankerItem(i);
n.SetUserScore(e.GetUserScore());
this.SetUserDataItem(n);
}
}
},
setBankerItem: function(e) {
if (null != e) {
var t = e.GetChairID();
if (INVALID_CHAIR != t) {
this.showRealBanker();
var i = this.getValidBankerItem(t);
this.cpGameEngine.copyUserItem(i, e);
this.SetUserDataItem(i);
} else this.showNoneBanker();
}
},
getValidBankerItem: function(e) {
var t = this.jsUserItem, i = this.cpGameEngine;
null == t && (t = window.PlayerItem.create());
if (INVALID_CHAIR == e) return t;
var n = i.GetClientUserItem(e);
null != n && i.copyUserItem(t, n);
return t;
},
showNoneBanker: function() {
this.showUser(a);
},
showRealBanker: function() {
this.showUser(n);
},
showUser: function(e) {
if (n == e) {
this.ndRealBanker.active = !0;
this.ndNoneBanker.active = !1;
} else if (a == e) {
this.ndRealBanker.active = !1;
this.ndNoneBanker.active = !0;
}
},
getBankerUser: function() {
return this.wBankerUser;
},
GetGameId: function() {
var e = this.jsUserItem;
if (null != e) {
var t;
if (0 != (t = e.GetGameID())) return t;
}
return this._super();
}
});
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game",
GameFrameEngine: "GameFrameEngine",
GameFrameView: "GameFrameView",
jsFrameUser: "jsFrameUser"
} ],
FQZS_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "28729px1ylCDIpfg9q748de", "FQZS_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.KIND_ID = 137;
t.exports.GAME_PLAYER = n;
t.exports.GAME_NAME = "飞禽走兽";
var a = GAME_STATUS_PLAY, o = GAME_STATUS_PLAY + 1, s = GAME_STATUS_PLAY + 2;
t.exports.GS_PLACE_JETTON = a;
t.exports.GS_GAME_END = o;
t.exports.GS_MOVECARD_END = s;
t.exports.UpdateScore = 100;
t.exports.OVER_USERSCORE_COUNT = 5;
t.exports.TIME_FREE = 5;
t.exports.TIME_PLACE_JETTON = 20;
t.exports.TIME_GAME_END = 20;
t.exports.TURAN_TABLE_MAX = 28;
t.exports.CAR_BENCHI_40 = 0;
t.exports.CAR_BENCHI_5 = 1;
t.exports.CAR_BAOMA_30 = 2;
t.exports.CAR_BAOMA_5 = 3;
t.exports.CAR_AODI_20 = 4;
t.exports.CAR_AODI_5 = 5;
t.exports.CAR_DAZHONG_10 = 6;
t.exports.CAR_DAZHONG_5 = 7;
t.exports.AREA_COUNT = 11;
t.exports.JETTON_NUM = 5;
t.exports.ID_FEI_QIN = 1;
t.exports.ID_SHA_YU = 2;
t.exports.ID_ZOU_SHOU = 3;
t.exports.ID_YAN_ZI = 4;
t.exports.ID_GE_ZI = 5;
t.exports.ID_KONG_QUE = 6;
t.exports.ID_LAO_YING = 7;
t.exports.ID_SHI_ZI = 8;
t.exports.ID_XIONG_MAO = 9;
t.exports.ID_HOU_ZI = 10;
t.exports.ID_TU_ZI = 11;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.S_CR_FAILURE = 0;
t.exports.S_CR_UPDATE_SUCCES = 1;
t.exports.S_CR_SET_SUCCESS = 2;
t.exports.S_CR_CANCEL_SUCCESS = 3;
var r = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbAnimal = 0;
}
});
t.exports.tagServerGameRecord = r;
t.exports.SUB_C_PLACE_JETTON = 1;
cc._RF.pop();
}, {} ],
FQZS_NewControl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "09b02xFFgND3KOoAehcqZJK", "FQZS_NewControl");
cc.Class({
extends: cc.Component,
properties: {
editJuCount: cc.Node,
toggleCars: [ cc.Node ],
labelTrueUserZhu: [ cc.Label ],
lookupUserName: cc.Node,
lookupUserZhu: [ cc.Label ],
editKuCun: cc.Node,
editSuaijian: cc.Node,
UserScoreListLayout: cc.Node,
UserItem: cc.Prefab
},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
},
getControlIndex: function() {
for (var e = -1, t = 0; t < this.toggleCars.length; t++) {
if (1 == this.toggleCars[t].getComponent(cc.Toggle).isChecked) {
e = t;
break;
}
}
return e;
},
getControlJuCount: function() {
var e = this.editJuCount.getComponent(cc.EditBox).string;
return IsNumber(e, e.length) ? parseInt(e) : -1;
},
getUserName: function() {
var e = this.lookupUserName.getComponent(cc.EditBox).string;
if ("" != e.length) return e;
},
getStorage: function() {
var e = this.editKuCun.getComponent(cc.EditBox).string;
return IsNumber(e, e.length) ? parseInt(e) : -1;
},
getStorageDeduct: function() {
var e = this.editSuaijian.getComponent(cc.EditBox).string;
return IsNumber(e, e.length) ? parseInt(e) : -1;
},
setTrueUserScore: function(e) {
for (var t = 0; t < this.labelTrueUserZhu.length; t++) {
this.labelTrueUserZhu[t].getComponent(cc.Label).string = e[t + 1];
}
},
setUserScore: function(e) {
for (var t = 0; t < this.lookupUserZhu.length; t++) {
this.lookupUserZhu[t].getComponent(cc.Label).string = e[t + 1];
}
},
setStorage: function(e, t) {
var i = this.editKuCun.getComponent(cc.EditBox), n = this.editSuaijian.getComponent(cc.EditBox);
i.string = e;
n.string = t;
},
UpdateUserScoreList: function() {
this.UserScoreListLayout.removeAllChildren();
for (var e = 0; e < this.jsGameEngine.pUserScore.length; e++) {
var t = this.jsGameEngine.pUserScore[e], i = this.jsGameEngine.GetClientUserItem(t.wChairID).GetNickNameUtf8(), n = cc.instantiate(this.UserItem);
n.getChildByName("name").getComponent(cc.Label).string = i;
n.getChildByName("ferrari").getComponent(cc.Label).string = t.lUserJettonScore[0];
n.getChildByName("lobrg").getComponent(cc.Label).string = t.lUserJettonScore[1];
n.getChildByName("maserati").getComponent(cc.Label).string = t.lUserJettonScore[2];
n.getChildByName("porsche").getComponent(cc.Label).string = t.lUserJettonScore[3];
n.getChildByName("benz").getComponent(cc.Label).string = t.lUserJettonScore[4];
n.getChildByName("bmw").getComponent(cc.Label).string = t.lUserJettonScore[5];
n.getChildByName("nissan").getComponent(cc.Label).string = t.lUserJettonScore[6];
n.getChildByName("thepublic").getComponent(cc.Label).string = t.lUserJettonScore[7];
n.getChildByName("sum").getComponent(cc.Label).string = t.lSumScore;
this.UserScoreListLayout.addChild(n);
}
},
OnButtonClick: null,
OnButtonEvent: function(e) {
var t = e.target;
this.OnButtonClick && this.OnButtonClick(t);
}
});
cc._RF.pop();
}, {} ],
FQZS_NewEndLayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "508d2uw+ydEYYc7K7CAhGwO", "FQZS_NewEndLayer");
cc.Class({
extends: cc.Component,
properties: {
nodespine: [ cc.Node ]
},
SetSpineObjcet: function(e, t) {
var i = this;
if (2 != e) if (0 != e) if (3 != e) {
var n = "ts5jb", a = "137/sound/an/sound_an_";
if (8 == e) {
n += 1;
a += 3;
} else if (9 == e) {
n += 2;
a += 4;
} else if (11 == e) {
n += 3;
a += 6;
} else if (10 == e) {
n += 4;
a += 5;
} else if (4 == e) {
n += 5;
a += 10;
} else if (7 == e) {
n += 6;
a += 7;
} else if (6 == e) {
n += 7;
a += 8;
} else if (5 == e) {
n += 8;
a += 9;
}
try {
this.nodespine[0].active = !0;
this.nodespine[0].getComponent(sp.Skeleton).setAnimation(0, "start", !1);
this.nodespine[0].getComponent(sp.Skeleton).setSkin(n);
window.mfConfig.PlayAudio(a, !1, window.mfConfig.fSound);
} catch (e) {}
this.scheduleOnce(function() {
i.node.removeFromParent();
}, 2);
} else {
this.nodespine[4].active = !0;
this.nodespine[4].getComponent(sp.Skeleton).setAnimation(0, "start", !1);
this.scheduleOnce(function() {
i.node.removeFromParent();
}, 2);
} else {
this.nodespine[3].active = !0;
this.nodespine[3].getComponent(sp.Skeleton).setAnimation(0, "start", !1);
this.scheduleOnce(function() {
i.node.removeFromParent();
}, 2);
} else {
window.mfConfig.PlayAudio("137/sound/an/sound_an_11", !1, window.mfConfig.fSound);
if (t) {
this.nodespine[2].active = !0;
this.nodespine[2].getComponent(sp.Skeleton).setAnimation(0, "start", !1);
this.scheduleOnce(function() {
i.node.removeFromParent();
}, 2);
return;
}
this.nodespine[1].active = !0;
this.nodespine[1].getComponent(sp.Skeleton).setAnimation(0, "start", !1);
this.scheduleOnce(function() {
i.node.removeFromParent();
}, 2);
}
}
});
cc._RF.pop();
}, {} ],
FQZS_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b45c81Elx9HRpMs2qs4Cxc1", "FQZS_NewGameEngine");
e("FQZS_NewGameView");
var n = e("FQZS_NewCMD_Game"), a = e("FQZS_NewGameLogic").GameLogic, o = (n.AREA_COUNT, 
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
pGameLogic: cc.Node,
lSumScore: [],
lMeScore: [],
lMeLastScore: [],
lTrueUserScore: [],
pUserScore: [],
bIsSysBanker: !1,
wBankerUser: 0,
wBankerName: [],
lBankerScore: 0,
lBankerTotallScore: 0,
iBankerTime: 0,
lBetChip: [],
lApplyBankerCondition: 0,
pAudioClip: [],
lCurrenMeScore: 0,
pcurrenEndInfo: null,
TimeTip: cc.Node,
sptip: cc.Node,
PeploeNum: cc.Label,
DataTimeN: 0,
cbCurrJettonIndex: 0
},
OnButtonGameChat: function() {},
OnFrameEngineLoad: function() {
this._super();
this.pGameLogic = new a();
this.pGameViewJs = this.pGameView.getComponent("FQZS_NewGameView");
this.pGameViewJs.pGameEngineJS = this;
this.initData();
},
initData: function() {
this.pCmdActionArray = [];
this.cbCurrentAction = 0;
this.fCmdDelayTime = 0;
this.arrPreMeScore = [];
ZeroArray(this.arrPreMeScore, n.AREA_COUNT + 1);
ZeroArray(this.lSumScore, n.AREA_COUNT + 1);
ZeroArray(this.lMeScore, n.AREA_COUNT + 1);
ZeroArray(this.lMeLastScore, n.AREA_COUNT + 1);
ZeroArray(this.lTrueUserScore, n.AREA_COUNT + 1);
this.pUserScore.length;
},
ResetGameEngine: function() {},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
var e = this;
cc.loader.loadResDir("137/sound/", cc.AudioClip, function(t, i) {
if (i) {
for (var n = 0; n < i.length; n++) {
var a = getFileName(i[n]);
e.pAudioClip[a] = i[n];
}
window.mfConfig.PlayAudio("137/sound/BACK_GROUND", !0, window.mfConfig.fMusic);
} else cc.warn("137/sound/.asset" + i);
});
},
GetGameRuleDesc: function() {
return "碰碰车";
},
GetCurrentGameScore: function(e) {
var t = this.GetClientUserItem(e);
if (null != t) {
return t.GetUserScore();
}
return 0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnActionSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnActionSubGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnActionSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t, i);

case n.SUB_S_GAME_END:
return this.OnActionSubGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);
}
},
OnButtonJetton: function(e, t) {
this.cbCurrJettonIndex = t;
this.pGameViewJs.SetBtnSelectState(t);
},
GameRecord: function(e, t) {
var i = sizeof(n.tagServerGameRecord);
cc.assert(t % i == 0, "ErrorSize.GameEngine.tagServerGameRecord:" + t + ",tagServerGameRecord:" + i);
for (var a = 0; a < t / i; a++) {
for (var o = new n.tagServerGameRecord(), s = [ i ], r = 0; r < i; r++) s[r] = e[r + a * i];
o.init(s);
var c = o.cbAnimal;
c < 8 ? c += 4 : 8 == c ? c = 2 : 9 == c ? c = 0 : 10 == c && (c = 3);
this.pGameViewJs.addRecord(c);
}
this.pGameViewJs.updateRecords();
},
ReturnRecord: function(e) {
var t = 0;
e < 3 ? t = 4 : 3 == e ? t = 2 : e < 7 ? t = 11 : e < 10 ? t = 10 : 10 == e ? t = 3 : e < 14 ? t = 9 : e < 17 ? t = 8 : 17 == e ? t = 2 : e < 21 ? t = 7 : e < 24 ? t = 6 : 24 == e ? t = 0 : e < 28 && (t = 5);
return t;
},
OnGameCommdn: function(e, t) {
var i = sizeof(n.CMD_S_ControlReturns);
cc.assert(t == i, "ErrorSize.GameEngine.CMD_S_ControlReturns:" + t + ",CMD_S_ControlReturns:" + i);
var a = new n.CMD_S_ControlReturns();
a.init(e);
this.pGameViewJs.GameCommdnResult(a);
},
onUpdateStorage: function(e, t) {
if (!this.IsGameCheatUser()) return !1;
var i = sizeof(n.CMD_S_UpdateStorage);
cc.assert(t == i, "ErrorSize.GameEngine.CMD_S_UpdateStorage:" + t + ",CMD_S_UpdateStorage:" + i);
var a = new n.CMD_S_UpdateStorage();
a.init(e);
this.pGameViewJs.UpdateStorage(a.lStorage, a.lStorageDeduct);
},
onUserScoreInfo: function(e, t) {
if (!this.IsGameCheatUser()) return !1;
var i = sizeof(n.CMD_S_ScoreResult);
cc.assert(t == i, "ErrorSize.GameEngine.CMD_S_ScoreResult:" + t + ",CMD_S_ScoreResult:" + i);
var a = new n.CMD_S_ScoreResult();
a.init(e);
this.pGameViewJs.UpdateLookUpUserScore(a.lUserJettonScore);
},
OnActionSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.SetGameStatus(n.GS_MOVECARD_END);
this.pGameViewJs.resetInfo();
this.pGameViewJs.CountDown(i.TimeLeave);
},
OnActionSubGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e), a = this.pGameViewJs;
this.SetGameStatus(n.GS_PLACE_JETTON);
a.resetInfo();
a.CountDown(i.TimeLeave);
this.pGameViewJs.ChangeJettonState(!1);
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("137/sound/START_W", !1, window.mfConfig.fSound);
a.setXuyaEnabled(!0);
a.cleanAllChip();
a.showDetailBet(null, null);
},
OnActionSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
var n = i.ChairID, a = this.GetMeChairID(), o = i.BetScore, s = i.AreaIndex;
this.pGameViewJs.lbzxzje += o;
this.pGameViewJs.strzxzje.string = parseInt(this.pGameViewJs.lbzxzje / 1e3);
if (a == n) {
this.lMeScore[s - 1] += o;
this.lCurrenMeScore -= o;
this.pGameViewJs.LabelMeScore.getComponent(cc.Label).string = OnFloatScore(this.lCurrenMeScore, !0);
}
this.lSumScore[s - 1] += i.BetScore;
this.pGameViewJs.resetCar();
this.pGameViewJs.ChangeJettonState(!1);
this.pGameViewJs.showDetailBet(this.lSumScore, this.lMeScore);
this.pGameViewJs.showMeBetInfo(this.lMeScore);
this.pGameViewJs.PlaceJettonAction(n, o, s - 1);
} else {
var r = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(r);
}
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var n = t.UsersBetList[i];
if (this.GetMeChairID() != n.ChairID) {
this.lSumScore[n.AreaIndex - 1] += n.BetScore;
this.pGameViewJs.lbzxzje += n.BetScore;
this.pGameViewJs.PlaceJettonAction(n.ChairID, n.BetScore, n.AreaIndex - 1);
}
}
this.pGameViewJs.strzxzje.string = parseInt(this.pGameViewJs.lbzxzje / 1e3);
this.pGameViewJs.showDetailBet(this.lSumScore, this.lMeScore);
this.pGameViewJs.showMeBetInfo(this.lMeScore);
return !0;
},
OnActionSubGameEnd: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
console.log(t, "pActionObject:");
var i = this, a = this.pGameViewJs;
this.pcurrenEndInfo = t;
var o = PlayerManager.GetMeUserItem();
this.arrPreMeScore = CopyArray(this.lMeScore);
this.SetGameStatus(n.GS_GAME_END);
this.pGameViewJs.ChangeJettonState(!0);
a.SetBtnSelectState(-1);
a.CountDown(t.TimeLeave);
a.ilcurrentResult = t.Pattern - 1;
a.addRecord(this.ReturnRecord(t.Pattern - 1));
var s = [];
memset(s, 0, MAX_CHAIR);
for (var r = 0, c = t.UserWinList.length, l = 0; l < c; l++) {
var h = t.UserWinList[l];
null == h.WinScore.high && null == h.WinScore.low ? s[h.ChairID] = h.WinScore : s[h.ChairID] = 0;
h.ChairID == this.GetMeChairID() && (r = s[h.ChairID]);
}
this.lCurrenMeScore = o.GetUserScore() + r;
this.arrSumScore = CopyArray(this.lSumScore);
a.startMove(function() {
a.OnGameEndJettonAction(s, i.arrSumScore, t.AreaIndex);
a.showWin();
}, 0, t.AreaIndex);
},
ReturnCorrespondence: function(e) {
return e = 7 == e ? 10 : 21 == e ? 24 : e >= 4 ? e - 5 - 2 * (e - 4) + 28 : e + 5 - 2 * (e + 1);
},
OnActionSubPlaceJettonFail: function(e) {
e.wPlaceUser == this.GetMeChairID() && ManagerHelp_SetSystemLabel(ToUtf8(e.szMessage));
},
SaveUserBets: function(e) {
for (var t = null, i = 0; i < this.pUserScore.length; i++) {
var a = this.pUserScore[i];
if (a.wChairID == e.wChairID) {
t = a;
break;
}
}
if (null == t) {
(t = new n.tagJettonUser()).wChairID = e.wChairID;
this.pUserScore.push(t);
}
t.lUserJettonScore[e.cbJettonArea - 1] += e.lJettonScore;
t.lSumScore += e.lJettonScore;
},
OnEventSceneMessage: function(e, t, i, a) {
switch (e) {
case GAME_STATUS_FREE:
cc.log("空闲状态");
this.OnSceneFree(e, t, i, a);
return !0;

case n.GS_PLACE_JETTON:
case n.GS_GAME_END:
this.SetGameStatus(e);
this.OnClientEngine(e, t, i, a);
return !0;
}
return !1;
},
OnSceneFree: function(e, t, i, a) {
var o = this.pGameViewJs, s = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.lMinTake = s.RetainScore;
this.bIsSysBanker = s.bEnableSysBanker;
this.lBetChip = s.BetChips;
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
this.SetGameStatus(n.GS_MOVECARD_END);
o.resetInfo();
o.ShowBetChip(this.lBetChip);
o.CountDown(s.TimeLeave);
for (var r = 0; r < s.tGameRecord.length; r++) o.addRecord(this.ReturnRecord(s.tGameRecord[r] - 1));
o.updateRecords();
o.cpMeUser.node.active = !0;
},
OnClientEngine: function(e, t, i, n) {
var a = this.pGameViewJs, o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.lMinTake = o.RetainScore;
this.bIsSysBanker = o.bEnableSysBanker;
this.lBetChip = o.BetChips;
var s = o.MostWinUserAreaBet.concat(), r = o.lMostBet.concat(), c = o.wOnlineUserChairID.concat();
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var l = 0; l < 11; l++) {
this.pGameViewJs.lbzxzje += o.AreaTotalBet[l];
this.pGameViewJs.strzxzje.string = parseInt(this.pGameViewJs.lbzxzje / 1e3);
}
a.ShowBetChip(this.lBetChip);
a.CountDown(o.TimeLeave, !0);
this.pGameLogic.CopyMemory(this.lSumScore, 0, o.AreaTotalBet, o.AreaTotalBet.length);
this.pGameLogic.CopyMemory(this.lMeScore, 0, o.UserAreaBet, o.UserAreaBet.length);
this.pGameViewJs.showDetailBet(this.lSumScore, this.lMeScore);
this.pGameViewJs.showMeBetInfo(o.AreaTotalBet);
this.pGameViewJs.ShowUserBetInfo(this.lSumScore, s, this.lMeScore, r, c);
for (var h = 0; h < o.tGameRecord.length; h++) a.addRecord(this.ReturnRecord(o.tGameRecord[h] - 1));
a.updateRecords();
a.cpMeUser.node.active = !0;
},
OnEngineUpdate: function(e) {
this.fCmdDelayTime > 0 ? this.fCmdDelayTime -= e : this.pCmdActionArray.length > 0 && this.OnBeginAction();
},
SendBet: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
},
SendUpBanker: function() {
this.SendGameData(n.SUB_C_APPLY_BANKER, 0, 0);
},
SendCancelBanker: function() {
this.SendGameData(n.SUB_C_CANCEL_BANKER, 0, 0);
},
SendControl: function(e, t) {
if (!this.IsGameCheatUser()) return !1;
var i = new n.CMD_C_ControlApplication();
i.cbControlAppType = n.C_CA_SET;
i.cbControlArea = e;
i.cbControlTimes = t;
i.blIsWin = !0;
i.dwChairID = INVALID_CHAIR;
this.SendGameData(n.SUB_C_ADMIN_COMMDN, i.GetDataBytes(), i.GetDataSize());
},
SendWithCancel: function() {
if (!this.IsGameCheatUser()) return !1;
var e = new n.CMD_C_ControlApplication();
e.cbControlAppType = n.C_CA_CANCELS;
this.SendGameData(n.SUB_C_ADMIN_COMMDN, e.GetDataBytes(), e.GetDataSize());
},
SendCountInfo: function() {
if (!this.IsGameCheatUser()) return !1;
var e = new n.CMD_C_ControlApplication();
e.cbControlAppType = n.C_CA_UPDATE;
this.SendGameData(n.SUB_C_ADMIN_COMMDN, e.GetDataBytes(), e.GetDataSize());
},
SendQuery: function() {
if (!this.IsGameCheatUser()) return !1;
var e = new n.CMD_C_ControlApplication();
e.cbControlAppType = n.C_CA_QUERY;
this.SendGameData(n.SUB_C_ADMIN_COMMDN, e.GetDataBytes(), e.GetDataSize());
},
sendCheakAccount: function(e) {
if (!this.IsGameCheatUser()) return !1;
var t = new n.CMD_C_CheakAccount();
SetArrayFormUtf8(t.szUserAccount, e);
this.SendGameData(n.SUB_C_CHECK_ACCOUNT, t.GetDataBytes(), t.GetDataSize());
},
sendGetStorage: function() {
if (!this.IsGameCheatUser()) return !1;
var e = new n.CMD_C_UpdateStorage();
e.cbReqType = n.RQ_REFRESH_STORAGE;
this.SendGameData(n.SUB_C_UPDATE_STORAGE, e.GetDataBytes(), e.GetDataSize());
},
sendSetStorage: function(e, t) {
if (!this.IsGameCheatUser()) return !1;
var i = new n.CMD_C_UpdateStorage();
i.cbReqType = n.RQ_SET_STORAGE;
i.lStorage = e;
i.lStorageDeduct = t;
this.SendGameData(n.SUB_C_UPDATE_STORAGE, i.GetDataBytes(), i.GetDataSize());
},
PlayerItemByUserID: function(e) {
for (var t = 0; t < this.jsClientUserItem.length; t++) if (this.jsClientUserItem[t] && this.jsClientUserItem[t].GetUserID() == e) return this.jsClientUserItem[t];
},
SetClientUserItem: function(e, t) {
this.jsClientUserItem[e] = t;
null != t && null != t && (this.cbClientUserGender[e] = t.GetGender());
this.ReturnPeploe();
},
ReturnPeploe: function() {
for (var e = 0, t = 0; t < this.jsClientUserItem.length; t++) this.jsClientUserItem[t] && 0 != this.jsClientUserItem[t].GetUserID() && e++;
this.PeploeNum.string = e;
},
OnEventUserMagicExpression: function(e, t) {
var i = sizeof(CMD_GF_TableMagicExpresion_Res);
cc.assert(t == i, "ErrorSize.GameEngine.CMD_GF_TableMagicExpresion_Res:" + t + ",CMD_GF_TableMagicExpresion_Res:" + i);
var n = new CMD_GF_TableMagicExpresion_Res();
n.init(e);
if (n.dwTarChairId == this.wBankerUser) if (n.dwErrorCode == EM_ErrorCode.EC_OK) {
var a = new cc.Node("SkeletonMagicEx"), o = a.addComponent(sp.Skeleton);
cc.loader.loadRes(this.strSkeleton[n.dwMExpId], sp.SkeletonData, function(e, t) {
if (e) cc.warn("OnEventUserMagicExpression.Error.SkeletonData.is.null：", e); else {
o.skeletonData = t;
a.width = 100;
a.height = 100;
this.OnMoveSkeleton(a, n.dwSrcChairId, n.dwTarChairId);
}
}.bind(this));
} else n.dwErrorCode == EM_ErrorCode.EC_LACK_VIP_LV ? ManagerHelp_SetSystemLabel("VIP level is insufficient.") : n.dwErrorCode == EM_ErrorCode.EC_LACK_OF_SCORE ? ManagerHelp_SetSystemLabel("The current gold coin cannot pay for this item.") : ManagerHelp_SetSystemLabel("Unknown error.");
},
OnMoveSkeleton: function(e, t, i) {
var n = this.nodeMagicExlayer[0], a = null;
a = t != this.GetMeChairID() ? this.pGameViewJs.nodePlayerUser : this.pGameViewJs.LabelMeScore.node;
if (n && a) {
n.addChild(e, 50);
var o = n.convertToNodeSpaceAR(a.convertToWorldSpaceAR(cc.v2(0, 0)));
e.position = cc.v2(o.x - 60, o.y - 60);
e.runAction(cc.sequence(cc.moveTo(.2, cc.v2(0, 0)), cc.callFunc(function(e) {
e.getComponent(sp.Skeleton).setAnimation(0, "animation", !1);
e.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
e.removeFromParent();
}, this, e)));
}, this, e)));
}
},
SetTipOpactiy: function(e) {
1 == e ? this.pGameViewJs.OnBetStart() : 3 == e && this.pGameViewJs.OnBetFinish();
var t = new Date().getTime();
if (t - this.DataTimeN > 800) {
this.DataTimeN = t;
1 == e ? window.mfConfig.PlayAudio("137/sound/START_W", !1, window.mfConfig.fSound) : 2 == e ? window.mfConfig.PlayAudio("137/sound/CHANGE_BANKER", !1, window.mfConfig.fSound) : 3 == e && window.mfConfig.PlayAudio("137/sound/STOP_W", !1, window.mfConfig.fSound);
}
},
PlayFreeSkeleton: function() {
var e = 4, t = 4;
0 == this.pGameViewJs.skeleytonstat && this.schedule(function i() {
1 == this.pGameViewJs.skeleytonstat && this.unschedule(i);
e += this.pGameViewJs.objskeleyton;
t -= this.pGameViewJs.objskeleyton;
e >= 32 && (e -= 32);
t < 0 && (t += 30);
var n = this.pGameViewJs.LayoutSkeleton.getChildByName("skeleyton" + e).getComponent(sp.Skeleton), a = this.pGameViewJs.LayoutSkeleton.getChildByName("skeleyton" + t).getComponent(sp.Skeleton);
n.setAnimation(0, "01FQZS", !1);
a.setAnimation(0, "01FQZS", !1);
}, 1);
},
OnSocketSubGameBankerList: function(e, t) {
var i = sizeof(n.CMD_S_ApplyBanker);
cc.assert(t % i == 0, "ErrorSize.GameEngine.CMD_S_ApplyBanker.wDataSize：" + t + ",CMD_S_GameFree:" + i);
if (t % i != 0) return !1;
this.pGameViewJs.onSocketSubGameBankerList(e, t);
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
OnSendPacketStandUp: function() {
ManagerHelp_SetSystemAlert("Are you sure you want to exit?", function(e, t) {
t == window.YQ_SYS_OK && this.SendPacketStandUp(null, null, null, "");
}.bind(this), !0);
},
copyUserItem: function(e, t) {
if (null == e || null == t) return !1;
for (var i = e.pGlobalData, n = t.pGlobalData, a = Object.getOwnPropertyNames(i), o = a.length, s = 0; s < o; ++s) {
var r = a[s], c = i[r];
c instanceof Array ? i[r] = n[r].concat() : i[r] = "string" == typeof c ? "" + n[r] : n[r];
}
Object.assign(e, t);
e.pGlobalData = i;
return !0;
},
OnEventUserScore: function(e, t) {
e.GetChairID(), this.pGameViewJs;
},
OnEventUserEnter: function(e, t) {
this._super(e, t);
e.GetChairID();
},
OnEventUserLeave: function(e, t, i) {
var n = this.wBankerUser;
t == n && INVALID_CHAIR != n && (this.wBankerUser = INVALID_CHAIR);
this._super(e, t, i);
},
getTopResult: function(e) {
for (var t = [], i = 0; i < n.OVER_USERSCORE_COUNT; ++i) {
var a = e.wTopUserChairID[i], o = e.lTopScore[i];
if (INVALID_CHAIR != a && o > 0) {
var s = {};
s.wChairID = a;
s.sNickName = window.ToUtf8(e.szNickName[i]);
s.lWinScore = o;
t.push(s);
}
}
return t;
}
}));
t.exports.GameEngineJs = o;
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game",
FQZS_NewGameLogic: "FQZS_NewGameLogic",
FQZS_NewGameView: "FQZS_NewGameView"
} ],
FQZS_NewGameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4676a83HypGc4v7fNFqTiFD", "FQZS_NewGameLogic");
e("FQZS_NewCMD_Game");
t.exports.cbControlArea = [ 1, 9, 17, 25, 2, 10, 16, 26, 7, 15, 23, 31, 8, 16, 24, 32, 5, 13, 21, 29, 6, 14, 22, 30, 3, 11, 19, 27, 4, 12, 20, 28 ];
var n = cc.Class({
properties: {},
CopyMemory: function(e, t, i, n) {
for (var a = 0; a < n; a++) e[t + a] = i[a];
}
});
t.exports.GameLogic = n;
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game"
} ],
FQZS_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5e131Ghkk1MUryhIXDJ4LzY", "FQZS_NewGameView");
var n = e("FQZS_NewCMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
pGameLogic: cc.Node,
pGameEngine: cc.Node,
bCloseMark: !1,
LabelMeScore: cc.Label,
nodeBanker: cc.Node,
LabelTimer: cc.Label,
pIconItems: [ cc.Node ],
NodeArea: [ cc.Node ],
LabelCurrentScore: cc.Label,
m_carSpeed: 0,
N_spineCart: cc.Node,
PrizdK: !1,
BtnUpAndDownLary: cc.Node,
isBloowBtn: !1,
m_fSpeed: 0,
m_iIconIndex: 28,
m_iStartIndex: 0,
m_iEndIndex: 0,
m_iMovecircle: 0,
m_iActionTime: 0,
m_IsActionAdjust: !1,
m_lUserMaxScore: 0,
m_lcurrentScore: 0,
m_fMeScoreItems: [ cc.Node ],
m_fSumScoreItems: [ cc.Node ],
lblAllDetailBet: [ cc.Label ],
iRecords: [],
nodeRecordSF: [ cc.SpriteFrame ],
pfRecordList: cc.Prefab,
pfRecordItem: cc.Prefab,
ilcurrentResult: [],
lblGameTip: cc.Label,
isApplyBanker: !1,
NodeUserList: cc.Prefab,
NodeUserItem: cc.Prefab,
ApplyBankerList: cc.Prefab,
ApplyBankerItem: cc.Prefab,
controlLayout: cc.Prefab,
nodeChipLayer: [ cc.Node ],
chipSpriteFrame: [ cc.SpriteFrame ],
chipItem: cc.Prefab,
chiplist: [],
chipMoveEffect: cc.Prefab,
nodePlayerUser: cc.Node,
pfWinLayout: cc.Prefab,
pfGameEndLayout: cc.Prefab,
pfGameItem: cc.Prefab,
lOverTopScore: [],
wOverTopUserChairID: [],
nodeChatLayout: cc.Node,
pfChatItem: cc.Prefab,
pHelpLayout: cc.Prefab,
militarylayout: cc.Node,
pfMilitaryItem: cc.Prefab,
LayoutSkeleton: cc.Node,
objskeleyton: 2,
skeleytonstat: 1,
speed_j: !0,
nodePlayerList: cc.Node,
ndOtherPlayers: cc.Node,
arrChipItem: [ cc.Label ],
btnXuYa: cc.Button,
spstate: [ cc.Node ],
TimeNode: cc.Node,
lbzxzje: 0,
strzxzje: cc.Label,
compareAnim: cc.Node,
nodeWaitStatus: cc.Node
},
statics: {
instance: null
},
OnHide: function() {
GetMissionService_Clear();
},
OnShow: function() {
GetMissionService_Create();
},
OnFrameViewLoad: function() {
this.cpMeUser = this.nodeViewUser[0].getComponent("jsFrameUser");
this.bXuyaEnabled = !0;
this.N_spineCart.getComponent(sp.Skeleton).setEventListener(function(e, t) {
console.log("%d event: %s, %d, %f, %s", e, t.data.name, t.intValue, t.floatValue, t.stringValue);
});
this.OnStatusUpdate();
for (var e = 0; e < 8; e++) this.chiplist[e] = new Array();
for (e = 0; e < this.iRecords.length; e++) this.iRecords[e] = -1;
this.updateRecords();
var t = PlayerManager.GetMeUserItem();
this.LabelMeScore.getComponent(cc.Label);
this.pGameEngineJS.lCurrenMeScore = t.GetUserScore();
this.m_lcurrentScore = 1e3;
this.SetBtnSelectState(0);
cc.game.on(cc.game.EVENT_HIDE, this.OnHide.bind(this));
cc.game.on(cc.game.EVENT_SHOW, this.OnShow.bind(this));
},
ResetGameView: function() {
this.ResetFrameData();
},
ResetMoeny: function() {
var e = PlayerManager.GetMeUserItem();
this.LabelMeScore.getComponent(cc.Label).string = OnFloatScore(e.GetUserScore(), !0);
},
OnEventUserChatFast: function(e, t) {
if (e && this.pGameEngineJS.IsTableUser(e)) {
t.dwSendUserID;
var i = t.wStringIndex, n = "137/Audio/DDZ_" + [ "Girl_", "Boy_" ][e.GetGender()] + "Chat_" + i;
window.mfConfig.PlayAudio(n, !1, window.mfConfig.fSound);
}
},
OnEventUserStatus: function(e, t, i) {
var a = this.SwitchViewID(e.GetChairID());
cc.assert(a < n.GAME_PLAYER, "Error.GameView.OnEventUserStatus.wViewID:" + a);
return !0;
},
startMove: function(e, t, i) {
this.m_fSpeed = .7;
this.circlesTime = 0;
this.m_iIconIndex = 0;
this.m_iActionTime = 0;
this.circles(e, t, i);
this.m_iStartIndex = this.m_iIconIndex;
this.m_IsActionAdjust = !1;
this.downMusicVolume();
this.PrizdK = !0;
this.speed_j = !0;
},
circles: function(e, t, i) {
var a = 0;
this.m_iIconIndex >= n.TURAN_TABLE_MAX && (this.m_iIconIndex = 0);
this.m_iStartIndex == this.m_iIconIndex && this.m_iMovecircle++;
var o = this.pIconItems[this.m_iIconIndex];
if (this.circlesTime == 3 * n.TURAN_TABLE_MAX + this.ilcurrentResult) o.runAction(cc.sequence(cc.delayTime((this.m_fSpeed + 18) / n.TURAN_TABLE_MAX), cc.callFunc(function(t) {
this.PrizdK = !1;
cc.audioEngine.stop(window.mfConfig.nSoundID);
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("137/sound/TURN", !1, window.mfConfig.fSound);
this.upMusicVolume();
t.getComponent(cc.Animation).play("AniClipFlashing");
for (var n = 0; n < i.length; n++) if (1 == i[n]) {
this.NodeArea[n].getComponent(cc.Animation).play("AniClipTwinkle");
}
this.updateRecords();
this.m_iIconIndex = 28;
null != e && e();
}, this, o))); else {
this.circlesTime++;
var s = 3 * n.TURAN_TABLE_MAX + this.ilcurrentResult - this.circlesTime;
a = s <= 3 && s >= 0 ? 6 * (4 - s) : 0;
o.runAction(cc.sequence(cc.delayTime((this.m_fSpeed + a) / n.TURAN_TABLE_MAX), cc.callFunc(function(e) {
e.getComponent(cc.Animation).play("AniCliplight");
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("137/sound/TURN", !1, window.mfConfig.fSound);
}, this, o), cc.callFunc(function(n) {
this.circles(e, t, i);
}, this, o)));
}
this.m_iIconIndex++;
},
showDetailBet: function(e, t) {
if (null == e) {
e = [];
ZeroArray(e, n.AREA_COUNT + 1);
}
if (null == t) {
t = [];
ZeroArray(t, n.AREA_COUNT + 1);
}
for (var i = this.lblAllDetailBet, a = 0; a < i.length; a++) {
var o = i[a], s = e[a], r = t[a];
o.string = OnIntScore(r) + "/" + OnIntScore(s);
}
},
showMeBetInfo: function(e) {
for (var t = 0; t < this.m_fMeScoreItems.length; t++) this.m_fMeScoreItems[t].active = !1;
},
ShowUserJettonWithGameScene: function(e, t) {},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
BetButton: function(e, t) {
var i = this.pGameEngineJS, a = i.GetGameStatus();
if (n.GS_PLACE_JETTON == a) {
var o = i.lCurrenMeScore, s = i.lMinTake;
if (o < s) {
var r = "Current gold coin is lower than" + OnIntScore(s) + ", please recharge first";
ManagerHelp_SetSystemLabel(r);
} else {
this.m_lcurrentScore = this.pGameEngineJS.lBetChip[this.pGameEngineJS.cbCurrJettonIndex];
this.m_lcurrentScore >= n.UpdateScore ? this.pGameEngineJS.SendBet(parseInt(t), this.m_lcurrentScore) : ManagerHelp_SetSystemLabel("Insufficient gold coins", 2, -100, 1);
}
} else ManagerHelp_SetSystemLabel("Cannot bet at present!", 2, -100, 1);
},
ChipSelectButton: function(e, t) {
if (n.GS_PLACE_JETTON == this.pGameEngineJS.GetGameStatus()) {
this.m_lcurrentScore = this.pGameEngineJS.lBetChip[t];
this.SetBtnSelectState(t);
this.pGameEngineJS.cbCurrJettonIndex = parseInt(t);
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("137/sound/BT_CLICK", !1, window.mfConfig.fSound);
}
},
ChangeJettonState: function(e) {
this.GetMeChairID();
for (var t = PlayerManager.GetMeUserItem().GetUserScore(), i = 0, n = 0; n < 12; n++) i += this.pGameEngineJS.lMeScore[n];
t -= i;
var a = this.pGameEngineJS.lBetChip, o = [];
memset(o, !1, 5);
if (!e) for (var s = 0; s < 5 && t >= a[s]; s++) o[s] = !0;
var r = this.pGameEngineJS.cbCurrJettonIndex;
if (o[r]) this.SetBtnSelectState(r); else for (var c = r - 1; c >= 0; c--) if (o[c]) {
this.pGameEngineJS.cbCurrJettonIndex = c;
r = c;
this.SetBtnSelectState(c);
break;
}
for (var l = 0; l < 5; l++) if (this.arrChipItem[l]) {
var h = this.arrChipItem[l].node.parent;
if (h) {
var u = h.getComponent(cc.Button);
this.OnSetBtnDisable(u, o[l]);
}
}
},
OnstateXS: function(e) {
for (var t = 0; t < this.spstate.length; t++) this.spstate[t].active = !1;
this.spstate[e].active = !0;
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
CountDown: function(e, t) {
var i = this, a = this.pGameEngineJS;
switch (a.GetGameStatus()) {
case n.GS_GAME_END:
this.OnstateXS(2);
this.lblGameTip.string = "开奖";
t ? this.OnWaitStatus(!0) : this.pGameEngineJS.SetTipOpactiy(3);
this.skeleytonstat = 1;
break;

case n.GS_MOVECARD_END:
this.OnstateXS(0);
this.lblGameTip.string = "等待";
this.skeleytonstat = 0;
this.OnWaitStatus(!1);
break;

case n.GS_PLACE_JETTON:
this.OnWaitStatus(!1);
if (this.pGameEngineJS.wBankerUser == this.pGameEngineJS.GetMeChairID()) {
this.OnstateXS(1);
this.lblGameTip.string = "下注";
} else {
this.OnstateXS(1);
this.lblGameTip.string = "下注";
t || this.pGameEngineJS.SetTipOpactiy(1);
}
}
e > 15 && (e = 15);
this.nMaxTime = e;
this.unscheduleAllCallbacks();
this.LabelTimer.string = this.nMaxTime;
this.TimeNode.getComponent(sp.Skeleton).setAnimation(0, "animation2", !1);
this.TimeNode.getComponent(sp.Skeleton).setSkin(this.nMaxTime);
this.LabelTimer.string = this.nMaxTime;
this.schedule(function e() {
this.nMaxTime = this.nMaxTime - 1;
this.nMaxTime <= 3 && this.pGameEngineJS.GetGameStatus() == n.GS_PLACE_JETTON && 0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("137/sound/TIME_WARIMG", !1, window.mfConfig.fSound);
if (this.nMaxTime < 0) {
this.unschedule(e);
var t = a.GetGameStatus();
n.GS_PLACE_JETTON != t && i.resetInfo();
} else {
this.TimeNode.getComponent(sp.Skeleton).setAnimation(0, "animation2", !1);
this.TimeNode.getComponent(sp.Skeleton).setSkin(this.nMaxTime);
this.LabelTimer.string = this.nMaxTime;
}
}, 1);
},
OnopenBanke: function() {
var e = this;
cc.loader.loadRes("100/APrefab/BankQU", cc.Prefab, function(t, i) {
if (t) console.log("GG"); else if (i) {
var n = cc.instantiate(i);
cc.director.getScene().getChildByName("Canvas").addChild(n);
n.getComponent("jsControlGameBank").SetGameView(e);
}
});
},
stopIconBlink: function(e) {
var t = this.pIconItems, i = t.length;
if (e < 0 || e >= i) for (var n = 0; n < i; ++n) {
t[n].getComponent(cc.Animation).play("AniClipStop");
} else {
t[e].getComponent(cc.Animation).play("AniClipStop");
}
},
stopAreaBlink: function(e) {
var t = this.NodeArea, i = t.length;
if (e < 0 || e >= i) for (var n = 0; n < i; ++n) {
t[n].getComponent(cc.Animation).play("AniClipAreaStop");
} else {
t[e].getComponent(cc.Animation).play("AniClipAreaStop");
}
},
OnBetStart: function() {
var e = this.compareAnim.getComponent("FQZS_NewActionHelp");
e.ResetAllNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
},
OnBetFinish: function() {
var e = this.compareAnim.getComponent("FQZS_NewActionHelp");
e.ResetAllNode();
e.StartGameEndAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
},
resetInfo: function() {
this.pGameEngineJS.lMeLastScore = CopyArray(this.pGameEngineJS.lMeScore);
ZeroArray(this.pGameEngineJS.lSumScore, n.AREA_COUNT + 1);
ZeroArray(this.pGameEngineJS.lMeScore, n.AREA_COUNT + 1);
ZeroArray(this.pGameEngineJS.lTrueUserScore, n.AREA_COUNT + 1);
this.pGameEngineJS.pUserScore.length = 0;
this.showDetailBet(this.pGameEngineJS.lSumScore, null, this.pGameEngineJS.lMeScore);
this.upDateTrueUserScore();
this.UpdateUserScoreList();
this.lbzxzje = 0;
this.strzxzje.string = "0";
this.stopIconBlink(-1);
this.stopAreaBlink(-1);
this.resetCar();
try {
this.nodeRootCanvas.getChildByName("GameEndLayer0").removeFromParent();
} catch (e) {}
this.OnFrameResetView();
},
addRecord: function(e) {
this.iRecords.push(0);
for (var t = 0; t < this.iRecords.length - 1; t++) this.iRecords[this.iRecords.length - t - 1] = this.iRecords[this.iRecords.length - t - 2];
this.iRecords[0] = e;
},
updateBankerButton: function() {
if (this.jsGameEngine.wBankerUser == this.jsGameEngine.GetMeChairID()) {
this.DownButton.active = !0;
this.ApplyButton.active = !1;
this.CancelButton.active = !1;
} else {
this.DownButton.active = !1;
if (this.isApplyBanker) {
this.ApplyButton.active = !1;
this.CancelButton.active = !0;
} else {
this.ApplyButton.active = !0;
this.CancelButton.active = !1;
}
}
},
updateRecords: function() {
this.militarylayout.removeAllChildren();
for (var e = this.militarylayout, t = 0; t < 30 && !(t > this.iRecords.length); ++t) {
var i = cc.instantiate(this.pfMilitaryItem), n = i.getComponent("FQZS_NewMilitaryItem"), a = e.childrenCount, o = this.iRecords[a] + 1;
n.setIcon(o);
0 == a && (n.Background.active = !0);
e.addChild(i);
}
},
getWinCount: function(e) {
for (var t = 0, i = 0; i < this.iRecords.length; i++) this.iRecords[i] == e && t++;
return t;
},
ApplyBanker: function(e, t) {
this.pGameEngineJS.lApplyBankerCondition / 1e3 > this.pGameEngineJS.GetClientUserScore() ? ManagerHelp_SetSystemAlert("There are not enough gold coins to go to the villa. The villa needs at least 1000 gold coins!") : this.pGameEngineJS.SendUpBanker();
},
CancelBanker: function(e, t) {
this.pGameEngineJS.SendCancelBanker();
},
DownBanker: function(e, t) {
this.pGameEngineJS.SendCancelBanker();
},
showUserList: function(e, t) {
var i = cc.instantiate(this.NodeUserList);
this.nodeRootCanvas.addChild(i);
for (var n = 1, a = 0; a < this.pGameEngineJS.jsClientUserItem.length; a++) {
var o = this.pGameEngineJS.jsClientUserItem[a];
if (o) {
var s = cc.instantiate(this.NodeUserItem);
s.getChildByName("index").getComponent(cc.Label).string = n + ".";
s.getChildByName("name").getComponent(cc.Label).string = this.getLimitString(o.GetNickNameUtf8(), 8, !0);
s.getChildByName("score").getComponent(cc.Label).string = OnFloatScore(o.GetUserScore(), !0);
i.getChildByName("ScrollView").getChildByName("view").getChildByName("content").addChild(s);
n++;
}
}
},
ContinueBetButton: function(e, t) {
if (this.isXuyaEnabled()) {
var i = this.pGameEngineJS, a = i.GetGameStatus();
if (n.GS_PLACE_JETTON == a) {
for (var o = i.lCurrenMeScore, s = this.getComponent("jsPlayerList"), r = i.arrPreMeScore, c = 0, l = [], h = 0; h < n.AREA_COUNT; ++h) {
var u = r[h];
l[h] = s.GetJettonAry(u);
c += u;
}
if (c > o) ManagerHelp_SetSystemAlert("Insufficient gold coins for renewal"); else {
for (var d = 0; d < n.AREA_COUNT; ++d) for (var m = l[d], f = 0; f < m.length; ++f) {
var p = m[f];
p > 0 && i.SendBet(d + 1, p);
}
this.setXuyaEnabled(!1);
}
} else ManagerHelp_SetSystemAlert("Non betting time, please wait");
}
},
OnchipCents: function(e) {
for (var t = this, i = this.nodeChipLayer[e].convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), n = (this.nodeChipLayer[e].convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), 
function(n) {
cc.loader.loadRes("100/APrefab/CHIP-0", cc.Prefab, function(a, o) {
if (o) {
var s = cc.instantiate(o);
s.position = i;
t.nodeChipLayer[e].addChild(s, 30);
s.runAction(cc.sequence(cc.delayTime(.05 * n), cc.moveTo(.4, t.nodeChipLayer[e].x, t.nodeChipLayer[e].y).easing(cc.easeCircleActionOut(.5)), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("100/newAsound/ADD_GOLD", !1, window.mfConfig.fSound);
}, this, s)));
if (parseInt(this.m_fMeScoreItems[e].string) > 0) for (var r = Math.random() * (parseInt(this.nodeChipLayer[e].children.length / 2) - parseInt(this.nodeChipLayer[e].children.length / 4)) - parseInt(this.nodeChipLayer[e].children.length / 4), c = 0; c < r; c++) this.nodeChipLayer[e].children[c].runAction(cc.sequence(cc.delayTime(.05 * n), cc.moveTo(.4, t.nodeChipLayer[e].x, t.nodeChipLayer[e].y).easing(cc.easeCircleActionOut(.5)), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("100/newAsound/ADD_GOLD", !1, window.mfConfig.fSound);
}, this, s)));
}
});
}), a = 0; a < this.nodeChipLayer[e].children.length; a++) n(a);
},
PlayWinChipAnim: function() {
var e = this.ilcurrentResult % 8, t = [ 40, 5, 30, 5, 20, 5, 10, 5 ], i = this.jsGameEngine, n = i.lMeScore[e + 1], a = [ 0, 4, 1, 5, 2, 6, 3, 7 ][e], o = this.nodeChipLayer[a], s = o.getContentSize();
s.width -= 10;
s.height -= 10;
var r = o.convertToWorldSpaceAR(cc.v2(0, 0));
if (n > 0) {
var c = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), l = this.nodeRootCanvas.convertToNodeSpaceAR(this.LabelMeScore.node.convertToWorldSpaceAR(cc.v2(0, 0))), h = n * t[e] / this.m_lcurrentScore;
h = h > 20 ? 20 : h;
for (var u = 0; u < h; u++) {
var d = 220 * Math.random() - 110, m = 220 * Math.random() - 110, f = cc.instantiate(this.chipMoveEffect);
this.nodeRootCanvas.addChild(f, 30);
f.position = cc.v2(c.x + d, c.y + m);
var p = [];
this.getBezierRoute(c, l, p);
var _ = this.nodeRootCanvas.convertToNodeSpaceAR(r);
_.x += Value_GetRandomInt(-s.width, s.width);
_.y += Value_GetRandomInt(-s.height, s.height);
f.runAction(cc.sequence(cc.moveTo(.4, _), cc.delayTime(.5), cc.moveTo(.4, l.x, l.y), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("100/newAsound/ADD_GOLD", !1, window.mfConfig.fSound);
}, this, f), cc.delayTime(.5), cc.callFunc(function(e) {
e.removeFromParent();
}, this, f)));
}
this.schedule(this.PlayGoldAnim, .02);
}
var S = i.lSumScore[e + 1];
if (S > 0) {
var g = S - n;
if (g < 0) return;
c = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), 
l = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodePlayerUser.convertToWorldSpaceAR(cc.v2(0, 0)));
var C = g * t[e] / this.m_lcurrentScore;
C = C > 20 ? 20 : C;
for (u = 0; u < C; u++) {
d = 220 * Math.random() - 110, m = 220 * Math.random() - 110, f = cc.instantiate(this.chipMoveEffect);
this.nodeRootCanvas.addChild(f, 30);
f.position = cc.v2(c.x + d, c.y + m);
p = [];
this.getBezierRoute(c, l, p);
var w = this.nodeRootCanvas.convertToNodeSpaceAR(r);
w.x += Value_GetRandomInt(-s.width, s.width);
w.y += Value_GetRandomInt(-s.height, s.height);
f.runAction(cc.sequence(cc.moveTo(.4, w), cc.delayTime(.5), cc.moveTo(.4, l.x, l.y), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("100/newAsound/ADD_GOLD", !1, window.mfConfig.fSound);
}, this, f), cc.delayTime(.5), cc.callFunc(function(e) {
e.removeFromParent();
}, this, f)));
}
this.schedule(this.PlayGoldAnim, .02);
}
},
PlayGoldAnim: function() {
PlayerManager.GetMeUserItem().GetUserScore();
var e = this.LabelMeScore.getComponent(cc.Label), t = parseInt(1e3 * e.string), i = this.m_lcurrentScore / 10, n = this.pGameEngineJS.pcurrenEndInfo.lUserScore;
this.pGameEngineJS.lCurrenMeScore <= t ? this.unschedule(this.PlayGoldAnim) : n <= 1e3 ? t += i : n > 1e3 && n <= 1e4 ? t += 3 * i : n > 1e4 && n <= 1e5 ? t += 13 * i : n > 1e5 && n <= 1e6 && (t += 23 * i);
},
ReplaceIcon: function(e, t) {
cc.loader.loadRes(e, cc.SpriteFrame, function(e, i) {
e || (t.getComponent(cc.Sprite).spriteFrame = i);
});
},
showWin: function(e) {
var t = cc.instantiate(this.pfGameEndLayout);
this.nodeRootCanvas.addChild(t, 51);
var i = t.getComponent("FQZS_NewEndLayer");
3 == this.ilcurrentResult ? i.SetSpineObjcet(this.iRecords[0], !0) : i.SetSpineObjcet(this.iRecords[0], !1);
},
PlayChipAnim: function(e, t, i) {
var n, a = this, o = this.nodeChipLayer[t - 1];
n = e ? this.nodeChipLayer[t - 1].convertToNodeSpaceAR(this.LabelMeScore.node.convertToWorldSpaceAR(cc.v2(0, 0))) : this.nodeChipLayer[t - 1].convertToNodeSpaceAR(this.nodePlayerUser.convertToWorldSpaceAR(cc.v2(0, 0)));
var s = this.nodeRootCanvas.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.v2(0, 0)));
this.getBezierRoute(n, s, []);
for (var r = this.Scroenum(i), c = function(e) {
cc.loader.loadRes("100/APrefab/CHIP-0", cc.Prefab, function(i, o) {
if (i) console.log("GG"); else if (o) {
var s = cc.instantiate(o);
s.position = n;
a.nodeChipLayer[t - 1].addChild(s, 30);
var c = cc.moveTo(.36, a.GetJettonPos(t).x, a.GetJettonPos(t).y).easing(cc.easeSineOut(.5)), l = cc.sequence(cc.show(), c, cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("100/newAsound/ADD_GOLD", !1, window.mfConfig.fSound);
}, a, s));
s.runAction(l);
cc.loader.loadRes("100/ARes/BCAes/vbcbm_jetton_" + r[e], cc.SpriteFrame, function(t, i) {
if (!t) {
s.getComponent(cc.Sprite).spriteFrame = i;
s.getChildByName("Label").getComponent(cc.Label).string = "" + r[e] / 1e3;
}
});
}
});
}, l = 0; l < r.length; l++) c(l);
},
PlaceJettonAction: function(e, t, i) {
var n = this.getComponent("jsPlayerList"), a = n.aryNodeBetArea[i].width, o = n.aryNodeBetArea[i].height, s = parseInt(Math.random() * (a - 100)), r = parseInt(Math.random() * (o - 100)), c = cc.v2(s + 50, r + 50);
this.OnFramePlaceJetton(e, i, t, c);
},
Scroenum: function(e) {
for (var t = [], i = [ 1e6, 3e5, 1e5, 5e4, 1e4, 1e3 ], n = i.length, a = 0; a < n; ++a) {
for (var o = i[a], s = Math.floor(e / o), r = 0; r < s; ++r) t.push(o);
e %= o;
}
return t;
},
GetJettonPos: function(e) {
var t, i, n = this.nodeChipLayer[e - 1].getPosition(), a = this.nodeChipLayer[e - 1].width, o = this.nodeChipLayer[e - 1].height, s = this.nodeRootCanvas.convertToWorldSpaceAR(cc.v2(n.x, n.y));
t = Math.floor(Math.random() * (s.x + a / 2 - (s.x - a / 2)) + (s.x - a / 2));
i = Math.floor(Math.random() * (s.y + o / 2 - (s.y - o / 2)) + (s.y - o / 2));
return this.nodeRootCanvas.convertToNodeSpaceAR(cc.v2(t, i));
},
getBezierRoute: function(e, t, i) {
var n = 100 * Math.random(), a = 100 * Math.random();
i.push(e);
var o = cc.v2(0, 0);
if (e.y > t.y) {
o.x = t.x + n;
o.y = e.y + a;
} else {
o.x = e.x + n;
o.y = t.y + a;
}
i.push(o);
i.push(t);
},
showControl: function(e, t) {},
upDateTrueUserScore: function() {
var e = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != e) {
var t = e.getComponent("FQZS_NewControl");
t.init(this, this.jsGameEngine);
t.setTrueUserScore(this.jsGameEngine.lTrueUserScore);
}
},
UpdateLookUpUserScore: function(e) {
var t = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != t) {
var i = t.getComponent("FQZS_NewControl");
i.init(this, this.jsGameEngine);
i.setUserScore(e);
}
},
UpdateStorage: function(e, t) {
var i = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != i) {
var n = i.getComponent("FQZS_NewControl");
n.init(this, this.jsGameEngine);
n.setStorage(e, t);
}
},
UpdateUserScoreList: function() {
var e = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != e) {
var t = e.getComponent("FQZS_NewControl");
t.init(this, this.jsGameEngine);
t.UpdateUserScoreList();
}
},
GameCommdnResult: function(e) {
if (e.cbReturnsType != n.S_CR_FAILURE) if (e.cbReturnsType != n.S_CR_CANCEL_SUCCESS) if (e.cbControlTimes > 0 && e.cbControlArea < 8) {
var t = "";
switch (e.cbControlArea) {
case 0:
t = "法拉利";
break;

case 1:
t = "奔驰";
break;

case 2:
t = "保时捷";
break;

case 3:
t = "大众";
break;

case 4:
t = "玛莎拉蒂";
break;

case 5:
t = "日产";
break;

case 6:
t = "兰博基尼";
break;

case 7:
t = "宝马";
}
var i = t + "-控制剩余次数:" + e.cbControlTimes;
ManagerHelp_SetSystemLabel(i);
} else ManagerHelp_SetSystemLabel("本局没有控制"); else ManagerHelp_SetSystemLabel("取消控制"); else ManagerHelp_SetSystemLabel("控制失败");
},
downMusicVolume: function() {
cc.audioEngine.setVolume(window.mfConfig.nMusicID, .2);
},
upMusicVolume: function() {
cc.audioEngine.setVolume(window.mfConfig.nMusicID, window.mfConfig.fMusic);
},
showHelpLayout: function(e, t) {
var i = cc.instantiate(this.pHelpLayout);
this.nodeRootCanvas.addChild(i, 51);
},
showExpressionLayout: function(e, t) {
var i = this.jsGameEngine.GetClientUserItem(this.pGameEngineJS.wBankerUser);
this.pGameEngineJS.OnFrameButtonGameExpression(i.GetChairID());
},
transverterJG: function() {
return this.ilcurrentResult + 4 >= 32 ? this.ilcurrentResult - 27 : this.ilcurrentResult + 5;
},
resetCar: function() {
if (!0 === this.bCarRunning) {
var e = this.N_spineCart, t = e.getComponent(sp.Skeleton);
t.setEventListener(null);
t.timeScale = 0;
this.unschedule(this.OnCarActionSDJ);
this.unschedule(this.OnCarActionSD);
this.stopIconBlink(-1);
this.stopAreaBlink(-1);
e.setPosition(this.ptCardStart);
this.bCarRunning = !1;
}
},
OnBtnUpAndDown: function() {
this.isBloowBtn = !this.isBloowBtn;
this.BtnUpAndDownLary.active = this.isBloowBtn;
},
OnsetOpen: function() {
cc.loader.loadRes("100/APrefab/BankQU", cc.Prefab, function(e, t) {
if (e) console.log("GG"); else if (t) {
var i = cc.instantiate(t);
cc.director.getScene().getChildByName("Canvas").addChild(i);
}
});
},
OnOpenShop: function(e, t) {
var i = this;
cc.loader.loadRes("GameLobby/APrefab/pfGamePay", cc.Prefab, function(e, t) {
if (t) {
var n = cc.instantiate(t);
i.nodeRootCanvas.addChild(n, 100);
}
});
},
SetGameSprite: function(e, t) {
cc.loader.loadRes(t, cc.SpriteFrame, function(t, i) {
t ? cc.warn("self.node.Error.spriteFrame.is.null") : e && (e.getComponent(cc.Sprite).spriteFrame = i);
});
},
getLimitString: function(e, t, i) {
if (null == e) return 0;
i = i || !1;
for (var n = "", a = 0, o = e.length, s = 0; s < o; ++s) {
e.charCodeAt(s);
null != e[s].match(/[^\x00-\xff]/gi) ? a += 2 : ++a;
if (a > t) {
n += e[s];
i && (n += "...");
break;
}
n += e[s];
}
return n;
},
OnUpdateOnLineUser: function(e, t) {
this._super(e, t);
if (!t) {
var i = this.nodeRootCanvas.getChildByName("pfOnlinePlayerList");
if (i) {
i.getComponent("jsOnlinePlayerList").arrOLUserList;
}
}
},
onSocketSubUserApplyBanker: function(e) {
var t = this.pGameEngineJS, i = t.cpApplyList, n = i.bMeApplied, a = e.wApplyChairID;
i.addApplyList(a, e, !0);
if (i.bMeApplied && n != i.bMeApplied) {
var o = t.GetGameStatus();
GAME_STATUS_FREE != o ? ManagerHelp_SetSystemLabel("申请上庄成功") : INVALID_CHAIR != t.wCurrentBanker && ManagerHelp_SetSystemLabel("申请上庄成功");
}
i.showApplyBanker(null);
},
onSocketSubUserCancelBanker: function(e) {
var t = this.pGameEngineJS.cpApplyList, i = t.bMeApplied;
t.removeApplyList(e.wCancelUser, !0);
t.bMeApplied || i == t.bMeApplied || ManagerHelp_SetSystemLabel("取消坐庄成功");
t.showApplyBanker(null);
},
onSocketSubChangeBanker: function(e) {
var t = this.pGameEngineJS.cpApplyList, i = e.wChangeUserChairID;
this.wCurrentBanker = i;
t.getApplyItem(i);
INVALID_CHAIR != i ? t.removeApplyList(i, !0) : t.resetApplyList(!0);
t.showApplyBanker(null);
},
onSocketSubGameBankerList: function(e, t) {
var i = this.pGameEngineJS.cpApplyList, a = sizeof(n.CMD_S_ApplyBanker), o = parseInt(t / a), s = PlayerManager.GetMeUserItem().GetChairID(), r = -1;
i.resetApplyList(!1);
for (var c = 0; c < o; ++c) {
var l = e.slice(c * a, (c + 1) * a), h = new n.CMD_S_ApplyBanker();
h.init(l);
s == h.wApplyChairID && (r = c);
i.addApplyList(h.wApplyChairID, h, !1);
}
i.updateRankInfo(r, o);
i.updateApplyView();
i.showApplyBanker(null);
},
cleanAllChip: function() {
for (var e = this.nodeChipLayer, t = e.length, i = 0; i < t; ++i) {
var n = e[i];
null != n && n.removeAllChildren();
}
},
OnGameEndJettonAction: function(e, t, i) {
for (var n = [], a = 0; a < 11; a++) i[a] && t[a] && t[a] > 0 && n.push(a);
this.OnFrameGameEndAction(n, e, !0);
},
ShowBetChip: function(e) {
null == e && (e = [ 1e3, 1e4, 5e4, 1e5, 3e5, 1e6 ]);
for (var t = 0; t < n.JETTON_NUM; ++t) null != this.arrChipItem && null != this.arrChipItem[t] && (this.arrChipItem[t].string = OnIntScore(e[t]));
this.OnFrameInitJetton(e);
},
ShowUserBetInfo: function(e, t, i, a, o) {
for (var s = this.pGameEngineJS, r = [], c = [], l = [], h = [], u = 0, d = 0, m = 0, f = 0; f < n.AREA_COUNT; ++f) {
c[f] = i[f];
l[f] = t[f];
h[f] = a[f];
u += c[f];
d += l[f];
m += h[f];
r[f] = e[f];
}
var p = [];
memset(p, 0, n.GAME_PLAYER);
INVALID_CHAIR != o[0] && (p[o[0]] = d);
INVALID_CHAIR != o[1] && (p[o[1]] = m);
p[s.GetMeChairID()] = u;
this.OnFrameBetInfo(r, l, p);
},
OnSetBtnDisable: function(e, t) {
e.interactable = t;
if (!t) {
e.node.getChildByName("Select").active = !1;
}
},
SetBtnSelectState: function(e) {
for (var t = 0; t < n.JETTON_NUM; t++) if (this.arrChipItem[t]) {
var i = this.arrChipItem[t].node.parent;
if (i) {
var a = i.getComponent(cc.Button).node.getChildByName("Select");
a && (a.active = t == e);
}
}
},
setXuyaEnabled: function(e) {
this.btnXuYa.interactable = e;
},
isXuyaEnabled: function() {
return this.btnXuYa.interactable;
}
});
cc._RF.pop();
}, {
FQZS_NewCMD_Game: "FQZS_NewCMD_Game"
} ],
FQZS_NewMilitaryItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cd97buz3ZZNKLw4Ym/DYVX6", "FQZS_NewMilitaryItem");
cc.Class({
extends: cc.Component,
properties: {
sfsIcon: [ cc.SpriteFrame ],
spIcon: cc.Sprite,
Background: cc.Node
},
ctor: function() {},
setIcon: function(e) {
2 == e ? e = 1 : 1 == e ? e = 0 : e -= 2;
this.spIcon.spriteFrame = this.sfsIcon[e];
}
});
cc._RF.pop();
}, {} ],
FortuneRabbit_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e52ablewU5KDahueQqsFZmw", "FortuneRabbit_CMD_Game");
t.exports.SUB_S_USERRUN_RET = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_USERRUN_REQ = 1;
cc._RF.pop();
}, {} ],
FortuneRabbit_Explain: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "63e56thKO5IQp63LtliHXu5", "FortuneRabbit_Explain");
cc.Class({
extends: cc.Component,
properties: {
iconSpine: cc.Node,
numLbl: cc.Node,
scoreLbl: cc.Node,
boundslbls: [ cc.Node ],
boundsTxt: cc.Node
},
onLoad: function() {
this.IconSpineList = [];
this.IconSpineList[0] = "wild";
this.IconSpineList[1] = "yuanbao";
this.IconSpineList[2] = "qiandai";
this.IconSpineList[3] = "hongbao";
this.IconSpineList[4] = "tongqian";
this.IconSpineList[5] = "firework";
this.IconSpineList[6] = "carrot";
this.IconSpineList[7] = "qianpiao";
this.IconSpineList[8] = "qianpiao";
this.IconSpineList[9] = "qianpiao";
this.IconSpineList[10] = "qianpiao";
this.IconSpineList[11] = "qianpiao";
this.IconSpineList[12] = "qianpiao";
this.IconSpineList[13] = "qianpiao";
this.IconSpineList[14] = "qianpiao";
this.scoreConfig = [];
this.scoreConfig[0] = 200;
this.scoreConfig[1] = 100;
this.scoreConfig[2] = 50;
this.scoreConfig[3] = 10;
this.scoreConfig[4] = 5;
this.scoreConfig[5] = 3;
this.scoreConfig[6] = 2;
this.bonusConfig = [];
this.bonusConfig[7] = 5;
this.bonusConfig[8] = 10;
this.bonusConfig[9] = 20;
this.bonusConfig[10] = 50;
this.bonusConfig[11] = 100;
this.bonusConfig[12] = 200;
this.bonusConfig[13] = 300;
this.bonusConfig[14] = 500;
},
start: function() {},
setExplainIcon: function(e) {
var t = this, i = this.iconSpine.getComponent(sp.Skeleton), n = "506/AGameSpine/" + this.IconSpineList[e];
cc.loader.loadRes(n, sp.SkeletonData, function(e, t) {
i.skeletonData = t;
PlaySkeletonAnimation(i, !1, "stop");
}.bind(this));
this.iconSpine.x = e > 6 ? -70 : -98;
if (e > 6) {
this.iconSpine.scaleX = .65;
this.iconSpine.scaleY = .65;
this.boundslbls.forEach(function(i, n, a) {
i.getComponent(cc.Label).string = t.bonusConfig[e];
});
} else {
this.iconSpine.scaleX = .8;
this.iconSpine.scaleY = .8;
this.scoreLbl.getComponent(cc.Label).string = this.scoreConfig[e];
}
var a = this.getLblMulIdx(e);
this.boundsTxt.active = e > 6;
this.boundslbls.forEach(function(t, i, n) {
t.active = e > 6 && a == i;
});
this.numLbl.active = e <= 6;
this.scoreLbl.active = e <= 6;
},
OnButtonClose: function(e, t) {
e.target.parent.active = !1;
},
update: function(e) {},
getLblMulIdx: function(e) {
var t = 0;
e > 6 && e < 10 ? t = 0 : e >= 10 && e < 13 ? t = 1 : e >= 13 && e <= 14 && (t = 2);
return t;
}
});
cc._RF.pop();
}, {} ],
FortuneRabbit_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4f430fOqwRO8qTeOkPQPCPM", "FortuneRabbit_GameEngine");
var n = e("FortuneRabbit_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("FortuneRabbit_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.rollResult = [ [], [], [] ];
this.winScore = 0;
this.BONUS_MAX = 5;
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("506/Audio/bg", !0);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERRUN_RET:
return this.OnStartGame(t, i);
}
},
OnStartGame: function(e, t) {
var i = this;
this.pGameViewJs.StopCheckGameStartDelay();
var n = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
this.WinLines = n.WinLines;
this.isHaveBonus = n.BonusCount >= this.BONUS_MAX;
this.BonusCount = n.BonusCount;
this.ItemsResult = n.ItemsArry;
this.rollResult = [ [], [], [] ];
var a = 0;
n.ItemsArry.forEach(function(e, t, n) {
a = t < 3 ? 0 : t >= 3 && t < 7 ? 1 : 2;
i.rollResult[a].push(e - 1);
});
var o = 0;
null == n.TotalWinScore.high && null == n.TotalWinScore.low && (o = n.TotalWinScore);
this.winScore = o;
this.AddFreeCount = n.FreeCount;
var s = 0;
null == n.FreeTotalWin.high && null == n.FreeTotalWin.low && (s = n.FreeTotalWin);
this.FreeTotalWin = s;
this.pGameViewJs.OnRollStart(n);
},
SendGameStart: function(e) {
var t = window.net.netSerializer.packMsg("CMD_C_UserRunReq", e);
this.SendGameData(n.SUB_C_USERRUN_REQ, t, t.length);
this.pGameViewJs.CheckGameStartDelay();
}
});
cc._RF.pop();
}, {
FortuneRabbit_CMD_Game: "FortuneRabbit_CMD_Game"
} ],
FortuneRabbit_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f30b84OPlBIjot333NcwhHU", "FortuneRabbit_GameView");
e("fs"), cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_autoStop: cc.Button,
btnStartSpine: sp.Skeleton,
btn_betSub: cc.Button,
btn_betAdd: cc.Button,
btn_betBg: cc.Button,
bg_freetime: cc.Node,
lbl_freetimes: cc.Label,
lbl_freeTotal: cc.Label,
nodeFreeStart: cc.Node,
freeStartSpine: cc.Node,
nodeFreeover: cc.Node,
freeOverSpine: cc.Node,
freeLight: cc.Node,
nodeGameContent: cc.Node,
freeFakeEnterSpine: cc.Node,
freeFakeCloudSpine: cc.Node,
nodeExplain: cc.Node,
explainBg: cc.Node,
nodeBig: cc.Node,
nodeBigSpine: cc.Node,
nodeBigScoreWin: cc.Node,
nodeScoreWin: cc.Node,
lblBigScoreWin: cc.Label,
lblScoreWin: cc.Node,
rollBgNormal: cc.Node,
rollBgFree: cc.Node,
rollSpine: sp.Skeleton,
rollNode: cc.Node,
roll_pans2: [ cc.Node ],
reslutLines: [ cc.Node ],
lineLbls: [ cc.Node ],
lineNumsLeft: [ cc.Node ],
lineNumsRight: [ cc.Node ],
lineWinDress: cc.Node,
bonusWinDress: cc.Node,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurScore: cc.Label,
lblAotuTimes: cc.Label,
pfAutoPlay: cc.Prefab,
pfGameEndScore: cc.Prefab,
ScrollSpine: cc.Node,
FiveWinSp: cc.Node,
nodeRabbit: cc.Node,
RabbitFree: cc.Node,
RabbitIdle: cc.Node,
RabbitWoo: cc.Node,
RabbitYeah: cc.Node,
nodeAutoPop: cc.Node,
autoPlayNode: cc.Node,
nodeBetPop: cc.Node,
nodeMenu: cc.Node,
helpPop: cc.Node
},
OnFrameViewLoad: function() {
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.i_freegameTimes = 0;
this.i_totalBetIndex = 0;
this.lineCount = 1;
this.m_ExitTime = 120;
this.fastModel = !0;
this.stopPans = 0;
this.sendTime = 0;
this.reqStartTime = 0;
this.curBet = 1e3;
this.curBet2 = 1e3;
this.lineIDs = {};
this.lineIDs[1] = [ 0, 0, 0 ];
this.lineIDs[2] = [ 0, 1, 0 ], this.lineIDs[3] = [ 0, 1, 1 ], this.lineIDs[4] = [ 1, 1, 0 ], 
this.lineIDs[5] = [ 1, 1, 1 ], this.lineIDs[6] = [ 1, 2, 1 ], this.lineIDs[7] = [ 1, 2, 2 ], 
this.lineIDs[8] = [ 2, 2, 1 ], this.lineIDs[9] = [ 2, 2, 2 ], this.lineIDs[10] = [ 2, 3, 2 ];
this.RABBIT_IDLE = 1;
this.RABBIT_COLLECT = 2;
this.RABBIT_FREE_FAKE = 3;
this.RABBIT_FREE_REAL = 4;
this.RABBIT_NORMAL_WIN = 5;
this.RABBIT_BIG_WIN = 6;
this.SCROLL_IDLE = 1;
this.SCROLL_FAKE_START = 2;
this.SCROLL_FAKE_KEEP = 3;
this.SCROLL_FAKE_END = 4;
this.SyncUserScore();
this.startTouchTime = null;
this.startTouchFlag = null;
this.btn_start.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchStartBtn, this);
this.btn_start.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEndBtn, this);
this.schedule(this.ExitTime, 1);
this.hideLines();
this.nodeBetPop.active = !1;
var e = this;
this.percent = 0;
this.nodeLoading.getComponent(cc.Sprite).schedule(function() {
e.percent += 1;
if (e.percent <= 100) {
e.updateBar.progress = e.percent / 100;
e.updatePrecent.string = e.percent + "%";
} else e.percent >= 151 && (e.nodeLoading.active = !1);
}, .005, 150, 0);
},
OnViewUpdate: function(e) {
this.sendTime <= 0 || (this.sendTime -= e);
},
OnEventScene: function(e) {
var t = this;
this.lBetChip = e.LineBets;
this.lBetMultips = e.LineMuls;
this.winLvArray = e.WinLvArry;
this.lineCount = e.LineCount;
var i = e.FakeFreePro;
this.fakeFreeWeight = [];
this.defaultResult = [ [], [], [] ];
var n = 0;
e.Defaultshow.forEach(function(e, i, a) {
n = i < 3 ? 0 : i >= 3 && i < 7 ? 1 : 2;
t.defaultResult[n].push(e - 1);
});
for (var a = 0; a < i; a++) this.fakeFreeWeight.push(1);
for (var o = 0; o < 1e4 - i; o++) this.fakeFreeWeight.push(0);
this.i_totalBet = [];
var s = {};
this.lBetChip.forEach(function(e, i, n) {
t.lBetMultips.forEach(function(t, i, n) {
var a = {};
a.bet = e;
a.mul = t;
s[e * t] = a;
});
});
for (var r in s) if (s.hasOwnProperty(r)) {
var c = s[r];
c.val = r;
this.i_totalBet.push(c);
}
this.i_totalBet.sort(function(e, t) {
return e.val - t.val;
});
this.LineBetNodeJs = this.nodeBetPop.getComponent("FortuneRabbit_LineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNodeJs.setConfig(this.lBetChip, this.lBetMultips, this.i_totalBet);
this.LineBetNodeJs.updateLineScore(this.lBetChip[0], this.lBetMultips[0]);
this.updateRollMode();
this.rollNode.stopAllActions();
this.changeRabbitSpine(this.RABBIT_IDLE);
this.changeScrollSpine(this.SCROLL_IDLE);
this.initAutoPlayMenu(e.AutoRun);
if (e.FreeCount > 0) {
this.LineBetNodeJs.updateLineScore(e.LineScore, e.LineMul);
this.OnFreeGameScene(e);
}
this.initRoll();
this.changGameBg();
},
initRoll: function() {
var e = this;
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("FortuneRabbit_pan2_control").initIcons(e.defaultResult[i]);
});
},
initAutoPlayMenu: function(e) {
var t = cc.instantiate(this.pfAutoPlay);
t.getComponent("jsAutoPlay").initAutoPlayMenu(e, this.autoPleyItemCallBack.bind(this));
this.autoPlayNode.addChild(t);
},
autoPleyItemCallBack: function(e, t) {
this.nodeAutoPop.active = !1;
this.i_autoPlayTimes = e.target.autoRun;
this.updateAutoPlayTimes();
this.isAuto = !0;
this.setBtnDisable();
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btnStartSpine.node.color = new cc.Color(190, 190, 190);
this.OnGameStart();
},
OnStakeUpdate: function() {
var e = this;
this.i_totalBetIndex = this.LineBetNodeJs.i_totalIdx;
this.curBet = this.i_totalBet[this.i_totalBetIndex].bet * this.i_totalBet[this.i_totalBetIndex].mul * this.lineCount;
this.curBet2 = this.i_totalBet[this.i_totalBetIndex].bet * this.i_totalBet[this.i_totalBetIndex].mul;
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("FortuneRabbit_pan2_control").setCurBetForBounds(e.curBet2);
});
this.lblBetScore.string = OnFloatScore(this.curBet);
},
OnUpdateBetChip: function(e) {
this.i_totalBetIndex += e;
this.i_totalBetIndex < 0 ? this.i_totalBetIndex = this.i_totalBet.length - 1 : this.i_totalBetIndex > this.i_totalBet.length - 1 && (this.i_totalBetIndex = 0);
var t = this.i_totalBet[this.i_totalBetIndex];
this.LineBetNodeJs.updateLineScore(t.bet, t.mul);
},
changGameBg: function() {
this.rollBgNormal.active = !this.inFreeGame;
this.rollBgFree.active = this.inFreeGame;
this.freeLight.active = this.inFreeGame;
},
changeRabbitSpine: function(e, t) {
var i = this;
this.RabbitFree.active = e == this.RABBIT_FREE_FAKE || e == this.RABBIT_FREE_REAL;
this.RabbitIdle.active = e == this.RABBIT_IDLE || this.RABBIT_COLLECT == e;
this.RabbitWoo.active = e == this.RABBIT_NORMAL_WIN;
this.RabbitYeah.active = e == this.RABBIT_BIG_WIN;
var n = this.nodeRabbit.getComponent(cc.Sprite);
n.unscheduleAllCallbacks();
switch (e) {
case this.RABBIT_COLLECT:
var a = this.RabbitIdle.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !1, "animation2");
n.scheduleOnce(function() {
i.changeRabbitSpine(i.RABBIT_IDLE);
t && t();
}, 2);
break;

case this.RABBIT_IDLE:
var o = this.RabbitIdle.getComponent(sp.Skeleton);
PlaySkeletonAnimation(o, !0, "animation");
break;

case this.RABBIT_NORMAL_WIN:
var s = this.RabbitWoo.getComponent(sp.Skeleton);
PlaySkeletonAnimation(s, !1, "animation");
n.scheduleOnce(function() {
i.changeRabbitSpine(i.RABBIT_IDLE);
t && t();
}, .86);
break;

case this.RABBIT_BIG_WIN:
var r = this.RabbitYeah.getComponent(sp.Skeleton);
PlaySkeletonAnimation(r, !1, "animation");
n.scheduleOnce(function() {
i.changeRabbitSpine(i.RABBIT_IDLE);
t && t();
}, 1.7);
break;

case this.RABBIT_FREE_FAKE:
var c = this.RabbitFree.getComponent(sp.Skeleton);
PlaySkeletonAnimation(c, !0, "free_fake");
break;

case this.RABBIT_FREE_REAL:
var l = this.RabbitFree.getComponent(sp.Skeleton);
PlaySkeletonAnimation(l, !1, "free_real");
n.scheduleOnce(function() {
t && t();
}, .77);
}
},
changeScrollSpine: function(e) {
var t = this, i = this.ScrollSpine.getComponent(sp.Skeleton);
i.unscheduleAllCallbacks();
switch (e) {
case this.SCROLL_IDLE:
PlaySkeletonAnimation(i, !0, "idle");
break;

case this.SCROLL_FAKE_START:
PlaySkeletonAnimation(i, !1, "free_fake_start");
i.scheduleOnce(function() {
t.changeScrollSpine(t.SCROLL_FAKE_KEEP);
}, .75);
break;

case this.SCROLL_FAKE_KEEP:
PlaySkeletonAnimation(i, !0, "free_fake_keep");
break;

case this.SCROLL_FAKE_END:
PlaySkeletonAnimation(i, !1, "free_fake_end");
}
},
updateAutoPlayTimes: function() {
this.lblAotuTimes.string = -1 == this.i_autoPlayTimes ? "∞" : this.i_autoPlayTimes;
},
OnTouchStartBtn: function() {
var e = this;
if (this.btn_start.interactable && !this.isPlayFake) {
this.startTouchTime = new Date();
this.startTouchFlag = 1;
if (null == this.isRollType) {
PlaySkeletonAnimation(this.btnStartSpine, !1, "touch").setCompleteListener(function() {
PlaySkeletonAnimation(e.btnStartSpine, !0, "idle");
});
this.btn_start.schedule(function() {
e.updateLongStart();
}, .05);
}
window.mfConfig.PlayAudio("GameLobby/Audio/click", !1);
}
},
OnTouchEndBtn: function() {
if (this.btn_start.interactable && !this.isPlayFake) {
if (1 == this.startTouchFlag) if (1 == this.isRollType) this.OnGameStop(); else if (null == this.isRollType) {
this.setBtnDisable();
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btnStartSpine.node.color = new cc.Color(190, 190, 190);
this.OnGameStart();
}
this.startTouchFlag = null;
this.startTouchTime = null;
this.btn_start.unscheduleAllCallbacks();
}
},
updateLongStart: function() {
if (1 == this.startTouchFlag && this.startTouchTime && new Date() - this.startTouchTime >= 500) {
this.startTouchFlag = 2;
this.nodeAutoPop.active = !0;
}
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnButtonRollIcon: function(e, t) {
var i = e.target;
if (!(i.resData >= 15 || this.inFreeGame || this.isAuto || this.isOvering)) {
this.nodeExplain.active = !0;
var n = i.position, a = i.parent.convertToWorldSpaceAR(n), o = this.nodeExplain.convertToNodeSpaceAR(a);
this.explainBg.position = o;
this.nodeExplain.getComponent("FortuneRabbit_Explain").setExplainIcon(i.resData);
}
},
OnBtnStartClick: function(e) {
switch (e.target.name) {
case "Dis_btnBetSub":
this.OnUpdateBetChip(-1);
break;

case "Dis_btnBetAdd":
this.OnUpdateBetChip(1);
break;

case "Dis_btnBetPop":
this.nodeBetPop.active = !1;
break;

case "Dis_btnBetBg":
this.nodeBetPop.active = !this.nodeBetPop.active;
break;

case "Dis_AutoPlayLayer":
this.nodeAutoPop.active = !1;
break;

case "Dis_btnfast":
this.fastModel = !1;
this.updateRollMode();
break;

case "Dis_btnslow":
this.fastModel = !0;
this.updateRollMode();
break;

case "Dis_btnAutoStop":
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.btn_autoStop.node.active = !1;
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btnStartSpine.node.color = new cc.Color(190, 190, 190);
this.OnGameStop();
break;

case "No_BigMask":
this.closeBigWin();
break;

case "BtnGameRule":
this.helpPop.active = !0;
break;

case "No_bg":
this.nodeExplain.active = !1;
}
},
OnFreeGameScene: function(e) {
this.i_freegameTimes = e.FreeCount;
this.onGotoFreeGame(!0);
},
OnGameStart: function() {
var e = this;
if (this.CheckCanBet()) {
if (!(this.sendTime > 0)) {
this.stopRollType = null;
this.stopPans = 0;
this.isRollType = 2;
this.lastSubScore = 0;
this.sendTime = .1;
this.gameOver = null;
this.nodeBig.active = !1;
this.rollNode.stopAllActions();
this.hideLines();
this.lblCurScore.string = OnScoreToString(0, 2);
this.nodeExplain.active = !1;
this.lineWinDress.active = !1;
this.bonusWinDress.active = !1;
this.changGameBg();
this.bg_freetime.active = this.inFreeGame;
PlaySkeletonAnimation(this.rollSpine, !1, this.inFreeGame ? "red" : "blue");
this.StartRollDirect();
this.fakeReduceTime = 0;
this.isCurFake = this.isPlayFakeFreeAnim();
if (this.isCurFake || this.b_gofreeGame) {
this.isCurFake && this.schedule(this.reduceFakeFreeTime, .02);
this.PlayFakeFreeAnim(function() {
e.b_gofreeGame ? e.onGotoFreeGame() : e.OverFakeFreeAnim();
});
}
if (!this.b_gofreeGame) {
var t = this.i_totalBet[this.i_totalBetIndex], i = {};
i.LineScore = t.bet;
i.LineMul = t.mul;
this.pGameEngineJs.SendGameStart(i);
if (this.inFreeGame) {
this.i_freegameTimes--;
this.i_freegameTimes < 0 && (this.i_freegameTimes = 0);
this.lbl_freetimes.string = this.i_freegameTimes;
} else if (this.i_autoPlayTimes > 0) {
this.i_autoPlayTimes--;
this.updateAutoPlayTimes();
this.lastSubScore = this.curBet;
this.UpdateUserScore(-this.curBet);
} else {
this.lastSubScore = this.curBet;
this.UpdateUserScore(-this.curBet);
}
}
}
} else {
this.initBtnState();
this.GoldNotEnoughTip();
}
},
reduceFakeFreeTime: function(e) {
this.fakeReduceTime += e;
if (this.fakeReduceTime >= 4) {
this.fakeReduceTime = 4;
this.unschedule(this.reduceFakeFreeTime, this);
} else ;
},
OnGameStop: function() {
if (!this.gameOver) {
this.isRollType = 2;
this.btn_start.interactable = !1;
this.btnStartSpine.node.color = new cc.Color(190, 190, 190);
for (var e = 0; e < 3; e++) this.roll_pans2[e].getComponent("FortuneRabbit_pan2_control").stopRoll();
this.stopRollType = 1;
}
},
OnRollStart: function(e) {
var t = this;
if (0 == e.RetCode) {
if (this.isStopDelay) {
this.isStopDelay = null;
this.SyncUserScore();
}
this.isRollType = 1;
this.b_gofreeGame = null;
if (this.pGameEngineJs.AddFreeCount > 0) {
this.b_gofreeGame = !0;
this.i_freegameTimes += this.pGameEngineJs.AddFreeCount;
}
-1 != this.i_autoPlayTimes && this.isAuto && this.i_autoPlayTimes <= 0 && (this.isAuto = !1);
this.btn_autoStop.node.active = this.isAuto && !this.inFreeGame && !this.isPlayFake;
this.btn_start.interactable = !0;
this.btnStartSpine.node.color = new cc.Color(255, 255, 255);
this.btn_start.node.active = !this.isAuto && !this.inFreeGame && !this.isPlayFake;
this.roll_pans2.forEach(function(e, i, n) {
e.getComponent("FortuneRabbit_pan2_control").initData(t.pGameEngineJs.rollResult[i], t.inFreeGame);
});
var i = .25 - (5 - this.reqStartTime), n = .35, a = 0;
if (this.fastModel) {
i = 0;
n = 0;
}
i < 0 && (i = 0);
if (this.isCurFake) {
a = 4 - this.fakeReduceTime;
this.unschedule(this.reduceFakeFreeTime, this);
}
i += a;
for (var o = [ 0 * n, 1 * n, 2 * n ], s = 0; s < o.length; s++) this.scheduleOnce(function(e) {
this.roll_pans2[e].getComponent("FortuneRabbit_pan2_control").stopRoll();
}.bind(this, s), i + o[s]);
this.stopRollType = 2;
} else {
ManagerHelp_SetSystemLabel(Language_GetTxtByID(e.RetCode));
this.StopRollDirect();
}
},
rollPanStopCall: function(e) {
var t = this;
"prefab_fff_roll1" == e ? this.stopPans += 1 : "prefab_fff_roll2" == e ? this.stopPans += 1 : "prefab_fff_roll3" == e && (this.stopPans += 1);
if (this.stopPans >= 3) if (1 == this.stopRollType || 2 == this.stopRollType) {
var i = 0;
i = this.jsGameEngine.winScore > 0 ? .3 : this.isAuto || this.inFreeGame ? 1 : .5;
this.scheduleOnce(function() {
t.gameOverState();
}, i);
} else if (3 == this.stopRollType) {
this.UpdateUserScore(this.lastSubScore);
this.isStopDelay = this.tempIsDelay;
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.initBtnState();
}
},
gameOverState: function() {
var e = this;
if (!this.gameOver) {
this.gameOver = !0;
if (!this.inFreeGame && !this.isAuto && !this.isPlayFake) {
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btnStartSpine.node.color = new cc.Color(190, 190, 190);
this.btn_autoStop.node.active = !1;
}
this.unscheduleAllCallbacks();
if (this.jsGameEngine.winScore >= this.winLvArray[0] * this.curBet) {
var t = function() {
e.isOvering = !0;
e.onPlayBigWin(function() {
e.isOvering = null;
if (e.inFreeGame) e.onPlayScoreCallBack(); else {
e.changeRabbitSpine(e.RABBIT_BIG_WIN);
e.onPlayScoreCallBack();
}
});
};
this.jsGameEngine.WinLines.length > 0 || this.jsGameEngine.isHaveBonus ? this.showLines(function() {
t();
}) : t();
} else if (this.jsGameEngine.winScore > 0) {
this.changeRabbitSpine(this.RABBIT_NORMAL_WIN);
(this.jsGameEngine.WinLines.length > 0 || this.jsGameEngine.isHaveBonus) && this.showLines();
this.isOvering = !0;
this.PlayNormalWin(function() {
e.isOvering = null;
e.onPlayScoreCallBack();
});
} else this.onPlayScoreCallBack();
}
},
onPlayBigWin: function(e) {
window.mfConfig.PlayAudio("506/Audio/bigwin_into", !1);
var t = this.jsGameEngine.winScore, i = this.winLvArray[0] * this.curBet, n = this.winLvArray[1] * this.curBet, a = this.winLvArray[2] * this.curBet, o = "", s = "";
this.bigIdx = 0;
this.curPlayBig = 0;
this.bigNum = 0;
this.playBigCallBack = e;
if (t >= i && t < n) {
o = "bigwin";
s = "506/Audio/bigwin";
this.nodeBigSpine.winType = 1;
this.bigNum = 1;
} else if (t >= n && t < a) {
o = "magewin";
s = "506/Audio/megawin";
this.nodeBigSpine.winType = 2;
this.bigNum = 2;
} else if (t >= a) {
o = "superwin";
s = "506/Audio/superwin";
this.nodeBigSpine.winType = 3;
this.bigNum = 3;
}
this.bigSpineNames = [ "bigwin", "magewin", "superwin" ];
this.bigTime = 0;
this.canCloseBig = null;
this.bigFlyOver = null;
this.schedule(this.updateBigTime, .02);
this.FlyBigScore(o);
this.nodeBig.active = !0;
this.loadBigSpineFun();
"" != s && cc.loader.loadRes(s, cc.AudioClip, function(e, t) {
if (!e) {
cc.audioEngine.stopAll();
this.winBigAudioID = cc.audioEngine.play(t, !1, window.mfConfig.fSound);
}
}.bind(this));
},
loadBigSpineFun: function(e) {
var t = this, i = this.nodeBigSpine.getComponent(sp.Skeleton), n = "506/AGameSpine/" + this.bigSpineNames[this.bigIdx];
cc.loader.loadRes(n, sp.SkeletonData, function(n, a) {
i.skeletonData = a;
if (e) t.lastIdx == t.bigIdx ? PlaySkeletonAnimation(i, !0, "animation2") : PlaySkeletonAnimation(i, !1, "animation"); else {
PlaySkeletonAnimation(i, !1, "animation").setCompleteListener(function() {
t.bigIdx++;
t.bigNum--;
if (t.bigNum <= 0) {
t.nodeBig.active = !1;
t.playBigCallBack && t.playBigCallBack();
} else t.loadBigSpineFun();
});
}
});
},
FlyBigScore: function(e) {
var t = this, i = this.jsGameEngine.winScore;
this.lblBigScoreWin.string = OnScoreToString(i, 2);
var n = this.nodeBigScoreWin.getComponent("FortuneRabbit_text_control"), a = null;
if ("bigwin" == e) {
n.setNum(i / 1e3, 4);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(4.5), cc.fadeOut(.1), cc.callFunc(function(e) {
t.FlyBigScoreCallback();
}));
} else if ("magewin" == e) {
n.setNum(i / 1e3, 8.8);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(4.7), cc.moveBy(.1, 0, 30), cc.moveBy(.1, 0, -40), cc.moveBy(.1, 0, 10), cc.delayTime(4.3), cc.fadeOut(.1), cc.callFunc(function(e) {
t.FlyBigScoreCallback();
}));
} else if ("superwin" == e) {
n.setNum(i / 1e3, 13.6);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(4.7), cc.moveBy(.1, 0, 30), cc.moveBy(.1, 0, -40), cc.moveBy(.1, 0, 10), cc.delayTime(4.5), cc.moveBy(.1, 0, 30), cc.moveBy(.1, 0, -40), cc.moveBy(.1, 0, 10), cc.delayTime(4.3), cc.fadeOut(.1), cc.callFunc(function(e) {
t.FlyBigScoreCallback();
}));
}
a && this.nodeBigScoreWin.runAction(a);
},
FlyBigScoreCallback: function(e) {
this.inFreeGame ? window.mfConfig.PlayAudio("506/Audio/bg_free", !0) : window.mfConfig.PlayAudio("506/Audio/bg", !0);
this.nodeBig.active = !1;
this.lblBigScoreWin.string = "";
this.nodeBigScoreWin.setScale(0);
this.nodeBigScoreWin.opacity = 255;
this.nodeBigScoreWin.setPosition(0, -200);
this.nodeBigScoreWin.getComponent("FortuneRabbit_text_control").stopText();
this.nodeBigScoreWin.stopAllActions();
var t = this.jsGameEngine.winScore;
this.lblCurScore.string = OnScoreToString(t, 2);
if (this.bigFlyOver) e && e(); else {
this.bigFlyOver = !0;
var i = cc.instantiate(this.pfGameEndScore);
this.nodeViewUser[0].addChild(i);
i.getComponent("jsGameEndScore").InitGameScore(t, .3, function() {
e && e();
i.removeFromParent();
});
this.UpdateUserScore(t);
}
},
PlayNormalWin: function(e) {
var t = this, i = this.jsGameEngine.winScore;
this.nodeScoreWin.active = !0;
this.lblScoreWin.stopAllActions();
this.lblScoreWin.setScale(1);
this.lblScoreWin.setPosition(0, -50);
this.lblScoreWin.getChildByName("lbl").getComponent(cc.Label).string = OnScoreToString(i, 2);
this.nodeScoreWin.getComponent("FortuneRabbit_text_control").setNum(i / 1e3, 1);
this.lblScoreWin.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(1.2), cc.callFunc(function() {
window.mfConfig.PlayAudio("506/Audio/coins_collect", !1);
}), cc.spawn(cc.moveTo(.4, 0, -500), cc.scaleTo(.4, 0, 0)), cc.callFunc(function(i) {
t.PlayNormalWinDesc(e);
t.nodeScoreWin.active = !1;
})));
},
PlayNormalWinDesc: function(e) {
var t = this.jsGameEngine.winScore;
this.lblCurScore.string = OnScoreToString(t, 2);
var i = cc.instantiate(this.pfGameEndScore);
this.nodeViewUser[0].addChild(i);
i.getComponent("jsGameEndScore").InitGameScore(t, .3, function() {
i.removeFromParent();
e && e();
});
this.UpdateUserScore(t);
},
onPlayScoreCallBack: function() {
if (this.inFreeGame && !this.isFreeLast) {
this.isRollType = null;
var e = this.jsGameEngine.FreeTotalWin || 0;
this.lbl_freeTotal.string = OnScoreToString(e, 2);
this.OnGameStart();
this.i_freegameTimes <= 0 && (this.isFreeLast = !0);
} else if (this.isAuto) if (this.inFreeGame && this.isFreeLast) {
this.isFreeLast = null;
this.inFreeGame = null;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("506/Audio/totalwin", !1);
this.nodeFreeover.getComponent("FortuneRabbit_text_control").setNum(this.pGameEngineJs.FreeTotalWin / 1e3, 2);
var t = this.freeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
var e = this, t = this.jsGameEngine.FreeTotalWin || 0;
this.lbl_freeTotal.string = OnScoreToString(t, 2);
this.nodeFreeover.active = !1;
this.OverFakeFreeAnim(function() {
e.fastModel = e.lastFastModel;
e.updateRollMode();
e.nodeRabbit.active = !0;
e.ScrollSpine.active = !0;
e.changeRabbitSpine(e.RABBIT_IDLE);
e.changeScrollSpine(e.SCROLL_IDLE);
e.FiveWinSp.active = !1;
e.isRollType = null;
e.setBtnDisable();
e.btn_autoStop.node.active = !0;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("506/Audio/bg", !0);
e.OnGameStart();
});
}.bind(this));
} else {
this.isRollType = null;
this.setBtnDisable();
this.btn_autoStop.node.active = !0;
this.OnGameStart();
} else if (this.inFreeGame && this.isFreeLast) {
this.isFreeLast = null;
this.inFreeGame = null;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("506/Audio/totalwin", !1);
this.nodeFreeover.getComponent("FortuneRabbit_text_control").setNum(this.pGameEngineJs.FreeTotalWin / 1e3, 2);
var i = this.freeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "animation").setCompleteListener(function() {
var e = this, t = this.jsGameEngine.FreeTotalWin || 0;
this.lbl_freeTotal.string = OnScoreToString(t, 2);
this.nodeFreeover.active = !1;
this.OverFakeFreeAnim(function() {
e.fastModel = e.lastFastModel;
e.updateRollMode();
e.nodeRabbit.active = !0;
e.changeRabbitSpine(e.RABBIT_IDLE);
e.ScrollSpine.active = !0;
e.changeScrollSpine(e.SCROLL_IDLE);
e.FiveWinSp.active = !1;
e.initBtnState();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("506/Audio/bg", !0);
});
}.bind(this));
} else this.initBtnState();
},
onGotoFreeGame: function(e) {
var t = this;
this.lastFastModel = this.fastModel;
this.fastModel = !1;
this.inFreeGame = !0;
this.b_gofreeGame = null;
this.bg_freetime.active = !0;
this.lbl_freeTotal.string = OnScoreToString(0, 2);
this.lbl_freetimes.string = this.i_freegameTimes;
window.mfConfig.PlayAudio("506/Audio/bg_free", !0);
this.updateRollMode();
this.updateRollFreeMode();
this.changGameBg();
if (e) {
this.freeFakeCloudSpine.active = !0;
var i = this.freeFakeCloudSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !0, "keep");
this.nodeRabbit.active = !1;
this.ScrollSpine.active = !1;
this.FiveWinSp.active = !0;
cc.audioEngine.stopAll();
this.OnGameStart();
} else this.changeRabbitSpine(this.RABBIT_FREE_REAL, function() {
t.nodeRabbit.active = !1;
t.ScrollSpine.active = !1;
t.FiveWinSp.active = !0;
t.nodeFreeStart.active = !0;
var e = t.freeStartSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "animation").setCompleteListener(function() {
t.nodeFreeStart.active = !1;
cc.audioEngine.stopAll();
t.OnGameStart();
});
});
},
PlayFakeFreeAnim: function(e) {
var t = this;
this.btn_start.node.active = !1;
this.btn_autoStop.node.active = !1;
window.mfConfig.PlayAudio("506/Audio/free_into", !1);
this.isPlayFake = !0;
this.freeFakeEnterSpine.active = !0;
var i = this.freeFakeEnterSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "animation").setCompleteListener(function() {
t.freeFakeEnterSpine.active = !1;
});
this.freeFakeCloudSpine.active = !0;
var n = this.freeFakeCloudSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "start").setCompleteListener(function() {
PlaySkeletonAnimation(n, !0, "keep");
});
this.changeRabbitSpine(this.RABBIT_FREE_FAKE);
this.changeScrollSpine(this.SCROLL_FAKE_START);
this.nodeGameContent.stopAllActions();
this.nodeGameContent.runAction(cc.sequence(cc.scaleTo(2.5, .92), cc.callFunc(function() {
t.changeRabbitSpine(t.RABBIT_IDLE);
t.changeScrollSpine(t.SCROLL_FAKE_END);
e && e();
})));
},
OverFakeFreeAnim: function(e) {
var t = this, i = this.freeFakeCloudSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "end").setCompleteListener(function() {
t.freeFakeCloudSpine.active = !1;
});
this.nodeGameContent.stopAllActions();
this.nodeGameContent.runAction(cc.sequence(cc.scaleTo(1.5, 1), cc.callFunc(function() {
e && e();
t.isPlayFake = null;
t.unschedule(t.reduceFakeFreeTime, t);
})));
},
isPlayFakeFreeAnim: function() {
if (this.inFreeGame || this.b_gofreeGame) return !1;
var e = Math.floor(Math.random() * this.fakeFreeWeight.length);
return 1 == this.fakeFreeWeight[e];
},
updateBigTime: function(e) {
this.bigTime += e;
if (this.bigTime >= .5) {
this.unschedule(this.updateBigTime, this);
this.canCloseBig = !0;
}
},
closeBigWin: function() {
if (this.canCloseBig) {
this.winBigAudioID && cc.audioEngine.stop(this.winBigAudioID);
window.mfConfig.PlayAudio("506/Audio/finish_win", !1);
this.canCloseBig = null;
this.nodeBigScoreWin.getComponent("FortuneRabbit_text_control").stopText();
this.lastIdx = this.bigIdx;
this.bigIdx = this.nodeBigSpine.winType - 1;
this.loadBigSpineFun(!0);
var e = 0;
this.schedule(function t() {
var i = this;
if (++e >= 50) {
this.unschedule(t, this);
var n = this.nodeBigSpine.getComponent(sp.Skeleton);
n.skeletonData = null;
n.animation = null;
this.FlyBigScoreCallback(function() {
i.isOvering = null;
if (i.inFreeGame) i.onPlayScoreCallBack(); else {
i.changeRabbitSpine(i.RABBIT_BIG_WIN);
i.onPlayScoreCallBack();
}
});
}
}, .02);
}
},
showLines: function(e) {
var t = this;
this.jsGameEngine.isHaveBonus && window.mfConfig.PlayAudio("506/Audio/bonus_win", !1);
this.jsGameEngine.WinLines.length > 0 && window.mfConfig.PlayAudio("506/Audio/winning_line", !1);
this.inFreeGame || (this.jsGameEngine.isHaveBonus ? this.bonusWinDress.active = !0 : this.jsGameEngine.WinLines.length > 0 && (this.lineWinDress.active = !0));
var i = function(e, i) {
var n = e.LineID - 1;
t.reslutLines[n].active = !0;
var a = t.lineLbls[n];
a.active = i;
a.getChildByName("lbl").getComponent(cc.Label).string = OnScoreToString(e.WinScore, 2);
var o = t.lineNumsLeft[n];
o.getChildByName("normal").active = !1;
o.getChildByName("select").active = !0;
var s = t.lineNumsRight[n];
s.getChildByName("normal").active = !1;
s.getChildByName("select").active = !0;
var r = t.lineIDs[e.LineID];
t.roll_pans2.forEach(function(e, t, i) {
e.getComponent("FortuneRabbit_pan2_control").setGrayNormal(r[t]);
e.getComponent("FortuneRabbit_pan2_control").playAnim(r[t]);
});
}, n = function() {
t.jsGameEngine.rollResult.forEach(function(e, i, n) {
e.forEach(function(e, n, a) {
if (e > 6 && e < 15) {
t.roll_pans2[i].getComponent("FortuneRabbit_pan2_control").setGrayNormal(n);
t.roll_pans2[i].getComponent("FortuneRabbit_pan2_control").playAnim(n);
}
});
});
}, a = this.jsGameEngine.isHaveBonus ? -2 : -1, o = a;
if (this.isAuto) this.rollNode.runAction(cc.sequence(cc.callFunc(function() {
t.hideLines(!0);
t.jsGameEngine.WinLines.forEach(function(e, t, n) {
i(e);
});
t.jsGameEngine.isHaveBonus && n();
}), cc.delayTime(1.2), cc.callFunc(function() {
e && e();
}))); else {
var s = function() {
t.hideLines(!0);
if (o == a) {
t.jsGameEngine.WinLines.forEach(function(e, t, n) {
i(e);
});
t.jsGameEngine.isHaveBonus && n();
} else if (t.jsGameEngine.isHaveBonus && o == a + 1) n(); else {
var e = t.jsGameEngine.WinLines[o];
window.mfConfig.PlayAudio("506/Audio/icon_win", !1);
i(e, !0);
}
++o > t.jsGameEngine.WinLines.length - 1 && (o = a);
};
this.rollNode.runAction(cc.sequence(cc.callFunc(function() {
s();
}), cc.delayTime(1.2), cc.callFunc(function() {
e && e();
}), cc.delayTime(.8), cc.callFunc(function() {
t.rollNode.stopAllActions();
t.rollNode.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
s();
}), cc.delayTime(2))));
})));
}
},
hideLines: function(e) {
e && this.roll_pans2.forEach(function(e, t, i) {
e.getComponent("FortuneRabbit_pan2_control").setAllGray();
e.getComponent("FortuneRabbit_pan2_control").stopAllAnimPlay();
});
this.reslutLines.forEach(function(e, t, i) {
e.active = !1;
});
this.lineLbls.forEach(function(e, t, i) {
e.active = !1;
});
this.lineNumsLeft.forEach(function(e, t, i) {
e.getChildByName("normal").active = !0;
e.getChildByName("select").active = !1;
});
this.lineNumsRight.forEach(function(e, t, i) {
e.getChildByName("normal").active = !0;
e.getChildByName("select").active = !1;
});
},
initBtnState: function() {
this.btn_betSub.interactable = !0;
this.btn_betAdd.interactable = !0;
this.btn_betBg.interactable = !0;
this.btn_start.node.active = !0;
this.btn_autoStop.node.active = !1;
this.btn_start.interactable = !0;
this.btnStartSpine.node.color = new cc.Color(255, 255, 255);
this.isRollType = null;
},
setBtnDisable: function() {
this.btn_betSub.interactable = !1;
this.btn_betAdd.interactable = !1;
this.btn_betBg.interactable = !1;
this.btn_start.node.active = !1;
this.btn_autoStop.node.active = !1;
},
updateRollMode: function() {
var e = this;
this.btn_slow.node.active = !this.fastModel;
this.btn_fast.node.active = this.fastModel;
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("FortuneRabbit_pan2_control").setSpeed(e.fastModel);
});
},
updateRollFreeMode: function() {
var e = this;
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("FortuneRabbit_pan2_control").setIsFree(e.inFreeGame);
});
},
UpdateUserScore: function(e) {
this.lMeScore += e;
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
SyncUserScore: function() {
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
ExitTime: function() {
var e = this;
e.m_ExitTime--;
if (e.m_ExitTime <= 0) {
e.unschedule(e.ExitTime, e);
ManagerHelp_SetSystemAlert("You have not played the game for a long time, please have a rest!", function() {
if (0 == GetServerRoom().GetEventCount()) {
e.jsGameEngine.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
} else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(e.jsGameEngine.GetMeTableID(), e.jsGameEngine.GetMeChairID(), !0);
e.scheduleOnce(e.jsGameEngine.OnFrameButtonBackGame.bind(e.jsGameEngine), .01);
}
});
}
},
UpdateReqStartTime: function(e) {
this.reqStartTime += e;
if (this.reqStartTime >= 5) {
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1010));
this.StopCheckGameStartDelay();
this.StopRollDirect(!0);
} else ;
},
CheckGameStartDelay: function() {
this.isStopDelay = null;
this.tempIsDelay = null;
if (!this.inFreeGame) {
this.reqStartTime = 0;
this.schedule(this.UpdateReqStartTime, .02);
}
},
StopCheckGameStartDelay: function() {
this.unschedule(this.UpdateReqStartTime, this);
},
StartRollDirect: function() {
var e = this;
window.mfConfig.PlayAudio("506/Audio/roll_start", !1);
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("FortuneRabbit_pan2_control").initData(e.defaultResult[i], e.inFreeGame);
t.getComponent("FortuneRabbit_pan2_control").roll();
});
},
StopRollDirect: function(e) {
for (var t = [ 0, .25, .5 ], i = 0; i < t.length; i++) this.scheduleOnce(function(e) {
this.roll_pans2[e].getComponent("FortuneRabbit_pan2_control").stopRoll();
}.bind(this, i), 0 + t[i]);
this.stopRollType = 3;
this.tempIsDelay = e;
},
CheckCanBet: function() {
return !!this.inFreeGame || this.lMeScore >= this.curBet;
},
GoldNotEnoughTip: function() {
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1002));
},
OnFrameUpdateUserScore: function(e) {},
OnFrameViewDestroy: function() {
this.unscheduleAllCallbacks();
}
});
cc._RF.pop();
}, {
fs: void 0
} ],
FortuneRabbit_LineBet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6a0af5iMBVF7I+/uFn9DmOI", "FortuneRabbit_LineBet");
cc.Class({
extends: cc.Component,
properties: {
scrollViewSize: cc.ScrollView,
scrollViewMul: cc.ScrollView,
scrollViewTotal: cc.ScrollView,
lineLbl: cc.Label,
contentSize: cc.Node,
contentMul: cc.Node,
contentTotal: cc.Node,
pfBetItem: cc.Prefab
},
initData: function(e) {
this.father = e;
this.i_mulIdx = 0;
this.i_betIdx = 0;
this.i_totalIdx = 0;
this.i_lineMul = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];
this.i_betNum = [ 1e3, 2e3, 1e4 ];
this.lineCount = this.father.lineCount;
this.itemH = 80;
this.startH = 3 * this.itemH - this.itemH / 2;
},
setConfig: function(e, t, i) {
var n = this;
this.i_lineMul = t;
this.i_betNum = e;
this.i_totalBet = i;
this.itemBets = [];
this.createKongItem(2, this.contentSize);
this.i_betNum.forEach(function(e, t, i) {
var a = cc.instantiate(n.pfBetItem), o = a.getChildByName("lbl");
o.getComponent(cc.Label).string = OnFloatScore(e);
n.contentSize.addChild(a);
n.itemBets.push(o);
});
this.createKongItem(2, this.contentSize);
this.itemMuls = [];
this.createKongItem(2, this.contentMul);
this.i_lineMul.forEach(function(e, t, i) {
var a = cc.instantiate(n.pfBetItem), o = a.getChildByName("lbl");
o.getComponent(cc.Label).string = e;
a.parent = n.contentMul;
n.itemMuls.push(o);
});
this.createKongItem(2, this.contentMul);
this.itemTotals = [];
this.createKongItem(2, this.contentTotal);
this.i_totalBet.forEach(function(e, t, i) {
var a = cc.instantiate(n.pfBetItem), o = a.getChildByName("lbl");
o.getComponent(cc.Label).string = OnFloatScore(e.val * n.lineCount);
a.parent = n.contentTotal;
n.itemTotals.push(o);
});
this.createKongItem(2, this.contentTotal);
this.lineLbl.string = this.lineCount;
this.scrollViewSize.node.on("scroll-ended", this.onScrollStop, this);
this.scrollViewMul.node.on("scroll-ended", this.onScrollStop, this);
this.scrollViewTotal.node.on("scroll-ended", this.onScrollStop, this);
},
createKongItem: function(e, t) {
for (var i = 0; i < e; i++) {
var n = cc.instantiate(this.pfBetItem);
n.getChildByName("lbl").getComponent(cc.Label).string = "";
t.addChild(n);
}
},
updateLineScore: function(e, t) {
for (var i = 0; i < this.i_betNum.length; i++) if (e == this.i_betNum[i]) {
this.i_betIdx = i;
break;
}
for (var n = 0; n < this.i_lineMul.length; n++) if (t == this.i_lineMul[n]) {
this.i_mulIdx = n;
break;
}
for (var a = e * t, o = 0; o < this.i_totalBet.length; o++) if (this.i_totalBet[o].val == a) {
this.i_totalIdx = o;
break;
}
this.OnStakeUpdate();
},
onScrollStop: function(e) {
var t = e.target, i = t.getComponent(cc.ScrollView).getContentPosition().y, n = Math.abs(i - this.startH) / this.itemH;
n = n.toFixed(2);
var a = Math.round(n);
if ("ScrollViewSize" == t.name) {
this.i_betIdx = a;
for (var o = this.i_betNum[this.i_betIdx] * this.i_lineMul[this.i_mulIdx], s = 0; s < this.i_totalBet.length; s++) if (this.i_totalBet[s].val == o) {
this.i_totalIdx = s;
break;
}
} else if ("ScrollViewMul" == t.name) {
this.i_mulIdx = a;
for (var r = this.i_betNum[this.i_betIdx] * this.i_lineMul[this.i_mulIdx], c = 0; c < this.i_totalBet.length; c++) if (this.i_totalBet[c].val == r) {
this.i_totalIdx = c;
break;
}
} else if ("ScrollViewTotal" == t.name) {
this.i_totalIdx = a;
for (var l = this.i_totalBet[a], h = 0; h < this.i_betNum.length; h++) if (this.i_betNum[h] == l.bet) {
this.i_betIdx = h;
break;
}
for (var u = 0; u < this.i_lineMul.length; u++) if (this.i_lineMul[u] == l.mul) {
this.i_mulIdx = u;
break;
}
}
this.OnStakeUpdate();
},
OnStakeUpdate: function() {
this.UpdateBetScrollView();
this.UpdateMulScrollView();
this.UpdateTotalScrollView();
this.father.OnStakeUpdate();
},
UpdateBetScrollView: function() {
var e = this, t = this.i_betIdx;
this.itemBets.forEach(function(t, i, n) {
e.itemBets[i].color = new cc.Color(137, 137, 137);
e.itemBets[i].getComponent(cc.Label).fontSize = 35;
});
this.itemBets[t].color = new cc.Color(212, 212, 212);
this.itemBets[t].getComponent(cc.Label).fontSize = 40;
var i = 1 - t / (this.itemBets.length - 1);
this.scrollViewSize.scrollToPercentVertical(i);
},
UpdateMulScrollView: function() {
var e = this, t = this.i_mulIdx;
this.itemMuls.forEach(function(t, i, n) {
e.itemMuls[i].color = new cc.Color(137, 137, 137);
e.itemMuls[i].getComponent(cc.Label).fontSize = 35;
});
this.itemMuls[t].color = new cc.Color(212, 212, 212);
this.itemMuls[t].getComponent(cc.Label).fontSize = 40;
var i = 1 - t / (this.itemMuls.length - 1);
this.scrollViewMul.scrollToPercentVertical(i);
},
UpdateTotalScrollView: function() {
var e = this, t = this.i_totalIdx;
this.itemTotals.forEach(function(t, i, n) {
e.itemTotals[i].color = new cc.Color(134, 96, 51);
e.itemTotals[i].getComponent(cc.Label).fontSize = 35;
});
this.itemTotals[t].color = new cc.Color(208, 151, 84);
this.itemTotals[t].getComponent(cc.Label).fontSize = 40;
var i = 1 - t / (this.itemTotals.length - 1);
this.scrollViewTotal.scrollToPercentVertical(i);
}
});
cc._RF.pop();
}, {} ],
FortuneRabbit_RollIcon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8864fyfbOJGgbiGMDzNS4nX", "FortuneRabbit_RollIcon");
var n = [];
n[0] = "wild";
n[1] = "yuanbao";
n[2] = "qiandai";
n[3] = "hongbao";
n[4] = "tongqian";
n[5] = "firework";
n[6] = "carrot";
n[7] = "qianpiao";
n[8] = "qianpiao";
n[9] = "qianpiao";
n[10] = "qianpiao";
n[11] = "qianpiao";
n[12] = "qianpiao";
n[13] = "qianpiao";
n[14] = "qianpiao";
var a = [];
a[7] = 5;
a[8] = 10;
a[9] = 20;
a[10] = 50;
a[11] = 100;
a[12] = 200;
a[13] = 300;
a[14] = 500;
cc.Class({
extends: cc.Component,
properties: {
iconsVague: {
default: [],
type: cc.SpriteFrame
},
iconsNormal: {
default: [],
type: cc.SpriteFrame
},
paoSpine: cc.Node,
frameSpine: cc.Node,
bonusSp2: cc.Node,
lblBonus2: cc.Label,
iconSp: cc.Sprite,
lblBonus: cc.Label,
spineNode: cc.Node,
bonusFonts: [ cc.Font ],
main: cc.Node,
curBet: 1e3
},
onLoad: function() {},
start: function() {
this.paoSpine.active = !1;
this.bonusSp2.active = !1;
this.frameSpine.active = !1;
},
setIcon: function() {
var e = this.node.resData, t = this.node.resData;
if (e > 6 && e < 15) {
t = 7;
var i = this.curBet * a[e], n = this.getLblMulIdx(e);
this.lblBonus.string = OnFloatScore(i);
this.lblBonus2.string = OnFloatScore(i);
this.lblBonus.font = this.bonusFonts[n];
this.lblBonus2.font = this.bonusFonts[n];
} else 15 == e && (t = 8);
this.iconSp.node.active = !0;
this.spineNode.active = !1;
this.iconSp.spriteFrame = this.iconsNormal[t];
this.lblBonus.node.active = 7 == t;
},
randomIcon: function(e) {
var t = e;
if (e > 6 && e < 15) {
t = 7;
var i = this.curBet * a[e], n = this.getLblMulIdx(e);
this.lblBonus.string = OnFloatScore(i);
this.lblBonus2.string = OnFloatScore(i);
this.lblBonus.font = this.bonusFonts[n];
this.lblBonus2.font = this.bonusFonts[n];
} else 15 == e && (t = 8);
this.iconSp.node.active = !0;
this.spineNode.active = !1;
this.iconSp.spriteFrame = this.iconsVague[t];
this.lblBonus.node.active = 7 == t;
},
playStopAnim: function() {
if (!(this.node.resData >= 15)) {
this.spineNode.active = !0;
var e = this.spineNode.getComponent(sp.Skeleton), t = "506/AGameSpine/" + n[this.node.resData];
cc.loader.loadRes(t, sp.SkeletonData, function(t, i) {
this.iconSp.node.active = !1;
e.skeletonData = i;
0 == this.node.resData ? PlaySkeletonAnimation(e, !0, "stop") : PlaySkeletonAnimation(e, !1, "stop");
}.bind(this));
}
},
playAnim: function() {
if (!(this.node.resData >= 15)) {
this.node.zIndex = 10;
this.paoSpine.active = !0;
this.frameSpine.active = !0;
var e = this.spineNode.getComponent(sp.Skeleton), t = "506/AGameSpine/" + n[this.node.resData];
cc.loader.loadRes(t, sp.SkeletonData, function(t, i) {
e.skeletonData = i;
PlaySkeletonAnimation(e, !0, "win");
}.bind(this));
if (this.node.resData > 6 && this.node.resData < 15) {
this.bonusSp2.active = !0;
this.lblBonus.node.active = !1;
this.bonusSp2.stopAllActions();
this.bonusSp2.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1.1), cc.scaleTo(.5, 1))));
}
}
},
stopAnimReset: function() {
this.lblBonus.node.active = this.bonusSp2.active || this.lblBonus.node.active;
this.bonusSp2.stopAllActions();
this.bonusSp2.active = !1;
this.paoSpine.active = !1;
this.frameSpine.active = !1;
this.spineNode.active = !1;
this.iconSp.node.active = !0;
var e = this.spineNode.getComponent(sp.Skeleton);
e.skeletonData = null;
e.animation = null;
},
stopPlayAnim: function() {
if (!(this.node.resData >= 15)) {
this.paoSpine.active = !1;
this.frameSpine.active = !1;
var e = this.spineNode.getComponent(sp.Skeleton), t = "506/AGameSpine/" + n[this.node.resData];
cc.loader.loadRes(t, sp.SkeletonData, function(t, i) {
e.skeletonData = i;
0 == this.node.resData ? PlaySkeletonAnimation(e, !0, "stop") : PlaySkeletonAnimation(e, !1, "idle");
}.bind(this));
var i = this.node.resData > 6 && this.node.resData < 15;
this.bonusSp2.stopAllActions();
this.bonusSp2.active = !1;
this.lblBonus.node.active = i;
}
},
setGray: function(e) {
this.iconSp.node.color = e ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
this.spineNode.color = e ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
this.lblBonus.node.color = e ? new cc.Color(128, 128, 128) : new cc.Color(255, 255, 255);
},
update: function(e) {},
getLblMulIdx: function(e) {
var t = 0;
e > 6 && e < 10 ? t = 0 : e >= 10 && e < 13 ? t = 1 : e >= 13 && e <= 14 && (t = 2);
return t;
},
setCurBet: function(e) {
this.curBet = e;
}
});
cc._RF.pop();
}, {} ],
FortuneRabbit_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f6ce8BiTmpF6rO/nIp1o4BU", "FortuneRabbit_pan2_control");
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
b_stop: !1,
b_stoped: !1,
isHavei3: !1,
i_rollHeight: 780,
pGameView: cc.Node
},
onLoad: function() {
var e = this;
this.i_reslut = [];
this.normalConfig = [];
this.time4speed = .22;
this.originalY = this.isHavei3 ? 0 : -12;
this.pGameViewJs = this.pGameView.getComponent("FortuneRabbit_GameView");
if ("prefab_fff_roll1" == this.node.name) {
[ 12, 8, 13, 8, 8, 8, 9, 14, 8, 8, 8, 8, 8, 11, 8, 10, 7, 2, 5, 4, 7, 1, 5, 7, 4, 1, 7, 6, 6, 6, 6, 7, 5, 5, 5, 1, 4, 4, 6, 6, 7, 6, 14, 5, 3, 7, 6, 6, 8, 6, 6, 7, 1, 6, 7, 6, 4, 7, 3, 3, 7, 5, 7, 5, 6, 8, 6, 7, 6, 7, 7, 5, 7, 4, 1, 8, 4, 6, 7, 4, 9, 3, 6, 6, 1, 3, 7, 3, 4, 5, 4, 7, 8, 9, 8, 1, 6, 6, 7, 5, 6, 6, 7, 8, 13, 7, 5, 6, 5, 4, 7, 7, 4, 7, 7, 4, 2, 7, 1, 6, 6, 1, 4, 5, 11, 5, 8, 5, 7, 5, 7, 12, 7, 4, 7, 5, 1, 4, 5, 5, 6, 7, 3, 5, 5, 6, 7, 7, 5, 5, 1, 4, 6, 7, 6, 2, 15, 1, 8, 14, 3, 7, 7, 2, 5, 7, 7, 4, 10, 2, 7, 5, 7, 6, 6, 4, 7, 5, 4, 7, 4, 6, 3, 3, 7, 7, 5, 6, 7, 5, 6, 5, 7, 4, 5, 1, 1, 7, 5, 5, 6, 6, 6, 7, 6, 7, 4, 5, 6, 7, 7, 6, 8, 6, 7, 5, 6, 8, 6, 4, 15 ].forEach(function(t, i, n) {
e.normalConfig.push(t - 1);
});
} else if ("prefab_fff_roll2" == this.node.name) {
[ 12, 8, 8, 11, 8, 14, 8, 9, 8, 13, 8, 10, 8, 8, 8, 8, 7, 5, 7, 7, 7, 1, 2, 5, 7, 7, 15, 4, 2, 6, 8, 5, 7, 2, 8, 7, 5, 6, 6, 6, 6, 5, 4, 5, 8, 4, 4, 6, 6, 6, 5, 7, 4, 1, 7, 5, 6, 7, 5, 6, 7, 8, 5, 6, 5, 3, 6, 1, 1, 6, 4, 6, 5, 5, 7, 5, 6, 6, 7, 7, 4, 6, 2, 8, 7, 2, 5, 7, 3, 7, 1, 6, 5, 10, 1, 7, 1, 3, 5, 3, 7, 7, 7, 7, 8, 5, 6, 7, 4, 6, 6, 7, 7, 7, 7, 4, 6, 5, 1, 7, 7, 4, 7, 7, 1, 14, 6, 8, 5, 5, 8, 3, 5, 7, 4, 7, 5, 6, 4, 6, 7, 7, 3, 7, 4, 8, 4, 4, 4, 5, 7, 1, 4, 4, 5, 7, 7, 5, 5, 9, 3, 14, 6, 6, 6, 13, 7, 7, 7, 12, 6, 7, 9, 5, 7, 7, 3, 7, 7, 6, 4, 7, 5, 5, 1, 6, 4, 1, 7, 3, 5, 11, 8, 6, 6, 4, 5, 6, 4, 6, 4, 6, 7, 4, 7, 7, 6, 3, 1, 6, 5, 6, 6, 6, 6, 1, 5, 6, 5, 6, 15 ].forEach(function(t, i, n) {
e.normalConfig.push(t - 1);
});
} else {
[ 8, 8, 8, 10, 8, 8, 8, 14, 12, 8, 8, 8, 11, 8, 9, 13, 4, 8, 14, 6, 5, 4, 3, 6, 5, 7, 4, 7, 7, 7, 12, 1, 5, 7, 7, 8, 3, 1, 6, 7, 5, 6, 1, 7, 7, 5, 6, 6, 6, 6, 5, 4, 5, 7, 3, 3, 5, 6, 6, 5, 7, 4, 1, 7, 5, 5, 7, 5, 6, 7, 7, 5, 6, 5, 1, 6, 1, 11, 6, 4, 6, 4, 5, 7, 5, 6, 5, 7, 7, 4, 6, 1, 7, 7, 1, 5, 7, 2, 7, 14, 1, 6, 5, 8, 9, 6, 10, 2, 4, 1, 7, 7, 7, 7, 7, 5, 6, 6, 4, 6, 6, 7, 7, 7, 7, 4, 6, 5, 1, 7, 7, 3, 7, 7, 1, 8, 6, 7, 5, 5, 8, 2, 5, 7, 4, 7, 4, 6, 3, 6, 7, 7, 3, 7, 4, 8, 3, 4, 4, 5, 6, 9, 4, 4, 5, 7, 6, 5, 5, 8, 1, 6, 6, 5, 13, 7, 7, 7, 8, 6, 7, 7, 4, 6, 6, 2, 7, 7, 6, 4, 7, 5, 5, 15, 6, 4, 8, 6, 2, 4, 7, 7, 6, 6, 4, 5, 6, 3, 6, 3, 6, 8, 4, 7, 6, 5, 1, 5, 6, 5, 15 ].forEach(function(t, i, n) {
e.normalConfig.push(t - 1);
});
}
this.freeConfig = [ 7, 8, 9, 10, 11, 12, 13, 14 ];
for (var t = 1.5 * this.freeConfig.length, i = 0; i < t; i++) this.freeConfig.push(15);
this.curCfgArr = this.normalConfig;
},
start: function() {},
initIcons: function(e) {
this.i_reslut = e;
this.setExplainData();
this.setIcons();
this.playStopAnim(this.sp_mid);
},
initData: function(e, t) {
this.i_reslut = e;
this.isFree = t;
this.curCfgArr = this.isFree ? this.freeConfig : this.normalConfig;
this.setExplainData();
},
setExplainData: function() {
this.sp_top.getChildByName("i0").resData = this.i_reslut[0];
this.sp_top.getChildByName("i1").resData = this.i_reslut[1];
this.sp_top.getChildByName("i2").resData = this.i_reslut[2];
this.sp_mid.getChildByName("i0").resData = this.i_reslut[0];
this.sp_mid.getChildByName("i1").resData = this.i_reslut[1];
this.sp_mid.getChildByName("i2").resData = this.i_reslut[2];
if (this.isHavei3) {
this.sp_top.getChildByName("i3").resData = this.i_reslut[3];
this.sp_mid.getChildByName("i3").resData = this.i_reslut[3];
}
},
setIcons: function() {
if (this.sp_top.position.y <= 0) {
this.setIcons2node(this.sp_top);
this.randomIcons(this.sp_mid);
} else {
this.setIcons2node(this.sp_mid);
this.randomIcons(this.sp_top);
}
},
setIcons2node: function(e) {
e.getChildByName("i0").getComponent("FortuneRabbit_RollIcon").setIcon(this.i_reslut[0]);
e.getChildByName("i1").getComponent("FortuneRabbit_RollIcon").setIcon(this.i_reslut[1]);
e.getChildByName("i2").getComponent("FortuneRabbit_RollIcon").setIcon(this.i_reslut[2]);
this.isHavei3 && e.getChildByName("i3").getComponent("FortuneRabbit_RollIcon").setIcon(this.i_reslut[3]);
},
randomIcons: function(e) {
var t = Math.floor(Math.random() * this.curCfgArr.length), i = this.curCfgArr[t], n = Math.floor(Math.random() * this.curCfgArr.length), a = this.curCfgArr[n], o = Math.floor(Math.random() * this.curCfgArr.length), s = this.curCfgArr[o], r = Math.floor(Math.random() * this.curCfgArr.length), c = this.curCfgArr[r];
e.getChildByName("i0").getComponent("FortuneRabbit_RollIcon").randomIcon(i);
e.getChildByName("i1").getComponent("FortuneRabbit_RollIcon").randomIcon(a);
e.getChildByName("i2").getComponent("FortuneRabbit_RollIcon").randomIcon(s);
this.isHavei3 && e.getChildByName("i3").getComponent("FortuneRabbit_RollIcon").randomIcon(c);
},
roll: function() {
this.setIconTouchEnable(!1);
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.resetAllIcon();
var e = this;
this.b_stop = !1;
this.b_stoped = !1;
if (this.sp_top.position.y <= 0) {
var t = this.sp_top;
this.sp_top = this.sp_mid;
this.sp_mid = t;
}
this.n_act1 = 1;
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act1++;
if (e.n_act1 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t);
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
window.mfConfig.PlayAudio("506/Audio/stop", !1);
e.playStopAnim(t);
}), cc.moveBy(.05, cc.v2(0, -7)), cc.moveBy(.05, cc.v2(0, 11)), cc.moveTo(.1, cc.v2(0, e.originalY)), cc.callFunc(function(t) {
e.sp_mid.setPosition(0, e.i_rollHeight);
e.pGameViewJs.rollPanStopCall(e.node.name);
e.randomIcons(e.sp_mid);
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.n_act2 = 0;
var n = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act2++;
if (e.n_act2 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t);
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
window.mfConfig.PlayAudio("506/Audio/stop", !1);
e.playStopAnim(t);
}), cc.moveBy(.05, cc.v2(0, -7)), cc.moveBy(.05, cc.v2(0, 11)), cc.moveTo(.1, cc.v2(0, e.originalY)), cc.callFunc(function(t) {
e.sp_top.setPosition(0, e.i_rollHeight);
e.pGameViewJs.rollPanStopCall(e.node.name);
e.randomIcons(e.sp_top);
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.sp_top.runAction(cc.repeatForever(i));
this.sp_mid.runAction(cc.repeatForever(n));
},
stopRoll: function() {
this.b_stop = !0;
},
setSpeed: function(e) {
this.time4speed = e ? .11 : .22;
},
setIsFree: function(e) {
this.isFree = e;
this.curCfgArr = this.isFree ? this.freeConfig : this.normalConfig;
},
setCurBetForBounds: function(e) {
this.sp_top.getChildByName("i0").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_top.getChildByName("i1").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_top.getChildByName("i2").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_mid.getChildByName("i0").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_mid.getChildByName("i1").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_mid.getChildByName("i2").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
if (this.isHavei3) {
this.sp_top.getChildByName("i3").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
this.sp_mid.getChildByName("i3").getComponent("FortuneRabbit_RollIcon").setCurBet(e);
}
},
setGrayNormal: function(e) {
this.curNode.getChildByName("i" + e) && this.curNode.getChildByName("i" + e).getComponent("FortuneRabbit_RollIcon").setGray(!1);
},
playAnim: function(e) {
this.curNode.getChildByName("i" + e) && this.curNode.getChildByName("i" + e).getComponent("FortuneRabbit_RollIcon").playAnim();
},
playStopAnim: function(e) {
this.curNode = e;
e.getChildByName("i0").getComponent("FortuneRabbit_RollIcon").playStopAnim();
e.getChildByName("i1").getComponent("FortuneRabbit_RollIcon").playStopAnim();
e.getChildByName("i2").getComponent("FortuneRabbit_RollIcon").playStopAnim();
this.isHavei3 && e.getChildByName("i3").getComponent("FortuneRabbit_RollIcon").playStopAnim();
this.setIconTouchEnable(!0);
},
setAllGray: function() {
for (var e = this.isHavei3 ? 4 : 3, t = 0; t < e; t++) this.curNode.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").setGray(!0);
},
stopAllAnimPlay: function() {
for (var e = this.isHavei3 ? 4 : 3, t = 0; t < e; t++) {
this.curNode.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").stopPlayAnim();
this.curNode.getChildByName("i" + t).zIndex = t;
}
},
setIconTouchEnable: function(e) {
this.sp_top.getChildByName("i0").getComponent(cc.Button).interactable = e;
this.sp_top.getChildByName("i1").getComponent(cc.Button).interactable = e;
this.sp_top.getChildByName("i2").getComponent(cc.Button).interactable = e;
this.sp_mid.getChildByName("i0").getComponent(cc.Button).interactable = e;
this.sp_mid.getChildByName("i1").getComponent(cc.Button).interactable = e;
this.sp_mid.getChildByName("i2").getComponent(cc.Button).interactable = e;
if (this.isHavei3) {
this.sp_top.getChildByName("i3").getComponent(cc.Button).interactable = e;
this.sp_mid.getChildByName("i3").getComponent(cc.Button).interactable = e;
}
},
resetAllIcon: function() {
for (var e = this.isHavei3 ? 4 : 3, t = 0; t < e; t++) {
this.sp_top.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").stopAnimReset();
this.sp_mid.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").stopAnimReset();
this.sp_top.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").setGray(!1);
this.sp_mid.getChildByName("i" + t).getComponent("FortuneRabbit_RollIcon").setGray(!1);
this.sp_top.getChildByName("i" + t).zIndex = t;
this.sp_mid.getChildByName("i" + t).zIndex = t;
}
}
});
cc._RF.pop();
}, {} ],
FortuneRabbit_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5135uit61As5bteaPXO7TG", "FortuneRabbit_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {
this.isStop = !1;
},
setNum: function(e, t) {
this.isStop = !1;
this.i_num = parseFloat(e);
this.i_cur_num = 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.isStop) this.text.string = "" + this.i_num.toFixed(2); else if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
}
},
stopText: function() {
this.isStop = !0;
}
});
cc._RF.pop();
}, {} ],
GameDelegate: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ce04freJMFEeYIc/OpZIJTx", "GameDelegate");
e("GameSocket");
window.CSocketDelegate = cc.Class({
extends: cc.Component,
ctor: function() {
this.pGameSocket = null;
},
OnMissionInitSocket: function(e, t, i, n) {
this.pGameSocket = new window.GameSocket();
this.pGameSocket.SetDelegate(n);
this.pGameSocket.OnConnect(e, t);
this.pGameSocket.SendCompilatio();
this.pGameSocket.name = i;
this.name = i;
},
OnMissionSendData: function(e, t, i, n, a) {
this.pGameSocket && this.pGameSocket.OnMissionSendData(e, t, i, n, a);
},
SendData: function(e, t, i, n) {
this.pGameSocket && this.pGameSocket.OnMissionSendData(e, t, i, n);
},
SendStruct: function(e, t, i) {
this.pGameSocket && this.pGameSocket.OnMissionSendData(e, t, i.GetDataBytes(), i.GetDataSize());
},
OnSocketRead: function(e, t, i, n) {},
OnMissionRead: function(e, t, i, n) {
return !1;
},
OnReadEventBegan: function(e, t, i, n) {
return !1;
},
OnReadEventEnded: function(e, t, i, n) {
return !1;
},
OnMissionGameEngine: function(e, t, i) {},
OnMissionGameFrame: function(e, t, i) {},
OnMissionClosed: function(e, t) {
if (this.pGameSocket) {
this.OnMissionSendData(MDM_KN_COMMAND, SUB_KN_SHUT_DOWN_SOCKET, 0, 0);
this.pGameSocket.OnResetData();
this.pGameSocket = null;
}
this.OnMissionRelease(e, t);
},
OnMissionDetectSocket: function() {
this.OnMissionSendData(window.MDM_KN_COMMAND, window.SUB_KN_DETECT_SOCKET, 0, 0);
},
OnMissionOpen: function(e) {},
OnMissionRelease: function(e, t) {
return !1;
},
OnRetainEvent: function() {
this.pGameSocket && this.pGameSocket.RetainEvent();
return 0;
},
GetEventCount: function() {
return this.pGameSocket ? this.pGameSocket.GetEventCount() : 0;
},
OnDonedEvent: function(e) {
1 == arguments.length ? this.pGameSocket && this.pGameSocket.DonedEvent(e) : this.pGameSocket && this.pGameSocket.DonedEvent();
},
OnSetSocketWait: function(e) {
this.pGameSocket && (this.pGameSocket.bSocketWait = e);
},
GetEventCheck: function() {
return this.pGameSocket;
},
OnMissionUpdate: function(e) {},
OnFlushSendData: function(e) {}
});
cc._RF.pop();
}, {
GameSocket: "GameSocket"
} ],
GameFrameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fbf36FpK0lARJorIiq4VMve", "GameFrameEngine");
e("GameDelegate");
window.GameFrameEngine = cc.Class({
extends: CSocketDelegate,
statics: {
instances: null
},
bAutoReady: !1,
bReadyGame: !1,
bCloseGame: !1,
bFrameGameStart: !1,
properties: {
nodeRootCanvas: cc.Node,
bGame100: 0,
nodeGameStandUp: cc.Node,
nodeGameStart: cc.Node,
nodeGoldTransPos: cc.Node,
nodeGameSet: cc.Node,
nodeGameTuoGuan: cc.Node,
nodeWaitPlayer: cc.Node,
bFrameClose: !0,
_jsControlEvent: null
},
SetControlEvent: function(e) {
this._jsControlEvent = e;
},
GetControlEvent: function() {
return this._jsControlEvent;
},
OnCloseGameEngine: function() {
this.bReadyGame = !1;
this.bCloseGame = !0;
return this.bFrameClose;
},
OnLinkAgainConnect: function() {
this.bReadyGame = !1;
},
OnInitFrameData: function() {
this.stServerAttribute = GetServerRoom().stServerAttribute;
this.stUserAttribute = GetServerRoom().stUserAttribute;
this.bGame100 = GCF_IsGameKind100(this.stServerAttribute.wKindID);
this.aryLockClientUser = [];
this.bFrameClose = !0;
this.bAutoReady = !1;
this.jsMeUserItem = PlayerManager.GetMeUserItem();
this.SetMeChairID(this.jsMeUserItem.GetChairID());
this.SetMeTableID(this.jsMeUserItem.GetTableID());
this.SetMeUserID(this.jsMeUserItem.GetUserID());
this.jsClientUserItem = [];
this.cbClientUserGender = [];
this.stOnLineUser = [];
this.stOnLineUserCache = [];
},
ResetFrameEngine: function() {
GameFrameView.instances && GameFrameView.instances.ResetFrameView();
},
ResetAllowAvertCheatModeEngine: function() {
GameFrameView.instances && GameFrameView.instances.ResetAllowAvertCheatModeView();
},
ResetGameEngine: function() {
return -1;
},
OnFrameEngineLoad: function() {},
OnFrameEngineStart: function() {},
OnFrameEngineEnable: function() {},
OnFrameEngineDisable: function() {},
OnEngineUpdate: function(e) {},
onLoad: function() {
this.OnInitFrameData();
this.OnFrameEngineLoad();
this.OnFrameYYRegister();
GameFrameEngine.instances = this;
GetServerRoom().jsGameFrameEngine = this;
GetServerRoom().jsEventDelegate = this;
this.IsAllowAvertCheatMode() && this.OnWaitDistribute();
cc.audioEngine.stopAll();
cc.audioEngine.uncacheAll();
},
onEnable: function() {
this.OnFrameEngineEnable();
},
onDisable: function() {
this.OnFrameEngineDisable();
GameFrameEngine.instances = null;
GameFrameView.instances = null;
},
start: function() {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
if (GetServerRoom().GetGameClient() == GC_WAIT && this.IsAllowAvertCheatMode()) {
var e = PlayerManager.GetMeUserItem();
this.OnEventUserEnter(e, !1);
}
this.OnFrameEngineStart();
},
update: function(e) {
this.OnEngineUpdate(e);
GameFrameView.instances && GameFrameView.instances.OnViewUpdate(e);
},
OnEngineMsUpdate: function(e) {
GameFrameView.instances && GameFrameView.instances.OnViewMsUpdate(e);
},
OnFrameYYRegister: function() {},
SetGameStatus: function(e) {
GetServerRoom().cbGameStatus = e;
},
GetGameStatus: function() {
return GetServerRoom().cbGameStatus;
},
GetServerUserCount: function() {
return this.stServerAttribute.wChairCount;
},
SetClientUserItem: function(e, t) {
this.jsClientUserItem[e] = t;
null != t && null != t && (this.cbClientUserGender[e] = t.GetFaceID() % 2 == 0 ? GENDER_MANKIND : GENDER_FEMALE);
},
GetClientUserItem: function(e) {
YQYAssertAlert("number" == typeof e, "GameFrameEngine.GetClientUserItem.Error.wChairID is not number");
return this.jsClientUserItem[e];
},
GetClientUserScore: function(e) {
return null == this.jsClientUserItem[e] ? 0 : this.jsClientUserItem[e].GetUserScore();
},
GetClientUserID: function(e) {
YQYAssertAlert("number" == typeof e, "GameFrameEngine.GetClientUserID.Error.wChairID is not number");
var t = this.jsClientUserItem[e];
return t ? t.GetUserID() : INVALID_DWORD;
},
GetClientUserGender: function(e) {
return this.cbClientUserGender[e];
},
SwitchViewID: function(e) {
function t(t) {
return e.apply(this, arguments);
}
t.toString = function() {
return e.toString();
};
return t;
}(function(e) {
YQYAssertAlert("number" == typeof e, "GameFrameEngine.SwitchViewID.Error.wChairID is not number");
return e == INVALID_WORD ? INVALID_CHAIR : SwitchViewID(e, this.wMeChairID, this.stServerAttribute.wChairCount);
}),
SwitchChairID: function(e) {
function t(t) {
return e.apply(this, arguments);
}
t.toString = function() {
return e.toString();
};
return t;
}(function(e) {
YQYAssertAlert("number" == typeof e, "GameFrameEngine.SwitchChairID.Error.wViewID is not number");
return SwitchChairID(e, this.wMeChairID, this.stServerAttribute.wChairCount);
}),
GetNextChairID: function(e) {
return (e + 1) % this.stServerAttribute.wChairCount;
},
GetMeTableID: function() {
return this.wMeTableID;
},
SetMeTableID: function(e) {
this.wMeTableID = e;
},
SetMeUserID: function(e) {
this.dwMeUserID = e;
},
GetMeUserID: function(e) {
return this.dwMeUserID;
},
GetMeUserItem: function() {
return PlayerManager.GetMeUserItem();
},
GetMeChairID: function() {
return this.wMeChairID;
},
SetMeChairID: function(e) {
this.wMeChairID = e;
},
IsMeChairID: function(e) {
return this.wMeChairID == e;
},
IsGameCheatUser: function() {
var e = PlayerManager.GetMeUserItem();
return CUserRight_IsGameCheatUser(e.GetUserRight());
},
GetUserRight: function() {
return this.stUserAttribute.dwUserRight;
},
GerMasterRight: function() {
return this.stUserAttribute.dwMasterRight;
},
IsTableUser: function(e) {
return this.wMeTableID == e.GetTableID() && e.GetChairID() < this.stServerAttribute.wChairCount;
},
OnUpdateTableStatus: function(e) {},
OnFrameButtonBackGame: function(e, t) {
this.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
},
OnFrameButtonRestartGame: function(e, t) {
GetServerRoom().SetGameClient(GC_NONE);
GetServerRoom().OnLinkAgainConnect();
GetServerRoom().SetOperateName("CreatePrivateTableReCreate");
},
IsAllowAvertCheatMode: function() {
return ServerRule.IsAllowAvertCheatMode(this.stServerAttribute.dwServerRule);
},
OnWaitDistribute: function() {
this.nodeWaitPlayer && (this.nodeWaitPlayer.active = !0);
},
OnFrameButtonGameStart: function() {
if (PlayerManager.GetMeUserItem().GetUserScore() < this.stServerAttribute.lMinEnterScore) {
GetServerRoom().OnMissionClosed(window.GST_NORMAL);
ManagerHelp_SetSystemAlert("It takes at least " + OnScoreToString(this.stServerAttribute.lMinEnterScore) + "gold coins to continue the game.", function() {
GetServerRoom().CloseGameClient(!0);
});
} else if (this.IsAllowAvertCheatMode()) {
GetServerRoom().SendPacketWaitDistribute();
this.OnWaitDistribute();
this.bReadyGame = !1;
this.ResetAllowAvertCheatModeEngine();
} else this.SendUserReady();
},
OnFrameButtonGameSet: function() {
var e = this;
YQYAssertAlert(GameFrameView.instances);
GameFrameView.instances && GameFrameView.instances.strGameSetLayerPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strGameSetLayerPath, cc.Prefab, function(t, i) {
if (i) {
var n = cc.instantiate(i);
e.nodeRootCanvas.addChild(n, 100);
n.szAddType = "AddChild";
}
});
},
OnFrameButtonCutoverTable: function() {
GetServerRoom().SendPacketCutoverTable();
},
OnFrameOnLineUser: function(e, t, i) {
if (YQYAssertAlertStructSizeByLocalMultiple(_OnLineUserInfo, t, "_OnLineUserInfo")) return !1;
var n = sizeof(_OnLineUserInfo);
this.stOnLineUser = [];
var a = t / n;
if (a > 0) for (var o = 0; o < a; o++) {
var s = new _OnLineUserInfo();
s = e.slice(o * n, (o + 1) * n);
var r = new _OnLineUserInfo();
r.init(s);
this.stOnLineUser.push(r);
}
var c = SUB_GF_TOP_USER == i;
GameFrameView.instances && GameFrameView.instances.OnUpdateOnLineUser(this.stOnLineUser, c);
return !0;
},
OnFrameOnLineUserEx: function(e, t, i) {
if (YQYAssertAlertStructSizeByLocalMultiple(_OnLineUserInfo, t - 2, "_OnLineUserInfo")) return !1;
var n = sizeof(_OnLineUserInfo), a = new _OnLineUserTag();
a.init(e.slice(0, 2));
var o = a.wSendTag;
0 == o && (this.stOnLineUserCache = []);
var s = (t - 2) / n;
if (s > 0) for (var r = 0; r < s; r++) {
var c = new _OnLineUserInfo();
c = e.slice(r * n + 2, (r + 1) * n + 2);
var l = new _OnLineUserInfo();
l.init(c);
this.stOnLineUserCache.push(l);
}
var h = SUB_GF_TOP_USER == i;
if (GameFrameView.instances && (0 == o || 2 == o)) {
this.stOnLineUser = this.stOnLineUserCache;
GameFrameView.instances.OnUpdateOnLineUser(this.stOnLineUser, h);
this.stOnLineUserCache = [];
}
return !0;
},
OnFrameGameStart: function() {
if (1 != this.bFrameGameStart) {
this.bFrameGameStart = !0;
this.nodeWaitPlayer && (this.nodeWaitPlayer.active = !1);
GameFrameView.instances && GameFrameView.instances.OnFrameViewGameStart();
this.OnLockGameClientUser();
this.SetGameStatus(GAME_STATUS_PLAY);
this.SetFrameButtonStatus();
}
},
OnFrameGameEnded: function(e) {
this.bFrameGameStart = !1;
this.SetGameStatus(GAME_STATUS_FREE);
this.SetFrameButtonStatus();
},
SetFrameButtonStatus: function() {
if (this.GetGameStatus() > GAME_STATUS_FREE) {
this.nodeGameStart && (this.nodeGameStart.active = !1);
this.nodeGameStandUp && (this.nodeGameStandUp.active = !0);
this.nodeGameTuoGuan && (this.nodeGameTuoGuan.active = !0);
} else if (this.GetGameStatus() == GAME_STATUS_FREE) {
this.nodeGameStart && (this.nodeGameStart.active = !0);
this.nodeGameStandUp && (this.nodeGameStandUp.active = !0);
this.nodeGameTuoGuan && (this.nodeGameTuoGuan.active = !1);
}
},
OnEventLookonMode: function(e, t) {
return -1;
},
OnEventGameMessage: function(e, t, i) {
return -1;
},
OnEventSceneMessage: function(e, t, i, n) {
return -1;
},
OnEventInsureMessage: function(e, t, i) {
return -1;
},
OnEventFrameMessage: function(e, t, i) {
return -1;
},
OnEventGameServerMessage: function(e, t, i, n) {
MDM_GR_STATUS == e && SUB_GR_PRIVATE_TABLE_STATUS_INFO == t && cc.log("--------------------------------");
if (MDM_GF_FRAME == e) {
if (SUB_GF_TOP_USER == t) return this.OnFrameOnLineUser(i, n, t);
if (SUB_GF_ONLINE_USER == t) return this.OnFrameOnLineUserEx(i, n, t);
if (SUB_GF_GAME_SCENE == t) {
this.GetGameStatus() > GAME_STATUS_FREE && this.nodeWaitPlayer && (this.nodeWaitPlayer.active = !1);
return !1;
}
}
return !1;
},
OnReadEventEnded: function(e, t, i, n) {
this.bReadyGame && e == MDM_GF_FRAME && SUB_GF_GAME_SCENE;
},
OnLockGameClientUser: function() {
this.aryLockClientUser.length = 0;
this.aryLockClientUser = this.jsClientUserItem.concat();
},
GetLockGameClientUser: function(e) {
return this.aryLockClientUser[e];
},
OnEventUserEnter: function(e, t) {
if (null != this.jsMeUserItem && null != this.jsMeUserItem) {
if (e.GetUserID() == this.jsMeUserItem.GetUserID()) {
this.SetMeChairID(e.GetChairID());
this.SetMeTableID(e.GetTableID());
} else if (this.GetMeChairID() == INVALID_CHAIR) return;
GameFrameView.instances.OnUpdateGameInfo();
if (e.GetUserStatus() < US_READY && this.bAutoReady && e.GetUserID() == this.dwMeUserID && this.GetGameStatus() == GAME_STATUS_FREE) {
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
i.bCloseGame || i.OnFrameButtonGameStart();
})));
}
if (e.GetTableID() == this.jsMeUserItem.GetTableID()) {
this.SetClientUserItem(e.GetChairID(), e);
return GameFrameView.instances ? GameFrameView.instances.OnFrameEventUserEnter(e, t) : -1;
}
}
},
OnEventUserLeave: function(e, t, i) {
this.SetClientUserItem(t, null);
return GameFrameView.instances ? GameFrameView.instances.OnFrameEventUserLeave(e, t, i) : -1;
},
OnEventUserScore: function(e, t) {
return GameFrameView.instances ? GameFrameView.instances.OnFrameEventUserScore(e, t) : -1;
},
OnEventUserStatus: function(e, t, i) {
for (var n = 0; n < this.stServerAttribute.wChairCount; n++) if (e.GetUserID() == this.GetClientUserID(n) && e.GetTableID() == INVALID_TABLE) {
if (this.bDismissRotStatus) continue;
return this.OnEventUserLeave(e, n, i);
}
if (GameFrameView.instances && e.GetTableID() == this.GetMeTableID()) {
this.SetClientUserItem(e.GetChairID(), e);
return GameFrameView.instances.OnFrameEventUserStatus(e, t, i);
}
return -1;
},
OnEventUserChat: function(e, t) {
return GameFrameView.instances ? GameFrameView.instances.OnEventUserChat(e, t) : -1;
},
OnEventUserImage: function(e, t) {
return GameFrameView.instances ? GameFrameView.instances.OnEventUserImage(e, t) : -1;
},
OnEventUserPlayRecorder: function(e, t) {
return -1;
},
OnEventUserEnderRecorder: function() {
return -1;
},
OnEventUserControl: function(e, t) {
return -1;
},
OnEventUserPropertySuccess: function(e, t, i, n) {
return -1;
},
OnEventUserPropertyFailure: function(e, t) {
return -1;
},
OnSocketSubPropertyEffect: function(e, t) {
return -1;
},
OnEventUserPropertyMessage: function(e, t, i, n) {
return -1;
},
OnEventUserPropertyHorn: function(e, t, i, n, a) {
return -1;
},
SendData: function(e, t, i, n) {
GetServerRoom().SendData(e, t, i, n);
},
SendGameData: function(e, t, i) {
GetServerRoom().SendData(MDM_GF_GAME, e, t, i);
},
SendGameStruct: function(e, t) {
GetServerRoom().SendStruct(MDM_GF_GAME, e, t);
},
SendPacketOwnerEnabelPrivateTable: function() {
GetServerRoom().SendData(MDM_GR_USER, SUB_GR_USER_OWNER_ENABLE_PRIVATE_TABLE, 0, 0);
},
SendPacketStandUp: function(e, t, i, n) {
var a = this.GetGameStatus() == GAME_STATUS_PLAY, o = "After exiting will be trusteeship, does not affect the normal settlement, sure need to exit?";
arguments.length > 1 && (a = t);
arguments.length > 2 && (o = n);
if (0 == GetServerRoom().GetEventCount()) this.OnFrameButtonBackGame(); else {
var s = this;
if (a) ManagerHelp_SetSystemAlert(o, function(e, t) {
i && i(t);
if (t == window.YQ_SYS_OK) {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(s.GetMeTableID(), s.GetMeChairID(), !0);
s.scheduleOnce(s.OnFrameButtonBackGame.bind(this), .01);
}
}, !0); else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(this.GetMeTableID(), this.GetMeChairID(), !0);
s.scheduleOnce(s.OnFrameButtonBackGame.bind(this), .01);
}
}
},
OnFrameUserTuoGuanStatus: function() {
return GetServerRoom().GetUserTuoGuanStatus();
},
OnFrameUserTuoGuanScore: function() {
return GetServerRoom().GetUserTuoGuanScore();
},
SetFrameUserTuoGuanStatus: function(e, t) {
GetServerRoom().SetUserTuoGuanStatus(e, t);
},
SendUserReady: function(e, t) {
YQYAssertAlert(0 === arguments.length || 2 === arguments.length, "GameFrameEngine.SendUserReady.arguments.Error");
var i = 2 == arguments.length ? e : 0, n = 2 == arguments.length ? t : 0;
GetServerRoom().SendData(MDM_GF_FRAME, SUB_GF_USER_READY, i, n);
},
SendReCreatePrivateTable: function() {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetServerRoom().OnSendReCreate();
},
SendUserExpression: function(e) {
var t = PlayerManager.GetMeUserItem(), i = new CMD_GF_C_UserExpression();
i.dwTargetUserID = t.GetUserID();
"mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType ? SetArrayFormUtf8(i.szServerId, e) : i.lItemIndex = e;
GetServerRoom().SendData(MDM_GF_FRAME, SUB_GF_USER_EXPRESSION, i.GetDataBytes(), i.GetDataSize());
},
SendUserChatMessage: function(e, t, i) {
var n = ToUnicode(e);
if (n.length > window.LEN_USER_CHAT) {
ManagerHelp_SetSystemAlert("The chat is too long, please retype it");
return !1;
}
if (n.length < 1) {
ManagerHelp_SetSystemAlert("Please enter the chat content!");
return !1;
}
var a = arguments.length > 1 ? t : 0, o = arguments.length > 2 ? i : 0, s = PlayerManager.GetMeUserItem(), r = new window.CMD_GF_C_UserChat();
r.wStringIndex = o;
r.wChatLength = n.length;
r.dwTargetUserID = s.GetUserID();
r.dwChatColor = a;
SetArray(r.szChatString, n);
GetServerRoom().SendData(MDM_GF_FRAME, SUB_GF_USER_CHAT, r.GetDataBytes(), r.GetDataSize() - 2 * r.szChatString.length + 2 * r.wChatLength);
},
SendPacketGFBuyProperty: function(e, t) {},
SendQueryOnlineUser: function() {},
GetCurGameChatText: function() {
return [];
},
GetCurrentGameScore: function(e) {
return parseInt(this.GetClientUserScore(e));
},
OnFrameButtonHelp: function() {
var e = this;
GameFrameView.instances && GameFrameView.instances.strGameHelpPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strGameHelpPath, cc.Prefab, function(t, i) {
if (!t) {
var n = cc.instantiate(i);
e.nodeRootCanvas.addChild(n, 100);
n.getComponent("jsHelpGameRule").SetRuleByKind(e.stServerAttribute.wKindID);
}
});
},
OnFrameButtonHelpNew: function() {
var e = this;
GameFrameView.instances && GameFrameView.instances.strGameHelpPathNew.length > 0 && cc.loader.loadRes(GameFrameView.instances.strGameHelpPathNew, cc.Prefab, function(t, i) {
if (!t) {
var n = cc.instantiate(i);
e.nodeRootCanvas.addChild(n, 100);
n.getComponent("jsHelpGameRuleNew").SetRuleByKind(e.stServerAttribute.wKindID);
}
});
},
OnFrameButtonJackPotRecord: function(e, t) {
var i = this;
GameFrameView.instances && GameFrameView.instances.strJackPotRecordPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotRecordPath, cc.Prefab, function(n, a) {
if (!n) {
var o = cc.instantiate(a);
i.jsJackpotRank = o.getComponent("jsJackPotDrawRecord");
i.jsJackpotRank.jsGameEngine = i;
i.jsJackpotRank.setData(OnIntScore(e), t);
i.nodeRootCanvas.addChild(o);
}
});
},
OnFrameButtonJackPotDraw: function(e, t, i, n, a) {
var o = this;
GameFrameView.instances && GameFrameView.instances.strJackPotDrawPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotDrawPath, cc.Prefab, function(s, r) {
if (!s) {
var c = cc.instantiate(r);
o.jackPotTurnItemJs = c.getComponent("jsJackPotDraw");
o.jackPotTurnItemJs.doDraw(t, i, n, a);
e.addChild(c);
}
});
},
onPlayBigWin: function(e, t, i) {
var n = this;
GameFrameView.instances && GameFrameView.instances.strBigWinPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strBigWinPath, cc.Prefab, function(a, o) {
if (!a) {
var s = cc.instantiate(o);
n.bigWinJs = s.getComponent("jsBigWin");
n.bigWinJs.setBigWinData(e, t, n.objSceneData.WinLvArry, i);
n.nodeRootCanvas.addChild(s);
}
});
},
onPlayTotalWin: function(e, t, i) {
var n = this;
GameFrameView.instances && GameFrameView.instances.strBigWinPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strBigWinPath, cc.Prefab, function(a, o) {
if (!a) {
var s = cc.instantiate(o);
n.totalWinJs = s.getComponent("jsBigWin");
n.totalWinJs.setTotalWinData(e, t, i);
n.nodeRootCanvas.addChild(s);
}
});
},
OnFrameButtonOnLinePlayer: function() {
GetServerRoom().SendData(MDM_GR_USER, SBU_GR_USER_ONLINE_PLAYER_REQ, 0, 0);
}
});
window.PlayGameAudio = function(e, t) {
var i = !1;
2 == arguments.length && (i = t);
var n = window.mfConfig.fSound;
i && (n = window.mfConfig.fMusic);
window.mfConfig.PlayAudio(e, i, n);
};
window.GetGameFrameEngine = function() {
return GameFrameEngine.instances;
};
cc._RF.pop();
}, {
GameDelegate: "GameDelegate"
} ],
GameFrameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf999CUd1pP+LoneAeZwYi/", "GameFrameView");
window.GameFrameView = cc.Class({
extends: cc.Component,
statics: {
instances: null
},
strGameSetLayerPath: "",
strGameInfoPath: "",
strGameRulePath: "",
strGameHelpPath: "",
strGameHelpPathNew: "",
strJackPotDrawPath: "",
strJackPotRecordPath: "",
strBigWinPath: "",
strOnLineUserPath: "",
strGameLabaPath: "",
properties: {
nodeRootCanvas: cc.Node,
labelBaseScore: cc.Label,
labelGameName: cc.Label,
nodeViewUser: [ cc.Node ],
nodeChatContent: cc.Node,
_nodeChatText: [],
_nodeChatImage: [],
_nodeChatVoice: [],
labelSystemTime: cc.Label,
labelNetMs: cc.Label,
pgbBattery: cc.ProgressBar,
labelBattery: cc.Label
},
OnFrameViewLoad: function() {},
OnFrameViewStart: function() {},
OnFrameViewDestroy: function() {},
onLoad: function() {
var e = this;
this.strGameSetLayerPath = "GameLobby/APrefab/pfSetNodeLayer";
this.strGameInfoPath = "GameLobby/APrefab/UserInfo";
this.strGameRulePath = "GameLobby/APrefab/RuleAlert";
this.strGameHelpPath = "AGameHelp/pfGameHelp";
this.strGameHelpPathNew = "AGameHelp/pfGameHelpNew";
this.strJackPotDrawPath = "AGameHelp/pfJackPotDraw";
this.strJackPotRecordPath = "AGameHelp/pfJackPotDrawRecord";
this.strOnLineUserPath = "GameFrame/APrefab/pfOnlinePlayerList";
this.strGameLabaPath = "GameLobby/APrefab/pfGameLaba";
this.strBigAwardLabaPath = "GameLobby/APrefab/pfBigAwardLaba";
this.strBigWinPath = "AGameHelp/pfBigWin";
GameFrameView.instances = this;
if (GameFrameEngine.instances) {
this.jsGameEngine = GameFrameEngine.instances;
this.jsGameEngine.bReadyGame = !0;
}
var t = 100;
GCF_IsGameKind100(GetServerRoom().GetKindID()) && (t = 3e3);
setTimeout(function() {
SceneManager_PushBack(window.SceneType.Prefab_Path, e.strGameLabaPath, function(e, t) {
if (!e) {
t.zIndex = 3;
var i = GetServerRoom().GetKindID();
if (130 == i) {
t.x = 250;
t.y = 850;
} else 300 == i || 502 == i ? t.getComponent(cc.Widget).top = 71 : 301 == i && (t.getComponent(cc.Widget).top = 6);
}
});
SceneManager_PushBack(window.SceneType.Prefab_Path, e.strBigAwardLabaPath, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsBigAwardLaba").isGame = !0;
var i = GetServerRoom().GetKindID();
if (130 == i) {
t.getChildByName("pfGameLaba").x = 304;
t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 140;
} else if (300 == i || 502 == i) t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 71; else if (301 == i) t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 6; else if (303 == i) {
t.getChildByName("pfGameLaba").x = 308;
t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 5;
} else if (505 == i) {
t.getChildByName("pfGameLaba").x = -230;
t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 7;
} else if (307 == i) {
t.getChildByName("pfGameLaba").x = -30;
t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 230;
} else 141 != i && 304 != i && 306 != i || (t.getChildByName("pfGameLaba").getComponent(cc.Widget).top = 0);
}
});
}, t);
this.jsFrameUser = [];
for (var i = 0; i < this.nodeViewUser.length; i++) {
this.jsFrameUser[i] = this.nodeViewUser[i].getComponent("jsFrameUser");
this.jsFrameUser[i].node.active = !1;
}
if (this.nodeChatContent) for (var n = 0; n < this.nodeViewUser.length; n++) {
var a = this.nodeChatContent.getChildByName("ChatLayout" + n);
if (!a) break;
a.active = !0;
var o = a.getChildByName("UserImage");
o && (this._nodeChatImage[n] = o);
var s = a.getChildByName("ChatText");
s && (this._nodeChatText[n] = s);
var r = a.getChildByName("UserVoice");
r && (this._nodeChatVoice[n] = r);
}
this.OnFrameViewLoad();
this.bMeEnterRoom = !1;
this.OnLoadPlayerList();
},
onDestroy: function() {
this.OnFrameViewDestroy();
},
start: function() {
if (this.jsGameEngine && this.nodeChatContent) for (var e = 0; e < this._nodeChatVoice.length; e++) this._nodeChatVoice[e] && (this._nodeChatVoice[e].zIndex = 10);
this.OnStatusUpdate();
this.schedule(this.OnStatusUpdate, 60);
if (cc.sys.isBrowser) {
this.labelBattery && (this.labelBattery.node.active = !1);
this.pgbBattery && (this.pgbBattery.node.active = !1);
this.labelBattery = null;
this.pgbBattery = null;
}
this.OnFrameViewStart();
},
ResetGameView: function() {
return -1;
},
ResetFrameView: function() {
for (var e = 0; e < this.nodeViewUser.length; e++) {
this.jsFrameUser[e].ResetGameData();
this.jsFrameUser[e].node.active = !1;
}
this.ResetGameView();
},
ResetAllowAvertCheatModeView: function() {
for (var e = 1; e < this.nodeViewUser.length; e++) {
this.jsFrameUser[e].ResetGameData();
this.jsFrameUser[e].node.active = !1;
}
this.ResetGameView();
},
ResetFrameData: function() {
for (var e = 0; e < this.nodeViewUser.length; e++) this.jsFrameUser[e].ResetGameData();
},
OnUpdateGameInfo: function() {
if (null != this.jsGameEngine.stServerAttribute && null != this.jsGameEngine.stServerAttribute) {
var e = ServerData_GetGameField(this.jsGameEngine.stServerAttribute.wFieldID), t = "";
if (null != e) {
var i = e.szFieldName;
t = ToUtf8(i);
}
this.labelGameName && (this.labelGameName.string = t);
if (this.labelBaseScore) {
var n = e.lCellScore;
this.labelBaseScore.string = n <= 1 ? "CellScore:" + OnScoreToString(n, 3) : "CellScore:" + OnScoreToString(n);
this.labelBaseScore.node.parent.active = !0;
}
}
},
SwitchViewID: function(e) {
return YQYAssertAlert(this.jsGameEngine, "this.jsGameEngine==null") ? INVALID_CHAIR : this.jsGameEngine.SwitchViewID(e);
},
SwitchChairID: function(e) {
return YQYAssertAlert(this.jsGameEngine, "this.jsGameEngine==null") ? INVALID_CHAIR : this.jsGameEngine.SwitchChairID(e);
},
GetServerUserCount: function() {
return this.jsGameEngine.GetServerUserCount();
},
OnAssertViewUser: function(e) {
if (e < 0 || e >= this.GetServerUserCount()) {
cc.warn("OnAssertViewUser.wChairID.Error:", e, ",ServerUserCount:", this.GetServerUserCount());
return !1;
}
var t = this.SwitchViewID(e);
if (t < 0 || t >= this.GetServerUserCount() || this.nodeViewUser.length <= t || null == this.nodeViewUser[t]) {
cc.warn("OnAssertViewUser.wViewID.Error:", t, ",ServerUserCount:", this.GetServerUserCount(), ",UserLength:", this.nodeViewUser.length, ",UserObject:", this.nodeViewUser[t]);
return !1;
}
return !0;
},
GetJsFrameUser: function(e) {
var t = this.SwitchViewID(e);
return this.nodeViewUser[t].getComponent("jsFrameUser");
},
GetUserChild: function(e, t) {
var i = this.SwitchViewID(e);
return this.OnAssertViewUser(e) ? this.nodeViewUser[i].getChildByName(t) : null;
},
SetUserActive: function(e, t) {
var i = this.SwitchViewID(e);
if (this.jsFrameUser[i]) {
this.jsFrameUser[i].node.active = t;
0 == t && this.jsFrameUser[i].SetReadyActive(!1);
}
},
SetBankerUser: function(e) {
if (e != INVALID_CHAIR && 255 != e) {
var t = this.SwitchViewID(e);
this.jsFrameUser[t] && this.jsFrameUser[t].SetBankerActive(!0);
}
},
GetMeTableID: function() {
return this.jsGameEngine.GetMeTableID();
},
GetMeChairID: function() {
return this.jsGameEngine.GetMeChairID();
},
IsGameCheatUser: function() {
return this.jsGameEngine.IsGameCheatUser();
},
SetUserChildActive: function(e, t, i) {
var n = this.GetUserChild(e, t);
n ? n.active = i : cc.warn("SetUserChild.Child.NotFound:", t);
},
OnFrameEventUserEnter: function(e, t) {
var i = e.GetChairID(), n = this.SwitchViewID(i);
if (!this.jsGameEngine.bGame100 && YQYAssertAlert(n < this.nodeViewUser.length, "Error.GameView.OnEventUserEnter.wViewID:" + n)) return !0;
if (!t) {
if (i == this.GetMeChairID()) {
if (this.bMeEnterRoom) return !0;
this.bMeEnterRoom = !0;
}
if (!this.jsGameEngine.bGame100 || 0 == n) if (0 == this.jsFrameUser.length) cc.warn("nodeViewUser is not bind"); else {
this.SetUserActive(i, !0);
var a = this.GetJsFrameUser(i), o = ServerData_GetGameField(this.jsGameEngine.stServerAttribute.wFieldID), s = this.jsGameEngine.stServerAttribute.wKindID;
if (o) {
o.lCellScore <= 1 && 200 == s ? a.SetUserCout(!0) : a.SetUserCout(!1);
}
if (a) {
a.SetUserDataItem(e);
a.SetViewID(n);
e.SetViewID(n);
}
this.OnFrameUpdateUserScore(i);
this.OnFrameEventUserStatus(e, e.GetUserStatus(), t);
}
this.OnEventUserEnter(e, t);
return !0;
}
},
OnFrameEventUserLeave: function(e, t, i) {
var n = this.SwitchViewID(t);
this.jsGameEngine.bGame100 || YQYAssertAlert(n < this.nodeViewUser.length, "Error.GameView.OnEventUserEnter.wViewID:" + n);
if (!i) {
this.jsGameEngine.bGame100 && 0 != n || this.SetUserActive(t, !1);
this.OnEventUserLeave(e, t, i);
return !0;
}
},
OnFrameEventUserScore: function(e, t) {
this.OnFrameUpdateUserScore(e.GetChairID());
return !0;
},
OnFrameEventUserStatus: function(e, t, i) {
var n = e.GetChairID(), a = this.SwitchViewID(e.GetChairID());
e.GetTableID() != INVALID_CHAIR && this.SetUserActive(n, !0);
var o = this.jsFrameUser[a];
if (o) if (t == US_READY) {
o.SetReadyActive(!1);
o.SetOffLineActive(!1);
o.SetViewID(a);
e.SetViewID(a);
} else if (t == US_PLAYING || t == US_FREE) {
o.SetReadyActive(!1);
o.SetOffLineActive(!1);
o.SetViewID(a);
} else if (t == US_OFFLINE) {
o.SetReadyActive(!1);
o.SetOffLineActive(!0);
} else o.SetOffLineActive(!1);
this.OnEventUserStatus(e, t, i);
return !0;
},
OnFrameUpdateUserScore: function(e) {
var t = this.SwitchViewID(e);
if (this.jsFrameUser[t] && this.jsFrameUser[t].labelGameScore) {
var i = this.jsGameEngine.GetCurrentGameScore(e);
this.jsFrameUser[t].SetGameScore(i);
}
},
OnFrameButtonUserHead: function(e, t) {
1 == t && SceneManager_PushBack(window.SceneType.Prefab_Path, this.strGameInfoPath, function(t, i) {
if (i) {
i.getComponent("jsFrameUser").SetUserDataItem(e);
}
}.bind(this), "AddChild");
},
OnEventUserEnter: function(e, t) {
return -1;
},
OnEventUserLeave: function(e, t, i) {
return -1;
},
OnEventUserScore: function(e, t) {
return -1;
},
OnEventUserStatus: function(e, t, i) {
return -1;
},
OnEventUserChat: function(e, t) {
var i = new CMD_GF_S_UserChat();
i.init(e);
if (this.jsGameEngine) {
var n = PlayerManager.GetUserItemByUserID(i.dwSendUserID);
if (n && n.GetTableID() == this.GetMeTableID()) {
var a = n.GetChairID(), o = this.SwitchViewID(a);
i.wStringIndex > 0 && i.wStringIndex < 100 && this.OnEventUserChatFast(n, i);
if (this._nodeChatText[o]) {
var s = ToUtf8(i.szChatString), r = this;
this._nodeChatText[o].active = !0;
this._nodeChatText[o].stopAllActions();
this._nodeChatText[o].opacity = 255;
var c = this._nodeChatText[o].getChildByName("TextLabel");
c.color = cc.color(5, 79, 50);
var l = this._nodeChatText[o].getComponent(cc.Layout);
if (c) {
var h = c.getComponent(cc.Label);
h.overflow = cc.Label.Overflow.NONE;
h.string = s;
if (c.width > 400) {
h.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
h.string = s;
c.width = 370;
if (l) {
l.type = cc.Layout.Type.VERTICAL;
this._nodeChatText[o].width = 430;
l.PaddingTop = 40;
l.PaddingBottom = 30;
}
}
this._nodeChatText[o].runAction(cc.sequence(cc.delayTime(3), cc.fadeOut(1), cc.callFunc(function() {
r._nodeChatText[o].active = !1;
})));
}
}
return !0;
}
}
},
OnEventUserChatFast: function(e) {
return -1;
},
OnUserVoicePlay: function(e, t) {
if (this.jsGameEngine) if (255 != e) {
var i = this.SwitchViewID(e);
this._nodeChatVoice && this._nodeChatVoice[i] && (this._nodeChatVoice[i].active = t);
} else for (var n = 0; n < this.jsGameEngine.GetServerUserCount(); n++) this._nodeChatVoice[n].active = !1;
},
OnEventUserVoiceLast: function(e, t) {
if (this.jsGameEngine && GameFrameView.instances) {
var i = GameFrameView.instances.SwitchChairID(parseInt(t));
window.mfConfig.OnVoicePlayLast(i);
}
},
OnEventUserImage: function(e, t) {
var i = new CMD_GF_S_UserExpression();
i.init(e);
if (this.jsGameEngine) {
var n = PlayerManager.GetUserItemByUserID(i.dwSendUserID);
if (n && n.GetTableID() == this.GetMeTableID()) {
var a = n.GetChairID(), o = this.SwitchViewID(a), s = ToUtf8(i.szServerId);
if (i.lItemIndex > 1e3 || cc.sys.isBrowser && s) {
var r = {};
r.wChairID = a;
cc.sys.isNative ? r.filename = i.lItemIndex + ".spx" : r.filename = s;
r.dwGameID = n.GetGameID();
r.bDown = !1;
n.GetGameID() == PlayerManager.GetMeUserItem().GetGameID() && (r.bDown = !0);
window.mfConfig.OnVoiceAddPlayData(r);
} else if (this._nodeChatImage[o]) {
var c = this;
this._nodeChatImage[o].active = !0;
this._nodeChatImage[o].stopAllActions();
this._nodeChatImage[o].opacity = 255;
var l = i.lItemIndex, h = this._nodeChatImage[o].getComponent(cc.Animation), u = h.getClips();
if (GetContainClipName(u, "exp" + l)) {
h.stop();
h.play("exp" + l);
c._nodeChatImage[o].runAction(cc.sequence(cc.delayTime(3), cc.delayTime(1), cc.callFunc(function() {
c._nodeChatImage[o].active = !1;
h.stop();
})));
} else cc.loader.loadRes("GameLobby/ChatLayer/expression/expression" + l, cc.SpriteAtlas, function(e, t) {
if (t) {
var i = t.getSpriteFrames(), n = cc.AnimationClip.createWithSpriteFrames(i, i.length);
n.sample = 10;
n.name = "exp" + l;
n.wrapMode = cc.WrapMode.Loop;
h.addClip(n);
h.play("exp" + l);
c._nodeChatImage[o].runAction(cc.sequence(cc.delayTime(3), cc.delayTime(1), cc.callFunc(function() {
c._nodeChatImage[o].active = !1;
h.stop();
})));
}
});
}
return !0;
}
}
},
OnFrameViewGameStart: function() {
for (var e = 0; e < this.nodeViewUser.length; e++) this.jsFrameUser[e].SetReadyActive(!1);
},
OnStatusUpdate: function() {
if (this.labelGameTime) {
var e = new Date().format("hh:mm");
this.labelGameTime.string = e;
}
if (this.labelBattery) {
var t = window.mfConfig.getBattery();
null != t && null != t && (this.labelBattery.string = t + "%");
}
if (this.pgbBattery) {
var i = window.mfConfig.getBattery();
null != i && null != i && (this.pgbBattery.progress = i / 100);
}
},
OnViewMsUpdate: function(e) {
if (this.labelNetMs) {
this.labelNetMs.string = e + "ms";
e >= 0 && e <= 100 ? this.labelNetMs.node.color = new cc.Color(0, 255, 0) : e > 100 && e <= 200 ? this.labelNetMs.node.color = new cc.Color(255, 255, 0) : e > 200 ? this.labelNetMs.node.color = new cc.Color(255, 0, 0) : e < 0 && (this.labelNetMs.node.color = new cc.Color(128, 128, 128));
}
},
OnViewUpdate: function(e) {},
OnFrameViewGameEndAll: function() {
YQYAssertAlert(!1, "GameFrameView.OnFrameViewGameEndAll.Error：总结算函数未实现");
},
OnUpdateOnLineUser: function(e, t) {
if (t) {
var i = this.node.getComponent("jsPlayerList");
if (null != i) {
this.stOnLineTopUser = e;
i.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), e);
}
} else {
var n = this.nodeRootCanvas.getChildByName("pfOnlinePlayerList");
if (n) {
n.getComponent("jsOnlinePlayerList").OnUpdateData(e);
this.stOnLineUser = null;
} else this.stOnLineUser = e;
}
},
OnLoadPlayerList: function() {
var e = this.node.getComponent("jsPlayerList");
null != e && this.jsGameEngine.bGame100 && this.nodePlayerList && 0 == this.nodePlayerList.childrenCount && e.OnInitNodeUser(this.nodePlayerList);
},
OnLoadOnLineUserView: function() {
var e = this;
this.strOnLineUserPath.length > 0 && cc.loader.loadRes(this.strOnLineUserPath, cc.Prefab, function(t, i) {
if (!t) {
var n = e.nodeRootCanvas.getChildByName("pfOnlinePlayerList");
n && n.removeFromParent();
var a = cc.instantiate(i);
e.nodeRootCanvas.addChild(a, 100);
if (e.stOnLineUser) {
a.getComponent("jsOnlinePlayerList").OnUpdateData(e.stOnLineUser);
e.stOnLineUser = null;
}
}
}.bind(this));
},
OnFramePlaceJetton: function(e, t, i, n) {
this.node.getComponent("jsPlayerList").OnPlaceJettonAction(this.stOnLineTopUser, e, t, i, n);
},
OnFrameGameEndAction: function(e, t, i, n) {
this.node.getComponent("jsPlayerList").OnGameEndJettonAction(e, t, i, n);
},
OnFrameBetInfo: function(e, t, i) {
this.node.getComponent("jsPlayerList").OnLoadBetInfo(e, t, i);
},
OnFrameInitJetton: function(e) {
this.node.getComponent("jsPlayerList").OnLoadJettonInfo(e);
},
OnFrameResetView: function() {
this.node.getComponent("jsPlayerList").ResetGameView();
}
});
window.GetGameFrameView = function() {
return GameFrameView.instances;
};
cc._RF.pop();
}, {} ],
GameSocket: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9b076XwMRhG7oZtXnyM4+fV", "GameSocket");
e("ZApi_Protocol");
e("GameDelegate");
window.GST_szCompilatio = "D3A02543BC7C97615EC9725BAF14C654";
window.GST_DELAY_TIME = 12;
window.GST_CLOSE_TIME = .8;
window.GST_CLOSE_DELECT = 3;
window.GST_NORMAL = 0;
window.GST_ERROR = 1;
window.GST_OUTTIME = 2;
window.KEY_CONFIG = "pokerpokerpoker0";
cc.sys.isNative ? window.KEY_JSONDATA = "nr12ftja56djwmn73modt169s65hsgfd" : window.KEY_JSONDATA = "mbvifyui781mnbv23fgxj57jh54b3kv1";
window.GameSocket = cc.Class({
extends: cc.Component,
properties: {
pLogonAddress: "",
wLogonPort: 0,
pWebClient: null,
nSocketType: 0,
nCloseTime: 0,
bResetStatus: !1,
pSocketDelegate: null,
nDataSize: 0,
pDataByte: [],
pRecvData: [],
pSendData: [],
bConnect: !1,
bSocketWait: !1,
nEventCount: 0,
fDetectTime: 0,
nDetectCount: 0,
UserData: 0,
wKindID: 0
},
ctor: function() {
this.pLogonAddress = "";
this.wLogonPort = 0;
this.pWebClient = null;
this.nSocketType = 0;
this.nCloseTime = window.GST_CLOSE_TIME;
this.pSocketDelegate = null;
this.nDataSize = 0;
this.pDataByte = [];
this.pRecvData = [];
this.pSendData = [];
this.bConnect = !1;
this.bSocketWait = !0;
this.nEventCount = 1;
this.fDetectTime = 0;
this.UserData = null;
this.wKindID = 0;
},
SetDelegate: function(e) {
this.pSocketDelegate = e;
},
RetainEvent: function() {
this.nEventCount++;
this.nCloseTime = window.GST_CLOSE_TIME;
},
DonedEvent: function(e) {
if (1 == arguments.length && e) {
this.nCloseTime = 0;
this.nEventCount = 0;
} else {
this.nEventCount--;
this.nEventCount <= 0 && this.pSocketDelegate && this.pSocketDelegate.OnMissionClosed(window.GST_NORMAL);
}
},
GetEventCount: function() {
return this.nEventCount;
},
GetConnect: function() {
return this.bConnect;
},
ReConnect: function() {
this.nEventCount = 1;
this.OnConnect(this.pLogonAddress, this.wLogonPort);
for (var e = 0; e < this.pWarnSendBuffer.length; e++) this.pSendData.push(this.pWarnSendBuffer[e]);
},
OnConnect: function(e, t) {
var i = this;
cc.assert(e.length > 0, "GameSocket.Error.szAddress:" + e);
this.bWarnCheck = !0;
this.bCheckConnect = !1;
this.pLogonAddress = e;
this.wLogonPort = t;
this.bResetStatus = !1;
var n = "ws://" + e + ":" + t;
this.pWebClient = new WebSocket(n);
this.pWebClient.binaryType = "arraybuffer";
this.pWebClient.onopen = function() {
i.bConnect = !0;
i.pSocketDelegate && i.pSocketDelegate.OnMissionOpen(!0);
"MissionLogon" == i.name ? cc.director.getScheduler().schedule(i.OnMissionLogonUpdate, i, 0, cc.macro.REPEAT_FOREVER, 0, !1) : "ServerRoom" == i.name ? cc.director.getScheduler().schedule(i.OnServerRoomUpdate, i, 0, cc.macro.REPEAT_FOREVER, 0, !1) : "MissionService" == i.name && cc.director.getScheduler().schedule(i.OnMissionServiceUpdate, i, 0, cc.macro.REPEAT_FOREVER, 0, !1);
};
this.pWebClient.onmessage = function(e) {
i.onRecv(e);
};
this.pWebClient.onerror = function(e) {};
this.pWebClient.onclose = function(e) {
i.pSocketDelegate && i.pSocketDelegate.OnMissionClosed(window.GST_ERROR, e);
i.OnResetData();
};
},
OnResetData: function() {
if (!this.bResetStatus) {
this.bResetStatus = !0;
this.pWebClient && 1 == this.pWebClient.readyState && this.OnMissionSendData(MDM_KN_COMMAND, SUB_KN_SHUT_DOWN_SOCKET, 0, 0);
"MissionLogon" == this.name ? cc.director.getScheduler().unschedule(this.OnMissionLogonUpdate, this) : "ServerRoom" == this.name ? cc.director.getScheduler().unschedule(this.OnServerRoomUpdate, this) : "MissionService" == this.name && cc.director.getScheduler().unschedule(this.OnMissionServiceUpdate, this);
this.bConnect = !1;
if (this.pWebClient) {
this.pWebClient.onerror = function(e) {};
this.pWebClient.onclose = function(e) {};
this.pWebClient.close();
this.pWebClient = null;
}
this.nDataSize = 0;
this.pDataByte.length = 0;
this.pRecvData.length = 0;
this.pSendData.length = 0;
this.nEventCount = 0;
this.fDetectTime = 0;
this.nDetectCount = 0;
this.pSocketDelegate = null;
}
},
SendCompilatio: function() {
this.bWarnCheck = !0;
var e = new TCP_Validate();
SetArrayFormUtf8(e.szValidateKey, window.GST_szCompilatio);
this.OnMissionSendData(window.MDM_KN_COMMAND, window.SUB_KN_VALIDATE_SOCKET_MOBILE, e.GetDataBytes(), e.GetDataSize());
},
onMappedBuffer: function(e, t) {
for (var i = new Uint8Array(t), n = e, a = 0, o = 4; o < t; o++) {
cc.assert("undefined" != typeof n[o], "GameSocket.onMappedBuffer.Error:buffer:" + o + " is undefined");
a += n[o];
n[o] = n[o] ^ g_encryptkey[o % 32];
n[o] = g_SendByteMap[n[o]];
i[o] = n[o];
}
(a = 1 + ~(a %= 256)) < 0 && (a += 256);
e[0] = e[0] | DK_MAPPED;
e[1] = a;
var s = Value_GetValueBytes(Value_TypeWORD, t);
i[0] = e[0];
i[1] = e[1];
i[2] = s[0];
i[3] = s[1];
return i;
},
UnMappedBuffer: function(e, t) {
for (var i = 4; i < t; i++) {
e[i] = g_RecvByteMap[e[i]];
e[i] = e[i] ^ g_encryptkey[i % 32];
}
return !0;
},
SendSocketData: function(e, t, i) {
this.pSendData.push(e);
},
FlushSendData: function() {
if (this.GetConnect() && this.pSendData.length > 0) {
var e = this.pSendData.shift();
if (this.pWebClient) {
this.pWebClient.send(e.buffer);
this.pSocketDelegate && this.pSocketDelegate.OnFlushSendData(e.buffer);
} else cc.warn("this.pWebClient is null");
}
},
onRecv: function(e) {
var t = new Uint8Array(e.data), i = Array.from(t);
this.pDataByte = this.pDataByte.concat(i);
this.nDataSize += e.data.byteLength;
for (;this.nDataSize >= TCP_HeadSize; ) {
var n = this.pDataByte.slice(0, TCP_HeadSize), a = new TCP_Head();
a.init(n);
var o = a.wPacketSize;
if (o < TCP_HeadSize || o > this.nDataSize) break;
var s = this.pDataByte.splice(0, o);
this.nDataSize -= o;
if (!this.UnMappedBuffer(s, o)) break;
var r = new TCP_Buffer();
r.TCPHead.init(s.splice(0, TCP_HeadSize));
r.cbBuffer = s;
this.pRecvData.push(r);
if (this.nDataSize < TCP_HeadSize) break;
}
},
OnMissionSendData: function(e, t, i, n, a) {
i.length > n && (i = i.splice(0, n));
if (null != a && "alert" == a) {
"alert" == a && ManagerHelp_SetSystemAlert("OnMissionSendData0:" + i.join("-") + ";wDataSize:" + n);
"log" == a && cc.log("-----gs-----:OnMissionSendData0:" + i.join("-") + ";wDataSize:" + n);
}
var o = new TCP_Head();
o.wMainCmdID = e;
o.wSubCmdID = t;
var s = o.GetDataSize();
o.wPacketSize = s + n;
var r = [];
r = n > 0 ? ConcatArray(o.GetDataBytes(), i) : o.GetDataBytes();
var c = s + n, l = this.onMappedBuffer(r, c);
if (null != a && "alert" == a) {
"alert" == a && ManagerHelp_SetSystemAlert("OnMissionSendData1:" + l.toString() + ";wSize:" + c);
"log" == a && cc.log("-----gs-----:OnMissionSendData1:" + l.toString() + ";wSize:" + c);
}
return this.SendSocketData(l, c, a);
},
OnMissionLogonUpdate: function(e) {
this.OnMissionUpdate(e);
},
OnServerRoomUpdate: function(e) {
this.OnMissionUpdate(e);
},
OnMissionServiceUpdate: function(e) {
this.OnMissionUpdate(e);
},
OnMissionUpdate: function(e) {
if (0 == this.nEventCount) if (this.nCloseTime > 0) this.nCloseTime -= e; else if (this.pSocketDelegate) {
this.pSocketDelegate.OnMissionClosed(window.GST_NORMAL);
return;
}
this.fDetectTime += e;
this.pSocketDelegate && this.pSocketDelegate.OnMissionUpdate(e);
if (this.bConnect) {
if (this.fDetectTime > window.GST_DELAY_TIME) {
this.fDetectTime -= window.GST_DELAY_TIME;
this.nDetectCount++;
this.nDetectCount > window.GST_CLOSE_DELECT && this.pSocketDelegate && this.pSocketDelegate.OnMissionClosed(window.GST_ERROR);
}
this.FlushSendData();
if (this.pRecvData.length > 0 && this.pSocketDelegate) {
var t = this.pRecvData.shift(), i = t.TCPHead.wMainCmdID, n = t.TCPHead.wSubCmdID, a = t.cbBuffer, o = t.TCPHead.wPacketSize - TCP_HeadSize;
if (i == window.MDM_KN_COMMAND) {
if (n == window.SUB_KN_DETECT_SOCKET) {
this.fDetectTime = 0;
this.nDetectCount = 0;
this.OnMissionSendData(window.MDM_KN_COMMAND, window.SUB_KN_DETECT_SOCKET, 0, 0);
}
n == window.SUB_KN_SHUT_DOWN_SOCKET && this.pSocketDelegate && this.pSocketDelegate.OnMissionClosed(window.GST_NORMAL);
window.SUB_KN_VALIDATE_SOCKET;
} else {
this.fDetectTime = 0;
this.nDetectCount = 0;
this.pSocketDelegate && this.pSocketDelegate.OnSocketRead(i, n, a, o);
}
}
}
}
});
Array.from || (Array.from = (n = Object.prototype.toString, a = function(e) {
return "function" == typeof e || "[object Function]" === n.call(e);
}, o = Math.pow(2, 53) - 1, s = function(e) {
var t, i = (t = Number(e), isNaN(t) ? 0 : 0 !== t && isFinite(t) ? (t > 0 ? 1 : -1) * Math.floor(Math.abs(t)) : t);
return Math.min(Math.max(i, 0), o);
}, function(e) {
var t = Object(e);
if (null == e) throw new TypeError("Array.from requires an array-like object - not null or undefined");
var i = arguments.length > 1 ? arguments[1] : void 0, n = void 0;
if ("undefined" != typeof i) {
if (!a(i)) throw new TypeError("Array.from: when provided, the second argument must be a function");
arguments.length > 2 && (n = arguments[2]);
}
for (var o = s(t.length), r = a(this) ? Object(new this(o)) : new Array(o), c = 0, l = void 0; c < o; ) {
l = t[c];
r[c] = i ? "undefined" == typeof n ? i(l, c) : i.call(n, l, c) : l;
c += 1;
}
r.length = o;
return r;
}));
var n, a, o, s;
cc._RF.pop();
}, {
GameDelegate: "GameDelegate",
ZApi_Protocol: "ZApi_Protocol"
} ],
H5EventSDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a3e65D6wo5KhJKMxiEjP25c", "H5EventSDK");
window.H5_Evnet = {};
window.H5_Evnet.dwPrivateTableId = window.INVALID_WORD;
window.H5_Evnet.bAlreadyEnter = !1;
window.H5_Evnet.OnRotationNode = function(e) {
if (window.H5_Evnet.bRotation) {
if ("wechatgame" != cc.sys.browserType) return;
e.setContentSize(cc.size(1920, 1080));
var t = e.getComponent(cc.Widget);
if (t) {
e.getContentSize();
t.top = 420;
t.bottom = 420;
t.right = -420;
t.left = -420;
}
}
};
if ("mqqbrowser" == cc.sys.browserType || "wechat" == cc.sys.browserType) {
window.jssdk = document.createElement("script");
jssdk.async = !0;
jssdk.src = "http://res.wx.qq.com/open/js/jweixin-1.2.0.js";
document.body.appendChild(jssdk);
window.H5_Evnet.strTimestamp = "";
window.H5_Evnet.strNonceStr = "";
window.H5_Evnet.strsignature = "";
window.H5_Evnet.strLocalId = "";
window.H5_Evnet.strServerId = "";
window.H5_Evnet.strOpenId = "";
window.H5_Evnet.strAccess_token = "";
jssdk.addEventListener("load", function() {
window.H5_Evnet.OnConfig = function() {
wx.config({
appId: window.mfConfig.H5_gzWX_APPID,
timestamp: window.H5_Evnet.strTimestamp,
nonceStr: window.H5_Evnet.strNonceStr,
signature: window.H5_Evnet.strsignature,
jsApiList: [ "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "onMenuShareQZone", "chooseImage", "previewImage", "uploadImage", "downloadImage", "startRecord", "stopRecord", "playVoice", "pauseVoice", "onVoicePlayEnd", "stopVoice", "uploadVoice", "downloadVoice", "openLocation", "getLocation", "chooseWXPay" ]
});
};
wx.ready(function() {
window.H5_Evnet.OnShareWX = function(e, t, i) {
var n = "";
window.H5_Evnet.dwPrivateTableId != window.INVALID_WORD && (n += "?dwPrivateTableId=" + window.H5_Evnet.dwPrivateTableId);
var a = {
title: t,
link: n,
imgUrl: "",
desc: i,
success: function() {
ManagerHelp_SetSystemAlert("WeChat shares success");
e == window.YQ_SUB_WXSHARE_SHAREWEBSPACE && window.mfConfig.TodayFirstShare();
},
cancel: function() {
ManagerHelp_SetSystemAlert("Cancel WeChat sharing");
}
};
e == YQ_SUB_WXSHARE_SHAREWEB ? wx.onMenuShareAppMessage(a) : e == window.YQ_SUB_WXSHARE_SHAREWEBSPACE && wx.onMenuShareTimeline(a);
};
window.H5_Evnet.OnStartRecord = function() {
wx.startRecord({
cancel: function() {
ManagerHelp_SetSystemAlert("The user refused to authorize the recording");
}
});
};
window.H5_Evnet.OnStopRecord = function() {
wx.stopRecord({
success: function(e) {
var t = e.localId;
window.H5_Evnet.strLocalId = t;
window.H5_Evnet.OnUploadVoice(t);
},
fail: function(e) {
ManagerHelp_SetSystemAlert(JSON.stringify(e));
}
});
};
window.H5_Evnet.OnUploadVoice = function(e) {
"" != e && wx.uploadVoice({
localId: e,
success: function(e) {
window.H5_Evnet.strServerId = e.serverId;
window.mfConfig.wVoiceType === window.YQ_SUB_VOICESTATUS_RECORD && (window.mfConfig.wVoiceType = window.YQ_SUB_VOICESTATUS_NONE);
window.GameFrameEngine.instances && window.GameFrameEngine.instances.SendUserExpression(window.H5_Evnet.strServerId);
}
});
};
window.H5_Evnet.OnDownloadVoice = function(e) {
wx.downloadVoice({
serverId: e,
success: function(e) {
window.H5_Evnet.strLocalId = e.localId;
window.mfConfig.OnVoiceDownLoadBack(window.YQ_SUB_VOICE_DL_SUCCEED, e.localId);
}
});
};
window.H5_Evnet.OnPlayVoice = function(e) {
wx.playVoice({
localId: e
});
};
wx.onVoicePlayEnd({
success: function(e) {
e.localId;
window.mfConfig.OnVoicePlayStopedBack();
}
});
window.H5_Evnet.OnStopVoice = function(e) {
wx.stopVoice({
localId: e
});
};
window.H5_Evnet.OnGetLocation = function() {
wx.getLocation({
type: "wgs84",
success: function(e) {
var t = e.latitude, i = e.longitude;
e.speed, e.accuracy;
window.mfConfig.CoordinateCallBack && window.mfConfig.CoordinateCallBack(t, i);
}
});
};
window.H5_Evnet.OnWXPay = function(e) {
var t = 1e5 * Math.random(), i = "openid=" + window.H5_Evnet.strOpenId + "&total_fee=" + e + "&r=" + t + "&access_token=" + window.H5_Evnet.strAccess_token;
HttpHelper.get(i, function(e, t) {
if (e) {
var i = JSON.parse(t.responseText);
"0" == i.reCode && wx.chooseWXPay({
timestamp: i.timeStamp,
nonceStr: i.nonceStr,
package: i.package,
signType: i.signType,
paySign: i.paySign,
success: function(e) {
ManagerHelp_SetSystemAlert("Purchase succeeded");
var t = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(t.GetUserID());
}
});
}
});
};
});
});
}
window.H5_Evnet.OnGetH5Data = function(e) {
var t = "" + e;
HttpHelper.get(t, function(e, t) {
if (e) {
var i = JSON.parse(t.responseText);
if (0 == i.resultcode) {
window.H5_Evnet.strTimestamp = i.TimeStamp;
window.H5_Evnet.strNonceStr = i.NonceStr;
window.H5_Evnet.strsignature = i.sign;
window.H5_Evnet.OnConfig();
}
}
});
};
window.H5_WxGame_LogonEvent = function() {};
cc._RF.pop();
}, {} ],
HHDZ_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6954cLAY4NO+5qFtaZv4IDR", "HHDZ_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllNode();
}));
this.node.runAction(t);
},
StartCompareAction: function(e, t) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetStartFontAction();
if (null != i.callbackIng) {
i.callbackIng(i);
i.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameEndAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameBeginAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.callbackFinish = e;
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetStartGameAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
SetStartGameAction: function() {
this.nodeFont4.active = !0;
this.nodeFont5.active = !0;
this.nodeFont4.scaleX = 1;
this.nodeFont4.scaleY = 0;
this.nodeFont5.scaleX = 1;
this.nodeFont5.scaleY = 0;
var e = this;
this.nodeFont4.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont5.runAction(cc.scaleTo(.3, 1, 1));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.3, 1, 1));
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewBetArea: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fad59qZQh1MvJIyQ3UPp8Yx", "HHDZ_NewBetArea");
cc.Class({
extends: cc.Component,
properties: {
nodeJettonArea: cc.Node,
labelAllBet: cc.Label,
labelMeBet: cc.Label,
nodeAnimation: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
HHDZ_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f7f4aY73OtAdIEbTqm/Q6Y/", "HHDZ_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.KIND_ID = 125;
t.exports.GAME_PLAYER = n;
t.exports.GAME_NAME = "Red & Black War";
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY, r = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_BET = s;
t.exports.GAME_SCENE_END = r;
t.exports.AREA_BLACK = 0;
t.exports.AREA_RED = 1;
t.exports.AREA_LUCK = 2;
t.exports.AREA_MAX = 3;
t.exports.CARD_NUM = 2;
t.exports.JETTON_NUM = 5;
t.exports.RECORD_SHOW_NUM = 3;
t.exports.GAMEOVER_SHOW_TIME = 12;
t.exports.MAX_COUNT = 3;
t.exports.MAX_LUDAN_HISTORY = 60;
t.exports.MAX_RECORD_AREA = 16;
t.exports.MAX_RECORD_CARD = 6;
t.exports.CT_SINGLE = 1;
t.exports.CT_DOUBLE = 2;
t.exports.CT_SHUN_ZI = 3;
t.exports.CT_JIN_HUA = 4;
t.exports.CT_SHUN_JIN = 5;
t.exports.CT_BAO_ZI = 6;
t.exports.CT_SPECIAL = 7;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_SHOW_USERLIST = 105;
var c = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRecordCount = 0;
}
});
t.exports.tagGameRecordHead = c;
var l = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbWinAreaID = 0;
this.cbBlackCardType = 0;
this.cbRedCardType = 0;
}
});
t.exports.tagServerGameRecord = l;
t.exports.tagTableResult = function e() {
this.bPlayer = 0;
this.bDraw = 0;
this.bBanker = 0;
this.cbMaxCardType = 0;
this.clone = function() {
var t = new e();
t.bPlayer = this.bPlayer;
t.bDraw = this.bDraw;
t.bBanker = this.bBanker;
t.cbMaxCardType = this.cbMaxCardType;
return t;
};
};
t.exports.SUB_C_PLACE_JETTON = 1;
cc._RF.pop();
}, {} ],
HHDZ_NewCardNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2c0d2ZA1UpDHYo4J/OW9Nr0", "HHDZ_NewCardNode");
var n = e("jsHandCardTexture"), a = 0, o = 1, s = 2;
cc.Class({
extends: cc.Component,
properties: {
spCardTex: cc.Sprite,
nCard_Width: 0,
nCard_Height: 0,
cbCard_Data: 0,
cbCard_DataIndex: 0,
cbCard_Value: 0,
cbCard_Color: 0,
szCard_Name: "",
mCard_ViewID: 0,
mCard_ChairID: 0,
cbCard_Status: 0,
cbCard_Mark: 0,
pCard_BankerSign: null,
bCard_EnableSelect: !1,
bCard_Select: !1,
bCard_Move: !1,
bCard_Touch: !1,
bCard_Swallows: !1
},
onLoad: function() {
this.initData();
},
initData: function() {
this.nCard_Width = 156;
this.nCard_Height = 226;
this.cbCard_Data = 0;
this.cbCard_DataIndex = 0;
this.cbCard_Value = 0;
this.cbCard_Color = 0;
this.szCard_Name = "";
this.mCard_ViewID = 0;
this.mCard_ChairID = null;
this.cbCard_Status = 0;
this.cbCard_Mark = 0;
this.pCard_BankerSign = 0;
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return 240 & e;
},
SetStatus: function(e) {
this.cbCard_Status = e;
},
GetStatus: function() {
return this.cbCard_Status;
},
OpenDisableStatus: function() {
this.bCard_EnableSelect = !0;
this.node.color = cc.color(170, 170, 170);
},
CloseDisableStatus: function() {
this.bCard_EnableSelect = !1;
this.node.color = cc.color(255, 255, 255);
},
SetSelect: function(e) {
this.bCard_Select = e;
},
GetSelect: function() {
return this.bCard_Select;
},
SetSwallows: function(e) {
this.bCard_Swallows = e;
},
GetSwallows: function() {
return this.bCard_Swallows;
},
SetCardData: function(e, t, i) {
var a = this.GetCardColor(t) >> 4, o = 78 == t || 79 == t ? this.GetCardValue(t) % 14 : this.GetCardValue(t), s = a;
0 == a && (s = 1);
1 == a && (s = 3);
3 == a && (s = 0);
var r = (s << 4) + o;
this.spCardTex.spriteFrame = n.GetPkFrame(r);
this.cbCard_Data = t;
this.cbCard_Value = o;
this.cbCard_Color = a;
this.cbCard_DataIndex = e;
3 == arguments.length && this.node.setScale(i, i);
},
GetCardData: function() {
return this.cbCard_Data;
},
ActionMove: function(e, t) {
var i = this.node.getPosition();
this.node.setPosition(e, t);
this.node.setScale(.5);
var n = cc.spawn(cc.moveTo(2, i), cc.scaleBy(2, .58));
this.node.runAction(n);
},
ResetData: function() {
this.SetStatus(a);
this.cbCard_Mark = !1;
this.SetSelect(!1);
this.node.color = new cc.Color(255, 255, 255);
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
SetFrontCardTexture: function(e) {
this.spCardTex.spriteFrame = n.GetPkFrame(81);
this.node.setScale(e, e);
},
SetBackCardTexture: function(e) {
this.spCardTex.spriteFrame = n.GetPkFrame(81);
this.node.setScale(e, e);
},
SetEndCardTexture: function(e) {
this.node.setScale(e, e);
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
},
SetOntouch: function(e) {
this.SetSelect(e);
},
SetpromptCardTexture: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
},
OnCardClickBegin: null,
OnCardClickEnded: null,
OnCardButtonEvent: function() {
if (!this.OnCardClickBegin || !this.OnCardClickBegin(this)) {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
} else {
this.node.setPositionY(this.node.getPositionY() + 30);
this.SetSelect(!0);
}
this.OnCardClickEnded && this.OnCardClickEnded(this);
}
},
OnCardUpspringEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(o);
this.node.setPositionY(this.node.getPositionY() + 30);
this.cbCard_Mark = !0;
this.SetSwallows(!0);
this.SetSelect(!0);
}
},
OnCardDownEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(s);
this.node.setPositionY(this.node.getPositionY() - 30);
this.cbCard_Mark = !1;
this.SetSwallows(!0);
this.SetSelect(!1);
}
},
TurnhandLayout: function() {
this.SetSelect(!1);
},
SubAlign: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
}
});
cc._RF.pop();
}, {
jsHandCardTexture: "jsHandCardTexture"
} ],
HHDZ_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b242b/nljJNLZkTybegsyPI", "HHDZ_NewGameEngine");
var n = e("HHDZ_NewCMD_Game"), a = n.GAME_PLAYER;
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
cbGameStatus: 0,
cbCurrJettonIndex: 0
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("HHDZ_NewGameView");
this.pGameViewJs.pGameEngineJs = this;
this.ResetGameEngine();
},
OnFrameEngineStart: function() {
this.cbPlayUser = [];
ZeroArray(this.cbPlayUser, a);
this.lGameScore = [];
ZeroArray(this.lGameScore, a);
this.cbGameStatus = 0;
this.cApplyButtonState = 0;
this.cMeApplyBanker = 0;
this.GameResult = null;
this.stGameRecord = [];
this.dwRecordCount = 0;
this.lAllBet = [];
memset(this.lAllBet, 0, n.AREA_MAX);
this.lPlayBet = [];
memset(this.lPlayBet, 0, n.AREA_MAX);
cc.audioEngine.stopAll();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("136/Audio/Bg", !0);
},
ResetGameEngine: function() {
this.pCmdActionArray = [];
this.cbCurrentAction = 0;
this.fCmdDelayTime = 0;
},
OnEventSceneMessage: function(e, t, i, a) {
this.cbGameStatus = e;
switch (e) {
case n.GAME_SCENE_FREE:
return this.OnGameSceneFree(i, a);

case n.GAME_SCENE_PLAY:
case n.GAME_SCENE_END:
return this.OnGameSceneEnd(i, a);
}
return !0;
},
OnGameSceneFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave;
this.arrBetChip = i.BetChips;
this.lMinTake = i.RetainScore;
this.stGameRecord = i.tGameRecord;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
return !0;
},
OnGameSceneEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave;
this.arrBetChip = i.BetChips;
this.lAllBet = i.AreaTotalBet;
this.lPlayBet = i.UserAreaBet;
this.cbCardTypeArray = i.CardTypeArray.concat();
var a = i.WinAreaID, o = i.bLuckAreaWin, s = i.MostWinUserAreaBet.concat(), r = i.lMostBet.concat(), c = i.lOnlineUserScore.concat(), l = i.wOnlineUserChairID.concat(), h = i.lPlayAllScore;
this.lMinTake = i.RetainScore;
this.stGameRecord = i.tGameRecord;
this.cbTableCardArray = [];
for (var u = 0; u < i.cbTableCardArray.length; u++) this.cbTableCardArray[u] = i.cbTableCardArray[u].Cards;
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
for (var d = 0; d < n.AREA_MAX; ++d) this.pGameViewJs.ShowUserJettonWithGameScene(d, this.lAllBet[d], this.lPlayBet[d]);
this.pGameViewJs.ShowUserBetInfo(this.lAllBet, s, this.lPlayBet, r, l);
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
this.SetTime(!0);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
this.pGameViewJs.ShowPokerBack();
for (var m = 0; m < n.AREA_MAX; m++) if (this.lPlayBet[m] > 0) {
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
} else if (this.cbGameStatus == n.GAME_SCENE_END) {
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!0);
var f = [];
memset(f, 0, n.GAME_PLAYER);
l[0] != INVALID_CHAIR && (f[l[0]] = c[0]);
l[1] != INVALID_CHAIR && (f[l[1]] = c[1]);
f[this.GetMeChairID()] = h;
this.pGameViewJs.ShowPokerResult(this.cbTableCardArray, this.cbCardTypeArray, a, o, f, !1);
this.pGameViewJs.OnWaitStatus(!0);
}
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnSocketSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnSocketSubSGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnSocketSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t);

case n.SUB_S_GAME_END:
return this.OnSocketSubGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);
}
},
OnSocketSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.cbGameStatus = n.GAME_SCENE_FREE;
this.fRoundTime = i.TimeLeave;
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.SetGameStatus(GAME_STATUS_FREE);
memset(this.lAllBet, 0, n.AREA_MAX);
memset(this.lPlayBet, 0, n.AREA_MAX);
this.pGameViewJs.OnResetGameView();
return !0;
},
OnSocketSubSGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.cbGameStatus = n.GAME_SCENE_PLAY;
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ChangeJettonState(!1);
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.OnGameStartAction();
return !0;
},
OnSocketSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
this.lPlayBet[i.AreaIndex - 1] += i.BetScore;
this.SetGameStatus(GAME_STATUS_PLAY);
this.pGameViewJs.PlaceJettonAction(this.GetMeChairID(), i.BetScore, i.AreaIndex - 1);
this.lAllBet[i.AreaIndex - 1] += i.BetScore;
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
this.pGameViewJs.ChangeJettonState(!1);
return !0;
}
var o = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(o);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var a = t.UsersBetList[i];
if (this.GetMeChairID() != a.ChairID) {
this.lAllBet[a.AreaIndex - 1] += a.BetScore;
this.pGameViewJs.PlaceJettonAction(a.ChairID, a.BetScore, a.AreaIndex - 1);
}
}
for (var o = 0; o < n.AREA_MAX; ++o) this.pGameViewJs.ShowUserJettonWithGameScene(o, this.lAllBet[o], this.lPlayBet[o]);
return !0;
},
OnSocketSubGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GAME_SCENE_END;
this.fRoundTime = i.TimeLeave;
this.cbTableCardArray = [];
for (var a = 0; a < i.AreaCards.length; a++) this.cbTableCardArray[a] = i.AreaCards[a].Cards;
this.cbCardTypeArray = i.CardTypeArray.concat();
this.wCurrentBanker != INVALID_CHAIR && (this.wBankerTime = i.nBankerTime);
var o = i.WinAreaID, s = i.bLuckAreaWin, r = new n.tagServerGameRecord();
r.cbWinAreaID = o;
r.cbBlackCardType = this.cbCardTypeArray[n.AREA_BLACK];
r.cbRedCardType = this.cbCardTypeArray[n.AREA_RED];
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ChangeJettonState(!0);
var c = i.UserWinList.length, l = [];
memset(l, 0, MAX_CHAIR);
for (var h = 0; h < c; h++) {
var u = i.UserWinList[h];
null == u.WinScore.high && null == u.WinScore.low ? l[u.ChairID] = u.WinScore : l[u.ChairID] = 0;
}
var d = this;
this.pGameViewJs.OnBetFinish(function() {
d.pGameViewJs.ShowPokerResult(d.cbTableCardArray, d.cbCardTypeArray, o, s, l, !0);
});
return !0;
},
OnSocketSubGameRecord: function(e, t) {
var i = sizeof(n.tagGameRecordHead), a = t - i;
if (YQYAssertAlertStructSizeByLocalMultiple(n.tagServerGameRecord, a, "tagServerGameRecord")) return !1;
this.stGameRecord = [];
var o = new n.tagGameRecordHead();
o.init(e.slice(0, i));
this.dwRecordCount = o.dwRecordCount;
var s = a / sizeof(n.tagServerGameRecord), r = sizeof(n.tagServerGameRecord);
if (s > 0) for (var c = 0; c < s; c++) {
var l = new n.tagServerGameRecord();
l = e.slice(c * r + i, (c + 1) * r + i);
var h = new n.tagServerGameRecord();
h.init(l);
this.stGameRecord.push(h);
}
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.fRoundTime, e);
},
OnButtonJetton: function(e, t) {
this.cbCurrJettonIndex = t;
this.pGameViewJs.SetBtnSelectState(t);
},
OnPlaceJetton: function(e, t) {
if (0 != this.bEnableSysBanker || this.wCurrentBanker != window.INVALID_CHAIR) if (this.wCurrentBanker != this.GetMeChairID()) {
for (var i = this.arrBetChip[this.cbCurrJettonIndex], a = this.jsMeUserItem.GetUserScore(), o = 0, s = 0; s < n.AREA_MAX; s++) o += this.lPlayBet[s];
a + o < this.lMinTake ? ManagerHelp_SetSystemLabel("The current gold coin is below " + OnIntScore(this.lMinTake) + "please recharge first") : this.cbGameStatus == n.GAME_SCENE_BET && a >= i && this.SendPlaceJetton(t, i);
} else ManagerHelp_SetSystemAlert("You are the banker and cannot bet！"); else ManagerHelp_SetSystemAlert("You can't bet without a banker");
},
OnLoadGameRecord: function(e) {
if (!e) {
var t = this.pGameViewJs.OnInitHistoryView();
if (!t) return;
this.nodeGameHistory = t;
}
if (this.nodeGameHistory) {
var i = this.nodeGameHistory.getComponent("HHDZ_NewGameHistory");
i.ResetGameResultData();
if (this.stGameRecord) {
this.stGameRecord.length > n.MAX_LUDAN_HISTORY && (this.stGameRecord = this.stGameRecord.slice(-n.MAX_LUDAN_HISTORY));
for (var a = 0; a < this.stGameRecord.length; a++) {
var o = this.stGameRecord[a], s = new n.tagTableResult();
s.bPlayer = o.cbWinAreaID - 1 == n.AREA_BLACK;
s.bDraw = !1;
s.bBanker = o.cbWinAreaID - 1 == n.AREA_RED;
s.cbMaxCardType = Math.max(o.cbBlackCardType, o.cbRedCardType);
i.InsertNewGameRecord(s);
i.InsertNewGameResult(s);
}
}
i.UpdateGameRecordAll(e);
}
},
SendPlaceJetton: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
},
SendGetRecord: function() {
this.SendGameData(n.SUB_C_GET_RECORD, 0, 0);
}
});
cc._RF.pop();
}, {
HHDZ_NewCMD_Game: "HHDZ_NewCMD_Game"
} ],
HHDZ_NewGameHistory: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f63ddqdGNRC0rHf5JNBIoz5", "HHDZ_NewGameHistory");
var n = e("HHDZ_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_aGameResult: [],
m_aGameRecord: [],
m_aDaLuTFullData: [],
m_aDaLuTFullDataOrder: [],
m_aXiaSanLuTFullData: [],
m_bGuaiWan: 0,
m_nGuaiWanItemCount: 0,
m_nChangeX: 0,
m_nChangeY: 0,
m_aXiaSanLuItemArray: [],
m_aLabGameCount: cc.Label,
m_aLabAreaWinCount: {
default: [],
type: cc.Label
},
m_GameRecordXian: {
default: [],
type: cc.Label
},
m_GameRecordZhuang: {
default: [],
type: cc.Label
},
m_GameRecordNode: cc.Node,
m_PrefabRecordItem: cc.Prefab,
m_ZhuZaiLuNode: cc.Node,
m_DaLuNode: cc.Node,
m_DaYanZaiLuNode: cc.Node,
m_XiaoLuNode: cc.Node,
m_XiaoQiangLuNode: cc.Node,
m_CardTypeNode: cc.Node,
m_NodeNextXian_DaYanZaiLu: cc.Node,
m_NodeNextXian_XiaoLu: cc.Node,
m_NodeNextXian_XiaoQiangLu: cc.Node,
m_NodeNextZhuang_DaYanZaiLu: cc.Node,
m_NodeNextZhuang_XiaoLu: cc.Node,
m_NodeNextZhuang_XiaoQiangLu: cc.Node,
m_PrefabZhuZaiLuItem: cc.Prefab,
m_PrefabDaLuItem: cc.Prefab,
m_PrefabDaYanZaiLuItem: cc.Prefab,
m_PrefabXiaoLuItem: cc.Prefab,
m_PrefabXiaoQiangLuItem: cc.Prefab,
m_PrefabCardTypeItem: cc.Prefab,
m_aZhuZaiLuItemJs: [],
m_aDaLuItemJs: [],
m_aDaYanZaiLuItemJs: [],
m_aXiaoLuItemJs: [],
m_aXiaoQiangLuItemJs: []
},
onLoad: function() {
for (var e = 0; e < 100; ++e) for (var t = 0; t < 6; ++t) this.m_aXiaSanLuItemArray.push(0);
for (e = 0; e < 8; ++e) for (t = 0; t < 6; ++t) {
var i = (n = cc.instantiate(this.m_PrefabZhuZaiLuItem)).getComponent("HHDZ_NewLuDan_ZhuZaiLu");
this.m_ZhuZaiLuNode.addChild(n);
i.ResetBoxMatrixPos(e, t);
this.m_aZhuZaiLuItemJs.push(i);
}
for (e = 0; e < 24; ++e) for (t = 0; t < 6; ++t) {
var n = cc.instantiate(this.m_PrefabDaLuItem);
this.m_DaLuNode.addChild(n);
var a = n.getComponent("HHDZ_NewLuDan_DaLu");
a.ResetBoxMatrixPos(e, t);
this.m_aDaLuItemJs.push(a);
}
for (e = 0; e < 24; ++e) for (t = 0; t < 6; ++t) {
n = cc.instantiate(this.m_PrefabDaYanZaiLuItem);
this.m_DaYanZaiLuNode.addChild(n);
var o = n.getComponent("HHDZ_NewLuDan_DaYanZaiLu");
o.ResetBoxMatrixPos(e, t);
this.m_aDaYanZaiLuItemJs.push(o);
n = cc.instantiate(this.m_PrefabXiaoLuItem);
this.m_XiaoLuNode.addChild(n);
var s = n.getComponent("HHDZ_NewLuDan_XiaoLu");
s.ResetBoxMatrixPos(e, t);
this.m_aXiaoLuItemJs.push(s);
n = cc.instantiate(this.m_PrefabXiaoQiangLuItem);
this.m_XiaoQiangLuNode.addChild(n);
var r = n.getComponent("HHDZ_NewLuDan_XiaoQiangLu");
r.ResetBoxMatrixPos(e, t);
this.m_aXiaoQiangLuItemJs.push(r);
}
},
ResetGameResultHistory: function(e) {
cc.assert(!1, "接口未启用");
},
ResetGameResultData: function() {
this.m_aGameResult = [];
this.m_aGameRecord = [];
},
InsertNewGameResult: function(e) {
this.m_aGameResult.length >= n.MAX_LUDAN_HISTORY && this.m_aGameResult.splice(0, 1);
this.m_aGameResult.push(e);
},
InsertNewGameRecord: function(e) {
this.m_aGameRecord.length >= 20 && this.m_aGameRecord.shift();
this.m_aGameRecord.push(e);
},
UpdateGameRecordAll: function(e) {
this.UpdateGameRecord_HistoryLayer();
this.UpdateAreaPercentView();
this.UpdateZhuZaiLuView(e);
this.UpdateDaLuView(e);
this.UpdateDaYanZaiLuView(e);
this.UpdateXiaoLuView(e);
this.UpdateXiaoQiangLuView(e);
this.UpdateCardTypeView();
this.UpdateYuCe();
},
UpdateGameRecord_HistoryLayer: function() {
this.m_GameRecordNode.removeAllChildren();
var e = this.m_aGameRecord.length, t = 0;
e > 20 && (t = e - 20);
for (;t < e; ++t) {
var i = this.m_aGameRecord[t], n = cc.instantiate(this.m_PrefabRecordItem), a = n.getComponent("HHDZ_NewGameRecordItem");
this.m_GameRecordNode.addChild(n);
i.bPlayer ? a.OnSetAreaSprite(0) : i.bBanker && a.OnSetAreaSprite(1);
}
},
UpdateAreaPercentView: function() {
var e, t = 0, i = 0;
e = this.m_aGameResult.length;
for (var a = 0; a < e; ++a) {
var o = this.m_aGameResult[a];
o.bPlayer && t++;
o.bDraw && 0;
o.bBanker && i++;
}
this.m_aLabAreaWinCount[n.AREA_BLACK].string = t;
this.m_aLabAreaWinCount[n.AREA_RED].string = i;
this.m_aLabGameCount.string = e;
},
DaLu_FindLastNodePos: function(e, t) {
cc.assert(!(0 == e && 0 == t));
if (0 == t) return {
x: e - 1,
y: t
};
if (t > 0) {
if (null != this.m_aDaLuTFullData[6 * e + (t - 1)]) return {
x: e,
y: t - 1
};
if (null == this.m_aDaLuTFullData[6 * e + (t - 1)] && null != this.m_aDaLuTFullData[6 * (e - 1) + t]) return {
x: e - 1,
y: t
};
}
},
DaLu_FindNextNodePos: function(e, t, i, n) {
if (e) {
if (null == this.m_aDaLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker == this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aDaLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && (this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker, 
this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker), t += 1);
return {
x: t,
y: i
};
}
if (null == this.m_aXiaSanLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aXiaSanLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && (this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue, 
this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue), t += 1);
return {
x: t,
y: i
};
},
DaLu_FindFirstUnusedXPos: function(e) {
if (e) {
for (var t = 0; t < 100; ++t) if (null == this.m_aDaLuTFullData[6 * t]) return t;
} else for (t = 0; t < 100; ++t) if (null == this.m_aXiaSanLuTFullData[6 * t]) return t;
},
UpdateZhuZaiLuView: function(e) {
for (var t = 0; t < 48; ++t) this.m_aZhuZaiLuItemJs[t].ResetGameResult();
var i = this.m_aGameResult.length - 48 + 2;
i = i > 0 ? i : 0;
for (t = 0; t < 48 && !(t >= this.m_aGameResult.length); ++t) {
var n = t % 6, a = parseInt(t / 6);
if (i + t < this.m_aGameResult.length) {
this.m_aZhuZaiLuItemJs[a + 8 * n].ResetGameResult(this.m_aGameResult[i + t]);
i + t == this.m_aGameResult.length - 1 && e && this.m_aZhuZaiLuItemJs[a + 8 * n].OnPlayAnim();
} else this.m_aZhuZaiLuItemJs[a + 8 * n].ResetGameResult(null);
}
},
UpdateDaLuView: function(e) {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var t = 0; t < 144; ++t) {
this.m_aDaLuItemJs[t].ResetGameResult();
this.m_aDaLuItemJs[t].ResetDrawCount(0);
}
var i = 0, n = 0, a = 0, o = 0, s = 0, r = 0;
for (t = 0; t < this.m_aGameResult.length; ++t) {
var c = this.m_aGameResult[t];
1 == c.bDraw ? r += 1 : r = 0;
if (r != t + 1) {
var l = 6 * i + n, h = 0, u = null;
if (l > 0) {
var d = this.DaLu_FindLastNodePos(i, n);
h = 6 * d.x + d.y;
u = this.m_aDaLuTFullData[h].gameResult;
cc.assert(null != u, "error, lastPos=" + d.x + "," + d.y + ";lastIndex=" + h);
}
if (n > 0 && 0 == c.bDraw && c.bBanker != u.bBanker) {
l = 6 * (i = this.DaLu_FindFirstUnusedXPos(!0)) + (n = 0);
i >= a && (a = i);
}
if (r >= 1) this.m_aDaLuTFullData[h].nDrawCount = r; else {
var m = {};
m.x = i;
m.y = n;
m.gameResult = c;
m.nDrawCount = 0;
this.m_aDaLuTFullData[l] = m;
this.m_aDaLuTFullDataOrder.push(6 * i + n);
o = i;
s = n;
var f = this.DaLu_FindNextNodePos(!0, i, n);
i = f.x;
n = f.y;
i >= a && (a = i);
}
}
}
if (!(this.m_aDaLuTFullData.length <= 0 || this.m_aDaLuTFullDataOrder.length <= 0)) {
var p = a - 24 + 1;
p = p < 0 ? 0 : p;
for (t = 0; t < this.m_aDaLuTFullData.length; ++t) if (null != this.m_aDaLuTFullData[t]) {
var _ = this.m_aDaLuTFullData[t];
if (!(_.x < p)) {
this.m_aDaLuItemJs[_.x - p + 24 * _.y].ResetGameResult(_.gameResult);
this.m_aDaLuItemJs[_.x - p + 24 * _.y].ResetDrawCount(_.nDrawCount);
t == this.m_aDaLuTFullData.length - 1 && e && this.m_aDaLuItemJs[o - p + 24 * s].OnPlayAnim();
}
}
}
},
isSameXLastItemData: function(e, t) {
for (var i = !0, n = 0; n < 6; ++n) if (null != this.m_aDaLuTFullData[6 * e + n] && null == this.m_aDaLuTFullData[6 * t + n] || null == this.m_aDaLuTFullData[6 * e + n] && null != this.m_aDaLuTFullData[6 * t + n]) {
i = !1;
break;
}
return i;
},
UpdateDaYanZaiLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aDaYanZaiLuItemJs[t].ResetData(0);
var i = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (i = 12);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 1) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 2, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 1) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aDaYanZaiLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aDaYanZaiLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateXiaoLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoLuItemJs[t].ResetData(0);
var i = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (i = 18);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 2) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 3, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 2) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateXiaoQiangLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoQiangLuItemJs[t].ResetData(0);
var i = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (i = 24);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 3) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 4, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 3) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoQiangLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoQiangLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateYuCe: function() {
if (null != this.m_aDaLuTFullData[7] || null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12]) {
this.m_NodeNextXian_DaYanZaiLu.active = !0;
this.m_NodeNextZhuang_DaYanZaiLu.active = !0;
this.UpdateYuCe_DaYanZaiLu();
} else {
this.m_NodeNextXian_DaYanZaiLu.active = !1;
this.m_NodeNextZhuang_DaYanZaiLu.active = !1;
}
if (null != this.m_aDaLuTFullData[13] || null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18]) {
this.m_NodeNextXian_XiaoLu.active = !0;
this.m_NodeNextZhuang_XiaoLu.active = !0;
this.UpdateYuCe_XiaoLu();
} else {
this.m_NodeNextXian_XiaoLu.active = !1;
this.m_NodeNextZhuang_XiaoLu.active = !1;
}
if (null != this.m_aDaLuTFullData[19] || null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24]) {
this.m_NodeNextXian_XiaoQiangLu.active = !0;
this.m_NodeNextZhuang_XiaoQiangLu.active = !0;
this.UpdateYuCe_XiaoQiangLu();
} else {
this.m_NodeNextXian_XiaoQiangLu.active = !1;
this.m_NodeNextZhuang_XiaoQiangLu.active = !1;
}
},
UpdateYuCe_DaYanZaiLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoQiangLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateDaLuData: function() {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var e = 0, t = 0, i = 0, n = 0; n < this.m_aGameResult.length; ++n) {
var a = this.m_aGameResult[n];
1 == a.bDraw ? i += 1 : i = 0;
if (i != n + 1) {
var o = 6 * e + t, s = 0, r = null;
if (o > 0) {
var c = this.DaLu_FindLastNodePos(e, t);
s = 6 * c.x + c.y;
r = this.m_aDaLuTFullData[s].gameResult;
cc.assert(null != r, "error, lastPos=" + c.x + "," + c.y + ";lastIndex=" + s);
}
t > 0 && 0 == a.bDraw && a.bBanker != r.bBanker && (o = 6 * (e = this.DaLu_FindFirstUnusedXPos(!0)) + (t = 0));
if (i >= 1) this.m_aDaLuTFullData[s].nDrawCount = i; else {
var l = {};
l.x = e;
l.y = t;
l.gameResult = a;
l.nDrawCount = 0;
this.m_aDaLuTFullData[o] = l;
this.m_aDaLuTFullDataOrder.push(6 * e + t);
var h = this.DaLu_FindNextNodePos(!0, e, t);
e = h.x;
t = h.y;
}
}
}
},
UpdateDaYanZaiLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (t = 12);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 1) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 2, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 1) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !1);
}
},
UpdateXiaoLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (t = 18);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 2) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 3, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 2) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !1);
}
},
UpdateXiaoQiangLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (t = 24);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 3) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 4, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 3) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !1);
}
},
SetGameSprite: function(e, t) {
e.getComponent("HHDZ_NewLuDan_Next").OnSetSpriteFrame(t);
},
UpdateCardTypeView: function() {
var e = [ "Nothing", "Single", "Double", "Successive", "Homochromy", "S&H", "Triple", "Special" ];
this.m_CardTypeNode.removeAllChildren();
var t = this.m_aGameRecord.length, i = 0;
t > 20 && (i = t - 20);
for (;i < t; ++i) {
var a = this.m_aGameRecord[i], o = cc.instantiate(this.m_PrefabCardTypeItem), s = o.getComponent("HHDZ_NewGameRecordItem");
this.m_CardTypeNode.addChild(o);
n.CT_SINGLE == a.cbMaxCardType ? s.OnSetTypeSprite(!0) : s.OnSetTypeSprite(!1);
s.labelCardType.string = e[a.cbMaxCardType];
}
},
removeSelf: function() {
this.node.active = !1;
},
testDaLu: function(e, t) {
if (t >= 0 && t <= 2) {
var i = new n.tagTableResult();
i.bPlayer = 0 == t;
i.bDraw = 1 == t;
i.bBanker = 2 == t;
this.InsertNewGameResult(i);
} else 3 == t && this.m_aGameResult.length > 0 && this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateGameRecordAll(!0);
}
});
cc._RF.pop();
}, {
HHDZ_NewCMD_Game: "HHDZ_NewCMD_Game"
} ],
HHDZ_NewGameRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3edda9wV3ZDT6O4iIiA5AxN", "HHDZ_NewGameRecordItem");
cc.Class({
extends: cc.Component,
properties: {
spWinArea: cc.Sprite,
spCardType: cc.Sprite,
spAryWinArea: [ cc.SpriteFrame ],
spAryCardType: [ cc.SpriteFrame ],
labelCardType: cc.Label
},
onLoad: function() {},
OnSetAreaSprite: function(e) {
this.spAryWinArea && this.spAryWinArea[e] && this.spWinArea && (this.spWinArea.spriteFrame = this.spAryWinArea[e]);
},
OnSetTypeSprite: function(e) {
this.spAryCardType && 2 == this.spAryCardType.length && this.spCardType && (this.spCardType.spriteFrame = e ? this.spAryCardType[0] : this.spAryCardType[1]);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08571bZ/51GsZCVWwcyv3gv", "HHDZ_NewGameView");
var n = e("HHDZ_NewCMD_Game");
n.GAME_PLAYER, cc.Class({
extends: GameFrameView,
properties: {
arrChipItem: [ cc.Label ],
arrBetArea: [ cc.Node ],
labelGameStatus: cc.Label,
nodeGameTime: cc.Node,
nodeBackCard: cc.Node,
nodeCardData: [ cc.Node ],
nodeCardType: [ cc.Label ],
_jsGameEndAction: [],
StartGameAnim: cc.Node,
GameStatusAnim: cc.Node,
nodeWaitStatus: cc.Node,
nodeRecordByArea: cc.Node,
nodeRecordByCardType: cc.Node,
nodeAreaButton: [ cc.Node ],
nodeAreaParent: cc.Node,
nodePlayerList: cc.Node,
nodeGameHistory: cc.Node,
pMenuLayer: cc.Node,
pCardPrefab: cc.Prefab,
pfRecordByArea: cc.Prefab,
pfRecordByCardType: cc.Prefab,
pfHistory: cc.Prefab
},
OnFrameViewLoad: function() {
this.OnTouchRegister();
},
OnTouchRegister: function() {
cc.director.getCollisionManager().enabled = !0;
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_START, this.OnTouchBegan, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancel, this);
},
OnTouchBegan: function(e) {
for (var t = e.getTouches()[0].getLocation(), i = this.nodeAreaButton.length - 1; i >= 0; i--) {
var n = this.nodeAreaButton[i].getComponent(cc.PolygonCollider);
if (n && cc.Intersection.pointInPolygon(t, n.world.points)) {
this.cbTouchIndex = i;
this.nodeAreaButton[this.cbTouchIndex] && this.nodeAreaButton[i].emit(cc.Node.EventType.TOUCH_START);
return;
}
}
},
OnTouchEnded: function() {
this.nodeAreaButton[this.cbTouchIndex] && this.nodeAreaButton[this.cbTouchIndex].emit(cc.Node.EventType.TOUCH_END);
},
OnTouchCancel: function() {
this.nodeAreaButton[this.cbTouchIndex] && this.nodeAreaButton[this.cbTouchIndex].emit(cc.Node.EventType.TOUCH_CANCEL);
},
OnResetGameView: function() {
for (var e = 0; e < n.CARD_NUM; e++) {
for (var t = 0; t < n.MAX_COUNT; t++) if (this.nodeCardData[e * n.MAX_COUNT + t]) {
var i = [];
i[0] = this.nodeCardData[e * n.MAX_COUNT + t];
i[2] = "Action_RemoveChildren";
this._jsGameEndAction.push(i);
}
this.nodeCardType[e].node.parent.active = !1;
}
for (var a = 0; a < n.AREA_MAX; a++) this.ShowUserJettonWithGameScene(a, 0, 0);
for (var o = 0; o < n.AREA_MAX; o++) {
this.arrBetArea[o].getComponent("HHDZ_NewBetArea").nodeAnimation.active = !1;
}
this.OnActionBegan();
this.OnFrameResetView();
this.OnWaitStatus(!1);
},
OnEventUserEnter: function(e, t) {
return !0;
},
OnEventUserStatus: function(e, t, i) {
return !0;
},
OnEventUserLeave: function(e, t, i) {
return !0;
},
OnEventUserChat: function(e, t) {
return !0;
},
OnEventUserImage: function(e, t) {
return !0;
},
OnEventSystemMessage: function(e, t) {
return !0;
},
ShowBetChip: function(e) {
for (var t = 0, i = 0; i < n.JETTON_NUM; i++) {
t = OnIntScore(e[i]);
this.arrChipItem[i] && (this.arrChipItem[i].string = t);
}
this.OnFrameInitJetton(e);
},
SetGameInfoWithFreeScene: function(e, t, i, n, a, o, s) {
var r = this.nodeBankerLayer.getComponent("HHDZ_BankerLayer");
r.labelBankerScore.string = t;
r.labelBankerTime.string = i;
this.m_wCurrentBanker = e;
this.m_lApplyBankerCondition = o;
this.m_lTmpBankerWinScore = n;
this.m_bEnableSysBanker = a;
this.m_lAreaLimitScore = s;
},
SetGameInfoWithGameScene: function(e, t, i, n, a, o, s) {
var r = this.nodeBankerLayer.getComponent("HHDZ_BankerLayer");
r.labelBankerScore.string = t;
r.labelBankerTime.string = i;
this.m_wCurrentBanker = e;
this.m_lApplyBankerCondition = o;
this.m_lTmpBankerWinScore = n;
this.m_bEnableSysBanker = a;
this.m_lAreaLimitScore = s;
},
ChangeJettonState: function(e) {
for (var t = this.pGameEngineJs.jsMeUserItem.GetUserScore(), i = 0, a = 0; a < n.AREA_MAX; a++) i += this.pGameEngineJs.lPlayBet[a];
t -= i;
var o = this.pGameEngineJs.arrBetChip.concat(), s = [];
memset(s, !1, n.JETTON_NUM);
if (!e) for (var r = 0; r < n.JETTON_NUM && t >= o[r]; r++) s[r] = !0;
var c = this.pGameEngineJs.cbCurrJettonIndex;
if (s[c]) this.SetBtnSelectState(c); else for (var l = c - 1; l >= 0; l--) if (s[l]) {
this.pGameEngineJs.cbCurrJettonIndex = l;
c = l;
this.SetBtnSelectState(l);
break;
}
for (var h = 0; h < n.JETTON_NUM; h++) if (this.arrChipItem[h]) {
var u = this.arrChipItem[h].node.parent;
if (u) {
var d = u.getComponent(cc.Button);
this.OnSetBtnDisable(d, s[h]);
}
}
},
OnSetBtnDisable: function(e, t) {
e.interactable = t;
if (!t) {
e.node.getChildByName("Select").active = !1;
}
},
SetBtnSelectState: function(e) {
for (var t = 0; t < n.JETTON_NUM; t++) if (this.arrChipItem[t]) {
var i = this.arrChipItem[t].node.parent;
if (i) {
var a = i.getComponent(cc.Button).node.getChildByName("Select");
a && (a.active = t == e);
}
}
},
SetTimeClock: function(e, t) {
this.nodeGameTime.getComponent("jsTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowUserJettonWithGameScene: function(e, t, i) {
var n = this.arrBetArea[e].getComponent("HHDZ_NewBetArea");
n.labelAllBet.string = OnIntScore(t);
n.labelMeBet.string = OnIntScore(i);
n.labelAllBet.node.parent.active = 0 != t;
n.labelMeBet.node.parent.active = 0 != i;
},
ShowUserBetInfo: function(e, t, i, a, o) {
for (var s = 0, r = 0, c = 0, l = 0; l < n.AREA_MAX; l++) {
s += i[l];
r += t[l];
c += a[l];
}
var h = [];
memset(h, 0, n.GAME_PLAYER);
o[0] != INVALID_CHAIR && (h[o[0]] = r);
o[1] != INVALID_CHAIR && (h[o[1]] = c);
h[this.GetMeChairID()] = s;
this.OnFrameBetInfo(e, t, h);
},
OnGameStartAction: function() {
this.ShowStartBet();
},
ShowStartBet: function() {
var e = this.GameStatusAnim.getComponent("HHDZ_NewActionHelp");
e.ResetAllNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
this.OnSendCardAction();
},
OnBetFinish: function(e) {
var t = this.GameStatusAnim.getComponent("HHDZ_NewActionHelp");
t.ResetAllNode();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
e ? t.StartGameEndAction(e) : t.StartGameEndAction();
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
OnFrameEventUserScore: function(e, t) {
return !0;
},
OnSendCardAction: function() {
var e = [ 0, 5, 1, 4, 2, 3 ];
this._jsGameEndAction.length = 0;
var t = [];
t[0] = this.nodeBackCard;
t[2] = "Action_SendCardStart";
this._jsGameEndAction.push(t);
for (var i = 0; i < n.CARD_NUM; i++) for (var a = 0; a < n.MAX_COUNT; a++) {
var o = this.nodeCardData[e[i * n.MAX_COUNT + a]], s = this.nodeBackCard.convertToWorldSpaceAR(cc.v2(0, 0)), r = o.convertToNodeSpaceAR(s), c = [];
c[0] = o;
c[1] = r;
c[2] = "Action_SendCard";
c[3] = .1;
this._jsGameEndAction.push(c);
var l = [];
l[1] = .05;
l[2] = "Action_dt";
this._jsGameEndAction.push(l);
}
var h = [];
h[0] = this.nodeBackCard;
h[2] = "Action_SendCardEnd";
this._jsGameEndAction.push(h);
this.OnActionBegan();
},
ShowPokerBack: function() {
for (var e = 0; e < n.CARD_NUM; e++) for (var t = 0; t < n.MAX_COUNT; t++) {
var i = this.nodeCardData[e * n.MAX_COUNT + t], a = cc.instantiate(this.pCardPrefab);
a.getComponent("HHDZ_NewCardNode").SetBackCardTexture(1);
i.addChild(a);
a.setPosition(cc.v2(0, 0));
}
},
ShowPokerResult: function(e, t, i, n, a, o) {
var s = this;
if (o) this.OnShowCardDataAnim(e, t, function() {
s.ShowWinAreaAnim(i, n);
s.OnAddGameRecord(i, t);
s.OnGameEndJettonAction(n, i, a, !0);
}); else {
this.ShowTableCardData(e, t);
this.ShowWinAreaAnim(i, n);
this.OnGameEndJettonAction(n, i, a, !1);
}
},
ShowTableCardData: function(e, t) {
for (var i = [ "Nothing", "Single", "Double", "Successive", "Homochromy", "S&H", "Triple", "Special" ], a = 0; a < n.CARD_NUM; a++) {
for (var o = 0; o < n.MAX_COUNT; o++) {
var s = this.nodeCardData[a * n.MAX_COUNT + o], r = cc.instantiate(this.pCardPrefab);
r.getComponent("HHDZ_NewCardNode").SetCardData(0, e[a][o]);
s.addChild(r);
r.setPosition(cc.v2(0, 0));
}
this.nodeCardType[a].string = i[t[a]];
this.nodeCardType[a].node.parent.active = !0;
}
},
OnActionBegan: function() {
var e = this;
if (this._jsGameEndAction.length > 0) {
var t = this._jsGameEndAction.shift();
if ("Action_SendCardStart" == t[2]) {
var i = t[0], a = cc.instantiate(this.pCardPrefab);
a.getComponent("HHDZ_NewCardNode").SetBackCardTexture(1);
i.addChild(a);
a.setPosition(cc.v2(0, 0));
this.OnActionBegan();
} else if ("Action_SendCard" == t[2]) {
var o = t[0], s = t[1], r = t[3], c = cc.instantiate(this.pCardPrefab);
c.getComponent("HHDZ_NewCardNode").SetBackCardTexture(1);
o.addChild(c);
c.setPosition(s);
c.runAction(cc.sequence(cc.callFunc(function() {
window.mfConfig.PlayAudio("136/Audio/SendCard");
}), cc.moveTo(r, cc.v2(0, 0)), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_SendCardEnd" == t[2]) {
t[0].removeAllChildren();
this.OnActionBegan();
} else if ("Action_Rotation" == t[2]) {
var l = t[0], h = t[1], u = t[3], d = t[4];
l.runAction(cc.sequence(cc.callFunc(function() {
window.mfConfig.PlayAudio("136/Audio/OpenCard");
}), cc.scaleTo(u / 2, 0, d), cc.callFunc(function() {
l.getComponent("HHDZ_NewCardNode").SetCardData(0, h);
}), cc.scaleTo(u / 2, d, d), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_Scale" == t[2]) {
var m = t[0], f = t[1], p = t[3];
cc.isValid(m) && m.runAction(cc.sequence(cc.scaleTo(p, f), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_CardType" == t[2]) {
var _ = t[0], S = t[1];
_.getComponent(cc.Label).string = [ "Nothing", "Single", "Double", "Successive", "Homochromy", "S&H", "Triple", "Special" ][S];
_.parent.active = !0;
if (S >= n.CT_SINGLE && S <= n.CT_BAO_ZI) {
var g = "136/Audio/CardType_" + S;
window.mfConfig.PlayAudio(g);
}
e.OnActionBegan();
} else if ("Action_callback" == t[2]) {
var C = t[0];
C && C();
e.OnActionBegan();
} else if ("Action_RemoveChildren" == t[2]) {
var w = t[0];
w.runAction(cc.callFunc(function() {
w.removeAllChildren();
}));
e.OnActionBegan();
} else if ("Action_dt" == t[2]) {
var b = t[1];
this.node.runAction(cc.sequence(cc.delayTime(b), cc.callFunc(function() {
e.OnActionBegan();
})));
}
}
},
OnShowCardDataAnim: function(e, t, i) {
this._jsGameEndAction.length = 0;
for (var a = 0; a < n.CARD_NUM; a++) {
for (var o = 0; o < n.MAX_COUNT; o++) {
var s = this.nodeCardData[a * n.MAX_COUNT + o].getChildByName("pfHHDZ_Card"), r = e[a][o];
if (o < n.MAX_COUNT - 1) {
var c = [];
c[0] = s;
c[1] = r;
c[2] = "Action_Rotation";
c[3] = .2;
c[4] = 1;
this._jsGameEndAction.push(c);
} else {
var l = [];
l[0] = s;
l[1] = 1.2;
l[2] = "Action_Scale";
l[3] = .1;
this._jsGameEndAction.push(l);
var h = [];
h[1] = .2;
h[2] = "Action_dt";
this._jsGameEndAction.push(h);
var u = [];
u[0] = s;
u[1] = r;
u[2] = "Action_Rotation";
u[3] = .2;
u[4] = 1.2;
this._jsGameEndAction.push(u);
var d = [];
d[1] = .2;
d[2] = "Action_dt";
this._jsGameEndAction.push(d);
var m = [];
m[0] = s;
m[1] = 1;
m[2] = "Action_Scale";
m[3] = .1;
this._jsGameEndAction.push(m);
}
var f = [];
f[1] = .1;
f[2] = "Action_dt";
this._jsGameEndAction.push(f);
}
var p = [];
p[0] = this.nodeCardType[a].node;
p[1] = t[a];
p[2] = "Action_CardType";
this._jsGameEndAction.push(p);
var _ = [];
_[1] = .1;
_[2] = "Action_dt";
this._jsGameEndAction.push(_);
}
if (i) {
var S = [];
S[0] = i;
S[2] = "Action_callback";
this._jsGameEndAction.push(S);
}
this.OnActionBegan();
},
ShowWinAreaAnim: function(e, t) {
var i = this.arrBetArea[e - 1].getComponent("HHDZ_NewBetArea");
i.nodeAnimation.active = !0;
i.nodeAnimation.getComponent(cc.Animation).play();
if (t) {
var a = this.arrBetArea[n.AREA_LUCK].getComponent("HHDZ_NewBetArea");
a.nodeAnimation.active = !0;
a.nodeAnimation.getComponent(cc.Animation).play();
}
},
PlaceJettonAction: function(e, t, i) {
var n = this.GetBetAreaVec2(i);
this.OnFramePlaceJetton(e, i, t, n);
},
GetBetAreaVec2: function(e) {
var t = this.arrBetArea[e].getComponent("HHDZ_NewBetArea").nodeJettonArea, i = t.width, n = t.height, a = parseInt(Math.random() * (i - 100)), o = parseInt(Math.random() * (n - 100));
return cc.v2(a + 50, o + 50);
},
OnGameEndJettonAction: function(e, t, i, a) {
var o = [];
this.pGameEngineJs.lAllBet[t] > 0 && o.push(t);
if (e) {
var s = n.AREA_LUCK;
this.pGameEngineJs.lAllBet[s] > 0 && o.push(s);
}
this.OnFrameGameEndAction(o, i, a);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "Have a rest";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "Bet in time";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "";
return;
}
},
ShowGameRecordView: function(e) {
var t = e.concat(), i = e.concat();
this.nodeRecordByArea.removeAllChildren();
this.nodeRecordByCardType.removeAllChildren();
var a = [ "Nothing", "Single", "Double", "Successive", "Homochromy", "S&H", "Triple", "Special" ];
t.length > n.MAX_RECORD_AREA && (t = t.slice(-n.MAX_RECORD_AREA));
e.length > n.MAX_RECORD_CARD && (i = i.slice(-n.MAX_RECORD_CARD));
for (var o = 0; o < t.length; o++) {
var s = cc.instantiate(this.pfRecordByArea);
s.getComponent("HHDZ_NewGameRecordItem").OnSetAreaSprite(t[o].cbWinAreaID - 1);
this.nodeRecordByArea.addChild(s);
}
for (var r = 0; r < i.length; r++) {
var c = cc.instantiate(this.pfRecordByCardType), l = c.getComponent("HHDZ_NewGameRecordItem"), h = Math.max(i[r].cbBlackCardType, i[r].cbRedCardType);
n.CT_SINGLE == h ? l.OnSetTypeSprite(!0) : l.OnSetTypeSprite(!1);
l.labelCardType.string = a[h];
this.nodeRecordByCardType.addChild(c);
}
},
OnAddGameRecord: function(e, t) {
var i = this.nodeRecordByArea.children.length, a = this.nodeRecordByCardType.children.length, o = cc.instantiate(this.pfRecordByArea), s = o.getComponent("HHDZ_NewGameRecordItem");
s.OnSetAreaSprite(e - 1);
var r = cc.instantiate(this.pfRecordByCardType), c = r.getComponent("HHDZ_NewGameRecordItem"), l = Math.max(t[n.AREA_BLACK], t[n.AREA_RED]);
n.CT_SINGLE == l ? c.OnSetTypeSprite(!0) : c.OnSetTypeSprite(!1);
c.labelCardType.string = [ "Nothing", "Single", "Double", "Successive", "Homochromy", "S&H", "Triple", "Special" ][l];
i >= n.MAX_RECORD_AREA && this.nodeRecordByArea.children.shift();
this.nodeRecordByArea.addChild(o);
s.OnPlayAnim();
a >= n.MAX_RECORD_CARD && this.nodeRecordByCardType.children.shift();
this.nodeRecordByCardType.addChild(r);
c.OnPlayAnim();
var h = new n.tagServerGameRecord();
h.cbWinAreaID = e;
h.cbBlackCardType = t[n.AREA_BLACK];
h.cbRedCardType = t[n.AREA_RED];
this.pGameEngineJs.stGameRecord.push(h);
this.pGameEngineJs.dwRecordCount == n.MAX_LUDAN_HISTORY ? this.pGameEngineJs.dwRecordCount = 1 : this.pGameEngineJs.dwRecordCount++;
this.pGameEngineJs.OnLoadGameRecord(!0);
},
OnButtonGameRecord: function() {
if (this.pGameEngineJs.nodeGameHistory) {
this.pGameEngineJs.nodeGameHistory.active = !0;
SceneManager_AlertShow(this.pGameEngineJs.nodeGameHistory);
} else this.pGameEngineJs.OnLoadGameRecord(!1);
},
OnInitHistoryView: function() {
if (this.nodeGameHistory && this.pfHistory && 0 == this.nodeGameHistory.childrenCount) {
var e = cc.instantiate(this.pfHistory);
this.nodeGameHistory.addChild(e);
return e;
}
return null;
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
OnMenuLayerShow: function() {
this.pMenuLayer.active = !this.pMenuLayer.active;
}
});
cc._RF.pop();
}, {
HHDZ_NewCMD_Game: "HHDZ_NewCMD_Game"
} ],
HHDZ_NewLuDan_DaLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1f158+l9RJAAJ4r39OHoikc", "HHDZ_NewLuDan_DaLu");
var n = e("HHDZ_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_nDrawCount: 0,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_labCount: cc.Label
},
onLoad: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
this.m_GameResult = new n.tagTableResult();
this.m_nDrawCount = 0;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
ResetDrawCount: function(e) {
this.m_nDrawCount = e;
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (0 != this.m_nDrawCount) {
this.m_labCount.node.active = !0;
this.m_labCount.string = this.m_nDrawCount;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
HHDZ_NewCMD_Game: "HHDZ_NewCMD_Game"
} ],
HHDZ_NewLuDan_DaYanZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "82e1fNbgwhALrUzFzHNgycp", "HHDZ_NewLuDan_DaYanZaiLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewLuDan_Next: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac2ceIAN31P8688bJBRC0PT", "HHDZ_NewLuDan_Next");
cc.Class({
extends: cc.Component,
properties: {
m_TextureRed: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame
},
OnSetSpriteFrame: function(e) {
this.node.getComponent(cc.Sprite).spriteFrame = null;
this.node.getComponent(cc.Sprite).spriteFrame = e ? this.m_TextureRed : this.m_TextureBlue;
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewLuDan_XiaoLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "43a57qu9VBCzbL0YuSKWKM1", "HHDZ_NewLuDan_XiaoLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewLuDan_XiaoQiangLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9931eZ0frRBM6L6JHvN/LQd", "HHDZ_NewLuDan_XiaoQiangLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
HHDZ_NewLuDan_ZhuZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48967/NOxdA8pypX6nF3qPa", "HHDZ_NewLuDan_ZhuZaiLu");
var n = e("HHDZ_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_TexturePlayerPair: cc.SpriteFrame,
m_TextureBankerPair: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_sprLeftTopFlg: cc.Sprite,
m_sprRightBottomFlg: cc.Sprite
},
onLoad: function() {
this.m_XPos = 0;
this.m_YPos = 0;
this.m_GameResult = new n.tagTableResult();
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_sprLeftTopFlg.node.active = !1;
this.m_sprRightBottomFlg.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (1 == this.m_GameResult.bDraw) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureDraw;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
if (1 == this.m_GameResult.bPlayerPair) {
this.m_sprLeftTopFlg.node.active = !0;
this.m_sprLeftTopFlg.spriteFrame = this.m_TexturePlayerPair;
}
if (1 == this.m_GameResult.bBankerPair) {
this.m_sprRightBottomFlg.node.active = !0;
this.m_sprRightBottomFlg.spriteFrame = this.m_TextureBankerPair;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
HHDZ_NewCMD_Game: "HHDZ_NewCMD_Game"
} ],
HHDZ_NewUserChatItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0220eY/B7lG0aGWe+TYeg6I", "HHDZ_NewUserChatItem");
cc.Class({
extends: cc.Component,
properties: {
LabelStr: cc.Label,
UserImage: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
HHDZ_NewUserChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1e3192z5NdA87ZAI2FLVHlv", "HHDZ_NewUserChat");
cc.Class({
extends: cc.Component,
properties: {
pfChatItem: cc.Prefab
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
IosEventResult: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18bb1SeWbpJL4EVWLhrzm9F", "IosEventResult");
window.ios_callback = function(e, t) {
cc.log("====ios_callback:", e, ",szEventString:", t);
e == window.YQ_SUB_USER_POS ? window.mfConfig.CoordinateCallBack(arguments[1], arguments[2]) : window.eventResult.OnEventResult(e, t);
};
window.iosEventResult = cc.Class({
ctor: function() {
window.eventResult = this;
window.mfConfig.OnVoiceReset();
},
OnEventResult: function(e, t) {
var i = e;
if (!GameFrameEngine.instances && window.mfConfig.wEventType >= YQ_SUB_VOICE_START) window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED; else if (cc.sys.platform == cc.sys.IPHONE || cc.sys.platform == cc.sys.IPAD) if (i == window.YQ_SUB_EVENT_CANCEL) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else if (i == window.YQ_SUB_WXLOGON_TOKEN) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
var n = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithWXLogonToken"), a = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithWXLogonOpenid"), o = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeWithWXLogonRefreshToken");
window.mfConfig.LogonResult(n, o, a);
} else if (i == window.YQ_SUB_WXLOGON_FAILURE) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Authorization failed. Please try again");
} else if (i == window.YQ_SUB_WXUNINSTALL) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("未安装微信，请先安装微信客户端");
} else if (i == window.YQ_SUB_ZFW_SUCCEED) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Top-up successfully");
} else if (i == window.YQ_SUB_ZFW_FAILURE) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Top-up failure");
} else if (i == window.YQ_SUB_WXSHARE_SUCCEED) {
null != window.mfConfig.strShareType && null != window.mfConfig.strShareType && (window.mfConfig.strShareType != window.YQ_SUB_WXSHARE_SHAREWEBSPACE && window.mfConfig.strShareType != window.YQ_SUB_WXSHARE_SHARETOSPACE || window.mfConfig.TodayFirstShare());
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer();
} else if (i == window.YQ_SUB_WXSHARE_FAILURE) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer();
} else if (i == window.YQ_SUB_IOSPAY_SUCCEED) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Top-up successfully");
var s = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(s.GetUserID());
} else if (i == window.YQ_SUB_IOSPAY_WAITCANCEL) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else if (i == window.YQ_SUB_IOSPAY_NOSUCCEED) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("If data verification fails, please restart the game automatically or contact customer service for processing");
} else if (i == window.YQ_SUB_IOSPAY_FAILURE) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Top-up failure");
} else if (i == window.YQ_SUB_VOICE_ENDED) {
var r = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceTime");
window.mfConfig.OnVoiceStopBack(r);
} else if (i == window.YQ_SUB_VOICE_PALYENDED) window.mfConfig.OnVoicePlayStopedBack(); else if (i == window.YQ_SUB_VOICE_UPLOAD) {
var c = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceTime");
window.mfConfig.OnVoiceStopBack(c);
} else if (i == window.YQ_SUB_VOICE_UL_SUCCEED) {
var l = jsb.reflection.callStaticMethod("NativeOcClass", "callNativeByVoiceTime");
window.mfConfig.OnVoiceStopBack(l);
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
window.mfConfig.OnVoiceUpLoadBack(window.YQ_SUB_VOICE_UL_SUCCEED);
} else if (i == window.YQ_SUB_VOICE_UL_FAILURE) {
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
window.mfConfig.OnVoiceUpLoadBack(window.YQ_SUB_VOICE_UL_FAILURE);
} else if (i == window.YQ_SUB_NET_CHANGE) {
var h = t;
window.mfConfig.NetworkStateCallback(h, "Change");
} else if (i == window.YQ_SUB_VOICE_DL_SUCCEED) {
var u = t + ".spx";
window.mfConfig.OnVoiceDownLoadBack(window.YQ_SUB_VOICE_DL_SUCCEED, u);
window.mfConfig.pVoiceArray.length > 0 && window.mfConfig.wVoiceType == window.YQ_SUB_VOICESTATUS_NONE && GameFrameEngine.instances && window.mfConfig.OnVoicePlay();
} else if (i == window.YQ_SUB_VOIDE_DL_FAILURE) {
var d = t + ".spx";
window.mfConfig.OnVoiceDownLoadBack(window.YQ_SUB_VOIDE_DL_FAILURE, d);
} else i == window.YQ_SUB_OPENSELFAPP && ManagerHelp_SetSystemAlert("外部拉起：" + t);
}
});
window.iosEventResult.getInstance = function() {
window.iosEventResult.instance || (window.iosEventResult.instance = new window.iosEventResult());
return window.iosEventResult.instance;
};
cc._RF.pop();
}, {} ],
LHD_NewBetArea: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac99bxK2LtEGoQx7Bi+/PuY", "LHD_NewBetArea");
cc.Class({
extends: cc.Component,
properties: {
nodeJettonArea: cc.Node,
nodeAllBet: cc.Node,
labelMeBet: cc.Label,
nodeAnimation: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
LHD_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b3ae5TO275GdZzDTngIYLjv", "LHD_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY, r = GAME_STATUS_PLAY + 1;
t.exports.GAME_SCENE_FREE = a;
t.exports.GAME_SCENE_PLAY = o;
t.exports.GAME_SCENE_BET = s;
t.exports.GAME_SCENE_END = r;
t.exports.AREA_DARGON = 0;
t.exports.AREA_TIGER = 1;
t.exports.AREA_HE = 2;
t.exports.AREA_MAX = 3;
t.exports.CARD_NUM = 2;
t.exports.JETTON_NUM = 5;
t.exports.MAX_COUNT = 1;
t.exports.MAX_LUDAN_HISTORY = 60;
t.exports.MAX_TABLE_HISTORY = 15;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_C_PLACE_JETTON = 1;
var c = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbCardValue = [];
memset(this.cbCardValue, 0, 2);
}
});
t.exports.tagServerGameRecord = c;
t.exports.tagTableResult = function e() {
this.bPlayer = 0;
this.bDraw = 0;
this.bBanker = 0;
this.clone = function() {
var t = new e();
t.bPlayer = this.bPlayer;
t.bDraw = this.bDraw;
t.bBanker = this.bBanker;
return t;
};
};
cc._RF.pop();
}, {} ],
LHD_NewCardNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acc68ppocJPUpPukjviCB4j", "LHD_NewCardNode");
var n = e("jsHandCardTexture"), a = 0, o = 1, s = 2;
cc.Class({
extends: cc.Component,
properties: {
spCardTex: cc.Sprite,
nCard_Width: 0,
nCard_Height: 0,
cbCard_Data: 0,
cbCard_DataIndex: 0,
cbCard_Value: 0,
cbCard_Color: 0,
szCard_Name: "",
mCard_ViewID: 0,
mCard_ChairID: 0,
cbCard_Status: 0,
cbCard_Mark: 0,
pCard_BankerSign: null,
bCard_EnableSelect: !1,
bCard_Select: !1,
bCard_Move: !1,
bCard_Touch: !1,
bCard_Swallows: !1
},
onLoad: function() {
this.initData();
},
initData: function() {
this.nCard_Width = 156;
this.nCard_Height = 226;
this.cbCard_Data = 0;
this.cbCard_DataIndex = 0;
this.cbCard_Value = 0;
this.cbCard_Color = 0;
this.szCard_Name = "";
this.mCard_ViewID = 0;
this.mCard_ChairID = null;
this.cbCard_Status = 0;
this.cbCard_Mark = 0;
this.pCard_BankerSign = 0;
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return 240 & e;
},
SetStatus: function(e) {
this.cbCard_Status = e;
},
GetStatus: function() {
return this.cbCard_Status;
},
OpenDisableStatus: function() {
this.bCard_EnableSelect = !0;
this.node.color = cc.color(170, 170, 170);
},
CloseDisableStatus: function() {
this.bCard_EnableSelect = !1;
this.node.color = cc.color(255, 255, 255);
},
SetSelect: function(e) {
this.bCard_Select = e;
},
GetSelect: function() {
return this.bCard_Select;
},
SetSwallows: function(e) {
this.bCard_Swallows = e;
},
GetSwallows: function() {
return this.bCard_Swallows;
},
SetCardData: function(e, t, i) {
var a = this.GetCardColor(t) >> 4, o = 78 == t || 79 == t ? this.GetCardValue(t) % 14 : this.GetCardValue(t) - 1;
this.spCardTex.spriteFrame = n.GetPkFrame(t);
this.cbCard_Data = t;
this.cbCard_Value = o;
this.cbCard_Color = a;
this.cbCard_DataIndex = e;
3 == arguments.length && this.node.setScale(i, i);
},
GetCardData: function() {
return this.cbCard_Data;
},
ActionMove: function(e, t) {
var i = this.node.getPosition();
this.node.setPosition(e, t);
this.node.setScale(.5);
var n = cc.spawn(cc.moveTo(2, i), cc.scaleBy(2, .58));
this.node.runAction(n);
},
ResetData: function() {
this.SetStatus(a);
this.cbCard_Mark = !1;
this.SetSelect(!1);
this.node.color = new cc.Color(255, 255, 255);
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
SetFrontCardTexture: function(e) {
this.spCardTex.spriteFrame = n.GetPkFrame(82);
this.node.setScale(e, e);
},
SetBackCardTexture: function(e) {
this.spCardTex.spriteFrame = n.GetPkFrame(81);
this.node.setScale(e, e);
},
SetEndCardTexture: function(e) {
this.node.setScale(e, e);
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
},
SetOntouch: function(e) {
this.SetSelect(e);
},
SetpromptCardTexture: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
},
OnCardClickBegin: null,
OnCardClickEnded: null,
OnCardButtonEvent: function() {
if (!this.OnCardClickBegin || !this.OnCardClickBegin(this)) {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
} else {
this.node.setPositionY(this.node.getPositionY() + 30);
this.SetSelect(!0);
}
this.OnCardClickEnded && this.OnCardClickEnded(this);
}
},
OnCardUpspringEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(o);
this.node.setPositionY(this.node.getPositionY() + 30);
this.cbCard_Mark = !0;
this.SetSwallows(!0);
this.SetSelect(!0);
}
},
OnCardDownEvent: function() {
if (!this.bCard_EnableSelect) {
this.SetStatus(s);
this.node.setPositionY(this.node.getPositionY() - 30);
this.cbCard_Mark = !1;
this.SetSwallows(!0);
this.SetSelect(!1);
}
},
TurnhandLayout: function() {
this.SetSelect(!1);
},
SubAlign: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 30);
this.SetSelect(!1);
}
}
});
cc._RF.pop();
}, {
jsHandCardTexture: "jsHandCardTexture"
} ],
LHD_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "25c5ejp5TFEC4iX0scd8n4r", "LHD_NewGameEngine");
var n = e("LHD_NewCMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("LHD_NewGameView");
this.pGameViewJs.pGameEngineJs = this;
this.keepBetObj = [];
this.ResetGameEngine();
},
OnFrameEngineStart: function() {
this.cbGameStatus = 0;
this.cbCurrJettonIndex = 0;
this.GameResult = null;
this.stGameRecord = [];
this.dwRecordCount = 0;
this.lAllBet = [];
memset(this.lAllBet, 0, n.AREA_MAX);
this.lPlayBet = [];
memset(this.lPlayBet, 0, n.AREA_MAX);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("133/Audio/Bg", !0);
},
ResetGameEngine: function() {},
OnEventSceneMessage: function(e, t, i, a) {
this.cbGameStatus = e;
switch (e) {
case n.GAME_SCENE_FREE:
return this.OnGameSceneFree(i, a);

case n.GAME_SCENE_PLAY:
case n.GAME_SCENE_END:
return this.OnGameSceneEnd(i, a);
}
return !0;
},
OnGameSceneFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave - 1;
this.arrBetChip = i.BetChips;
this.lMinTake = i.RetainScore || 0;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
this.stGameRecord = [];
for (var o = 0; o < i.tGameRecord.length; o++) {
var s = new n.tagServerGameRecord();
s.cbCardValue[0] = this.pGameViewJs.GetCardValue(i.tGameRecord[o].Cards[0]);
s.cbCardValue[1] = this.pGameViewJs.GetCardValue(i.tGameRecord[o].Cards[1]);
this.stGameRecord[o] = s.cbCardValue;
}
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
return !0;
},
OnGameSceneEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.bEnableSysBanker = i.bEnableSysBanker;
this.lAreaLimitScore = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave - 1;
this.arrBetChip = i.BetChips;
this.lAllBet = i.AreaTotalBet;
this.lPlayBet = i.UserAreaBet;
this.cbTableCardArray = i.cbTableCardArray.concat();
var a = i.MostWinUserAreaBet.concat(), o = i.lMostBet.concat(), s = i.lOnlineUserScore.concat(), r = i.wOnlineUserChairID.concat(), c = i.lPlayAllScore;
this.lMinTake = i.RetainScore || 0;
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
for (var l = 0; l < n.AREA_MAX; ++l) this.pGameViewJs.ShowUserJettonWithGameScene(l, this.lAllBet[l], this.lPlayBet[l]);
this.pGameViewJs.ShowUserBetInfo(this.lAllBet, a, this.lPlayBet, o, r);
if (this.cbGameStatus == n.GAME_SCENE_PLAY) {
this.SetTime(!0);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
this.pGameViewJs.ShowPokerBack();
for (var h = 0; h < n.AREA_MAX; h++) if (this.lPlayBet[h] > 0) {
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
} else if (this.cbGameStatus == n.GAME_SCENE_END) {
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!0);
var u = [];
memset(u, 0, n.GAME_PLAYER);
r[0] != INVALID_CHAIR && (u[r[0]] = s[0]);
r[1] != INVALID_CHAIR && (u[r[1]] = s[1]);
u[this.GetMeChairID()] = c;
this.pGameViewJs.ShowPokerResult(this.cbTableCardArray, u, !1);
this.pGameViewJs.OnWaitStatus(!0);
}
this.stGameRecord = [];
for (var d = 0; d < i.tGameRecord.length; d++) {
var m = new n.tagServerGameRecord();
m.cbCardValue[0] = this.pGameViewJs.GetCardValue(i.tGameRecord[d].Cards[0]);
m.cbCardValue[1] = this.pGameViewJs.GetCardValue(i.tGameRecord[d].Cards[1]);
this.stGameRecord[d] = m.cbCardValue;
}
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnSocketSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnSocketSubSGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnSocketSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t);

case n.SUB_S_GAME_END:
return this.OnSocketSubGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);
}
return !0;
},
OnSocketSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.cbGameStatus = n.GAME_SCENE_FREE;
this.fRoundTime = i.TimeLeave;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
memset(this.lAllBet, 0, n.AREA_MAX);
memset(this.lPlayBet, 0, n.AREA_MAX);
this.pGameViewJs.OnResetGameView();
this.bFirstBet = !0;
return !0;
},
OnSocketSubSGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.cbGameStatus = n.GAME_SCENE_PLAY;
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ChangeJettonState(!1);
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.OnGameStartAction();
return !0;
},
OnSocketSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
if (this.GetMeChairID() == i.ChairID) {
this.lPlayBet[i.AreaIndex - 1] += i.BetScore;
this.SetGameStatus(GAME_STATUS_PLAY);
}
this.pGameViewJs.PlaceJettonAction(i.ChairID, i.BetScore, i.AreaIndex - 1);
this.lAllBet[i.AreaIndex - 1] += i.BetScore;
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
this.pGameViewJs.ChangeJettonState(!1);
if (!this.bClickKeepBet) {
this.bFirstBet && (this.keepBetObj = []);
this.keepBetObj.push(i);
}
this.bFirstBet = !1;
this.pGameViewJs.BtnKeepBet.interactable = !1;
return !0;
}
var o = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(o);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var a = t.UsersBetList[i];
if (this.GetMeChairID() != a.ChairID) {
this.pGameViewJs.PlaceJettonAction(a.ChairID, a.BetScore, a.AreaIndex - 1);
this.lAllBet[a.AreaIndex - 1] += a.BetScore;
for (var o = 0; o < n.AREA_MAX; o++) this.pGameViewJs.ShowUserJettonWithGameScene(o, this.lAllBet[o], this.lPlayBet[o]);
}
}
return !0;
},
OnSocketSubGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GAME_SCENE_END;
this.fRoundTime = i.TimeLeave;
this.cbTableCardArray = i.AreaCards.concat();
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ChangeJettonState(!0);
var a = [];
memset(a, 0, MAX_CHAIR);
for (var o = i.UserWinList.length, s = 0; s < o; s++) {
var r = i.UserWinList[s];
null == r.WinScore.high && null == r.WinScore.low ? a[r.ChairID] = r.WinScore : a[r.ChairID] = 0;
}
var c = this;
this.pGameViewJs.OnBetFinish(function() {
c.pGameViewJs.ShowPokerResult(c.cbTableCardArray, a, !0);
});
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.fRoundTime, e);
},
OnButtonJetton: function(e, t) {
this.cbCurrJettonIndex = t;
this.pGameViewJs.SetBtnSelectState(t);
},
OnPlaceJetton: function(e, t) {
this.bClickKeepBet = !1;
for (var i = this.arrBetChip[this.cbCurrJettonIndex], a = this.jsMeUserItem.GetUserScore(), o = 0, s = 0; s < n.AREA_MAX; s++) o += this.lPlayBet[s];
a + o < this.lMinTake ? 0 == GetProject().cbCheckAccounts ? ManagerHelp_SetSystemLabel("The current gold coin is below " + OnIntScore(this.lMinTake) + ", please recharge first") : ManagerHelp_SetSystemLabel("Not enough diamonds") : this.cbGameStatus == n.GAME_SCENE_BET && a >= i && this.SendPlaceJetton(t, i);
},
OnButtonKeepBet: function() {
if (0 != this.keepBetObj.length) {
this.pGameViewJs.BtnKeepBet.interactable = !1;
this.bClickKeepBet = !0;
this.keepBetObj = GetCombineJettonAry(this.keepBetObj);
for (var e = 0; e < this.keepBetObj.length; e++) {
for (var t = this.keepBetObj[e].BetScore, i = this.jsMeUserItem.GetUserScore(), a = 0, o = 0; o < n.AREA_MAX; o++) a += this.lPlayBet[o];
if (i + a < this.lMinTake) {
0 == GetProject().cbCheckAccounts ? ManagerHelp_SetSystemLabel("The current gold coin is below " + OnIntScore(this.lMinTake) + ", please recharge first") : ManagerHelp_SetSystemLabel("Not enough diamonds");
return;
}
this.cbGameStatus == n.GAME_SCENE_BET && i >= t && this.SendPlaceJetton(this.keepBetObj[e].AreaIndex, this.keepBetObj[e].BetScore);
}
} else ManagerHelp_SetSystemLabel("haven't bet yet");
},
OnLoadGameRecord: function(e) {
if (!e) {
var t = this.pGameViewJs.OnInitHistoryView();
if (!t) return;
this.nodeGameHistory = t;
}
if (this.nodeGameHistory) {
var i = this.nodeGameHistory.getComponent("LHD_NewGameHistory");
i.ResetGameResultData();
if (this.stGameRecord) {
this.stGameRecord.length > n.MAX_LUDAN_HISTORY && (this.stGameRecord = this.stGameRecord.slice(-n.MAX_LUDAN_HISTORY));
for (var a = 0; a < this.stGameRecord.length; a++) {
var o = this.stGameRecord[a], s = new n.tagTableResult();
s.bPlayer = o[0] > o[1];
s.bDraw = o[0] == o[1];
s.bBanker = o[0] < o[1];
i.InsertNewGameRecord(s);
i.InsertNewGameResult(s);
}
}
i.UpdateGameRecordAll(e);
}
},
SendPlaceJetton: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
}
});
cc._RF.pop();
}, {
LHD_NewCMD_Game: "LHD_NewCMD_Game"
} ],
LHD_NewGameHistory: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9e921AYcwlPlo3xG3pD86Jf", "LHD_NewGameHistory");
var n = e("LHD_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_aGameResult: [],
m_aGameRecord: [],
m_aDaLuTFullData: [],
m_aDaLuTFullDataOrder: [],
m_aXiaSanLuTFullData: [],
m_bGuaiWan: 0,
m_nGuaiWanItemCount: 0,
m_nChangeX: 0,
m_nChangeY: 0,
m_aXiaSanLuItemArray: [],
m_aLabGameCount: cc.Label,
m_aLabAreaWinCount: {
default: [],
type: cc.Label
},
m_GameRecordXian: {
default: [],
type: cc.Label
},
m_GameRecordZhuang: {
default: [],
type: cc.Label
},
m_GameRecordNode: cc.Node,
m_PrefabRecordItem: cc.Prefab,
m_ZhuZaiLuNode: cc.Node,
m_DaLuNode: cc.Node,
m_DaYanZaiLuNode: cc.Node,
m_XiaoLuNode: cc.Node,
m_XiaoQiangLuNode: cc.Node,
m_NodeNextXian_DaYanZaiLu: cc.Node,
m_NodeNextXian_XiaoLu: cc.Node,
m_NodeNextXian_XiaoQiangLu: cc.Node,
m_NodeNextZhuang_DaYanZaiLu: cc.Node,
m_NodeNextZhuang_XiaoLu: cc.Node,
m_NodeNextZhuang_XiaoQiangLu: cc.Node,
m_PrefabZhuZaiLuItem: cc.Prefab,
m_PrefabDaLuItem: cc.Prefab,
m_PrefabDaYanZaiLuItem: cc.Prefab,
m_PrefabXiaoLuItem: cc.Prefab,
m_PrefabXiaoQiangLuItem: cc.Prefab,
m_aZhuZaiLuItemJs: [],
m_aDaLuItemJs: [],
m_aDaYanZaiLuItemJs: [],
m_aXiaoLuItemJs: [],
m_aXiaoQiangLuItemJs: []
},
onLoad: function() {
for (var e = 0; e < 100; ++e) for (var t = 0; t < 6; ++t) this.m_aXiaSanLuItemArray.push(0);
for (e = 0; e < 8; ++e) for (t = 0; t < 6; ++t) {
var i = (n = cc.instantiate(this.m_PrefabZhuZaiLuItem)).getComponent("LHD_NewLuDan_ZhuZaiLu");
this.m_ZhuZaiLuNode.addChild(n);
i.ResetBoxMatrixPos(e, t);
this.m_aZhuZaiLuItemJs.push(i);
}
for (e = 0; e < 24; ++e) for (t = 0; t < 6; ++t) {
var n = cc.instantiate(this.m_PrefabDaLuItem);
this.m_DaLuNode.addChild(n);
var a = n.getComponent("LHD_NewLuDan_DaLu");
a.ResetBoxMatrixPos(e, t);
this.m_aDaLuItemJs.push(a);
}
for (e = 0; e < 24; ++e) for (t = 0; t < 6; ++t) {
n = cc.instantiate(this.m_PrefabDaYanZaiLuItem);
this.m_DaYanZaiLuNode.addChild(n);
var o = n.getComponent("LHD_NewLuDan_DaYanZaiLu");
o.ResetBoxMatrixPos(e, t);
this.m_aDaYanZaiLuItemJs.push(o);
n = cc.instantiate(this.m_PrefabXiaoLuItem);
this.m_XiaoLuNode.addChild(n);
var s = n.getComponent("LHD_NewLuDan_XiaoLu");
s.ResetBoxMatrixPos(e, t);
this.m_aXiaoLuItemJs.push(s);
n = cc.instantiate(this.m_PrefabXiaoQiangLuItem);
this.m_XiaoQiangLuNode.addChild(n);
var r = n.getComponent("LHD_NewLuDan_XiaoQiangLu");
r.ResetBoxMatrixPos(e, t);
this.m_aXiaoQiangLuItemJs.push(r);
}
},
ResetGameResultHistory: function(e) {
cc.assert(!1, "接口未启用");
},
ResetGameResultData: function() {
this.m_aGameResult = [];
this.m_aGameRecord = [];
},
InsertNewGameResult: function(e) {
this.m_aGameResult.length >= n.MAX_LUDAN_HISTORY && this.m_aGameResult.splice(0, 1);
this.m_aGameResult.push(e);
},
InsertNewGameRecord: function(e) {
this.m_aGameRecord.length >= 20 && this.m_aGameRecord.shift();
this.m_aGameRecord.push(e);
},
UpdateGameRecordAll: function(e) {
this.UpdateGameRecord_HistoryLayer();
this.UpdateAreaPercentView();
this.UpdateZhuZaiLuView(e);
this.UpdateDaLuView(e);
this.UpdateDaYanZaiLuView(e);
this.UpdateXiaoLuView(e);
this.UpdateXiaoQiangLuView(e);
this.UpdateYuCe();
},
UpdateGameRecord_HistoryLayer: function() {
this.m_GameRecordNode.removeAllChildren();
var e = this.m_aGameRecord.length, t = 0;
e > 20 && (t = e - 20);
for (;t < e; ++t) {
var i = this.m_aGameRecord[t], n = cc.instantiate(this.m_PrefabRecordItem), a = n.getComponent("LHD_NewGameRecordItem");
this.m_GameRecordNode.addChild(n);
n.setPosition(cc.v2(0, 0));
i.bPlayer ? a.OnSetSpriteFrame(0) : i.bDraw ? a.OnSetSpriteFrame(2) : i.bBanker && a.OnSetSpriteFrame(1);
}
},
UpdateAreaPercentView: function() {
var e, t = 0, i = 0, a = 0;
e = this.m_aGameResult.length;
for (var o = 0; o < e; ++o) {
var s = this.m_aGameResult[o];
s.bPlayer && t++;
s.bDraw && i++;
s.bBanker && a++;
}
this.m_aLabAreaWinCount[n.AREA_DARGON].string = t;
this.m_aLabAreaWinCount[n.AREA_TIGER].string = a;
this.m_aLabAreaWinCount[n.AREA_HE].string = i;
this.m_aLabGameCount.string = e;
},
DaLu_FindLastNodePos: function(e, t) {
cc.assert(!(0 == e && 0 == t));
if (0 == t) return {
x: e - 1,
y: t
};
if (t > 0) {
if (null != this.m_aDaLuTFullData[6 * e + (t - 1)]) return {
x: e,
y: t - 1
};
if (null == this.m_aDaLuTFullData[6 * e + (t - 1)] && null != this.m_aDaLuTFullData[6 * (e - 1) + t]) return {
x: e - 1,
y: t
};
}
},
DaLu_FindNextNodePos: function(e, t, i, n) {
if (e) {
if (null == this.m_aDaLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker == this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aDaLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && (this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker, 
this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker), t += 1);
return {
x: t,
y: i
};
}
if (null == this.m_aXiaSanLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aXiaSanLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && (this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue, 
this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue), t += 1);
return {
x: t,
y: i
};
},
DaLu_FindFirstUnusedXPos: function(e) {
if (e) {
for (var t = 0; t < 100; ++t) if (null == this.m_aDaLuTFullData[6 * t]) return t;
} else for (t = 0; t < 100; ++t) if (null == this.m_aXiaSanLuTFullData[6 * t]) return t;
},
UpdateZhuZaiLuView: function(e) {
for (var t = 0; t < 48; ++t) this.m_aZhuZaiLuItemJs[t].ResetGameResult();
var i = this.m_aGameResult.length - 48 + 2;
i = i > 0 ? i : 0;
for (t = 0; t < 48 && !(t >= this.m_aGameResult.length); ++t) {
var n = t % 6, a = parseInt(t / 6);
if (i + t < this.m_aGameResult.length) {
this.m_aZhuZaiLuItemJs[a + 8 * n].ResetGameResult(this.m_aGameResult[i + t]);
i + t == this.m_aGameResult.length - 1 && e && this.m_aZhuZaiLuItemJs[a + 8 * n].OnPlayAnim();
} else this.m_aZhuZaiLuItemJs[a + 8 * n].ResetGameResult(null);
}
},
UpdateDaLuView: function(e) {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var t = 0; t < 144; ++t) {
this.m_aDaLuItemJs[t].ResetGameResult();
this.m_aDaLuItemJs[t].ResetDrawCount(0);
}
var i = 0, n = 0, a = 0, o = 0, s = 0, r = 0;
for (t = 0; t < this.m_aGameResult.length; ++t) {
var c = this.m_aGameResult[t];
1 == c.bDraw ? r += 1 : r = 0;
if (r != t + 1) {
var l = 6 * i + n, h = 0, u = null;
if (l > 0) {
var d = this.DaLu_FindLastNodePos(i, n);
h = 6 * d.x + d.y;
u = this.m_aDaLuTFullData[h].gameResult;
cc.assert(null != u, "error, lastPos=" + d.x + "," + d.y + ";lastIndex=" + h);
}
if (n > 0 && 0 == c.bDraw && c.bBanker != u.bBanker) {
l = 6 * (i = this.DaLu_FindFirstUnusedXPos(!0)) + (n = 0);
i >= a && (a = i);
}
if (r >= 1) this.m_aDaLuTFullData[h].nDrawCount = r; else {
var m = {};
m.x = i;
m.y = n;
m.gameResult = c;
m.nDrawCount = 0;
this.m_aDaLuTFullData[l] = m;
this.m_aDaLuTFullDataOrder.push(6 * i + n);
o = i;
s = n;
var f = this.DaLu_FindNextNodePos(!0, i, n);
i = f.x;
n = f.y;
i >= a && (a = i);
}
}
}
if (!(this.m_aDaLuTFullData.length <= 0 || this.m_aDaLuTFullDataOrder.length <= 0)) {
var p = a - 24 + 1;
p = p < 0 ? 0 : p;
for (t = 0; t < this.m_aDaLuTFullData.length; ++t) if (null != this.m_aDaLuTFullData[t]) {
var _ = this.m_aDaLuTFullData[t];
if (!(_.x < p)) {
this.m_aDaLuItemJs[_.x - p + 24 * _.y].ResetGameResult(_.gameResult);
this.m_aDaLuItemJs[_.x - p + 24 * _.y].ResetDrawCount(_.nDrawCount);
t == this.m_aDaLuTFullData.length - 1 && e && this.m_aDaLuItemJs[o - p + 24 * s].OnPlayAnim();
}
}
}
},
isSameXLastItemData: function(e, t) {
for (var i = !0, n = 0; n < 6; ++n) if (null != this.m_aDaLuTFullData[6 * e + n] && null == this.m_aDaLuTFullData[6 * t + n] || null == this.m_aDaLuTFullData[6 * e + n] && null != this.m_aDaLuTFullData[6 * t + n]) {
i = !1;
break;
}
return i;
},
UpdateDaYanZaiLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aDaYanZaiLuItemJs[t].ResetData(0);
var i = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (i = 12);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 1) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 2, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 1) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aDaYanZaiLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aDaYanZaiLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateXiaoLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoLuItemJs[t].ResetData(0);
var i = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (i = 18);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 2) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 3, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 2) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateXiaoQiangLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoQiangLuItemJs[t].ResetData(0);
var i = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (i = 24);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
if (!(6 * (h = r.x) + (u = r.y) < i)) {
var c = this.m_aDaLuTFullData[6 * (h - 3) + u], l = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == u) if (this.isSameXLastItemData(h - 4, h - 1)) {
l.bQiJiao = !0;
l.bRed = !0;
} else {
l.bTuJiao = !0;
l.bBlue = !0;
} else if (null != c) {
l.bYouDui = !0;
l.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (h - 3) + u - 1]) {
l.bYouDui = !0;
l.bRed = !0;
} else {
l.bWuDui = !0;
l.bBlue = !0;
}
this.aXiaSanLuItemData.push(l);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
var h = 0, u = 0, d = 0, m = 0, f = 0;
for (t = 0; t < this.aXiaSanLuItemData.length; ++t) {
var p = this.aXiaSanLuItemData[t], _ = 6 * h + u, S = null;
if (_ > 0) {
S = this.aXiaSanLuItemData[t - 1];
if (p.bRed != S.bRed) {
_ = 6 * (h = this.DaLu_FindFirstUnusedXPos(!1)) + (u = 0);
h >= d && (d = h);
}
}
var g = {};
g.aXiaSanLuData = p;
g.x = h;
g.y = u;
this.m_aXiaSanLuTFullData[_] = g;
m = h;
f = u;
var C = this.DaLu_FindNextNodePos(!1, h, u);
h = C.x;
u = C.y;
h >= d && (d = h);
}
var w = d - 24 + 1;
w = w < 0 ? 0 : w;
for (t = 0; t < this.m_aXiaSanLuTFullData.length; ++t) if (null != this.m_aXiaSanLuTFullData[t]) {
var b = this.m_aXiaSanLuTFullData[t];
if (!(b.x < w)) {
this.m_aXiaoQiangLuItemJs[b.x - w + 24 * b.y].ResetData(this.m_aXiaSanLuTFullData[t].aXiaSanLuData);
t == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoQiangLuItemJs[m - w + 24 * f].OnPlayAnim();
}
}
}
}
},
UpdateYuCe: function() {
if (null != this.m_aDaLuTFullData[7] || null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12]) {
this.m_NodeNextXian_DaYanZaiLu.active = !0;
this.m_NodeNextZhuang_DaYanZaiLu.active = !0;
this.UpdateYuCe_DaYanZaiLu();
} else {
this.m_NodeNextXian_DaYanZaiLu.active = !1;
this.m_NodeNextZhuang_DaYanZaiLu.active = !1;
}
if (null != this.m_aDaLuTFullData[13] || null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18]) {
this.m_NodeNextXian_XiaoLu.active = !0;
this.m_NodeNextZhuang_XiaoLu.active = !0;
this.UpdateYuCe_XiaoLu();
} else {
this.m_NodeNextXian_XiaoLu.active = !1;
this.m_NodeNextZhuang_XiaoLu.active = !1;
}
if (null != this.m_aDaLuTFullData[19] || null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24]) {
this.m_NodeNextXian_XiaoQiangLu.active = !0;
this.m_NodeNextZhuang_XiaoQiangLu.active = !0;
this.UpdateYuCe_XiaoQiangLu();
} else {
this.m_NodeNextXian_XiaoQiangLu.active = !1;
this.m_NodeNextZhuang_XiaoQiangLu.active = !1;
}
},
UpdateYuCe_DaYanZaiLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoQiangLu: function() {
var e;
(e = new n.tagTableResult()).bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateDaLuData: function() {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var e = 0, t = 0, i = 0, n = 0; n < this.m_aGameResult.length; ++n) {
var a = this.m_aGameResult[n];
1 == a.bDraw ? i += 1 : i = 0;
if (i != n + 1) {
var o = 6 * e + t, s = 0, r = null;
if (o > 0) {
var c = this.DaLu_FindLastNodePos(e, t);
s = 6 * c.x + c.y;
r = this.m_aDaLuTFullData[s].gameResult;
cc.assert(null != r, "error, lastPos=" + c.x + "," + c.y + ";lastIndex=" + s);
}
t > 0 && 0 == a.bDraw && a.bBanker != r.bBanker && (o = 6 * (e = this.DaLu_FindFirstUnusedXPos(!0)) + (t = 0));
if (i >= 1) this.m_aDaLuTFullData[s].nDrawCount = i; else {
var l = {};
l.x = e;
l.y = t;
l.gameResult = a;
l.nDrawCount = 0;
this.m_aDaLuTFullData[o] = l;
this.m_aDaLuTFullDataOrder.push(6 * e + t);
var h = this.DaLu_FindNextNodePos(!0, e, t);
e = h.x;
t = h.y;
}
}
}
},
UpdateDaYanZaiLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (t = 12);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 1) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 2, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 1) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !1);
}
},
UpdateXiaoLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (t = 18);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 2) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 3, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 2) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !1);
}
},
UpdateXiaoQiangLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (t = 24);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 3) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 4, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 3) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !1);
}
},
SetGameSprite: function(e, t) {
e.getComponent("LHD_NewLuDan_Next").OnSetSpriteFrame(t);
},
removeSelf: function() {
this.node.active = !1;
},
testDaLu: function(e, t) {
if (t >= 0 && t <= 2) {
var i = new n.tagTableResult();
i.bPlayer = 0 == t;
i.bDraw = 1 == t;
i.bBanker = 2 == t;
this.InsertNewGameResult(i);
} else 3 == t && this.m_aGameResult.length > 0 && this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateGameRecordAll(!0);
}
});
cc._RF.pop();
}, {
LHD_NewCMD_Game: "LHD_NewCMD_Game"
} ],
LHD_NewGameRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f2b8dyWSPdE+K+5cdMdIZq0", "LHD_NewGameRecordItem");
cc.Class({
extends: cc.Component,
properties: {
spfWinArea: cc.Sprite,
spfAryArea: [ cc.SpriteFrame ]
},
onLoad: function() {},
OnSetSpriteFrame: function(e) {
this.spfAryArea && this.spfAryArea[e] && this.spfWinArea && (this.spfWinArea.spriteFrame = this.spfAryArea[e]);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
LHD_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "842f372uWJItomADhSPIUcM", "LHD_NewGameView");
var n = e("LHD_NewCMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
arrChipItem: [ cc.Label ],
arrBetArea: [ cc.Node ],
nodeAreaParent: cc.Node,
labelGameStatus: cc.Label,
nodeGameTime: cc.Node,
nodeBackCard: cc.Node,
nodeCardData: [ cc.Node ],
nodeCardType: [ cc.Label ],
nodeCardAni: [ cc.Node ],
labelRecordWiner: cc.Label,
_jsGameEndAction: [],
StartGameAnim: cc.Node,
GameStatusAnim: cc.Node,
GameEndAnim: cc.Node,
GameEndAnimTop: cc.Node,
nodeWaitStatus: cc.Node,
nodeRecord: cc.Node,
nodePlayerList: cc.Node,
nodeGameHistory: cc.Node,
pMenuLayer: cc.Node,
pCardPrefab: cc.Prefab,
pfRecordItem: cc.Prefab,
pfHistory: cc.Prefab,
BtnKeepBet: cc.Button
},
OnFrameViewLoad: function() {
console.log("lhd========= OnFrameViewLoad");
this.OnTouchRegister();
},
OnTouchRegister: function() {
cc.director.getCollisionManager().enabled = !0;
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_START, this.OnTouchBegan, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
this.nodeAreaParent.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancel, this);
},
OnTouchBegan: function(e) {
for (var t = e.getTouches()[0].getLocation(), i = this.arrBetArea.length - 1; i >= 0; i--) {
var n = this.arrBetArea[i].getChildByName("All_BtnBet").getComponent(cc.PolygonCollider), a = this.arrBetArea[i].getChildByName("All_BtnBet").getComponent(cc.CircleCollider);
if (n && cc.Intersection.pointInPolygon(t, n.world.points) || a && cc.pDistance(a.world.position, t) < a.world.radius) {
this.arrBetArea[i].getChildByName("All_BtnBet").emit(cc.Node.EventType.TOUCH_START);
this.cbTouchIndex = i;
return;
}
}
},
OnTouchEnded: function() {
null != this.cbTouchIndex && this.arrBetArea[this.cbTouchIndex].getChildByName("All_BtnBet").emit(cc.Node.EventType.TOUCH_END);
},
OnTouchCancel: function() {
null != this.cbTouchIndex && this.arrBetArea[this.cbTouchIndex].getChildByName("All_BtnBet").emit(cc.Node.EventType.TOUCH_CANCEL);
},
OnResetGameView: function() {
for (var e = 0; e < n.CARD_NUM; e++) {
for (var t = 0; t < n.MAX_COUNT; t++) this.nodeCardData[e * n.MAX_COUNT + t] && this.nodeCardData[e * n.MAX_COUNT + t].removeAllChildren();
this.nodeCardType[e].node.parent.active = !1;
this.nodeCardAni[e].active = !1;
}
this.labelRecordWiner.string = "";
for (var i = 0; i < n.AREA_MAX; i++) this.ShowUserJettonWithGameScene(i, 0, 0);
for (var a = 0; a < n.AREA_MAX; a++) {
this.arrBetArea[a].getComponent("LHD_NewBetArea").nodeAnimation.active = !1;
}
this.OnFrameResetView();
this.OnWaitStatus(!1);
},
ShowBetChip: function(e) {
for (var t = 0, i = 0; i < n.JETTON_NUM; i++) {
t = OnIntScore(e[i]);
this.arrChipItem[i] && (this.arrChipItem[i].string = t);
}
this.OnFrameInitJetton(e);
},
ChangeJettonState: function(e) {
for (var t = this.pGameEngineJs.jsMeUserItem.GetUserScore(), i = 0, a = 0; a < n.AREA_MAX; a++) i += this.pGameEngineJs.lPlayBet[a];
t -= i;
var o = this.pGameEngineJs.arrBetChip.concat(), s = [];
memset(s, !1, n.JETTON_NUM);
if (!e) for (var r = 0; r < n.JETTON_NUM && t >= o[r]; r++) s[r] = !0;
var c = this.pGameEngineJs.cbCurrJettonIndex;
if (s[c]) this.SetBtnSelectState(c); else for (var l = c - 1; l >= 0; l--) if (s[l]) {
this.pGameEngineJs.cbCurrJettonIndex = l;
c = l;
this.SetBtnSelectState(l);
break;
}
for (var h = 0; h < n.JETTON_NUM; h++) if (this.arrChipItem[h]) {
var u = this.arrChipItem[h].node.parent;
if (u) {
var d = u.getComponent(cc.Button);
this.OnSetBtnDisable(d, s[h]);
}
}
this.BtnKeepBet.interactable = !e;
if (0 == this.pGameEngineJs.keepBetObj.length) this.BtnKeepBet.interactable = !1; else {
for (var m = 0, f = 0; f < this.pGameEngineJs.keepBetObj.length; f++) m += this.pGameEngineJs.keepBetObj[f].BetScore;
t < m && (this.BtnKeepBet.interactable = !1);
}
},
OnSetBtnDisable: function(e, t) {
e.interactable = t;
if (!t) {
e.node.getChildByName("Select").active = !1;
}
},
SetBtnSelectState: function(e) {
for (var t = 0; t < n.JETTON_NUM; t++) if (this.arrChipItem[t]) {
var i = this.arrChipItem[t].node.parent;
if (i) {
var a = i.getComponent(cc.Button).node.getChildByName("Select");
a && (a.active = t == e);
}
}
},
OnFrameEventUserScore: function(e, t) {
return !0;
},
SetTimeClock: function(e, t) {
this.nodeGameTime.getComponent("jsTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowUserJettonWithGameScene: function(e, t, i) {
var n = this.arrBetArea[e].getComponent("LHD_NewBetArea");
n.nodeAllBet.getChildByName("BetTotal").getComponent(cc.Label).string = OnIntScore(t) + "/";
n.nodeAllBet.getChildByName("BetMe").getComponent(cc.Label).string = OnIntScore(i);
n.labelMeBet.string = OnIntScore(i);
n.labelMeBet.node.parent.active = 0 != i;
},
ShowUserBetInfo: function(e, t, i, a, o) {
for (var s = 0, r = 0, c = 0, l = 0; l < n.AREA_MAX; l++) {
s += i[l];
r += t[l];
c += a[l];
}
var h = [];
memset(h, 0, n.GAME_PLAYER);
o[0] != INVALID_CHAIR && (h[o[0]] = r);
o[1] != INVALID_CHAIR && (h[o[1]] = c);
h[this.GetMeChairID()] = s;
this.OnFrameBetInfo(e, t, h);
},
OnGameStartAction: function() {
var e = this;
e.StartGameAnim.runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
var t = e.StartGameAnim.getChildByName("ActionBg"), i = e.StartGameAnim.getChildByName("ActionVs");
t.active = !0;
i.active = !0;
var n = i.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "animation").setCompleteListener(function() {
t.active = !1;
i.active = !1;
window.mfConfig.PlayAudio("133/Audio/GameStart");
e.ShowStartBet();
});
})));
},
ShowStartBet: function() {
this.OnSendCardAction();
},
OnBetFinish: function(e) {
var t = this.GameStatusAnim.getChildByName("stopBetAni");
t.active = !0;
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
t.active = !1;
e && e();
}.bind(this));
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
OnSendCardAction: function() {
var e = [ 0, 1 ];
this._jsGameEndAction.length = 0;
var t = [];
t[0] = this.nodeBackCard;
t[2] = "Action_SendCardStart";
this._jsGameEndAction.push(t);
for (var i = 0; i < n.CARD_NUM; i++) for (var a = 0; a < n.MAX_COUNT; a++) {
var o = this.nodeCardData[e[i * n.MAX_COUNT + a]], s = this.nodeBackCard.convertToWorldSpaceAR(cc.v2(0, 0)), r = o.convertToNodeSpaceAR(s), c = [];
c[0] = o;
c[1] = r;
c[2] = "Action_SendCard";
c[3] = .1;
c[4] = i;
this._jsGameEndAction.push(c);
var l = [];
l[1] = .05;
l[2] = "Action_dt";
this._jsGameEndAction.push(l);
}
var h = [];
h[0] = this.nodeBackCard;
h[2] = "Action_SendCardEnd";
this._jsGameEndAction.push(h);
this.OnActionBegan();
},
ShowPokerBack: function() {
for (var e = 0; e < n.CARD_NUM; e++) for (var t = 0; t < n.MAX_COUNT; t++) {
var i = this.nodeCardData[e * n.MAX_COUNT + t], a = cc.instantiate(this.pCardPrefab);
i.addChild(a);
a.setPosition(cc.v2(0, 0));
var o = a.getComponent("LHD_NewCardNode");
0 == e ? o.SetBackCardTexture(1) : o.SetFrontCardTexture(1);
}
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("LHD_NewPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
ShowPokerResult: function(e, t, i) {
var n = this, a = this.GetWinAreaIDByData(e);
if (i) this.OnShowCardDataAnim(e, function() {
n.ShowSoundAnim(a, a, e, t);
n.ShowWinAreaAnim(a);
n.OnAddGameRecord(e);
n.OnGameEndJettonAction(a, t, !0);
}); else {
this.ShowTableCardData(e);
this.ShowWinAreaAnim(a);
this.OnGameEndJettonAction(a, t, !1);
}
},
GetWinAreaIDByData: function(e) {
var t = this.GetCardValue(e[n.AREA_DARGON]), i = this.GetCardValue(e[n.AREA_TIGER]);
return t > i ? n.AREA_DARGON : t < i ? n.AREA_TIGER : t == i ? n.AREA_HE : void 0;
},
GetWinAreaIDByValue: function(e) {
var t = e[n.AREA_DARGON], i = e[n.AREA_TIGER];
return t > i ? n.AREA_DARGON : t < i ? n.AREA_TIGER : t == i ? n.AREA_HE : void 0;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardType: function(e) {
return [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ][15 & e];
},
ShowTableCardData: function(e) {
for (var t = 0; t < n.CARD_NUM; t++) {
for (var i = 0; i < n.MAX_COUNT; i++) {
var a = this.nodeCardData[t * n.MAX_COUNT + i], o = cc.instantiate(this.pCardPrefab);
o.getComponent("LHD_NewCardNode").SetCardData(0, e[t]);
a.addChild(o);
o.setPosition(cc.v2(0, 0));
}
var s = this.GetCardType(e[t]);
this.nodeCardType[t].string = s;
this.nodeCardType[t].node.parent.active = !0;
}
var r = this.GetWinAreaIDByData(e);
this.labelRecordWiner.string = [ "D Win", "T Win", "PEACE" ][r];
r < 2 && (this.nodeCardAni[r].active = !0);
},
OnActionBegan: function() {
var e = this;
if (this._jsGameEndAction.length > 0) {
var t = this._jsGameEndAction.shift();
if ("Action_SendCardStart" == t[2]) {
var i = t[0], n = cc.instantiate(this.pCardPrefab);
n.getComponent("LHD_NewCardNode").SetBackCardTexture(1);
i.addChild(n);
n.setPosition(cc.v2(0, 0));
this.OnActionBegan();
} else if ("Action_SendCard" == t[2]) {
var a = t[0], o = t[1], s = t[3], r = cc.instantiate(this.pCardPrefab), c = r.getComponent("LHD_NewCardNode");
0 == t[4] ? c.SetBackCardTexture(1) : c.SetFrontCardTexture(1);
a.addChild(r);
r.setPosition(o);
r.runAction(cc.sequence(cc.callFunc(function() {
window.mfConfig.PlayAudio("133/Audio/SendCard");
}), cc.moveTo(s, cc.v2(0, 0)), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_SendCardEnd" == t[2]) {
t[0].removeAllChildren();
this.OnActionBegan();
} else if ("Action_Rotation" == t[2]) {
var l = t[0], h = t[1], u = t[3], d = t[4];
l && cc.isValid(l) && l.runAction(cc.sequence(cc.callFunc(function() {
window.mfConfig.PlayAudio("133/Audio/OpenCard");
}), cc.scaleTo(u / 2, 0, d), cc.callFunc(function() {
l.getComponent("LHD_NewCardNode").SetCardData(0, h);
}), cc.scaleTo(u / 2, d, d), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_Scale" == t[2]) {
var m = t[0], f = t[1], p = t[3];
m && cc.isValid(m) && m.runAction(cc.sequence(cc.scaleTo(p, f), cc.callFunc(function() {
e.OnActionBegan();
})));
} else if ("Action_CardType" == t[2]) {
var _ = t[0], S = t[1], g = this.GetCardValue(S), C = this.GetCardType(S);
_.getComponent(cc.Label).string = C;
_.parent.active = !0;
var w = "133/Audio/CardType_" + g;
window.mfConfig.PlayAudio(w);
e.OnActionBegan();
} else if ("Action_Winer" == t[2]) {
var b = t[0], A = t[1], v = "133/Audio/Win_" + A;
window.mfConfig.PlayAudio(v);
var G = [ "D Win", "T Win", "PEACE" ];
b.string = G[A];
this.labelRecordWiner.string = G[A];
A < 2 && (this.nodeCardAni[A].active = !0);
e.OnActionBegan();
} else if ("Action_callback" == t[2]) {
var I = t[0];
I && I();
e.OnActionBegan();
} else if ("Action_dt" == t[2]) {
var D = t[1];
this.node.runAction(cc.sequence(cc.delayTime(D), cc.callFunc(function() {
e.OnActionBegan();
})));
}
}
},
OnShowCardDataAnim: function(e, t) {
this._jsGameEndAction.length = 0;
for (var i = 0; i < n.CARD_NUM; i++) {
for (var a = 0; a < n.MAX_COUNT; a++) {
var o = this.nodeCardData[i * n.MAX_COUNT + a].getChildByName("pfLHD_Card"), s = e[i], r = [];
r[0] = o;
r[1] = 1.2;
r[2] = "Action_Scale";
r[3] = .2;
this._jsGameEndAction.push(r);
var c = [];
c[1] = .2;
c[2] = "Action_dt";
this._jsGameEndAction.push(c);
var l = [];
l[0] = o;
l[1] = s;
l[2] = "Action_Rotation";
l[3] = .2;
l[4] = 1.2;
this._jsGameEndAction.push(l);
var h = [];
h[1] = .2;
h[2] = "Action_dt";
this._jsGameEndAction.push(h);
var u = [];
u[0] = o;
u[1] = 1;
u[2] = "Action_Scale";
u[3] = .2;
this._jsGameEndAction.push(u);
var d = [];
d[1] = .1;
d[2] = "Action_dt";
this._jsGameEndAction.push(d);
}
var m = [];
m[0] = this.nodeCardType[i].node;
m[1] = e[i];
m[2] = "Action_CardType";
this._jsGameEndAction.push(m);
var f = [];
f[1] = .1;
f[2] = "Action_dt";
this._jsGameEndAction.push(f);
}
var p = [];
p[1] = 1;
p[2] = "Action_dt";
this._jsGameEndAction.push(p);
var _ = [];
_[0] = this.labelRecordWiner;
_[1] = this.GetWinAreaIDByData(e);
_[2] = "Action_Winer";
this._jsGameEndAction.push(_);
if (t) {
var S = [];
S[0] = t;
S[2] = "Action_callback";
this._jsGameEndAction.push(S);
}
this.OnActionBegan();
},
ShowSoundAnim: function(e, t, i, a) {
var o = this.GameEndAnim.getChildByName("Lani").getComponent(sp.Skeleton), s = this.GameEndAnim.getChildByName("Hani").getComponent(sp.Skeleton), r = this.GameEndAnimTop.getChildByName("Longtou").getComponent(sp.Skeleton), c = this.GameEndAnimTop.getChildByName("Hutou").getComponent(sp.Skeleton);
if (e == n.AREA_DARGON) {
this.GameEndAnimTop.getChildByName("ActionBg").active = !0;
PlaySkeletonAnimation(o, !1, "win");
PlaySkeletonAnimation(s, !1, "shibai");
PlaySkeletonAnimation(r, !1, "animation");
window.mfConfig.PlayAudio("133/Audio/longxiao");
r.node.active = !0;
r.setCompleteListener(function() {
r.node.active = !1;
this.GameEndAnimTop.getChildByName("ActionBg").active = !1;
}.bind(this));
o.setCompleteListener(function() {
PlaySkeletonAnimation(o, !0, "daiji");
}.bind(this));
s.setCompleteListener(function() {
PlaySkeletonAnimation(s, !0, "daiji");
}.bind(this));
} else if (e == n.AREA_TIGER) {
this.GameEndAnimTop.getChildByName("ActionBg").active = !0;
PlaySkeletonAnimation(s, !1, "win");
PlaySkeletonAnimation(o, !1, "shibai");
PlaySkeletonAnimation(c, !1, "animation");
window.mfConfig.PlayAudio("133/Audio/huxiao");
c.node.active = !0;
c.setCompleteListener(function() {
c.node.active = !1;
this.GameEndAnimTop.getChildByName("ActionBg").active = !1;
}.bind(this));
o.setCompleteListener(function() {
PlaySkeletonAnimation(o, !0, "daiji");
}.bind(this));
s.setCompleteListener(function() {
PlaySkeletonAnimation(s, !0, "daiji");
}.bind(this));
}
},
ShowWinAreaAnim: function(e) {
this.arrBetArea[e].getComponent("LHD_NewBetArea").nodeAnimation.active = !0;
},
PlaceJettonAction: function(e, t, i) {
var n = this.arrBetArea[i].getComponent("LHD_NewBetArea").nodeJettonArea, a = n.width, o = n.height, s = parseInt(Math.random() * (a - 100)), r = parseInt(Math.random() * (o - 100)), c = cc.v2(s + 50, r + 50);
this.OnFramePlaceJetton(e, i, t, c);
},
OnGameEndJettonAction: function(e, t, i) {
var n = [];
this.pGameEngineJs.lAllBet[e] > 0 && n.push(e);
this.OnFrameGameEndAction(n, t, i);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GAME_SCENE_FREE:
this.labelGameStatus.string = "preparing:";
return;

case n.GAME_SCENE_PLAY:
this.labelGameStatus.string = "Betting:";
return;

case n.GAME_SCENE_END:
this.labelGameStatus.string = "";
return;
}
},
ShowGameRecordView: function(e) {
var t = e.concat();
this.nodeRecord.removeAllChildren();
t.length > n.MAX_TABLE_HISTORY && (t = t.slice(-n.MAX_TABLE_HISTORY));
for (var i = 0; i < t.length; i++) {
var a = cc.instantiate(this.pfRecordItem), o = a.getComponent("LHD_NewGameRecordItem"), s = this.GetWinAreaIDByValue(t[i]);
o.OnSetSpriteFrame(s);
this.nodeRecord.addChild(a);
}
},
OnAddGameRecord: function(e) {
var t = this.nodeRecord.children.length, i = cc.instantiate(this.pfRecordItem), a = i.getComponent("LHD_NewGameRecordItem"), o = this.GetWinAreaIDByData(e);
a.OnSetSpriteFrame(o);
t >= n.MAX_TABLE_HISTORY && this.nodeRecord.children.shift();
this.nodeRecord.addChild(i);
a.OnPlayAnim();
var s = new n.tagServerGameRecord();
s.cbCardValue[0] = this.GetCardValue(e[0]);
s.cbCardValue[1] = this.GetCardValue(e[1]);
this.pGameEngineJs.stGameRecord.push(s.cbCardValue);
this.pGameEngineJs.dwRecordCount == n.MAX_LUDAN_HISTORY ? this.pGameEngineJs.dwRecordCount = 1 : this.pGameEngineJs.dwRecordCount++;
this.pGameEngineJs.OnLoadGameRecord(!0);
},
OnButtonGameRecord: function() {
if (this.pGameEngineJs.nodeGameHistory) {
this.pGameEngineJs.nodeGameHistory.active = !0;
SceneManager_AlertShow(this.pGameEngineJs.nodeGameHistory);
} else this.pGameEngineJs.OnLoadGameRecord(!1);
},
OnInitHistoryView: function() {
if (this.nodeGameHistory && this.pfHistory && 0 == this.nodeGameHistory.childrenCount) {
var e = cc.instantiate(this.pfHistory);
this.nodeGameHistory.addChild(e);
return e;
}
return null;
},
OnMenuLayerShow: function() {
this.pMenuLayer.active = !this.pMenuLayer.active;
},
OnFramePlaceJetton: function(e, t, i, n) {
this.node.getComponent("LHD_NewPlayerList").OnPlaceJettonAction(this.stOnLineTopUser, e, t, i, n);
},
OnFrameGameEndAction: function(e, t, i, n) {
this.node.getComponent("LHD_NewPlayerList").OnGameEndJettonAction(e, t, i, n);
},
OnFrameBetInfo: function(e, t, i, n) {
this.node.getComponent("LHD_NewPlayerList").OnLoadBetInfo(e, t, i, n);
},
OnFrameInitJetton: function(e) {
this.node.getComponent("LHD_NewPlayerList").OnLoadJettonInfo(e);
},
OnFrameResetView: function() {
this.node.getComponent("LHD_NewPlayerList").ResetGameView();
},
OnLoadPlayerList: function() {
var e = this.node.getComponent("LHD_NewPlayerList");
null != e && this.jsGameEngine.bGame100 && this.nodePlayerList && 0 == this.nodePlayerList.childrenCount && e.OnInitNodeUser(this.nodePlayerList);
},
OnUpdateOnLineUser: function(e, t) {
if (t) {
var i = this.node.getComponent("LHD_NewPlayerList");
if (null != i) {
this.stOnLineTopUser = e;
i.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), e);
}
} else {
var n = this.nodeRootCanvas.getChildByName("pfOnlinePlayerList");
if (n) {
n.getComponent("jsOnlinePlayerList").OnUpdateData(e);
this.stOnLineUser = null;
} else this.stOnLineUser = e;
}
}
});
cc._RF.pop();
}, {
LHD_NewCMD_Game: "LHD_NewCMD_Game"
} ],
LHD_NewLuDan_DaLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c581dvhRdFKvLCCCngfNvkD", "LHD_NewLuDan_DaLu");
var n = e("LHD_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_nDrawCount: 0,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_labCount: cc.Label
},
onLoad: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
this.m_GameResult = new n.tagTableResult();
this.m_nDrawCount = 0;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
ResetDrawCount: function(e) {
this.m_nDrawCount = e;
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (0 != this.m_nDrawCount) {
this.m_labCount.node.active = !0;
this.m_labCount.string = this.m_nDrawCount;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
LHD_NewCMD_Game: "LHD_NewCMD_Game"
} ],
LHD_NewLuDan_DaYanZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e8fa3NDTlVCBY/scHctPFPo", "LHD_NewLuDan_DaYanZaiLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
LHD_NewLuDan_Next: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2835fGIJvxKcaYDPHKetvHJ", "LHD_NewLuDan_Next");
cc.Class({
extends: cc.Component,
properties: {
m_TextureRed: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame
},
OnSetSpriteFrame: function(e) {
this.node.getComponent(cc.Sprite).spriteFrame = null;
this.node.getComponent(cc.Sprite).spriteFrame = e ? this.m_TextureRed : this.m_TextureBlue;
}
});
cc._RF.pop();
}, {} ],
LHD_NewLuDan_XiaoLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08bfazcqnNKc6EMI8GLyxaB", "LHD_NewLuDan_XiaoLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
LHD_NewLuDan_XiaoQiangLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4cfc19fe1pNK7AYrnxKhwth", "LHD_NewLuDan_XiaoQiangLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
LHD_NewLuDan_ZhuZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b23dbz4pHtPjZABKPjrZF5I", "LHD_NewLuDan_ZhuZaiLu");
var n = e("LHD_NewCMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_TexturePlayerPair: cc.SpriteFrame,
m_TextureBankerPair: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_sprLeftTopFlg: cc.Sprite,
m_sprRightBottomFlg: cc.Sprite
},
onLoad: function() {
this.m_XPos = 0;
this.m_YPos = 0;
this.m_GameResult = new n.tagTableResult();
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_sprLeftTopFlg.node.active = !1;
this.m_sprRightBottomFlg.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (1 == this.m_GameResult.bDraw) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureDraw;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
if (1 == this.m_GameResult.bPlayerPair) {
this.m_sprLeftTopFlg.node.active = !0;
this.m_sprLeftTopFlg.spriteFrame = this.m_TexturePlayerPair;
}
if (1 == this.m_GameResult.bBankerPair) {
this.m_sprRightBottomFlg.node.active = !0;
this.m_sprRightBottomFlg.spriteFrame = this.m_TextureBankerPair;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
LHD_NewCMD_Game: "LHD_NewCMD_Game"
} ],
LHD_NewPlayerList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dbe1bErVWdAJbh3M9HOdMBu", "LHD_NewPlayerList");
cc.Class({
extends: cc.Component,
properties: {
pfNodeUserView: cc.Prefab,
nodeOtehrPlayer: cc.Node,
nodeBankerInfo: cc.Node,
nodeSelfInfo: cc.Node,
aryNodeBetArea: [ cc.Node ],
nodeStar: [ cc.Node ],
nodeNewArea: cc.Node,
pfJetton: cc.Prefab,
pfGameEndScore: cc.Prefab,
pfStar: cc.Prefab,
pfWinerAnim: cc.Prefab,
pfStar_Particle: cc.Prefab
},
onLoad: function() {
this.fSountTime = 0;
this.fTimeCount = 0;
this.fBeforeTime = 0;
this.bLoadFinish = !1;
this.bUpdateScore = !1;
this.lAryOnlineUserBet = [];
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.bStarBet = [];
memset(this.bStarBet, !1, this.nodeStar.length);
this._jsGameAction = [];
this._jsBetAction = [];
this.GameEndCallBack = null;
this._jsEndJettonAction = [];
this.OnInitNodePool();
},
start: function() {},
onDestroy: function() {
this.JettonPool.clear();
},
OnInitNodePool: function() {
this.JettonPool = new cc.NodePool();
},
OnCreateJetton: function() {
var e = null;
(e = this.JettonPool.size() > 0 ? this.JettonPool.get() : cc.instantiate(this.pfJetton)).getComponent("jsJetton").OnResetJetton();
return e;
},
OnPutJetton: function(e) {
this.JettonPool.put(e);
},
OnInitNodeUser: function(e) {
this.nodeOnLineUser = [];
if (this.pfNodeUserView && e) {
var t = cc.instantiate(this.pfNodeUserView);
e.addChild(t);
for (var i = t.children, n = 0; n < i.length; n++) this.nodeOnLineUser.push(i[n]);
}
this.wAryChairID = [];
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
},
OnLoadUserInfo: function(e, t, i) {
this.wMeChairID = t;
this.wMostWinChairID = INVALID_CHAIR;
this.wMostBetChairID = INVALID_CHAIR;
this.stOnLineUser = i.concat();
PlayerManager.DeleteUserItemByAll();
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
for (var n = 0; n < this.nodeOnLineUser.length; n++) if (this.nodeOnLineUser[n]) {
var a = this.nodeOnLineUser[n].getComponent("jsPlayerItem");
a.OnInitUserInfo();
if (this.stOnLineUser[n] && this.stOnLineUser[n].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[n].dwGameID) {
var o = PlayerManager.GetMeUserItem();
this.stOnLineUser[n].dwGameID == o.GetGameID() && (this.stOnLineUser[n].wChairID = t);
var s = this.nodeOnLineUser[n].getComponent("jsFrameUser"), r = this.stOnLineUser[n].wChairID, c = PlayerManager.GetUserItemByTableInfo(e, r);
if (!c) {
(c = PlayerManager.SetUserItem(this.stOnLineUser[n])).pGlobalData.wTableID = e;
c.pGlobalData.wChairID = r;
}
s.SetUserDataItem(c, a.OnLoadUserInfo.bind(a));
0 == n ? this.wMostWinChairID = r : 1 == n && (this.wMostBetChairID = r);
this.wAryChairID[n] = r;
}
}
this.wAryChairID[this.nodeOnLineUser.length] = t;
this.bLoadFinish = !0;
if (this.bUpdateScore) {
this.UpdateOnlineUserScore();
this.bUpdateScore = !1;
}
},
OnLoadJettonInfo: function(e) {
e && 0 != e.length ? this.lAryJetton = e.concat() : cc.warn("OnLoadJettonInfo Error:lAryJetton is invalid");
},
OnPlaceJettonAction: function(e, t, i, n, a) {
var o = !0, s = null;
if (null != e) for (var r = 0; r < e.length; r++) if (e[r].wChairID == t) {
o = !1;
s = this.nodeOnLineUser[r];
break;
}
if (this.wMeChairID != t) if (null != s && this.aryNodeBetArea[i]) {
this.OnBetByList(s, n, i, a);
this.OnUpdateScore(t, n, !0);
} else o && this.nodeOtehrPlayer && this.OnJettonAction(this.nodeOtehrPlayer, n, i, a); else if (this.nodeSelfInfo) {
this.OnJettonAction(this.nodeSelfInfo, n, i, a);
this.OnUpdateScore(t, n, !0);
}
this.OnMostWinBetAction(t, i);
},
OnGameEndJettonAction: function(e, t, i, n) {
this.GameEndCallBack = n;
this._jsGameAction.length = 0;
if (0 != i) {
this.nodeBankerInfo ? 0 == e.length ? this.OnMoveJettonToBanker(e, t, !0) : this.OnMoveJettonToBanker(e, t, !1) : this.OnMoveJettonToWiner(t);
this.OnActionBegan();
} else this.OnShowGameScore(t, !1);
},
OnLoadWinTarget: function(e, t) {
var i = [], n = !1;
e[this.wMeChairID] > 0 && i.push(this.nodeSelfInfo);
if (!n) for (var a = 0; a < e.length; a++) if (e[a] > 0 && a != this.wMeChairID) {
n = !0;
break;
}
(n || 0 == i.length) && t && i.push(this.nodeOtehrPlayer);
return i;
},
OnMoveJettonToBanker: function(e, t, i) {
for (var n = this, a = [], o = 0; o < this.aryNodeBetArea.length; o++) {
for (var s = !1, r = 0; r < e.length; r++) if (o == e[r]) {
s = !0;
break;
}
if (!s) for (var c = 0; c < this.aryNodeBetArea[o].children.length; c++) {
var l = new Object();
l.nodeJetton = this.aryNodeBetArea[o].children[c];
l.cbArea = o;
a.push(l);
}
}
for (var h = [], u = 0; u < this.aryNodeBetArea.length; u++) {
var d = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), m = this.aryNodeBetArea[u].convertToNodeSpaceAR(d);
h.push(m);
}
var f = [];
f[0] = "Action_MoveToBanker";
f[1] = a.concat();
f[2] = h;
f[3] = 1800;
f[4] = !0;
f[5] = function(a) {
var o = [];
o[0] = "Action_dt";
o[1] = a;
n._jsGameAction.push(o);
if (i) {
var s = [];
s[0] = "Action_ShowScore";
s[1] = t;
s[2] = !0;
n._jsGameAction.push(s);
} else n.OnMoveJettonToWinArea(e, t);
};
this._jsGameAction.push(f);
},
OnMoveJettonToWinArea: function(e, t) {
for (var i = this, n = 0, a = 0; a < t.length; a++) t[a] >= 0 && (n += t[a]);
var o = this.GetJettonAry(n), s = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), r = this.nodeNewArea.convertToNodeSpaceAR(s), c = [];
c[0] = "Action_MoveToArea";
c[1] = this.nodeNewArea;
c[2] = r;
c[3] = o;
c[4] = e;
c[5] = 1800;
c[6] = function(e) {
var n = [];
n[0] = "Action_dt";
n[1] = e;
n[2] = function(e) {
e.OnMoveJettonToWiner(t);
};
i._jsGameAction.push(n);
};
this._jsGameAction.push(c);
},
OnMoveJettonToWiner: function(e) {
var t = this, i = [], n = this.OnLoadWinTarget(e, !0), a = this.OnLoadWinTarget(e, !1), o = [];
memset(o, 0, this.aryNodeBetArea.length, n.length);
for (var s = 0, r = [], c = 0; c < this.aryNodeBetArea.length; c++) {
this.aryNodeBetArea[c].children.length > s && (s = this.aryNodeBetArea[c].children.length);
var l = this.aryNodeBetArea[c].children.concat();
r.push(l);
for (var h = 0; h < n.length; h++) {
var u = n[h].convertToWorldSpaceAR(cc.v2(0, 0));
o[c][h] = this.aryNodeBetArea[c].convertToNodeSpaceAR(u);
}
}
for (var d = 0; d < s; d++) for (var m = 0; m < r.length; m++) if (r[m].length > 0) {
var f = new Object();
f.nodeJetton = r[m].pop();
f.cbArea = m;
i.push(f);
}
var p = [];
p[0] = "Action_ShowScore";
p[1] = e;
p[2] = !0;
if (i.length > 0) {
var _ = [];
_[0] = "Action_MoveToWiner";
_[1] = i;
_[2] = n;
_[3] = o;
_[4] = 1500;
_[5] = .002;
_[6] = 1.3;
_[7] = a;
_[8] = function(e) {
var i = [];
i[0] = "Action_dt";
i[1] = e;
t._jsGameAction.push(i);
t._jsGameAction.push(p);
};
this._jsGameAction.push(_);
} else this._jsGameAction.push(p);
},
OnBetByList: function(e, t, i, n) {
this.OnJettonAction(this.nodeOtehrPlayer, t, i, n);
},
OnHeadAction: function(e) {
var t = e.getComponent("jsPlayerItem"), i = t.nodeUserInfo, n = cc.v2(0, 0);
"left" == t.strAction ? n = cc.v2(-20, 0) : "right" == t.strAction ? n = cc.v2(20, 0) : "up" == t.strAction ? n = cc.v2(0, 20) : "down" == t.strAction && (n = cc.v2(0, -20));
var a = cc.sequence(cc.moveBy(.03, n), cc.delayTime(.03), cc.moveBy(.03, n.neg()));
i.runAction(a);
},
OnBetByOther: function(e, t, i) {
var n = [];
n[0] = e;
n[1] = t;
n[2] = i;
this._jsBetAction.push(n);
},
OnOtherBetAction: function() {
if (this._jsBetAction.length > 0) {
var e = this._jsBetAction.concat();
this._jsBetAction = [];
var t = this.lAryJetton.length > 2 ? 2 : this.lAryJetton.length - 1, i = [], n = [], a = [];
memset(i, 0, this.aryNodeBetArea.length);
for (var o = 0; o < this.aryNodeBetArea.length; o++) {
n[o] = [];
a[o] = [];
}
for (var s = 0; s < e.length; s++) {
var r = e.shift(), c = r[0], l = r[1], h = r[2];
i[l] += c;
n[l].push(h);
a[l].push(r);
}
for (var u = 0; u < this.aryNodeBetArea.length; u++) {
var d = this.GetJettonAry(i[u], t);
if (d.length > n[u].length) for (var m = 0; m < a[u].length; m++) {
var f = a[u][m], p = f[0], _ = f[1], S = f[2];
this.OnJettonAction(this.nodeOtehrPlayer, p, _, S);
} else for (var g = 0; g < d.length; g++) this.OnJettonAction(this.nodeOtehrPlayer, d[g], u, n[u][g]);
}
}
},
playBtnOtherUser: function() {
var e = cc.sequence(cc.scaleTo(.05, 1.1), cc.scaleTo(.05, .9), cc.scaleTo(.05, 1));
this.nodeOtehrPlayer.runAction(e);
},
OnJettonAction: function(e, t, i, n) {
if (0 == i) {
1;
}
var a = this, o = this.OnCreateJetton();
o.getComponent("jsJetton").OnInitJetton(this.lAryJetton, t);
e == this.nodeSelfInfo || this.playBtnOtherUser();
var s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = this.nodeNewArea.convertToNodeSpaceAR(s), c = this.aryNodeBetArea[i], l = c.convertToWorldSpaceAR(n), h = this.nodeNewArea.convertToNodeSpaceAR(l), u = Math.sqrt((h.x - r.x) * (h.x - r.x) + (h.y - r.y) * (h.y - r.y)) / 3e3, d = cc.sequence(cc.scaleTo(0, 1.5), cc.spawn(cc.moveTo(.9 * u, h), cc.scaleTo(.9 * u, 1.2), cc.sequence(cc.delayTime(u / 2), cc.callFunc(function() {
if (0 == a.fSountTime) {
var e = "GameFrame/Audio/Bet" + parseInt(2 * Math.random());
window.mfConfig.PlayAudio(e);
a.fSountTime = .5;
}
}))), cc.scaleTo(.1 * u, 1), cc.callFunc(function() {
o.removeFromParent();
c.addChild(o);
o.setPosition(n);
}));
this.nodeNewArea.addChild(o);
o.setPosition(r);
o.runAction(d);
},
OnUpdateScore: function(e, t, i) {
i && (this.lAryOnlineUserBet[e] += t);
if (IsFindArrayValue(this.wAryChairID, e)) for (var n = 0; n < this.nodeOnLineUser.length + 1; n++) {
var a = null;
if (a = n < this.nodeOnLineUser.length ? this.nodeOnLineUser[n] : this.nodeSelfInfo) {
var o = a.getComponent("jsFrameUser");
this.wAryChairID[n] == e && o.UpdateGameScore(-this.lAryOnlineUserBet[e]);
}
}
},
OnShowGameScore: function(e, t) {
for (var i = 0; i < this.nodeOnLineUser.length + 1; i++) {
var n = null, a = INVALID_CHAIR;
if (i < this.nodeOnLineUser.length) {
if (this.stOnLineUser && this.stOnLineUser[i] && this.stOnLineUser[i].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[i].dwGameID) {
n = this.nodeOnLineUser[i];
a = this.stOnLineUser[i].wChairID;
}
} else {
n = this.nodeSelfInfo;
a = this.wMeChairID;
}
if (a != INVALID_CHAIR && n) {
if ((0 != this.lAryOnlineUserBet[a] || 0 != e[a]) && this.pfGameEndScore && t) {
var o = [];
o[0] = "Action_ShowUserScore";
o[1] = n;
o[2] = e[a];
this._jsGameAction.push(o);
}
var s = n.getComponent("jsFrameUser");
if (t) {
var r = [];
r[0] = "Action_UpdateScore";
r[1] = s;
r[2] = e[a];
this._jsGameAction.push(r);
} else s.UpdateGameScore(e[a]);
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
OnGameEndCallBack: function() {
if (this.GameEndCallBack) {
var e = [];
e[0] = "Action_EndCallBack";
e[1] = this.GameEndCallBack;
this._jsGameAction.push(e);
this.GameEndCallBack = null;
}
},
GetBetAreaRandomVet2: function(e) {
if (0 == e) {
1;
}
var t = this.aryNodeBetArea[e].width, i = this.aryNodeBetArea[e].height, n = parseInt(Math.random() * (t - 100)), a = parseInt(Math.random() * (i - 100));
return cc.v2(n + 50, a + 50);
},
OnLoadBetInfo: function(e, t, i) {
for (var n = 0; n < e.length; n++) if (e[n] > 0) for (var a = this.GetJettonAry(e[n]), o = 0; o < a.length; o++) {
var s = this.OnCreateJetton();
s.getComponent("jsJetton").OnInitJetton(this.lAryJetton, a[o]);
this.aryNodeBetArea[n].addChild(s);
var r = this.GetBetAreaRandomVet2(n);
s.setPosition(r);
var c = new Object();
c.nodeJetton = s;
c.cbArea = n;
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.lAryOnlineUserBet = i.concat();
this.bLoadFinish ? this.UpdateOnlineUserScore() : this.bUpdateScore = !0;
memset(this.bStarBet, !1, this.nodeStar.length);
for (var l = 0; l < this.nodeStar.length; l++) if (t[l] && t[l] > 0) {
this.bStarBet[l] = !0;
if (this.pfStar) {
var h = cc.instantiate(this.pfStar);
this.nodeStar[l].addChild(h);
h.setPosition(cc.v2(0, 0));
}
}
},
GetJettonAry: function(e, t) {
var i = [];
i = this.lAryJetton ? this.lAryJetton.concat() : [ 1e3, 1e4, 5e4, 1e5, 5e5 ];
for (var n = [], a = 2 == arguments.length ? t : 4; a >= 0; a--) if (parseInt(e / i[a]) > 0) {
for (var o = parseInt(e / i[a]), s = 0; s < o; s++) n.push(i[a]);
e %= i[a];
}
return n;
},
UpdateOnlineUserScore: function() {
var e = this.lAryOnlineUserBet.concat();
if (e) for (var t = 0; t < e.length; t++) e[t] > 0 && this.OnUpdateScore(t, e[t], !1);
},
OnMostWinBetAction: function(e, t) {
var i = this;
if (e == this.wMostWinChairID && !this.bStarBet[t] && this.pfStar && this.pfStar_Particle) {
var n = this.nodeOnLineUser[0].convertToWorldSpaceAR(cc.v2(0, 0)), a = this.nodeStar[t].convertToNodeSpaceAR(n), o = (Math.sqrt(a.x * a.x + a.y * a.y), 
cc.sequence(cc.jumpTo(.5, cc.v2(0, 0), 50, 1), cc.callFunc(function() {
var e = cc.instantiate(i.pfStar);
i.nodeStar[t].addChild(e);
e.setPosition(cc.v2(0, 0));
}), cc.removeSelf())), s = cc.instantiate(this.pfStar_Particle);
this.nodeStar[t].addChild(s);
s.setPosition(a);
s.runAction(o);
this.bStarBet[t] = !0;
}
},
OnActionBegan: function() {
var e = this, t = this;
if (this._jsGameAction.length > 0) {
var i = this._jsGameAction.shift();
if ("Action_MoveToBanker" == i[0]) (function() {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = 0, l = function(e) {
var i = n[e], r = cc.v2(i.nodeJetton.x, i.nodeJetton.y), l = a[i.cbArea], h = Math.sqrt((l.x - r.x) * (l.x - r.x) + (l.y - r.y) * (l.y - r.y)) / o;
c = Math.max(c, h);
i.nodeJetton.runAction(cc.sequence(cc.callFunc(function() {
if (0 == e) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(h, a[i.cbArea]), cc.callFunc(function(e) {
s && t.OnPutJetton(e);
})));
}, h = 0; h < n.length; h++) l(h);
r && r(c + .2);
e.OnActionBegan();
})(); else if ("Action_MoveToArea" == i[0]) {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = 0, h = function(i) {
var c = e.OnCreateJetton();
c.getComponent("jsJetton").OnInitJetton(e.lAryJetton, o[i]);
n.addChild(c);
c.setPosition(a);
var h = s[parseInt(Math.random() * s.length)], u = e.GetBetAreaRandomVet2(h), d = e.aryNodeBetArea[h].convertToWorldSpaceAR(u), m = n.convertToNodeSpaceAR(d), f = Math.sqrt((m.x - a.x) * (m.x - a.x) + (m.y - a.y) * (m.y - a.y)) / r;
l = Math.max(l, f);
c.runAction(cc.sequence(cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(f, m), cc.callFunc(function() {
c.parent = t.aryNodeBetArea[h];
c.setPosition(u);
})));
}, u = 0; u < o.length; u++) h(u);
c && c(l + .2);
this.OnActionBegan();
} else if ("Action_MoveToWiner" == i[0]) (function() {
var t = e, n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = i[7], h = i[8], u = 0, d = [];
memset(d, 0, a.length);
for (var m = function(i) {
var h = 0;
h = i < a.length ? i : parseInt(Math.random() * a.length);
var m = r * d[h];
d[h]++;
var f = 1 == d[h], p = n[i], _ = o[p.cbArea][h], S = Math.sqrt((_.x - p.nodeJetton.x) * (_.x - p.nodeJetton.x) + (_.y - p.nodeJetton.y) * (_.y - p.nodeJetton.y)) / s;
u = Math.max(u, S + m);
var g = cc.sequence(cc.delayTime(m), cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(S, _).easing(cc.easeBackIn()), cc.callFunc(function() {
var e = a[h];
if (h < l.length && f && t.pfWinerAnim) {
var i = cc.sequence(cc.delayTime(c), cc.removeSelf()), n = cc.instantiate(t.pfWinerAnim);
e.addChild(n);
n.runAction(i);
}
}), cc.callFunc(function(e) {
t.OnPutJetton(e);
})), C = new Object();
C.node = p.nodeJetton;
C.act = g;
e._jsEndJettonAction.push(C);
}, f = 0; f < n.length; f++) m(f);
h && h(u + .2);
e.OnActionBegan();
})(); else if ("Action_ShowScore" == i[0]) {
var d = i[1], m = i[2];
this.OnShowGameScore(d, m);
this.OnGameEndCallBack();
this.OnActionBegan();
} else if ("Action_ShowUserScore" == i[0]) {
var f = i[1], p = i[2], _ = cc.instantiate(this.pfGameEndScore), S = _.getComponent("jsGameEndScore");
f.addChild(_);
S.InitGameScore(p);
this.OnActionBegan();
} else if ("Action_WinScore" == i[0]) {
var g = i[1], C = i[2], w = cc.sequence(cc.delayTime(C), cc.removeSelf()), b = cc.instantiate(this.pfWinerAnim);
g.addChild(b);
b.runAction(w);
this.OnActionBegan();
} else if ("Action_UpdateScore" == i[0]) {
i[1].UpdateGameScore();
this.OnActionBegan();
} else if ("Action_EndCallBack" == i[0]) {
var A = i[1];
A && A();
} else if ("Action_dt" == i[0]) {
var v = i[1], G = i[2];
this.node.runAction(cc.sequence(cc.delayTime(v), cc.callFunc(function() {
G && G(t);
t.OnActionBegan();
})));
}
}
},
ResetGameView: function() {
for (var e = 0; e < this.aryNodeBetArea.length; e++) for (var t = this.aryNodeBetArea[e].children, i = t.length, n = 0; n < i; n++) this.OnPutJetton(t[0]);
for (var a = 0; a < this.nodeStar.length; a++) this.nodeStar[a].removeAllChildren();
memset(this.bStarBet, 0, this.nodeStar.length);
for (var o = 0; o < this.nodeOnLineUser.length + 1; o++) {
var s = null;
if (s = o < this.nodeOnLineUser.length ? this.nodeOnLineUser[o] : this.nodeSelfInfo) {
for (var r = [], c = 0; c < s.childrenCount; c++) "pfGameEndScore" == s.children[c].name && r.push(s.children[c]);
for (var l = 0; l < r.length; l++) r[l].removeFromParent();
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
update: function(e) {
if (this.fSountTime > 0) {
this.fSountTime -= e;
this.fSountTime < 0 && (this.fSountTime = 0);
}
this.fTimeCount += e;
if (parseInt(this.fTimeCount / .5) > this.fBeforeTime) {
this.fBeforeTime++;
this.OnOtherBetAction();
}
if (this._jsEndJettonAction.length > 0) for (var t = Math.min(30, this._jsEndJettonAction.length), i = 0; i < t; i++) {
var n = this._jsEndJettonAction.shift();
n && n.node.runAction(n.act);
}
}
});
cc._RF.pop();
}, {} ],
LHD_NewUserChatItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e3421Ufk9VPC6X1phh7Pcoh", "LHD_NewUserChatItem");
cc.Class({
extends: cc.Component,
properties: {
LabelStr: cc.Label,
UserImage: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
LHD_NewUserChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "070bcKSxOdJfJixGVfbgEFx", "LHD_NewUserChat");
cc.Class({
extends: cc.Component,
properties: {
pfChatItem: cc.Prefab
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
LandMine_AutoSet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "32538iUQRFAfbXVDtE5GoSV", "LandMine_AutoSet");
cc.Class({
extends: cc.Component,
properties: {
countLbl: cc.Label,
stepLbl: cc.Label,
subBtn_count: cc.Button,
addBtn_count: cc.Button,
subBtn_step: cc.Button,
addBtn_step: cc.Button
},
initData: function(e, t) {
this.father = e;
this.i_stepIndex = 0;
this.i_countIndex = 0;
this.i_autoCounts = t;
this.i_autoSteps = [];
for (var i = 1; i <= 24; i++) this.i_autoSteps.push(i);
this.OnSetUpdate();
},
setBtnEnabled: function(e) {
this.subBtn_count.interactable = e;
this.addBtn_count.interactable = e;
this.subBtn_step.interactable = e;
this.addBtn_step.interactable = e;
},
setConfig: function(e) {
this.i_autoSteps = [];
for (var t = 0; t < 25 - e; t++) this.i_autoSteps.push(t + 1);
this.OnSetUpdate();
},
OnSetUpdate: function() {
this.i_autoSteps[this.i_stepIndex] || (this.i_stepIndex = this.i_autoSteps.length - 1);
this.countLbl.string = -1 == this.i_autoCounts[this.i_countIndex] ? "∞" : this.i_autoCounts[this.i_countIndex];
this.stepLbl.string = this.i_autoSteps[this.i_stepIndex];
},
OnBtnEvent: function(e, t) {
if ("Dis_startBtn_auto" == e.target.name) {
this.father.curAutoCount = 0;
this.father.totalAutoCount = this.i_autoCounts[this.i_countIndex];
this.father.autoStepNum = this.i_autoSteps[this.i_stepIndex];
this.father.isOnStop = null;
this.father.btnAuto.interactable = !0;
this.father.startGameAuto();
this.father.changeBg(!1);
this.node.active = !1;
} else if ("Dis_mask" == e.target.name) {
window.mfConfig.PlayAudio("303/Audio/close_button");
this.node.active = !1;
this.father.btnAuto.interactable = !0;
} else if ("Dis_subBtn_step" == e.target.name) {
this.i_stepIndex--;
this.i_stepIndex < 0 && (this.i_stepIndex = this.i_autoSteps.length - 1);
this.OnSetUpdate();
} else if ("Dis_addBtn_step" == e.target.name) {
this.i_stepIndex++;
this.i_stepIndex >= this.i_autoSteps.length && (this.i_stepIndex = 0);
this.OnSetUpdate();
} else if ("Dis_subBtn_count" == e.target.name) {
this.i_countIndex--;
this.i_countIndex < 0 && (this.i_countIndex = this.i_autoCounts.length - 1);
this.OnSetUpdate();
} else if ("Dis_addBtn_count" == e.target.name) {
this.i_countIndex++;
this.i_countIndex >= this.i_autoCounts.length && (this.i_countIndex = 0);
this.OnSetUpdate();
}
}
});
cc._RF.pop();
}, {} ],
LandMine_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d9c83djU1BDyJqMGV2xr2p1", "LandMine_CMD_Game");
t.exports.SUB_C_USERDIG_REQ = 1;
t.exports.SUB_C_USERSETTLE_REQ = 2;
t.exports.SUB_C_SUBGAME_RUN_REQ = 3;
t.exports.SUB_C_USER_RECORD_REQ = 4;
t.exports.SUB_S_USERDIG_RET = 100;
t.exports.SUB_S_USERSETTLE_RET = 101;
t.exports.SUB_S_SUBGAME_RUN_RET = 102;
t.exports.SUB_S_USER_RECORD_RET = 103;
t.exports.SUB_S_JACKPOT_SYNC = 200;
cc._RF.pop();
}, {} ],
LandMine_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7b3cc+AoldKE5suXlOoCX2y", "LandMine_GameEngine");
var n = e("LandMine_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("LandMine_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.bSendDig = !1;
this.clickTime = 0;
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("303/Audio/bgm", !0, window.mfConfig.fSound);
},
OnFrameEngineEnable: function() {
this.gameRecordMe = [];
var e = "303_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID(), t = cc.sys.localStorage.getItem(e);
if (t) {
t = JSON.parse(t);
this.gameRecordMe = t;
this.pGameViewJs.jsGameRecord.OnUserRecordMe();
}
},
OnFrameEngineDisable: function() {
var e = "303_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID();
cc.sys.localStorage.setItem(e, JSON.stringify(this.gameRecordMe));
},
OnEngineUpdate: function(e) {
this.clickTime <= 0 || (this.clickTime -= e);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERDIG_RET:
return this.OnGameUserDig(t, i);

case n.SUB_S_USERSETTLE_RET:
return this.OnGameUserSettle(t, i);

case n.SUB_S_SUBGAME_RUN_RET:
return this.OnGameUserGameRun(t, i);

case n.SUB_S_USER_RECORD_RET:
return this.OnGameUserRecord(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t);
}
return !0;
},
OnGameUserDig: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_UserDigRet", e);
this.bSendDig = !1;
this.pGameViewJs.OnGameUserDig(t);
return !0;
},
OnGameUserSettle: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_UserSettleRet", e);
this.pGameViewJs.OnGameUserSettle(t);
this.bSendDig = !1;
return !0;
},
OnGameUserGameRun: function(e, t) {
window.net.netSerializer.unpackMsg("CMD_S_SubGameRunRet", e);
return !0;
},
OnGameUserRecord: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRecordRet", e);
this.pGameViewJs.jsGameRecord.OnUserRecordOther(i);
return !0;
},
OnJackpotUpdate: function(e) {
window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
},
SendPackageUserDig: function(e) {
var t = window.net.netSerializer.packMsg("CMD_C_UserDigReq", e);
this.SendGameData(n.SUB_C_USERDIG_REQ, t, t.length);
},
SendPackageUserSettle: function() {
if (!(this.bSendDig || this.clickTime > 0)) {
this.bSendDig = !0;
this.clickTime = 2;
var e = window.net.netSerializer.packMsg("CMD_C_UserSettleReq", {});
this.SendGameData(n.SUB_C_USERSETTLE_REQ, e, e.length);
}
},
SendPackageUserSubGameRun: function() {
var e = window.net.netSerializer.packMsg("CMD_C_SubGameRunReq", {});
this.SendGameData(n.SUB_C_SUBGAME_RUN_REQ, e, e.length);
},
SendPackageUserRecord: function() {
var e = window.net.netSerializer.packMsg("CMD_C_UserRecordReq", {});
this.SendGameData(n.SUB_C_USER_RECORD_REQ, e, e.length);
}
});
cc._RF.pop();
}, {
LandMine_CMD_Game: "LandMine_CMD_Game"
} ],
LandMine_GameRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0a241AGnHRHlKKZJOdKZZmr", "LandMine_GameRecord");
cc.Class({
extends: cc.Component,
properties: {
nodeRecordMe: [ cc.Node ],
nodeRecordOther: [ cc.Node ],
nodeTitleMe: cc.Node,
nodeTitleOther: cc.Node,
scrollViewMe: cc.ScrollView,
scrollViewOther: cc.ScrollView,
contentRecordMe: cc.Node,
contentRecordOther: cc.Node,
pfRecordItemMe: cc.Prefab,
pfRecordItemOther: cc.Prefab
},
onLoad: function() {
this.mePool = new cc.NodePool();
this.otherPool = new cc.NodePool();
this.meItems = [];
this.otherItems = [];
},
InitRecordData: function(e) {
this.jsGameEngine = e;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
this.nodeTitleMe.active = "Dis_btnRecordMe" == i;
this.nodeTitleOther.active = "Dis_btnRecordOther" == i;
this.scrollViewMe.node.active = "Dis_btnRecordMe" == i;
this.scrollViewOther.node.active = "Dis_btnRecordOther" == i;
"Dis_btnRecordMe" == i ? this.OnUpdateButtonStatus(0) : "Dis_btnRecordOther" == i && this.OnUpdateButtonStatus(1);
},
OnUpdateButtonStatus: function(e) {
for (var t = 0; t < 2; t++) if (t == e) {
this.nodeRecordMe[t].active = !0;
this.nodeRecordOther[t].active = !1;
} else {
this.nodeRecordMe[t].active = !1;
this.nodeRecordOther[t].active = !0;
}
0 == e ? this.OnUserRecordMe() : this.jsGameEngine.SendPackageUserRecord();
},
OnUserRecordMe: function(e) {
var t = this;
this.meItems.forEach(function(e, i, n) {
t.mePool.put(e);
});
this.meItems = [];
for (var i = this.jsGameEngine.gameRecordMe.length, n = i - 1; n >= 0; n--) {
var a = null;
a = this.mePool.size() > 0 ? this.mePool.get() : cc.instantiate(this.pfRecordItemMe);
this.meItems.push(a);
a.parent = this.contentRecordMe;
var o = this.jsGameEngine.gameRecordMe[n], s = new Date(o.InsertTime).format("MM/dd hh:mm:ss");
cc.find("lblDate", a).getComponent(cc.Label).string = s;
cc.find("lblMines", a).getComponent(cc.Label).string = o.MapID;
cc.find("lblBets", a).getComponent(cc.Label).string = o.BetScore / 1e3;
var r = cc.find("lblWin", a);
null == o.WinScore || 0 == o.WinScore ? r.getComponent(cc.Label).string = "-" : null == o.WinScore.high && null == o.WinScore.low ? r.getComponent(cc.Label).string = OnScoreToString(o.WinScore) : r.getComponent(cc.Label).string = "-";
if (e && n == i - 1) {
a.x = -580;
a.runAction(cc.moveTo(.5, 0, a.y));
}
}
this.scrollViewMe.scrollToTop();
},
OnUserRecordOther: function(e) {
var t = this;
this.otherItems.forEach(function(e, i, n) {
t.otherPool.put(e);
});
this.otherItems = [];
for (var i = e.RecordList.length - 1; i >= 0; i--) {
var n = null;
n = this.otherPool.size() > 0 ? this.otherPool.get() : cc.instantiate(this.pfRecordItemOther);
this.otherItems.push(n);
n.parent = this.contentRecordOther;
var a = e.RecordList[i], o = new Date(1e3 * a.InsertTime).format("hh:mm:ss");
cc.find("lblTime", n).getComponent(cc.Label).string = o;
var s = a.NickName.length > 0 ? a.NickName.substring(0, 3) + "****" : "";
cc.find("lblName", n).getComponent(cc.Label).string = s;
cc.find("lblMines", n).getComponent(cc.Label).string = a.MapID;
cc.find("lblBets", n).getComponent(cc.Label).string = a.BetScore / 1e3;
var r = cc.find("lblWin", n);
null == a.WinScore || 0 == a.WinScore ? r.getComponent(cc.Label).string = "-" : null == a.WinScore.high && null == a.WinScore.low ? r.getComponent(cc.Label).string = OnScoreToString(a.WinScore) : r.getComponent(cc.Label).string = "-";
}
this.scrollViewOther.scrollToTop();
}
});
cc._RF.pop();
}, {} ],
LandMine_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "12f384riBNNd7fTBNmXullj", "LandMine_GameView");
cc.Class({
extends: GameFrameView,
properties: {
menuLayer: cc.Node,
nodeRecord: cc.Node,
btnBetBg: cc.Button,
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
btnStart: cc.Button,
btnCollect: cc.Button,
btnStopAuto: cc.Button,
btnAuto: cc.Button,
btnMineCount: cc.Button,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin1: cc.Label,
lblCurWin2: cc.Label,
lblCurWin0: cc.Label,
nodeCurScore: cc.Node,
lblCurMapID0: cc.Label,
lblCurMapID1: cc.Label,
lblAutoCount: cc.Label,
nodeEndLayer: cc.Node,
box: cc.Node,
chui: cc.Node,
nodeBgNormal: cc.Node,
nodeBgAotu: cc.Node,
normalCao1: cc.Node,
normalCao2: cc.Node,
aotuCao1: cc.Node,
aotuCao2: cc.Node,
scrollViewMultiple: cc.ScrollView,
contentMultiple: cc.Node,
nodeMineLayer: cc.Node,
pfMultiple: cc.Prefab,
pfMineItem: cc.Prefab,
pfGameEndScore: cc.Prefab,
helpPop: cc.Node,
nodeBetPop: cc.Node,
lineBetPop: cc.Node,
autoSetPop: cc.Node,
nodeMapPop: cc.Node,
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label
},
OnFrameViewLoad: function() {
this.jsGameRecord = this.nodeRecord.getComponent("LandMine_GameRecord");
this.jsGameRecord.InitRecordData(this.pGameEngineJs);
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.currentMapID = 1;
this.nBarrierID = 0;
this.posArray = [];
this.curBet = 1;
this.isGameStart = !1;
this.isGameOver = !1;
this.IsFinish = null;
this.isSettle = null;
this.isFinishFlip = null;
this.multiplePool = new cc.NodePool();
this.mulItems = [];
this.minesItems = [];
this.curAutoCount = 0;
this.autoStepNum = 0;
this.totalAutoCount = 0;
var t = this;
this.percent = 0;
this.schedule(function() {
t.percent += 1;
if (t.percent <= 100) {
t.updateBar.progress = t.percent / 100;
t.updatePrecent.string = t.percent + "%";
} else t.percent >= 151 && (t.nodeLoading.active = !1);
}, .005, 150, 0);
},
OnEventScene: function(e) {
var t = this;
this.tagMapInfo = e.Maps;
this.lBetChip = e.BetChips;
this.lBetMultips = e.BetMultiples;
this.currentMapID = e.CurMapID;
this.nodeMapPop.getComponent("LandMine_MapSelect").initData(this);
this.i_totalBet = [];
var i = {};
this.lBetChip.forEach(function(e, n, a) {
t.lBetMultips.forEach(function(t, n, a) {
var o = {};
o.bet = e;
o.mul = t;
var s = window.OnIntScore(e) * t;
i[s] = o;
});
});
for (var n in i) if (i.hasOwnProperty(n)) {
var a = i[n];
a.val = Number(n);
this.i_totalBet.push(a);
}
this.i_totalBet.sort(function(e, t) {
return e.val - t.val;
});
this.subGames = new Map();
for (var o = 0; o < e.SubGames.length; o++) this.subGames.set(e.SubGames[o].ID, e.SubGames[o]);
this.LineBetNodeJs = this.lineBetPop.getComponent("LandMine_LineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNodeJs.setConfig(this.lBetChip, this.lBetMultips);
this.AutoSetNodeJs = this.autoSetPop.getComponent("LandMine_AutoSet");
this.AutoSetNodeJs.initData(this, e.AutoRun);
this.AutoSetNodeJs.setConfig(this.currentMapID);
this.makeMineMap();
this.disableMineEvent();
this.ShowMultipleInfo();
this.OnUpdateOperateButtonStatus(!0);
},
ShowMultipleInfo: function() {
var e = this;
this.mulItems.forEach(function(t, i, n) {
var a = cc.find("lblNormal", t), o = cc.find("nodeCurrent", t);
a.active = !0;
o.active = !1;
e.multiplePool.put(t);
});
this.mulItems = [];
this.tagMapInfo[this.currentMapID - 1].Multiples.forEach(function(t, i, n) {
var a = null;
a = e.multiplePool.size() > 0 ? e.multiplePool.get() : cc.instantiate(e.pfMultiple);
e.contentMultiple.addChild(a);
e.mulItems.push(a);
var o = cc.find("lblNormal", a), s = cc.find("nodeCurrent/lblCurrent", a), r = t / 100;
if (r >= 100) {
o.getComponent(cc.Label).string = r.toFixed(0) + "x";
s.getComponent(cc.Label).string = r.toFixed(0) + "x";
} else if (r > 40) {
o.getComponent(cc.Label).string = r.toFixed(1) + "x";
s.getComponent(cc.Label).string = r.toFixed(1) + "x";
} else {
o.getComponent(cc.Label).string = r.toFixed(2) + "x";
s.getComponent(cc.Label).string = r.toFixed(2) + "x";
}
});
this.scrollViewMultiple.scrollToLeft();
},
makeMineMap: function() {
var e = this;
this.nodeMineLayer.removeAllChildren();
this.minesItems = [];
for (var t = 0; t < 25; t++) {
var i = cc.instantiate(this.pfMineItem);
this.nodeMineLayer.addChild(i);
i.zIndex = 0;
i.x = 155 * Math.trunc(t % 5) - 311;
i.y = 318 - 155 * Math.trunc(t / 5);
this.minesItems.push(i);
i._index = t + 1;
i.on("click", function(t) {
e.digMine(t.target._index);
});
}
this.chui.zIndex = 30;
},
OnStakeUpdate: function() {
var e = this, t = this.LineBetNodeJs.i_betIndex, i = this.LineBetNodeJs.i_lineIndex, n = Number(window.OnIntScore(this.lBetChip[t]) * this.lBetMultips[i]);
this.lblBetScore.string = n;
this.i_totalBet.forEach(function(t, i, a) {
t.val != n || (e.i_totalBetIndex = i);
});
this.curBet = this.i_totalBet[this.i_totalBetIndex].bet * this.i_totalBet[this.i_totalBetIndex].mul;
},
OnUpdateBetChip: function(e) {
this.i_totalBetIndex += e;
this.i_totalBetIndex < 0 ? this.i_totalBetIndex = this.i_totalBet.length - 1 : this.i_totalBetIndex > this.i_totalBet.length - 1 && (this.i_totalBetIndex = 0);
var t = this.i_totalBet[this.i_totalBetIndex];
this.LineBetNodeJs.updateLineScore(t.bet, t.mul);
},
OnUpdateOperateButtonStatus: function(e) {
this.btnBetBg.interactable = e;
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
this.btnMineCount.interactable = e;
this.btnAuto.interactable = e;
this.btnStart.node.active = e;
this.btnStopAuto.node.active = this.isAutoGame;
this.btnAuto.node.active = !this.isAutoGame;
this.btnCollect.node.active = !this.isAutoGame && !e;
this.nodeCurScore.active = this.isAutoGame && !e;
this.lblCurMapID0.node.active = e;
this.lblCurMapID1.node.active = !e;
},
digMine: function(e) {
var t = this;
if (0 != this.isGameStart && 1 != this.isGameOver) {
for (var i = 0; i < this.posArray.length; i++) if (e == this.posArray[i]) return;
window.mfConfig.PlayAudio("303/Audio/knocking");
var n = this.minesItems[e - 1];
n.zIndex = 1;
this.chui.active = !0;
this.chui.x = n.x;
this.chui.y = n.y;
var a = this.chui.getComponent(sp.Skeleton);
PlaySkeletonAnimation(a, !1, "animation").setCompleteListener(function() {
t.chui.active = !1;
});
this.autoInter = !0;
this.nBarrierID++;
this.posArray.push(e);
var o = this.i_totalBet[this.i_totalBetIndex], s = {};
s.MapID = this.currentMapID;
s.BarrierID = this.nBarrierID;
s.BetScore = o.bet;
s.BetMul = o.mul;
s.DigPos = e;
this.pGameEngineJs.SendPackageUserDig(s);
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnMenuMore" == i) this.OnMenuLayerShow(); else if ("Dis_btnBetSub" == i) this.OnUpdateBetChip(-1); else if ("Dis_btnBetAdd" == i) this.OnUpdateBetChip(1); else if ("Dis_btnCollect" == i) {
this.disableMineEvent();
this.pGameEngineJs.SendPackageUserSettle();
} else if ("Dis_btnMineCount" == i) this.nodeMapPop.active = !0; else if ("Dis_btnBetBg" == i) this.nodeBetPop.active = !this.nodeBetPop.active; else if ("Dis_btnBetPop" == i) this.nodeBetPop.active = !1; else if ("Dis_btnStopAuto" == i) this.stopGameAuto(); else if ("Dis_btnAuto" == i) {
this.autoSetPop.active = !0;
this.btnAuto.interactable = !1;
} else "Dis_btnStart" == i ? this.startGame() : "BtnGameRule" == i && (this.helpPop.active = !0);
},
OnMenuLayerShow: function() {
this.menuLayer.active = !this.menuLayer.active;
},
updateMapID: function(e) {
this.currentMapID = e;
this.lblCurMapID0.string = "x" + this.currentMapID;
this.lblCurMapID1.string = "x" + this.currentMapID;
this.ShowMultipleInfo();
this.AutoSetNodeJs.setConfig(this.currentMapID);
},
startGame: function() {
if (this.CheckCanBet()) {
this.nBarrierID = 0;
this.posArray.length = 0;
this.isGameStart = !0;
this.isGameOver = !1;
this.IsFinish = null;
this.isSettle = null;
this.isFinishFlip = null;
this.ShowMultipleInfo();
this.makeMineMap();
this.btnCollect.interactable = !1;
this.lblCurWin2.node.active = !1;
this.lblCurWin0.node.active = !0;
this.OnUpdateOperateButtonStatus(!1);
this.lMeScore -= this.curBet;
this.OnUpdateUserScore(-this.curBet);
} else this.GoldNotEnoughTip();
},
startGameAuto: function() {
if (this.CheckCanBet()) {
if (!this.isOnStop) {
this.autoInter = null;
this.nBarrierID = 0;
this.posArray.length = 0;
this.isGameStart = !0;
this.isGameOver = !1;
this.isAutoGame = !0;
this.IsFinish = null;
this.isSettle = null;
this.isFinishFlip = null;
this.autoAllIdxs = [];
for (var e = 1; e <= 25; e++) this.autoAllIdxs.push(e);
this.ShowMultipleInfo();
this.makeMineMap();
this.disableMineEvent();
this.OnUpdateOperateButtonStatus(!1);
var t = -1 == this.totalAutoCount ? "∞" : this.totalAutoCount - this.curAutoCount;
this.lblAutoCount.string = t;
this.lMeScore -= this.curBet;
this.OnUpdateUserScore(-this.curBet);
this.curAutoCount += 1;
this.schedule(function() {
this.updateAuto();
}.bind(this), .16);
}
} else {
this.GoldNotEnoughTip();
this.stopGameAuto();
}
},
endGameAuto: function() {
this.unscheduleAllCallbacks();
this.autoInter = null;
this.isAutoGame = null;
this.isGameStart = !1;
this.isGameOver = !0;
this.lblCurWin2.string = "0.00";
this.lblCurWin1.string = "0.00";
this.lblCurWin0.string = "0.00";
this.OnUpdateOperateButtonStatus(!0);
this.changeBg(!0);
},
stopGameAuto: function() {
this.isOnStop = !0;
this.unscheduleAllCallbacks();
if (this.isGameOver) this.endGameAuto(); else {
this.autoInter = null;
this.isAutoGame = null;
this.IsFinish || this.enableMineEvent();
this.btnStopAuto.node.active = !1;
this.btnAuto.node.active = !0;
this.nodeCurScore.active = !1;
this.btnCollect.node.active = !0;
this.btnCollect.interactable = this.nBarrierID >= 1;
this.lblCurWin2.node.active = this.nBarrierID >= 1;
this.lblCurWin0.node.active = this.nBarrierID < 1;
if ("0.00" == this.lblCurWin2.string) {
this.OnUpdateOperateButtonStatus(!0);
this.btnStart.interactable = this.isFinishFlip;
this.btnAuto.interactable = this.isFinishFlip;
}
}
this.changeBg(!0);
},
updateAuto: function() {
if (this.isAutoGame && this.isGameStart && !this.autoInter && !this.IsFinish && this.pGameEngineJs.clickTime <= 0) {
var e = [];
this.autoAllIdxs.forEach(function(t, i, n) {
e.push(t);
});
var t = Math.trunc(Math.random() * e.length);
this.digMine(e[t]);
}
},
OnGameUserDig: function(e) {
var t = this;
if (0 == e.RetCode) {
if (e.IsFinish) {
this.IsFinish = !0;
this.disableMineEvent();
}
this.isAutoGame && this.autoAllIdxs.forEach(function(i, n, a) {
i != e.DigPos || t.autoAllIdxs.splice(n, 1);
});
if (1 == e.BarrierID) {
this.btnCollect.interactable = !0;
this.lblCurWin2.node.active = !0;
this.lblCurWin0.node.active = !1;
}
var i = e.DigPos - 1, n = this.minesItems[i];
if (n) {
cc.find("imOff", n).active = !1;
n.getComponent(cc.Button).enabled = !1;
this.mapPosStatus = e.MapPosStatus;
var a = e.MapPosStatus[i];
if (1 == a) {
window.mfConfig.PlayAudio("303/Audio/explosion");
var o = cc.find("nodeSpine_Fanpai", n);
o.active = !0;
var s = o.getComponent(sp.Skeleton), r = PlaySkeletonAnimation(s, !1, "animation");
setTimeout(function() {
var e = cc.find("nodeSpine_Baoshi", n);
e.active = !0;
var t = e.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation");
t.setCompleteListener(function() {
PlaySkeletonAnimation(t, !1, "keep");
});
}, 100);
r.setCompleteListener(function() {
o.active = !1;
if (!e.IsFinish && t.isAutoGame) if (e.BarrierID >= t.autoStepNum) {
t.isGameStart = !1;
t.isGameOver = !0;
t.pGameEngineJs.SendPackageUserSettle();
} else t.autoInter = null;
});
this.lblCurWin2.string = OnScoreToString(e.WinScore, 2);
this.lblCurWin1.string = OnScoreToString(e.WinScore, 2);
this.lblCurWin0.string = OnScoreToString(e.WinScore, 2);
this.updateCurrentMultiple(e);
if (e.IsFinish) {
setTimeout(function() {
t.updateMineMap(i, e, 0, function() {
t.isFinishFlip = !0;
if (t.isAutoGame) {
t.isGameStart = !1;
t.isGameOver = !0;
t.pGameEngineJs.SendPackageUserSettle();
} else if (t.isSettle && t.isFinishFlip) {
t.isGameStart = !1;
t.isGameOver = !0;
t.isSettle = null;
t.isFinishFlip = null;
t.OnUpdateOperateButtonStatus(!0);
}
});
}, 1e3);
return;
}
} else if (2 == a) ; else if (3 == a) {
this.btnCollect.interactable = !1;
this.lblCurWin2.node.active = !1;
this.lblCurWin0.node.active = !0;
window.mfConfig.PlayAudio("303/Audio/explosion");
var c = cc.find("nodeSpine_Fanpai", n);
c.active = !0;
var l = c.getComponent(sp.Skeleton);
PlaySkeletonAnimation(l, !1, "animation").setCompleteListener(function() {
c.active = !1;
});
setTimeout(function() {
window.mfConfig.PlayAudio("303/Audio/storm");
var a = cc.find("nodeSpine_Zhadan", n);
a.active = !0;
var o = a.getComponent(sp.Skeleton);
PlaySkeletonAnimation(o, !1, "start").setCompleteListener(function() {
window.mfConfig.PlayAudio("303/Audio/die");
t.lblCurWin2.string = "0.00";
t.lblCurWin1.string = "0.00";
t.lblCurWin0.string = "0.00";
t.updateMineMap(i, e, 3, function() {
t.isFinishFlip = !0;
if (t.isAutoGame) -1 != t.totalAutoCount && t.curAutoCount >= t.totalAutoCount ? t.endGameAuto() : setTimeout(function() {
t.startGameAuto();
}, 1e3); else {
t.isGameStart = !1;
t.isGameOver = !0;
t.OnUpdateOperateButtonStatus(!0);
}
if (t.isOnStop) {
t.btnStart.interactable = !0;
t.btnAuto.interactable = !0;
}
});
});
}, 100);
}
}
}
},
updateCurrentMultiple: function(e) {
var t = -1;
this.tagMapInfo[this.currentMapID - 1].Multiples.forEach(function(i, n, a) {
e.WinMultiple != i || (t = n);
});
this.mulItems.forEach(function(e, i, n) {
var a = cc.find("lblNormal", e), o = cc.find("nodeCurrent", e);
a.active = i != t;
o.active = i == t;
});
if (this.mulItems.length > 5) {
var i = t / (this.mulItems.length - 1);
this.scrollViewMultiple.scrollToPercentHorizontal(i, .07);
}
},
disableMineEvent: function() {
this.minesItems.forEach(function(e, t, i) {
e.getComponent(cc.Button).enabled = !1;
});
},
enableMineEvent: function() {
this.minesItems.forEach(function(e, t, i) {
cc.find("imOff", e).active && (e.getComponent(cc.Button).enabled = !0);
});
},
updateMineMap: function(e, t, i, n) {
var a = this;
3 == i && this.AddGameRecord();
var o = t.MapPosStatus, s = [];
0 == i ? o.forEach(function(e, t, i) {
if (0 == e) {
var n = {};
n.idx = t;
n.type = 3;
s.push(n);
}
}) : o.forEach(function(t, i, n) {
if (i != e && (0 == t || 3 == t)) {
var a = {};
a.idx = i;
a.type = t;
s.push(a);
}
});
s.forEach(function(e, t, i) {
var o = e.idx, r = e.type, c = a.minesItems[o];
if (c) {
c.zIndex = 1;
var l = cc.find("imOff", c), h = cc.find("nodeSpine_Fanpai", c), u = cc.find("nodeSpine_Baoshi", c), d = cc.find("imMine", c), m = cc.find("mask", c);
if (3 == r) {
l.active = !1;
h.active = !0;
var f = h.getComponent(sp.Skeleton);
PlaySkeletonAnimation(f, !1, "animation").setCompleteListener(function() {
m.active = !0;
h.active = !1;
d.active = !0;
t >= s.length - 1 && n && n();
});
} else {
l.active = !1;
h.active = !0;
var p = h.getComponent(sp.Skeleton);
PlaySkeletonAnimation(p, !1, "animation").setCompleteListener(function() {
m.active = !0;
h.active = !1;
u.active = !0;
t >= s.length - 1 && n && n();
});
}
}
});
},
OnGameUserSettle: function(e) {
var t = this, i = this;
if (0 == e.RetCode) {
this.isSettle = !0;
this.AddGameRecord(e);
if (this.IsFinish) {
if (this.isSettle && this.isFinishFlip) {
this.isGameStart = !1;
this.isGameOver = !0;
this.isSettle = null;
this.isFinishFlip = null;
this.OnUpdateOperateButtonStatus(!0);
}
} else this.makeMineResult(function() {
if (t.isAutoGame) -1 != t.totalAutoCount && t.curAutoCount >= t.totalAutoCount ? t.endGameAuto() : setTimeout(function() {
t.startGameAuto();
}, 1e3); else {
t.isGameStart = !1;
t.isGameOver = !0;
t.OnUpdateOperateButtonStatus(!0);
}
});
window.mfConfig.PlayAudio("303/Audio/open_box");
var n = this.box.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "open");
this.nodeEndLayer.active = !0;
var a = this.nodeEndLayer.getComponent(sp.Skeleton), o = PlaySkeletonAnimation(a, !1, "animation");
setTimeout(function() {
window.mfConfig.PlayAudio("303/Audio/coin_burst");
}, 100);
o.setCompleteListener(function() {
window.mfConfig.PlayAudio("303/Audio/collect_coins");
setTimeout(function() {
window.mfConfig.PlayAudio("303/Audio/close_box");
}, 100);
PlaySkeletonAnimation(n, !1, "close");
i.nodeEndLayer.active = !1;
i.lblCurWin2.string = "0.00";
i.lblCurWin1.string = "0.00";
i.lblCurWin0.string = "0.00";
var a = cc.instantiate(i.pfGameEndScore);
i.nodeViewUser[0].addChild(a);
a.getComponent("jsGameEndScore").InitGameScore(e.WinScore, 1, function() {
a.removeFromParent();
});
i.lMeScore += e.WinScore;
i.OnUpdateUserScore(e.WinScore);
t.isAutoGame && t.IsFinish && (-1 != t.totalAutoCount && t.curAutoCount >= t.totalAutoCount ? t.endGameAuto() : t.startGameAuto());
});
}
},
makeMineResult: function(e) {
var t = this, i = [], n = [];
this.mapPosStatus.forEach(function(e, t, a) {
if (0 == e) {
i.push(t);
n.push(0);
}
});
for (var a = 0; a < this.currentMapID; a++) n[a] = 3;
n.sort(function() {
return .5 - Math.random();
});
i.forEach(function(a, o, s) {
var r = a, c = t.minesItems[r];
if (c) {
var l = cc.find("mask", c), h = cc.find("imOff", c), u = cc.find("nodeSpine_Fanpai", c), d = cc.find("imMine", c), m = cc.find("nodeSpine_Baoshi", c);
h.active = !1;
u.active = !0;
var f = u.getComponent(sp.Skeleton), p = PlaySkeletonAnimation(f, !1, "animation");
3 == n[o] ? p.setCompleteListener(function() {
l.active = !0;
u.active = !1;
d.active = !0;
o >= i.length - 1 && e && e();
}) : p.setCompleteListener(function() {
l.active = !0;
u.active = !1;
m.active = !0;
o >= i.length - 1 && e && e();
});
}
});
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
},
changeBg: function(e) {
this.nodeBgNormal.active = e;
this.nodeBgAotu.active = !e;
this.normalCao1.active = e;
this.normalCao2.active = e;
this.aotuCao1.active = !e;
this.aotuCao2.active = !e;
},
AddGameRecord: function(e) {
var t = {};
t.BetScore = this.i_totalBet[this.i_totalBetIndex].bet * this.i_totalBet[this.i_totalBetIndex].mul;
t.DigCount = this.nBarrierID;
t.GameID = PlayerManager.GetMeUserItem().GetGameID();
t.InsertTime = new Date().getTime();
t.MapID = this.currentMapID;
t.NickName = PlayerManager.GetMeUserItem().GetNickNameUtf8();
t.WinScore = null != e ? e.WinScore : 0;
this.pGameEngineJs.gameRecordMe.length >= 30 && this.pGameEngineJs.gameRecordMe.shift();
this.pGameEngineJs.gameRecordMe.push(t);
this.jsGameRecord.OnUserRecordMe(!0);
},
CheckCanBet: function() {
return PlayerManager.GetMeUserItem().GetUserScore() >= this.curBet;
},
GoldNotEnoughTip: function() {
ManagerHelp_SetSystemLabel("The current gold coin is not enough to bet!");
},
OnFrameViewDestroy: function() {
this.jsGameRecord.mePool.clear();
this.jsGameRecord.otherPool.clear();
this.multiplePool.clear();
this.isGameStart = !1;
this.isGameOver = !0;
this.OnUpdateOperateButtonStatus(!0);
},
OnFrameUpdateUserScore: function(e) {}
});
cc._RF.pop();
}, {} ],
LandMine_LineBet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "22ef0768xJINKIETRRt2PwQ", "LandMine_LineBet");
cc.Class({
extends: cc.Component,
properties: {
lineNoteLbl: cc.Label,
multipleLbl: cc.Label,
subBtn_multiple: cc.Button,
addBtn_multiple: cc.Button,
subBtn_lineBtn: cc.Button,
addBtn_lineBtn: cc.Button
},
initData: function(e) {
this.father = e;
this.i_lineIndex = 0;
this.i_betIndex = 0;
this.i_lineMul = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];
this.i_betNum = [ 100, 1e3, 5e3, 1e4 ];
this.OnStakeUpdate();
},
setBtnEnabled: function(e) {
this.subBtn_multiple.interactable = e;
this.addBtn_multiple.interactable = e;
this.subBtn_lineBtn.interactable = e;
this.addBtn_lineBtn.interactable = e;
},
setConfig: function(e, t) {
this.i_lineMul = t;
this.i_betNum = e;
this.OnStakeUpdate();
},
OnStakeUpdate: function(e, t) {
null != e && (this.i_betIndex = e);
null != t && (this.i_lineIndex = t);
this.lineNoteLbl.string = window.OnIntScore(this.i_betNum[this.i_betIndex]);
this.multipleLbl.string = this.i_lineMul[this.i_lineIndex];
this.father.OnStakeUpdate();
},
updateLineScore: function(e, t) {
for (var i = 0; i < this.i_betNum.length; i++) if (e == this.i_betNum[i]) {
this.i_betIndex = i;
break;
}
for (var n = 0; n < this.i_lineMul.length; n++) if (t == this.i_lineMul[n]) {
this.i_lineIndex = n;
break;
}
this.OnStakeUpdate();
},
OnBtnEvent: function(e, t) {
if ("Dis_subBtn_multiple" == e.target.name) {
this.i_lineIndex--;
this.i_lineIndex < 0 && (this.i_lineIndex = this.i_lineMul.length - 1);
} else if ("Dis_addBtn_multiple" == e.target.name) {
this.i_lineIndex++;
this.i_lineIndex >= this.i_lineMul.length && (this.i_lineIndex = 0);
} else if ("Dis_subBtn_lineBtn" == e.target.name) {
this.i_betIndex--;
this.i_betIndex < 0 && (this.i_betIndex = this.i_betNum.length - 1);
} else if ("Dis_addBtn_lineBtn" == e.target.name) {
this.i_betIndex++;
this.i_betIndex >= this.i_betNum.length && (this.i_betIndex = 0);
}
this.OnStakeUpdate();
}
});
cc._RF.pop();
}, {} ],
LandMine_MapSelect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6019bw4WuJPpoMHqmneHlXs", "LandMine_MapSelect");
cc.Class({
extends: cc.Component,
properties: {
curPop: cc.Node,
nodeBtnMap: cc.Node,
pfBtnItem: cc.Prefab,
flags: []
},
start: function() {
for (var e = this, t = 1; t < 25; t++) {
var i = cc.instantiate(this.pfBtnItem);
this.nodeBtnMap.addChild(i);
cc.find("numLbl", i).getComponent(cc.Label).string = t;
i.idx = t;
i.on("click", function(t) {
e.OnSelect(t.target.idx);
});
var n = cc.find("selectFlag", i);
this.flags.push(n);
n.active = this.curIdx == t;
}
},
initData: function(e) {
this.father = e;
this.curIdx = this.father.currentMapID;
},
OnSelect: function(e) {
this.curIdx = e;
this.flags.forEach(function(t, i, n) {
t.active = i == e - 1;
});
this.father.updateMapID(e);
this.curPop.active = !1;
},
OnClose: function() {
window.mfConfig.PlayAudio("303/Audio/close_button");
this.curPop.active = !1;
}
});
cc._RF.pop();
}, {} ],
LayerNotify: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b8251quSdRJ9ZLu8A7l1/i5", "LayerNotify");
e("../../Developer/HotUpdate/CUpdateDef").default, e("../../Developer/HotUpdate/CUpdateHelp").default, 
e("../../Developer/HotUpdate/CUpdateManager").default;
e("ZApi_Include");
e("ZApi_Protocol");
e("ZApi_GameFrame");
var n = cc.Class({
ctor: function() {},
OnHide: function() {
if (!this.isBackGround) {
this.isBackGround = !0;
GetServerRoom().IsGameClient() && (cc.sys.os != cc.sys.OS_ANDROID && cc.sys.os != cc.sys.OS_IOS || GetServerRoom().OnMissionClosed(window.GST_NORMAL));
cc.audioEngine.pauseAll();
}
},
OnShow: function() {
if (this.isBackGround) {
this.isBackGround = !1;
cc.sys.os != cc.sys.OS_ANDROID && cc.sys.os != cc.sys.OS_IOS || GetServerRoom().IsGameClient() && 0 == GetServerRoom().GetEventCount() && GetServerRoom().OnLinkAgainConnect();
if (window.mfConfig.wEventType == YQ_MDM_ZFW_BEGIN) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
window.mfConfig.wEventType = window.YQ_MDM_EVENT_ENDED;
}
cc.audioEngine.resumeAll();
}
},
init: function() {
this.isBackGround = !1;
window.ManagerHelp.OnLayerEvent = this.OnLayerEvent.bind(this);
window.iosEventResult.getInstance();
window.mfConfig.wAppId = 0;
window.mfConfig.cbGameType = GAME_TYPE_FANG;
window.mfConfig.wNormalKindID = 0;
window.mfConfig.szNormalString = "";
this.OnBtnCilckAudio();
window.mfConfig.getText();
var e = cc.sys.localStorage.getItem("fSoundVoice");
(isNaN(e) || null == e) && (e = .5);
e = parseFloat(e);
window.mfConfig.fSound = e;
var t = cc.sys.localStorage.getItem("fMusicVoice");
(isNaN(t) || null == t) && (t = .5);
t = parseFloat(t);
window.mfConfig.fMusic = t;
this.GetNormalKinId();
window.mfConfig.SendMachine();
this.OnWindowReSize();
cc.game.on(cc.game.EVENT_HIDE, this.OnHide.bind(this));
cc.game.on(cc.game.EVENT_SHOW, this.OnShow.bind(this));
},
SetNormalKindId: function(e) {
cc.sys.localStorage.setItem("wNormalKindID", e);
},
GetNormalKinId: function() {
var e = cc.sys.localStorage.getItem("wNormalKindID");
e && (window.mfConfig.wNormalKindID = parseInt(e));
},
OnBtnCilckAudio: function() {
cc.Button.prototype.touchEndClone = cc.Button.prototype._onTouchEnded;
cc.Button.prototype._soundOn = !0;
cc.Button.prototype.setSoundEffect = function(e) {
this._sounOn = e;
};
cc.Button.prototype._onTouchEnded = function(e) {
var t = e.target.name;
ManagerHelp_WebKeepLight(e);
var i = -1 == t.search("No_"), n = -1 != t.search("Dis_"), a = -1 != t.search("All_");
this.interactable && this.enabledInHierarchy && this._pressed && 1 == this._soundOn && i && !a && window.mfConfig.PlayAudio("GameLobby/Audio/click", !1);
var o = cc.sequence(cc.callFunc(function(t) {
var i = t.getComponent(cc.Button);
i.touchEndClone(e);
i.interactable ? i.interactable = !1 : t.stopAction(o);
}), cc.delayTime(.5), cc.callFunc(function(e) {
var t = e.getComponent(cc.Button);
t.interactable || (t.interactable = !0);
}));
!this.interactable || n || a ? this.touchEndClone(e) : this.node.runAction(o);
};
},
OnWindowReSize: function() {
if (cc.sys.isBrowser && ("Windows" == cc.sys.os || "OS X" == cc.sys.os)) {
window.onresize = function() {
var e = document.documentElement.clientWidth, t = document.documentElement.clientHeight - 80, i = cc.view.getDesignResolutionSize().width + 320, n = cc.view.getDesignResolutionSize().height, a = e / i, o = t / n, s = a < o ? a : o;
cc.view.setFrameSize(i * s, n * s);
window.onresizecallback && window.onresizecallback();
};
window.onresize();
}
},
OnLayerEvent: function(e, t, i) {
this.pLayerName = e;
if ("MainLayer" == e) ; else if ("LogonLayer" == e) SceneManager_RunScene("LobbyLogon"); else if ("RoomLayer" == e) {
window.mfConfig.bLogonEnd = !0;
window.mfConfig.cbEnterLobby = 0;
SceneManager_RunScene("LobbyScene");
OnUpdateBuoyStatus(0);
} else if ("ClearAccounts" == e) {
GetMissionLogon().nControlIndex = -1;
window.mfConfig.bAlreadyCheckVersion = !1;
window.mfConfig.bInitSwitch = !1;
window.mfConfig.bLogonEnd = !1;
GetMissionService_Clear();
ACF_ClearAccount();
SceneManager_RunScene("LobbyLogon");
GetProject().buoyRootNode && SceneManager_RemovePersistPrefab(GetProject().buoyRootNode);
} else if ("StartGameClient" == e) {
window.H5_Evnet.bAlreadyEnter = !0;
SceneManager_RunScene("GameScene" + t);
} else if ("CloseGameClient" == e) {
if (!cc.sys.isNative) {
var n = GetServerRoom().stGameServer, a = ServerData_GetGameField(n.wFieldID);
if (GAME_JOINID_LIANXI == a.wJoinID) {
var o = PlayerManager.GetMeUserItem();
if (window.mfConfig.bBackupScore) {
window.mfConfig.bBackupScore = !1;
o.pGlobalData.lUserScore = o.pGlobalData.lUserScore_Backup;
o.pGlobalData.lUserScore_Backup = 0;
}
}
}
this.SetNormalKindId(0);
GetServerRoom().SetKindID(0);
window.mfConfig.OnScreenChange(window.mfConfig.ScreenHomeRight);
window.mfConfig.cbEnterLobby = 1;
SceneManager_RunScene("LobbyScene");
}
}
}), a = cc.Class({
extends: cc.Component,
statics: {
jsLayerNotify: null
},
properties: {
pLayerName: "MainScene",
pfSystemAlert: cc.Prefab,
pfLinkAgainLayer: cc.Prefab,
pfSystemLabel: cc.Prefab,
pfWaitLockLayer: cc.Prefab,
pfVideoPlayer: cc.Prefab,
pfRewardPopup: cc.Prefab
},
onLoad: function() {
if (!a.jsLayerNotify) {
var e = new n();
e.init(this);
a.jsLayerNotify = e;
window.ManagerHelp.pfSystemAlert = this.pfSystemAlert;
window.ManagerHelp.pfSystemLabel = this.pfSystemLabel;
window.ManagerHelp.pfLinkAgainLayer = this.pfLinkAgainLayer;
window.ManagerHelp.pfWaitLayer = this.pfWaitLockLayer;
window.ManagerHelp.pfVideoPlayer = this.pfVideoPlayer;
window.ManagerHelp.pfRewardPopup = this.pfRewardPopup;
}
},
onDisable: function() {},
startGameClient: function() {},
closeGameClient: function() {}
});
cc._RF.pop();
}, {
"../../Developer/HotUpdate/CUpdateDef": "CUpdateDef",
"../../Developer/HotUpdate/CUpdateHelp": "CUpdateHelp",
"../../Developer/HotUpdate/CUpdateManager": "CUpdateManager",
ZApi_GameFrame: "ZApi_GameFrame",
ZApi_Include: "ZApi_Include",
ZApi_Protocol: "ZApi_Protocol"
} ],
LogSystem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85eebW+SAxB0pqgO/3uubcW", "LogSystem");
window.LogSystem = cc.Class({
extends: cc.Component,
statics: {
instance: null
},
properties: {
logRoot: cc.Node,
logScroll: cc.Node,
logLabel: cc.Label
},
logstr: null,
updatePanel: null,
ctor: function() {
LogSystem.instance = this;
this.logstr = "";
this.updatePanel = !1;
},
onLoad: function() {
cc.game.addPersistRootNode(this.logRoot);
},
OpenLogPanel: function() {
this.logScroll.active = !0;
this.logLabel.string = this.logstr;
},
CloseLogPanel: function() {
this.logScroll.active = !1;
},
CopyLog: function() {
window.mfConfig.setText(this.logstr);
},
ClearLog: function() {
if (this.logScroll.active) {
this.logstr = "";
this.logLabel.string = this.logstr;
}
},
AddLog: function(e) {
if (window.SwitchType == window.SC_Local || window.SwitchType == window.SC_Test) {
this.logstr += "\n" + e;
this.updatePanel = !0;
}
},
update: function() {
if (this.updatePanel) {
this.logScroll.active && (this.logLabel.string = this.logstr);
this.updatePanel = !1;
}
}
});
window.LogSystem = function() {
LogSystem.instance || (LogSystem.instance = new LogSystem());
return LogSystem.instance;
};
cc._RF.pop();
}, {} ],
LogonScript: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fe72e23GCdF3rOBDmYByqfT", "LogonScript");
var n = e("../../Developer/HotUpdate/CUpdateDef").default, a = e("../../Developer/HotUpdate/CUpdateManager").default;
cc.Class({
extends: cc.Component,
properties: {
nodeLogonLayout: cc.Node,
labelVersion: cc.Label,
updateRoot: cc.Node,
updatePrecent: cc.Label,
updateBar: cc.ProgressBar,
forceLayer: cc.Node,
logNode: cc.Node,
nodeCheckBg: cc.Node,
nodeNormalBg: cc.Node,
btnCustomer: cc.Node,
btnNotify: cc.Node
},
onEnable: function() {
GetMissionLogon().SetEventDelegate(null);
},
onDisable: function() {
GetMissionLogon().OnLoginTimeout = null;
GetProject().TestColorCallback = null;
this.updateRoot.active && a.getInstance().resetCachePath(0);
},
TestColorCallback: function(e) {
var t = this;
if (!e) if (window.SwitchType != window.SC_Local) a.getInstance().checkCodeUpdate(!0, function(e, i, o) {
GetProject().dwPlazaVersion = a.getInstance().getProcessVersion(0);
cc.log("GetProject().dwPlazaVersion = " + GetProject().dwPlazaVersion);
t.OnUpdateVersion(o);
if (e === n.check_ret_force) {
t.updateRoot.active = !1;
t.nodeLogonLayout.active = !1;
t.forceLayer.active = !0;
} else if (e === n.check_ret_none) {
t.updateRoot.active = !1;
t.nodeLogonLayout.active = !0;
t.forceLayer.active = !1;
t.OnCheckCallback(!0);
}
}); else {
t.updateRoot.active = !1;
t.nodeLogonLayout.active = !0;
t.forceLayer.active = !1;
t.OnCheckCallback(!0);
}
},
updateTask_Check: function(e) {
var t = e.detail.gameId, i = e.detail.check_ret, n = e.detail.local_version;
e.detail.server_version;
cc.log("1111111111111版本号检测 gameId:" + t, ",check_ret:" + i);
this.OnUpdateVersion(n);
},
updateTask_Wait: function(e) {
if (0 == e.detail.gameId) {
this.updateRoot.active = !0;
this.nodeLogonLayout.active = !1;
this.forceLayer.active = !1;
}
},
updateTask_Percent: function(e) {
if (0 == e.detail.gameId) {
var t = e.detail.percent;
e.detail.byte;
this.updateBar.progress = t / 100;
this.updatePrecent.string = t + "%";
}
},
updateTask_Finish: function(e) {
if (0 == e.detail.gameId) {
this.updatePrecent.string = "update finish, please wait";
window.mfConfig.onEvent("af_complete_update", JSON.stringify({
af_param_1: "success"
}));
}
},
updateTask_Start: function(e) {
e.detail.gameId;
},
onLoad: function() {
window.SwitchType == window.SC_Test || (window.SwitchType, window.SC_Local), this.logNode.active = !1;
cc.systemEvent.on(n.check + 0, this.updateTask_Check.bind(this), this, !1);
cc.systemEvent.on(n.wait + 0, this.updateTask_Wait.bind(this), this, !1);
cc.systemEvent.on(n.percent + 0, this.updateTask_Percent.bind(this), this, !1);
cc.systemEvent.on(n.finish + 0, this.updateTask_Finish.bind(this), this, !1);
cc.systemEvent.on(n.start + 0, this.updateTask_Start.bind(this), this, !1);
cc.sys.isNative && a.getInstance().setGamePath(GameConfig.aryKindOpen);
this.bCheckStatus = !1;
this.bCheckEnd = !1;
PlayerManager.SetMeUserItem(null);
GetProject().OnInitData();
GetProject().TestColorCallback = this.TestColorCallback.bind(this);
GetProject().TestColorProject();
var e = this;
GetMissionLogon().OnLoginTimeout = function() {
e.nodeLogonLayout.active = !1;
};
window.mfConfig.OnRemoveLaunch();
if ("true" == GetProject().GetRealUser()) {
this.nodeCheckBg.active = !1;
this.nodeNormalBg.active = !0;
this.btnCustomer.active = null != cc.sys.localStorage.getItem("account");
}
},
start: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("GameLobby/Audio/BGM", !0);
cc.director.preloadScene("LobbyScene");
},
OnShowAccount: function() {
!window.mfConfig.bAutoLogon && cc.sys.isNative && this.OnAccountLoginEvent();
},
OnAccountLoginEvent: function() {
var e = ACF_GetAccountType();
if ("0" == e) {
var t = ACF_GetAccountOtp();
t && "" != t.account && "" != t.token && IsFirst && GetMissionLogon().SendPacketLogonToken(t.account, t.token);
} else if ("1" == e) {
var i = ACF_GetAccount();
null != i && "" != i.account && "" != i.password && IsFirst && GetMissionLogon().SendPacketAccountLogon(PhonePrefix + i.account, i.password);
} else {
var n = ACF_GetAccount();
null != n && "" != n.account && "" != n.password && IsFirst && GetMissionLogon().SendPacketAccountLogon(PhonePrefix + n.account, n.password);
}
},
OnCheckCallback: function(e) {
this.nodeLogonLayout.active = e;
this.bCheckStatus = e;
if (e) {
ACF_ReadAccount();
this.OnShowAccount();
}
},
OnUpdateVersion: function(e) {
this.labelVersion.node.active = !0;
this.labelVersion.string = "v" + e + ".ch" + GetProject().GetChannelId();
},
OnBtnRepairEvent: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfRepair", function(e, t) {
e || (t.zIndex = 3);
});
},
OnBtnCustomerEvent: function(e, t) {
OnShowServer();
},
OnBtnNotifyEvent: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfNotify", function(e, t) {
e || (t.zIndex = 10);
});
},
OnBtnRegisterEvent: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlRegister", function(e, t) {
e || (t.zIndex = 3);
});
},
OnBtnAccountEvent: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLogin", function(e, t) {
e || (t.zIndex = 3);
});
},
OnBtnUserAgreement: function(e, t) {
var i = t;
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfUserAgreement", function(e, t) {
if (!e) {
t.getComponent("jsUserAgreement").SetAgreementName(i);
}
});
},
OnJumpToUpdateUrl: function() {
a.getInstance().resetCachePath(0);
var e = GetProject().szDownloadUrl;
cc.sys.openURL(e);
}
});
cc._RF.pop();
}, {
"../../Developer/HotUpdate/CUpdateDef": "CUpdateDef",
"../../Developer/HotUpdate/CUpdateManager": "CUpdateManager"
} ],
Log: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "377362CQ+ZDpqAP4aoWR/UQ", "Log");
var n = {
logd: function(e, t) {
if (GameConfig.DEF_SEL != GameConfig.SEVER_TYPE_ENUM.FORMAL) {
"[object Object]" !== Object.prototype.toString.call(t) ? cc.log(this._formatLog(e, t)) : console.log(e, t);
}
},
logw: function(e, t) {
cc.warn(this._formatLog(e, t));
},
loge: function(e, t) {
GameConfig.DEF_SEL != GameConfig.SEVER_TYPE_ENUM.FORMAL && cc.error(e, t);
},
_formatLog: function(e, t) {
var i = "";
t && (i = "[" + t + "] ");
return i + e;
}
};
t.exports = n;
cc._RF.pop();
}, {} ],
LuckFruit_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "65aa7a1fBhE9p2ME7zmp5sB", "LuckFruit_CMD_Game");
t.exports.SUB_S_USERRUN_RET = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_USERRUN_REQ = 1;
cc._RF.pop();
}, {} ],
LuckFruit_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7e035HLjSNJqZg1kjsCNIGH", "LuckFruit_GameEngine");
var n = e("LuckFruit_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("LuckFruit_GameView");
this.pGameViewJs.pGameEngineJs = this;
},
ResetGameEngine: function() {},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("307/Audio/bgm", !0);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERRUN_RET:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
this.pGameViewJs.StopCheckGameStartDelay();
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
this.pGameViewJs.OnRollStart(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
SendGameStart: function(e) {
var t = window.net.netSerializer.packMsg("CMD_C_UserBet", e);
this.SendGameData(n.SUB_C_USERRUN_REQ, t, t.length);
this.pGameViewJs.CheckGameStartDelay();
}
});
cc._RF.pop();
}, {
LuckFruit_CMD_Game: "LuckFruit_CMD_Game"
} ],
LuckFruit_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "87ff3nGkotNhKHxMfPRDp0j", "LuckFruit_GameView");
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
btn_start: cc.Button,
btn_chips: cc.Button,
btn_reset: cc.Button,
btn_bets: [ cc.Button ],
btn_autoStop: cc.Button,
lblAotuTimes: cc.Label,
lblBets: [ cc.Label ],
lblUserScore: cc.Label,
lblCurScore: cc.Label,
lblCurChip: cc.Label,
imgJpPot: cc.Node,
betLights: [ cc.Node ],
curScoreLight: cc.Node,
winCircles: [ cc.Node ],
rollLights: [ cc.Node ],
rollMasks: [ cc.Node ],
nodeSpecialAnim: cc.Node,
SpecialSpine: sp.Skeleton,
SpecialSps: [ cc.Node ],
nodeRecord: cc.Node,
nodeAutoPop: cc.Node,
autoPlayNode: cc.Node,
nodeJackPotTurn: cc.Node,
nodeMenu: cc.Node,
helpPop: cc.Node,
pfAutoPlay: cc.Prefab,
pfHelpJP: cc.Prefab
},
OnFrameViewLoad: function() {
var e = this;
this.m_ExitTime = 180;
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.sendTime = 0;
this.reqStartTime = 0;
this.curBetScores = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
this.curChipIdx = 0;
this.curChip = 0;
this.luckTypeConfig = {
1: {
circle: this.winCircles[6],
light: this.rollLights[6],
posIdx: 6,
symbleID: 17
},
2: {
circle: this.winCircles[6],
light: this.rollLights[6],
posIdx: 6,
symbleID: 17
},
3: {
circle: this.winCircles[6],
light: this.rollLights[6],
posIdx: 6,
symbleID: 17
},
4: {
circle: this.winCircles[6],
light: this.rollLights[6],
posIdx: 6,
symbleID: 17
},
5: {
circle: this.winCircles[18],
light: this.rollLights[18],
posIdx: 18,
symbleID: 18
},
6: {
circle: this.winCircles[18],
light: this.rollLights[18],
posIdx: 18,
symbleID: 18
},
7: {
circle: this.winCircles[18],
light: this.rollLights[18],
posIdx: 18,
symbleID: 18
},
8: {
circle: this.winCircles[18],
light: this.rollLights[18],
posIdx: 18,
symbleID: 18
}
};
this.subScore = 0;
this.curPosIdx = 0;
this.isStopBetState = !0;
this.curJackpotScore = 0;
this.winCircles.forEach(function(e, t, i) {
e.active = !1;
});
this.rollLights.forEach(function(e, t, i) {
e.active = !1;
});
this.gameRecordMe = [];
this.jsGameRecord = this.nodeRecord.getComponent("LuckFruit_Record");
var t = "307_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID(), i = cc.sys.localStorage.getItem(t);
if (i) {
i = JSON.parse(i);
this.gameRecordMe = i;
this.jsGameRecord.initData(this.gameRecordMe);
}
this.SynchronyUserScore();
this.jsJackPotNum = this.imgJpPot.getComponent("jsJackPotNum");
this.btn_start.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchStartBtn, this);
this.btn_start.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEndBtn, this);
this.schedule(this.ExitTime, 1);
this.percent = 0;
this.nodeLoading.getComponent(cc.Sprite).schedule(function() {
e.percent += 1;
if (e.percent <= 100) {
e.updateBar.progress = e.percent / 100;
e.updatePrecent.string = e.percent + "%";
} else e.percent >= 151 && (e.nodeLoading.active = !1);
}, .005, 150, 0);
},
OnTouchStartBtn: function() {
var e = this;
if (this.btn_start.interactable) {
this.m_ExitTime = 180;
this.resetBetLblAnim();
this.startTouchTime = new Date();
this.startTouchFlag = 1;
this.btn_start.schedule(function() {
e.updateLongStart();
}, .05);
}
},
OnTouchEndBtn: function() {
if (this.btn_start.interactable) {
1 == this.startTouchFlag && this.OnGameStart();
this.startTouchFlag = null;
this.startTouchTime = null;
this.btn_start.unscheduleAllCallbacks();
}
},
updateLongStart: function(e) {
if (1 == this.startTouchFlag && this.startTouchTime && new Date() - this.startTouchTime >= 500) {
this.startTouchFlag = 2;
this.nodeAutoPop.active = !0;
}
},
OnViewUpdate: function(e) {
this.sendTime <= 0 || (this.sendTime -= e);
},
OnEventScene: function(e) {
this.BetChips = e.BetChips;
this.BetMul = e.BetMul;
this.UserBetLimit = e.BetLimit;
this.updateChip();
this.updateJackpot(e.JackpotScore);
this.initAutoPlayMenu(e.AutoRun);
},
initAutoPlayMenu: function(e) {
var t = cc.instantiate(this.pfAutoPlay);
t.getComponent("jsAutoPlay").initAutoPlayMenu(e, this.autoPleyItemCallBack.bind(this));
this.autoPlayNode.addChild(t);
},
autoPleyItemCallBack: function(e, t) {
this.nodeAutoPop.active = !1;
this.i_autoPlayTimes = e.target.autoRun;
this.updateAutoPlayTimes();
this.isAuto = !0;
this.OnGameStart();
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnBtnStartClick: function(e) {
var t = this, i = e.target.name;
if ("BtnGameRule" == i) this.helpPop.active = !0; else if ("Dis_btn_chip" == i) {
this.m_ExitTime = 180;
this.curChipIdx += 1;
this.curChipIdx > this.BetChips.length - 1 && (this.curChipIdx = 0);
this.updateChip();
this.resetBetLblAnim();
} else if ("Dis_btnAutoStop" == i) {
this.resetBetLblAnim();
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.isGameing ? this.setBtnDisable() : this.initBtnState();
} else if ("Dis_btn_reset" == i) {
this.m_ExitTime = 180;
this.resetBetLblAnim();
this.curBetScores.forEach(function(e, i, n) {
t.curBetScores[i] = 0;
});
this.lblBets.forEach(function(e, i, n) {
t.lblBets[i].string = 0;
});
this.UpdateUserScore(this.subScore);
this.subScore = 0;
} else "Dis_btnJpPot" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore, this) : "Dis_AutoPlayLayer" == i && (this.nodeAutoPop.active = !1);
},
OnBetBtnClick: function(e, t) {
this.m_ExitTime = 180;
this.resetBetLblAnim();
var i = t;
if (this.CheckCanBet(this.curChip)) {
var n = this.curBetScores[i] + this.curChip;
if (n > this.UserBetLimit) {
var a = StringFormat(Language_GetTxtByID(1001), OnIntScore(this.UserBetLimit));
ManagerHelp_SetSystemLabel(a);
} else {
this.subScore += this.curChip;
this.UpdateUserScore(-this.curChip);
this.curBetScores[i] = n;
this.lblBets[i].string = OnIntScore(n);
}
} else this.GoldNotEnoughTip();
},
OnGameStart: function() {
if (!(this.sendTime > 0)) {
var e = [], t = [], i = 0;
this.curBetScores.forEach(function(n, a, o) {
if (n > 0) {
e.push(n);
t.push(a + 1);
}
i += n;
});
if (e.length <= 0) {
var n = Language_GetTxtByID(1004);
ManagerHelp_SetSystemLabel(n);
} else {
this.lastSubScore = i;
var a = i - this.subScore;
a > 0 && this.UpdateUserScore(-a);
this.subScore = 0;
this.setBtnDisable();
this.rollMasks.forEach(function(e, t, i) {
e.active = !1;
});
this.winCircles.forEach(function(e, t, i) {
e.active = !1;
});
this.rollLights.forEach(function(e, t, i) {
e.isGive = null;
});
this.curScoreLight.active = !1;
this.sendTime = .1;
if (this.i_autoPlayTimes > 0) {
this.i_autoPlayTimes--;
this.updateAutoPlayTimes();
}
this.lblCurScore.string = OnScoreToString(0, 2);
var o = {};
o.AreaIndex = t;
o.BetScore = e;
this.pGameEngineJs.SendGameStart(o);
this.isGameing = !0;
this.isStart = null;
this.rollTime = 0;
this.dtTime = .15;
this.startPosNums = 0;
this.isSubSpeed = null;
window.mfConfig.PlayAudio("307/Audio/intro", !1);
this.schedule(this.updateRoll, this.dtTime);
}
}
},
OnRollStart: function(e) {
var t = this;
if (0 == e.RetCode) {
if (this.isReqDelay) {
this.SynchronyUserScore();
this.isReqDelay = null;
}
-1 != this.i_autoPlayTimes && this.isAuto && this.i_autoPlayTimes <= 0 && (this.isAuto = !1);
this.stopPos = 0;
this.AreaWinPos = [];
this.SpecialType = e.SpecialType;
if (0 == this.SpecialType) {
this.AreaWinPos.push(e.AreaWinPos[0] - 1);
this.stopPos = this.AreaWinPos[0] - 5;
} else {
this.luckPos = this.luckTypeConfig[this.SpecialType].posIdx;
if (2 == this.SpecialType) for (var i = e.AreaWinPos[0] - 1, n = 0; n < 7; n++) {
i > 23 && (i = 0);
this.AreaWinPos.push(i);
i++;
} else e.AreaWinPos.forEach(function(e, i, n) {
t.AreaWinPos.push(e - 1);
});
this.stopPos = this.luckPos - 5;
}
this.stopPos < 0 && (this.stopPos = 23 + this.stopPos);
this.AreaWinID = e.AreaWinID;
this.WinScore = 0;
e.WinScore.forEach(function(e, i, n) {
t.WinScore += e;
});
this.isStart = !0;
this.recordID = e.SymbolID;
0 == this.SpecialType ? this.recordID = e.SymbolID[0] : this.recordID = this.luckTypeConfig[this.SpecialType].symbleID;
this.gameRecordMe.push(this.recordID);
this.gameRecordMe.length > 15 && this.gameRecordMe.shift();
var a = "307_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID();
cc.sys.localStorage.setItem(a, JSON.stringify(this.gameRecordMe));
this.WinJackpotScore = 0;
null == e.WinJackpotScore.high && null == e.WinJackpotScore.low && (this.WinJackpotScore = e.WinJackpotScore);
this.WinJackpotPercent = e.WinJackpotPercent;
} else {
if (1001 == e.RetCode) {
var o = StringFormat(Language_GetTxtByID(1001), OnIntScore(this.UserBetLimit));
ManagerHelp_SetSystemLabel(o);
} else {
var s = Language_GetTxtByID(e.RetCode);
ManagerHelp_SetSystemLabel(s);
}
this.StopRollDirect();
}
},
updateRoll: function(e) {
var t = this;
this.curPosIdx > 23 && (this.curPosIdx = 0);
null != this.rollAudioTime && this.rollAudioTime % 6 != 0 || window.mfConfig.PlayAudio("307/Audio/roll", !1);
null != this.rollAudioTime && this.rollAudioTime++;
this.rollLights.forEach(function(e, i, n) {
e.active = i == t.curPosIdx;
});
this.rollTime += this.dtTime;
if (null != this.startPosNums) {
this.startPosNums++;
if (this.startPosNums >= 5) {
this.startPosNums = null;
this.dtTime = .017;
this.curPosIdx++;
this.rollAudioTime = 0;
this.unschedule(this.updateRoll, this);
this.schedule(this.updateRoll, this.dtTime);
return;
}
}
if (this.isStart && null == this.isSubSpeed && this.rollTime > 2 && this.curPosIdx == this.stopPos) {
this.dtTime = .35;
this.isSubSpeed = !0;
this.curPosIdx++;
this.rollAudioTime = null;
this.unschedule(this.updateRoll, this);
this.schedule(this.updateRoll, this.dtTime);
} else {
if (this.isStart && this.isSubSpeed) if (0 == this.SpecialType) {
if (this.curPosIdx == this.AreaWinPos[0]) {
this.unschedule(this.updateRoll, this);
this.stopBlinkAnim();
}
} else if (this.curPosIdx == this.luckPos) {
window.mfConfig.PlayAudio("307/Audio/luck", !1);
this.unschedule(this.updateRoll, this);
this.luckTypeConfig[this.SpecialType].circle.active = !0;
this.curLuckLight = this.luckTypeConfig[this.SpecialType].light;
this.curLuckLight.active = !0;
this.isblinkLuck = !0;
this.binkTimeLuck = 0;
this.schedule(this.updateLuckBlink, .1);
}
this.curPosIdx++;
}
},
updateLuckBlink: function(e) {
var t = this;
this.binkTimeLuck += e;
this.curLuckLight.active = this.isblinkLuck;
this.isblinkLuck = 0 == this.isblinkLuck;
if (this.binkTimeLuck >= 1.5) {
this.unschedule(this.updateLuckBlink, this);
this.luckTypeConfig[this.SpecialType].circle.active = !1;
this.curLuckLight.active = !1;
if (1 == this.SpecialType || 2 == this.SpecialType) {
this.dtTime = .07;
this.curWinPos = 0;
this.schedule(this.updateRoll3, this.dtTime);
} else {
cc.loader.loadRes("307/Audio/shine_many", cc.AudioClip, function(e, i) {
e || (t.binkAudioID = cc.audioEngine.play(i, !0, window.mfConfig.fSound));
});
this.binkTime = 0;
this.isbink = 0;
this.schedule(this.updateBlink, .2);
}
}
},
updateBlink: function(e) {
var t = this;
this.binkTime += e;
this.rollLights.forEach(function(e, i, n) {
e.active = i % 2 == t.isbink;
});
this.isbink = 0 == this.isbink ? 1 : 0;
if (this.binkTime >= 4) {
this.unschedule(this.updateBlink, this);
this.rollLights.forEach(function(e, t, i) {
e.active = !1;
});
if (this.binkAudioID) {
cc.audioEngine.stop(this.binkAudioID);
this.binkAudioID = null;
}
this.stopBlinkAnim();
}
},
updateRoll3: function(e) {
var t = this;
window.mfConfig.PlayAudio("307/Audio/roll", !1);
this.rollLights.forEach(function(e, i, n) {
i == t.curPosIdx || e.isGive ? e.active = !0 : e.active = !1;
});
if (this.curPosIdx == this.AreaWinPos[this.curWinPos]) {
this.unschedule(this.updateRoll3, this);
if (this.curWinPos >= this.AreaWinPos.length - 1) this.scheduleOnce(function() {
t.stopBlinkAnim();
}, .2); else {
this.rollLights[this.curPosIdx].isGive = !0;
this.scheduleOnce(function() {
t.schedule(t.updateRoll3, t.dtTime);
}, 1 == this.SpecialType ? .6 : .3);
}
this.curWinPos++;
}
this.curPosIdx++;
this.curPosIdx > 23 && (this.curPosIdx = 0);
},
stopBlinkAnim: function() {
var e = this, t = function() {
e.StopBlinkAudioID = null;
cc.loader.loadRes("307/Audio/shine_single", cc.AudioClip, function(t, i) {
t || (e.StopBlinkAudioID = cc.audioEngine.play(i, !0, window.mfConfig.fSound));
});
e.isBinkStop = !0;
e.binkTimeStop = 0;
e.schedule(e.updateStopBlink, .1);
};
if (8 == this.SpecialType) {
this.rollMasks.forEach(function(e, t, i) {
e.active = !0;
});
this.gameSettle();
} else if (0 == this.SpecialType) t(); else {
var i = "307/Audio/special_" + this.SpecialType;
window.mfConfig.PlayAudio(i, !1);
this.nodeSpecialAnim.active = !0;
PlaySkeletonAnimation(this.SpecialSpine, !1, "animation");
var n = this.SpecialSps[this.SpecialType - 1];
n.active = !0;
n.scale = 0;
n.runAction(cc.sequence(cc.scaleTo(.1, 1), cc.delayTime(1.5), cc.scaleTo(.1, 0), cc.callFunc(function(i) {
e.nodeSpecialAnim.active = !1;
i.scale = 1;
i.active = !1;
t();
})));
}
},
updateStopBlink: function(e) {
var t = this;
this.binkTimeStop += e;
this.AreaWinPos.forEach(function(e, i, n) {
t.rollLights[e].active = t.isBinkStop;
});
this.isBinkStop = 0 == this.isBinkStop;
if (this.binkTimeStop >= 1) {
this.unschedule(this.updateStopBlink, this);
this.StopBlinkAudioID && cc.audioEngine.stop(this.StopBlinkAudioID);
this.AreaWinPos.forEach(function(e, i, n) {
t.rollLights[e].active = !0;
t.winCircles[e].active = !0;
});
this.gameSettle();
}
},
gameSettle: function() {
var e = this;
8 == this.SpecialType ? window.mfConfig.PlayAudio("307/Audio/lost", !1) : window.mfConfig.PlayAudio("307/Audio/win_stop", !1);
this.scheduleOnce(function() {
e.WinScore > 0 && window.mfConfig.PlayAudio("307/Audio/add_score", !1);
e.lblCurScore.string = OnScoreToString(e.WinScore, 2);
e.UpdateUserScore(e.WinScore);
e.jsGameRecord.OnUserRecord(e.recordID);
e.isStopBetState = null;
e.AreaWinID.forEach(function(t, i, n) {
var a = t - 1, o = e.betLights[a];
o.active = !0;
var s = o.getComponent(sp.Skeleton);
PlaySkeletonAnimation(s, !0, "small");
});
e.curScoreLight.active = !0;
var t = e.curScoreLight.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "big");
if (e.isAuto) {
e.isGameing = null;
e.WinJackpotScore > 0 ? e.playJackpotAnim(function() {
e.scheduleOnce(function() {
e.resetBetLblAnim();
e.OnGameStart();
}, 1.6);
}) : e.scheduleOnce(function() {
e.resetBetLblAnim();
e.OnGameStart();
}, 1.6);
} else e.scheduleOnce(function() {
e.isGameing = null;
e.initBtnState();
e.WinJackpotScore > 0 && e.playJackpotAnim();
}, .5);
}, 1);
},
updateChip: function() {
this.curChip = this.BetChips[this.curChipIdx];
this.lblCurChip.string = OnIntScore(this.curChip) + "x";
},
resetBetLblAnim: function() {
if (!this.isStopBetState) {
this.isStopBetState = !0;
this.betLights.forEach(function(e, t, i) {
e.active = !1;
});
}
},
initBtnState: function() {
this.btn_start.interactable = !0;
this.btn_autoStop.interactable = !0;
this.btn_reset.interactable = !0;
this.btn_chips.interactable = !0;
this.btn_bets.forEach(function(e, t, i) {
e.interactable = !0;
e.node.opacity = 255;
});
this.btn_start.node.active = !this.isAuto;
this.btn_autoStop.node.active = this.isAuto;
this.btn_start.node.opacity = 255;
this.btn_reset.node.opacity = 255;
this.btn_chips.node.opacity = 255;
},
setBtnDisable: function() {
this.btn_start.interactable = !1;
this.btn_reset.interactable = !1;
this.btn_chips.interactable = !1;
this.btn_bets.forEach(function(e, t, i) {
e.interactable = !1;
e.node.opacity = 150;
});
this.btn_start.node.active = !this.isAuto;
this.btn_autoStop.node.active = this.isAuto;
this.btn_start.node.opacity = 150;
this.btn_reset.node.opacity = 150;
this.btn_chips.node.opacity = 150;
},
updateAutoPlayTimes: function() {
this.lblAotuTimes.string = -1 == this.i_autoPlayTimes ? "∞" : this.i_autoPlayTimes;
},
UpdateUserScore: function(e) {
this.lMeScore += e;
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
SynchronyUserScore: function() {
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.jsJackPotNum.setString(e);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
playJackpotAnim: function(e) {
var t = this;
this.jsGameEngine.OnFrameButtonJackPotDraw(this.nodeJackPotTurn, this.WinJackpotPercent / 100, parseInt(this.WinJackpotScore / this.WinJackpotPercent * 10), function() {
t.WinJackpotScore = 0;
t.WinJackpotPercent = 0;
e && e();
}, this.WinJackpotScore);
},
showHelpPanel: function() {
var e = cc.instantiate(this.pfHelpJP);
this.nodeRootCanvas.addChild(e);
var t = e.getChildByName("mask");
t.on(cc.Node.EventType.TOUCH_START, function() {}, this);
t.on(cc.Node.EventType.TOUCH_END, function() {
e.removeFromParent();
}, this);
},
ExitTime: function(e) {
var t = this;
if (!this.isAuto) {
this.m_ExitTime--;
if (this.m_ExitTime <= 0) {
this.unschedule(this.ExitTime, this);
ManagerHelp_SetSystemAlert("You have not played the game for a long time, please have a rest!", function() {
if (0 == GetServerRoom().GetEventCount()) {
t.jsGameEngine.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
} else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(t.jsGameEngine.GetMeTableID(), t.jsGameEngine.GetMeChairID(), !0);
t.scheduleOnce(t.jsGameEngine.OnFrameButtonBackGame.bind(t.jsGameEngine), .01);
}
});
}
}
},
StopRollDirect: function() {
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.unschedule(this.updateRoll, this);
this.initBtnState();
this.UpdateUserScore(this.lastSubScore);
},
UpdateReqStartTime: function(e) {
this.reqStartTime += e;
if (this.reqStartTime >= 5) {
this.isReqDelay = !0;
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1010));
this.StopCheckGameStartDelay();
this.StopRollDirect();
}
},
CheckGameStartDelay: function() {
this.isReqDelay = null;
this.reqStartTime = 0;
this.schedule(this.UpdateReqStartTime, .03);
},
StopCheckGameStartDelay: function() {
this.unschedule(this.UpdateReqStartTime, this);
},
CheckCanBet: function(e) {
return this.lMeScore >= e;
},
GoldNotEnoughTip: function() {
ManagerHelp_SetSystemLabel(Language_GetTxtByID(1002));
},
OnFrameUpdateUserScore: function(e) {},
OnFrameViewDestroy: function() {
this.unscheduleAllCallbacks();
}
});
cc._RF.pop();
}, {} ],
LuckFruit_Record: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a1d16wRer9DzK3laKqk4mlV", "LuckFruit_Record");
cc.Class({
extends: cc.Component,
properties: {
scrollViewMe: cc.ScrollView,
iconSps: [ cc.SpriteFrame ],
num1Sps: [ cc.SpriteFrame ],
contentRecord: cc.Node,
pfRecord: cc.Prefab
},
onLoad: function() {
this.mePool = new cc.NodePool();
this.symbolConfig = {};
this.symbolConfig[1] = 0;
this.symbolConfig[2] = 0;
this.symbolConfig[3] = 0;
this.symbolConfig[4] = 1;
this.symbolConfig[5] = 2;
this.symbolConfig[6] = 3;
this.symbolConfig[7] = 4;
this.symbolConfig[8] = 5;
this.symbolConfig[9] = 6;
this.symbolConfig[10] = 7;
this.symbolConfig[11] = 1;
this.symbolConfig[12] = 2;
this.symbolConfig[13] = 3;
this.symbolConfig[14] = 4;
this.symbolConfig[15] = 5;
this.symbolConfig[16] = 6;
this.symbolConfig[17] = 8;
this.symbolConfig[18] = 9;
},
start: function() {
var e = this;
this.gameRecordMe = this.gameRecordMe || [];
this.gameRecordMe.forEach(function(t, i, n) {
e.OnUserRecord(t);
});
},
initData: function(e) {
this.gameRecordMe = e;
},
OnUserRecord: function(e) {
var t = null;
(t = this.mePool.size() > 0 ? this.mePool.get() : cc.instantiate(this.pfRecord)).parent = this.contentRecord;
var i = this.symbolConfig[e], n = t.getChildByName("sp"), a = t.getChildByName("buleLuck"), o = t.getChildByName("redLuck"), s = t.getChildByName("num1"), r = t.getChildByName("num2"), c = t.getChildByName("new");
n.active = 17 != e && 18 != e;
a.active = 18 == e;
o.active = 17 == e;
s.active = 1 == e || 2 == e || 3 == e;
r.active = 11 == e || 12 == e || 13 == e || 14 == e || 15 == e || 16 == e;
c.active = !0;
n.active && (n.getComponent(cc.Sprite).spriteFrame = this.iconSps[i]);
s.active && (s.getComponent(cc.Sprite).spriteFrame = this.num1Sps[e - 1]);
if (11 == e || 12 == e || 13 == e || 14 == e || 15 == e || 16 == e) {
n.y = 5;
n.scale = .4;
} else {
n.y = 0;
n.scale = .5;
}
var l = this.contentRecord.children.length;
this.contentRecord.children.forEach(function(e, t, i) {
e.getChildByName("new").active = t == l - 1;
});
if (l > 15) {
var h = this.contentRecord.children[0];
this.mePool.put(h);
h.x = -100;
}
},
onDestroy: function() {
this.mePool.clear();
}
});
cc._RF.pop();
}, {} ],
Mine2_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "52452nnbBxMvYzqGkbt/te2", "Mine2_CMD_Game");
t.exports.SUB_S_USERDIG_RET = 100;
t.exports.SUB_S_USERSETTLE_RET = 101;
t.exports.SUB_S_SUBGAME_RUN_RET = 102;
t.exports.SUB_S_USER_RECORD_RET = 103;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_USERDIG_REQ = 1;
t.exports.SUB_C_USERSETTLE_REQ = 2;
t.exports.SUB_C_SUBGAME_RUN_REQ = 3;
t.exports.SUB_C_USER_RECORD_REQ = 4;
cc._RF.pop();
}, {} ],
Mine2_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2a09X+lOVHvKVXR3F0KDzV", "Mine2_GameEngine");
var n = e("Mine2_CMD_Game"), a = cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Mine2_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.bSendDig = !1;
this.clickTime = 0;
},
OnFrameEngineStart: function() {},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(a);
this.pGameViewJs.updateJackpot(a.JackpotScore);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERDIG_RET:
return this.OnGameUserDig(t, i);

case n.SUB_S_USERSETTLE_RET:
return this.OnGameUserSettle(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);

case n.SUB_S_SUBGAME_RUN_RET:
return this.OnGameUserSubGameRun(t, i);

case n.SUB_S_USER_RECORD_RET:
return this.OnGameUserRecord(t, i);
}
return !0;
},
OnEngineUpdate: function(e) {
this.clickTime <= 0 || (this.clickTime -= e);
},
SendPackageUserDig: function(e) {
if (!(this.bSendDig || this.clickTime > 0)) {
this.bSendDig = !0;
this.clickTime = 1;
var t = this.pGameViewJs.curMapInfo;
if (null != t) {
var i = {};
i.MapID = this.pGameViewJs.curMapId;
if (e > 20 && e < 24) {
i.BarrierID = 6;
i.DigPos = (e - 20) % t.Width == 0 ? t.Width : (e - 20) % t.Width;
} else if (e > 23) {
i.BarrierID = 7;
i.DigPos = (e - 23) % t.Width == 0 ? t.Width : (e - 23) % t.Width;
} else {
i.BarrierID = parseInt((e - 1) / t.Width) + 1;
i.DigPos = e % t.Width == 0 ? t.Width : e % t.Width;
}
i.BetScore = this.pGameViewJs.lChipNum;
i.BetMul = 1;
var a = window.net.netSerializer.packMsg("CMD_C_UserDigReq", i);
this.SendGameData(n.SUB_C_USERDIG_REQ, a, a.length);
} else cc.error("mapInfo is null");
}
},
OnGameUserDig: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserDigRet", e);
this.pGameViewJs.OnGameUserDig(i);
this.bSendDig = !1;
return !0;
},
SendPackageUserSettle: function() {
if (!(this.bSendDig || this.clickTime > 0)) {
this.bSendDig = !0;
this.clickTime = 1;
var e = window.net.netSerializer.packMsg("CMD_C_UserSettleReq", {});
this.SendGameData(n.SUB_C_USERSETTLE_REQ, e, e.length);
}
},
OnGameUserSettle: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserSettleRet", e);
this.pGameViewJs.OnGameUserSettle(i);
this.bSendDig = !1;
return !0;
},
SendPackageUserSubGameRun: function() {
var e = window.net.netSerializer.packMsg("CMD_C_SubGameRunReq", {});
this.SendGameData(n.SUB_C_SUBGAME_RUN_REQ, e, e.length);
},
OnGameUserSubGameRun: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_SubGameRunRet", e);
this.pGameViewJs.OnGameUserSubGameRun(i);
return !0;
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnFrameEngineEnable: function() {
this.gameRecordMe = [];
var e = "306_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID(), t = cc.sys.localStorage.getItem(e);
if (t) {
t = JSON.parse(t);
this.gameRecordMe = t;
this.pGameViewJs.jsGameRecord.OnUserRecordMe();
}
},
OnFrameEngineDisable: function() {
var e = "306_gameRecord_" + PlayerManager.GetMeUserItem().GetGameID();
cc.sys.localStorage.setItem(e, JSON.stringify(this.gameRecordMe));
},
SendPackageUserRecord: function() {
var e = window.net.netSerializer.packMsg("CMD_C_UserRecordReq", {});
this.SendGameData(n.SUB_C_USER_RECORD_REQ, e, e.length);
},
OnGameUserRecord: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRecordRet", e);
this.pGameViewJs.jsGameRecord.OnUserRecordOther(i);
return !0;
}
});
t.exports.GameEngineJs = a;
cc._RF.pop();
}, {
Mine2_CMD_Game: "Mine2_CMD_Game"
} ],
Mine2_GameRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "73ea4DphDFPspWhK11OP4bz", "Mine2_GameRecord");
cc.Class({
extends: cc.Component,
properties: {
nodeRecordMe: [ cc.Node ],
nodeRecordOther: [ cc.Node ],
nodeTitleMe: cc.Node,
nodeTitleOther: cc.Node,
scrollViewMe: cc.ScrollView,
scrollViewOther: cc.ScrollView,
contentRecordMe: cc.Node,
contentRecordOther: cc.Node,
pfRecordItemMe: cc.Prefab,
pfRecordItemOther: cc.Prefab
},
onLoad: function() {
this.mePool = new cc.NodePool();
this.otherPool = new cc.NodePool();
this.meItems = [];
this.otherItems = [];
},
InitRecordData: function(e) {
this.jsGameEngine = e;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
this.nodeTitleMe.active = "Dis_btnRecordMe" == i;
this.nodeTitleOther.active = "Dis_btnRecordOther" == i;
this.scrollViewMe.node.active = "Dis_btnRecordMe" == i;
this.scrollViewOther.node.active = "Dis_btnRecordOther" == i;
"Dis_btnRecordMe" == i ? this.OnUpdateButtonStatus(0) : "Dis_btnRecordOther" == i && this.OnUpdateButtonStatus(1);
},
OnUpdateButtonStatus: function(e) {
for (var t = 0; t < 2; t++) if (t == e) {
this.nodeRecordMe[t].active = !0;
this.nodeRecordOther[t].active = !1;
} else {
this.nodeRecordMe[t].active = !1;
this.nodeRecordOther[t].active = !0;
}
0 == e ? this.OnUserRecordMe() : this.jsGameEngine.SendPackageUserRecord();
},
OnUserRecordMe: function(e) {
var t = this;
this.meItems.forEach(function(e, i, n) {
t.mePool.put(e);
});
this.meItems = [];
for (var i = this.jsGameEngine.gameRecordMe.length, n = i - 1; n >= 0; n--) {
var a = null;
a = this.mePool.size() > 0 ? this.mePool.get() : cc.instantiate(this.pfRecordItemMe);
this.meItems.push(a);
a.parent = this.contentRecordMe;
var o = this.jsGameEngine.gameRecordMe[n], s = new Date(o.InsertTime).format("MM/dd");
cc.find("lbDate", a).getComponent(cc.Label).string = s;
cc.find("lbBet", a).getComponent(cc.Label).string = o.BetScore / 1e3;
var r = cc.find("lbResult", a);
null == o.WinScore || 0 == o.WinScore ? r.getComponent(cc.Label).string = "-" : null == o.WinScore.high && null == o.WinScore.low ? r.getComponent(cc.Label).string = OnScoreToString(o.WinScore) : r.getComponent(cc.Label).string = "-";
if (e && n == i - 1) {
a.x = -580;
a.runAction(cc.moveTo(.5, 0, a.y));
}
}
this.scrollViewMe.scrollToTop();
},
OnUserRecordOther: function(e) {
var t = this;
this.otherItems.forEach(function(e, i, n) {
t.otherPool.put(e);
});
this.otherItems = [];
for (var i = e.RecordList.length - 1; i >= 0; i--) {
var n = null;
n = this.otherPool.size() > 0 ? this.otherPool.get() : cc.instantiate(this.pfRecordItemOther);
this.otherItems.push(n);
n.parent = this.contentRecordOther;
var a = e.RecordList[i], o = new Date(1e3 * a.InsertTime).format("MM/dd");
cc.find("lbDate", n).getComponent(cc.Label).string = o;
var s = a.NickName.length > 0 ? a.NickName.substring(0, 3) + "****" : "";
cc.find("lbName", n).getComponent(cc.Label).string = s;
cc.find("lbBet", n).getComponent(cc.Label).string = a.BetScore / 1e3;
var r = cc.find("lbResult", n);
null == a.WinScore || 0 == a.WinScore ? r.getComponent(cc.Label).string = "-" : null == a.WinScore.high && null == a.WinScore.low ? r.getComponent(cc.Label).string = OnScoreToString(a.WinScore) : r.getComponent(cc.Label).string = "-";
}
this.scrollViewOther.scrollToTop();
}
});
cc._RF.pop();
}, {} ],
Mine2_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5568cF4iTNA7425Soi5KgtG", "Mine2_GameView");
e("XHJ_CMD_Game"), cc.v2(-125, 424), cc.v2(200, 700), cc.v2(500, 900), cc.v2(650, 1e3), 
cc.v2(750, 1e3), cc.v2(-180, -100), cc.v2(-160, -90), cc.v2(-140, -80), cc.v2(-120, -70), 
cc.v2(-100, -60);
var n = [ cc.v2(-60, 207), cc.v2(-76, 114), cc.v2(-92, 15), cc.v2(-110, -90) ], a = [ cc.v2(-67, 207), cc.v2(-78, 115), cc.v2(-88, 17), cc.v2(-99, -88) ], o = [ cc.v2(-75, 207), cc.v2(-81, 117), cc.v2(-86, 18), cc.v2(-90, -87) ], s = [ cc.v2(-96, 207), cc.v2(-96, 117), cc.v2(-98, 18), cc.v2(-100, -87) ], r = [ cc.v2(-98, 207), cc.v2(-94, 117), cc.v2(-91, 18), cc.v2(-88, -87) ], c = [ cc.v2(-99, 150), cc.v2(-91, 58), cc.v2(-83, -40) ], l = [ cc.v2(-98, 98), cc.v2(-86, 6) ], h = [];
h[0] = n;
h[1] = a;
h[2] = o;
h[3] = s;
h[4] = r;
h[5] = c;
h[6] = l;
cc.Class({
extends: GameFrameView,
properties: {
menuLayer: cc.Node,
mapMenuLayer: cc.Node,
mapMenuNode: cc.Node,
mapMenuItem: cc.Node,
mapMenuItemFont: [ cc.Font ],
mapNode: cc.Node,
Mine_landItem: cc.Prefab,
mineLandNode: [ cc.Node ],
mineLandLightNode: [ cc.Node ],
nodeJetton: [ cc.Node ],
spriteJetton: [ cc.SpriteFrame ],
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
btnStart: cc.Button,
btnStartFrame: [ cc.SpriteFrame ],
btnCollect: cc.Button,
btnCollectFrame: [ cc.SpriteFrame ],
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
nodeEndLayer: cc.Node,
pfJackPotNum: cc.Prefab,
btnJackPot: cc.Node,
pfTurnTable: cc.Prefab,
pfGameEndScore: cc.Prefab,
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
clickNode: cc.Node,
player: cc.Node,
nodeRecord: cc.Node,
helpNode: cc.Node
},
OnButtonMenuEvent: function(e, t) {
var i = t;
1 == i ? this.menuLayer.active = !this.menuLayer.active : 2 == i && (this.mapMenuLayer.active ? this.showMapMenuLayer(!1) : this.showMapMenuLayer(!0));
},
showMapMenuLayer: function(e) {
var t = cc.sequence(cc.callFunc(function() {
this.mapMenuLayer.active = !0;
}.bind(this)), cc.scaleTo(.1, 1, 1)), i = cc.sequence(cc.scaleTo(.1, 0, 1), cc.callFunc(function() {
this.mapMenuLayer.active = !1;
}.bind(this)));
this.mapMenuNode.runAction(e ? t : i);
},
OnMapMenuItemEvent: function(e, t) {
if (this.oldMapArrIndex != e.target.MapArrIndex) {
var i = new Object();
i = e.target.tagMapInfo;
this.notClearMap = !0;
this.generateMap(i, e.target.MapArrIndex);
this.showMapMenuLayer(!1);
}
},
setMapMenu: function() {
for (var e = 0; e < this.tagMapInfo.length; e++) {
var t = cc.instantiate(this.mapMenuItem);
t.active = !0;
t.setPosition(0, 0);
t.getComponent(cc.Label).string = this.tagMapInfo[e].Width + "x" + this.tagMapInfo[e].Height;
t.getComponent(cc.Label).font = this.mapMenuItemFont[0];
t.tagMapInfo = this.tagMapInfo[e];
t.MapArrIndex = e;
this.mapMenuNode.addChild(t);
this.mapMenuItemArr.push(t);
}
this.generateMap(this.tagMapInfo[2], 2);
},
selectMapMenu: function(e) {
null != this.oldMapArrIndex && (this.mapMenuItemArr[this.oldMapArrIndex].getComponent(cc.Label).font = this.mapMenuItemFont[0]);
this.mapMenuItemArr[e].getComponent(cc.Label).font = this.mapMenuItemFont[1];
this.oldMapArrIndex = e;
},
OnFrameViewLoad: function() {
this.jsGameRecord = this.nodeRecord.getComponent("Mine2_GameRecord");
this.jsGameRecord.InitRecordData(this.pGameEngineJs);
if (0 == GetProject().cbCheckAccounts) {
this.btnCollect.pressedSprite = this.btnCollectFrame[0];
this.btnCollect.normalSprite = this.btnCollectFrame[1];
this.btnCollect.disabledSprite = this.btnCollectFrame[2];
} else {
this.btnCollect.pressedSprite = this.btnCollectFrame[3];
this.btnCollect.normalSprite = this.btnCollectFrame[4];
this.btnCollect.disabledSprite = this.btnCollectFrame[5];
}
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.lBetChip = null;
this.lBetLimit = 0;
this.betClicked = !1;
this.hasCashOut = !1;
window.mfConfig.PlayAudio("306/Audio/BG", !0, window.mfConfig.fMusic);
this.lChipIndex = 0;
this.lCurrentJetton = 1e3;
this.lChipNum = 1e3;
this.curMapId = 1;
this.curDigPos = 1;
this.curBarrierID = 1;
this.curMapInfo = null;
this.notClearMap = !0;
this.mapMenuItemArr = [];
this.oldMapArrIndex = 0;
this.curJackpotScore = 0;
this.percent = 0;
this.playerStart = this.player.getPosition();
var t = cc.instantiate(this.pfJackPotNum);
cc.loader.loadRes("306/AGameRes/jackpot", cc.SpriteFrame, function(e, i) {
e || (t.getComponent(cc.Sprite).spriteFrame = i);
});
var i = t.getChildByName("imNumRoll");
i.color = cc.color(238, 208, 156);
i.getComponent(cc.Label).fontSize = 30;
i.setPositionY(i.getPositionY() - 5);
this.jsJackPotNum = t.getComponent("jsJackPotNum");
this.btnJackPot.addChild(t);
var n = this;
this.schedule(function() {
n.percent += 1;
if (n.percent <= 100) {
n.updateBar.progress = n.percent / 100;
n.updatePrecent.string = n.percent + "%";
} else if (n.percent >= 151) {
n.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnEventScene: function(e) {
this.lBetChip = e.BetChips;
this.lBetLimit = e.BetLimit;
this.tagMapInfo = e.Maps;
this.subGames = new Map();
for (var t = 0; t < e.SubGames.length; t++) this.subGames.set(e.SubGames[t].ID, e.SubGames[t]);
this.ShowBetChip();
this.OnUpdateOperateButtonStatus(!0);
this.setMapMenu();
},
generateMap: function(e, t) {
var i = this;
this.curMapId = e.MapID;
this.curMapInfo = e;
this.selectMapMenu(t);
e.Height > 7 && (e.Height = 7);
e.Width > 4 && (e.Width = 4);
for (var n = 0; n < e.Height; n++) this.mineLandNode[n].removeAllChildren();
for (var a = e.Width * e.Height - 3, o = 0; o < e.Height; o++) {
var s = e.Height - o;
e.Width = 6 == s ? 3 : 7 == s ? 2 : 4;
for (var r = function(t) {
var n = cc.instantiate(i.Mine_landItem);
l = "306/AGameRes/landRes/" + s + "_" + (t + 2);
cc.loader.loadRes(l, cc.SpriteFrame, function(e, t) {
if (!e) {
if (n.getChildByName("land")) var i = n.getChildByName("land");
i.getComponent(cc.Sprite).spriteFrame = t;
}
});
n.setPosition(h[s - 1][t]);
var r = n.getComponent("Mine2_landItem");
r.father = i;
r.setData(a, e.Multiples[e.Height - o - 1], i.sendPackageUserDig.bind(i), 0 == o, t == e.Width - 1);
i.mineLandNode[e.Height - 1 - o].addChild(n, 1, a--);
}, c = 0; c < e.Width; c++) {
var l;
r(c);
}
}
},
startTipBtn: function() {
this.btnStart.node.active && this.btnStart.node.runAction(cc.sequence(cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[0];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[1];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[0];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[1];
}.bind(this))));
},
sendPackageUserDig: function(e) {
this.btnCollect.interactable = !1;
this.curDigPos = e;
this.pGameEngineJs.SendPackageUserDig(e);
},
ShowBetChip: function() {
for (var e = 0; e < this.nodeJetton.length; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnUpdateBetChipStatus: function(e) {
if (e) {
for (var t = -1, i = 0; i < this.nodeJetton.length; i++) {
var n = this.lMeScore >= this.lBetChip[i];
this.nodeJetton[i].getComponent(cc.Button).interactable = n;
n && (t = i);
}
if (-1 == t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var a = 0; a < this.nodeJetton.length; a++) this.nodeJetton[a].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
} else if (this.lChipIndex > t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var o = 0; o < this.nodeJetton.length; o++) this.nodeJetton[o].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
}
} else for (var s = 0; s < this.nodeJetton.length; s++) this.nodeJetton[s].getComponent(cc.Button).interactable = !1;
},
ClickJettonBtn: function(e, t) {
var i = parseInt(t);
this.lCurrentJetton = this.lBetChip[i];
i == this.lChipIndex ? this.OnUpdateBetChip(0) : this.OnUpdateBetChip(1);
this.lChipIndex = i;
for (var n = 0; n < this.nodeJetton.length; n++) this.nodeJetton[n].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[i].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
},
OnUpdateBetChip: function(e) {
if (0 == e) {
if (this.lChipNum + this.lCurrentJetton > this.lMeScore) return;
if (this.lChipNum + this.lCurrentJetton > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += this.lCurrentJetton;
} else if (1 == e) {
if (this.lCurrentJetton > this.lMeScore) return;
this.lChipNum = this.lCurrentJetton;
} else if (2 == e) this.lChipNum > this.lBetChip[0] && (this.lChipNum -= 1e3); else if (3 == e) {
if (this.lChipNum + 1e3 > this.lMeScore) return;
if (this.lChipNum + 1e3 > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += 1e3;
}
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnGameUserSubGameRun: function(e) {
0 == e.RetCode && null != this.jsTurnTable && this.jsTurnTable.OnGameUserSubGameRun(e);
},
OnGameUserDig: function(e) {
if (0 == e.RetCode) {
this.bMoveNextMap = !1;
this.curBarrierID = e.BarrierID;
var t = 1;
if (1 == this.curBarrierID) {
this.lMeScore -= this.lChipNum;
this.OnUpdateUserScore(-this.lChipNum);
}
if (6 == this.curBarrierID) {
this.curMapInfo.Width = 3;
t = 21;
} else if (7 == this.curBarrierID) {
this.curMapInfo.Width = 2;
t = 24;
} else {
this.curMapInfo.Width = 4;
t = (e.BarrierID - 1) * this.curMapInfo.Width + 1;
}
this.curDigPos = e.DigPos + t - 1;
for (var i = 0; i < this.curMapInfo.Width; i++) {
this.mineLandNode[e.BarrierID - 1].getChildByTag(t + i).getComponent("Mine2_landItem").setGrass(0);
}
var n = this.mineLandNode[e.BarrierID - 1].getChildByTag(this.curDigPos).getComponent("Mine2_landItem"), a = (n.node.getPosition(), 
n.node.convertToWorldSpaceAR(cc.v2(0, 0))), o = this.player.convertToNodeSpaceAR(a);
o.x -= 50;
o.y -= 70;
var s = this;
this.player.runAction(cc.sequence(cc.spawn(cc.moveBy(.2, o), cc.callFunc(s.updatePlayerAni(4))), cc.callFunc(function() {
s.updatePlayerAni(1);
}), cc.delayTime(.5), cc.callFunc(function() {
if (0 == e.WinMultiple) {
this.updatePlayerAni(2);
window.mfConfig.PlayAudio("306/Audio/boom");
n.showBoom();
this.OnUpdateOperateButtonStatus(!0);
this.btnStart.node.active = !0;
this.setAllStartTipBtnActive();
this.btnCollect.node.active = !1;
this.showRemainingMap(e.BarrierID);
this.AddGameRecord();
} else {
this.updatePlayerAni(3);
window.mfConfig.PlayAudio("306/Audio/flag");
n.showFlg(function(e) {}.bind(this));
this.lblCurWin.node.active = !0;
this.lblCurWin.string = OnScoreToString(e.WinScore, 2);
var i = t + e.MinePos - 1;
this.mineLandNode[e.BarrierID - 1].getChildByTag(i).getComponent("Mine2_landItem").showMine(function(t) {
this.bMoveNextMap || this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(t) {
s.moveNextMap(e.MinePos, e.BarrierID);
})));
}.bind(this));
}
}.bind(this))));
}
},
setAllStartTipBtnActive: function() {
for (var e = 0; e < this.curMapInfo.Height; e++) for (var t = 0; t < this.mineLandNode[e].children.length; t++) {
this.mineLandNode[e].children[t].getComponent("Mine2_landItem").setStartTipBtnActive(this.btnStart.node.active);
}
},
OnGameUserSettle: function(e) {
0 == e.RetCode && this.cashOut(e.WinScore);
},
cashOut: function(e) {
window.mfConfig.PlayAudio("306/Audio/coin", !1, window.mfConfig.fMusic);
this.nodeEndLayer.active = !0;
this.showRemainingMap(this.curBarrierID);
this.btnCollect.interactable = !1;
var t = this.nodeEndLayer.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "feijinbi").setCompleteListener(function() {
this.OnShowGameScore(e);
this.nodeEndLayer.active = !1;
this.lMeScore += e;
this.OnUpdateUserScore(e);
this.OnUpdateOperateButtonStatus(!0);
this.setAllStartTipBtnActive();
this.btnCollect.node.active = !1;
this.bExit && this.pGameEngineJs.SendPacketStandUp();
var t = {};
t.WinScore = e;
this.AddGameRecord(t);
var i = this;
this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function() {
i.btnStart.node.active = !0;
})));
}.bind(this));
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore), i = t.getComponent("jsGameEndScore");
this.nodeViewUser[0].addChild(t);
i.InitGameScore(e, 1, function() {
t.removeFromParent();
});
},
showRemainingMap: function(e) {
for (var t = e + 1; t <= this.curMapInfo.Height; t++) {
var i = 0;
if (6 == t) {
this.curMapInfo.Width = 3;
i = Rand(this.curMapInfo.Width) + 1 + 20;
} else if (7 == t) {
this.curMapInfo.Width = 2;
i = Rand(this.curMapInfo.Width) + 1 + 23;
} else {
this.curMapInfo.Width = 4;
i = Rand(this.curMapInfo.Width) + 1 + (t - 1) * this.curMapInfo.Width;
}
for (var n = 1; n <= this.curMapInfo.Width; n++) {
var a = 0;
if (6 == t) {
this.curMapInfo.Width = 3;
a = 20 + n;
} else if (7 == t) {
this.curMapInfo.Width = 2;
a = 23 + n;
} else {
this.curMapInfo.Width = 4;
a = (t - 1) * this.curMapInfo.Width + n;
}
if (this.mineLandNode[t - 1].getChildByTag(a)) {
var o = this.mineLandNode[t - 1].getChildByTag(a).getComponent("Mine2_landItem");
o.setGrass(0);
i == a && o.showMine();
}
}
}
},
lightGrass: function(e) {
var t = 0;
if (e > 20 && e < 24) {
t = 5;
this.curMapInfo.Width = 3;
} else if (e > 23) {
t = 6;
this.curMapInfo.Width = 2;
} else {
t = parseInt(e / 4);
this.curMapInfo.Width = 4;
}
for (var i = 0; i < this.curMapInfo.Width; i++) this.mineLandNode[t].getChildByTag(e + i) && this.mineLandNode[t].getChildByTag(e + i).getComponent("Mine2_landItem").playLightGrass();
this.lightGrassUn();
this.mineLandLightNode[t].active = !0;
},
lightGrassUn: function() {
for (var e = 0; e < this.curMapInfo.Height; e++) this.mineLandLightNode[e].active = !1;
},
showTurnTable: function(e) {
var t = cc.instantiate(this.pfTurnTable);
this.jsTurnTable = t.getComponent("Mine2_turntable");
this.jsTurnTable.pGameEngineJs = this.pGameEngineJs;
this.jsTurnTable.pGameViewJs = this;
this.jsTurnTable.setData(this.subGames.get(this.curMapInfo.SubGameID), this.lblCurWin.string, e);
this.nodeRootCanvas.addChild(t);
},
moveNextMap: function(e, t) {
this.bMoveNextMap = !0;
if (this.curMapInfo.Height <= t) {
window.mfConfig.PlayAudio("306/Audio/win");
this.showTurnTable(!0);
this.btnCollect.interactable = !0;
var i = this;
this.player.runAction(cc.sequence(cc.spawn(cc.moveTo(4, cc.p(3e3, 5)), cc.callFunc(function(e) {
i.updatePlayerAni(4);
}.bind(this))), cc.callFunc(function(e) {
this.player.setPosition(this.playerStart.x - 500, this.playerStart.y);
}.bind(this)), cc.spawn(cc.moveTo(1, this.playerStart), cc.callFunc(function(e) {
i.updatePlayerAni(4);
}.bind(this))), cc.callFunc(function(e) {
i.updatePlayerAni(6);
}.bind(this))));
} else {
this.btnCollect.interactable = !0;
var n = 0;
if (6 == t) {
this.curMapInfo.Width = 2;
n = 24;
} else if (5 == t) {
this.curMapInfo.Width = 3;
n = 21;
} else {
this.curMapInfo.Width = 4;
n = t * this.curMapInfo.Width + 1;
}
this.lightGrass(n);
}
},
OnUpdateOperateButtonStatus: function(e) {
this.OnUpdateBetChipStatus(e);
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
},
CheckCanBet: function() {
return this.lMeScore >= this.lChipNum;
},
OnFrameUpdateUserScore: function(e) {},
startGame: function() {
if (this.CheckCanBet()) {
window.mfConfig.PlayAudio("306/Audio/start");
this.btnStart.node.active = !1;
this.setAllStartTipBtnActive();
this.lblCurWin.node.active = !1;
this.btnCollect.node.active = !0;
this.btnCollect.interactable = !1;
this.updatePlayerAni(6);
this.player.setPosition(this.playerStart);
this.OnUpdateOperateButtonStatus(!1);
this.notClearMap || this.clearMap();
this.notClearMap = !1;
this.lightGrass(1);
} else this.OnOpenGameShop();
},
clearMap: function() {
for (var e = 0; e < this.curMapInfo.Height; e++) for (var t = 0; t < this.mineLandNode[e].children.length; t++) {
this.mineLandNode[e].children[t].getComponent("Mine2_landItem").clearMap();
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnBetSub" == i) this.OnUpdateBetChip(2); else if ("Dis_btnBetAdd" == i) this.OnUpdateBetChip(3); else if ("Dis_btnStart" == i) this.startGame(); else if ("Dis_btnCollect" == i) this.pGameEngineJs.SendPackageUserSettle(); else if ("BtnGameExit" == i) {
this.bExit = !0;
if (this.btnCollect.node.active && this.btnCollect.interactable) {
var n = {};
n.target = this.btnCollect.node;
this.OnButtonEvent(n);
} else this.pGameEngineJs.SendPacketStandUp();
} else "btnJackPot" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore) : "clickNode" == i ? this.clickNode.active = !1 : "BtnGameRule" == i && (this.helpNode.active = !this.helpNode.active);
},
OnOpenGameShop: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.jsJackPotNum.setString(e);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
updatePlayerAni: function(e) {
switch (e) {
case 1:
var t = PlaySkeletonAnimation(this.player, !1, "attack");
this.node.runAction(cc.sequence(cc.delayTime(.5), cc.callFunc(function() {
window.mfConfig.PlayAudio("306/Audio/knocking");
})));
t.setCompleteListener(function() {
PlaySkeletonAnimation(this.player, !0, "Standby");
}.bind(this));
break;

case 2:
var i = PlaySkeletonAnimation(this.player, !1, "fail");
window.mfConfig.PlayAudio("306/Audio/electric shock");
i.setCompleteListener(function() {}.bind(this));
break;

case 3:
PlaySkeletonAnimation(this.player, !1, "win").setCompleteListener(function() {
PlaySkeletonAnimation(this.player, !0, "Standby");
}.bind(this));
break;

case 4:
PlaySkeletonAnimation(this.player, !0, "walk").setCompleteListener(function() {}.bind(this));
break;

case 5:
PlaySkeletonAnimation(this.player, !1, "jump").setCompleteListener(function() {}.bind(this));
break;

case 6:
PlaySkeletonAnimation(this.player, !0, "Standby").setCompleteListener(function() {}.bind(this));
}
},
AddGameRecord: function(e) {
var t = {};
t.BetScore = this.lChipNum;
t.InsertTime = new Date().getTime();
t.NickName = PlayerManager.GetMeUserItem().GetNickNameUtf8();
t.WinScore = null != e ? e.WinScore : 0;
this.pGameEngineJs.gameRecordMe.length >= 30 && this.pGameEngineJs.gameRecordMe.shift();
this.pGameEngineJs.gameRecordMe.push(t);
this.jsGameRecord.OnUserRecordMe(!0);
}
});
cc._RF.pop();
}, {
XHJ_CMD_Game: "XHJ_CMD_Game"
} ],
Mine2_landItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1234diFOdC+7Xzem9oxvHy", "Mine2_landItem");
cc.Class({
extends: cc.Component,
properties: {
idLab: cc.Label,
grass: cc.Sprite,
grassAni: cc.Node,
grassFrames: [ cc.SpriteFrame ],
multiple: cc.Label,
mine: cc.Node,
flg: cc.Node,
boom: cc.Node,
btn: cc.Node,
startTipBtn: cc.Node,
multipleBg: cc.Sprite,
multipleBgFrame: [ cc.SpriteFrame ],
turnIcon: cc.Node,
turnBtn: cc.Button
},
start: function() {
this.OnTouchRegister();
},
OnTouchRegister: function() {
cc.director.getCollisionManager().enabled = !0;
this.btn.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
},
OnTouchEnded: function(e) {
this.checkBtnPolygonCollider(this.btn, e) && this.sendPackageUserDig && this.sendPackageUserDig(this.id);
},
OnTouchStartTipBtn: function(e) {
this.father.startTipBtn();
},
checkBtnPolygonCollider: function(e, t) {
var i = e.getComponent(cc.PolygonCollider).points, n = e.convertToNodeSpaceAR(t.getLocation());
return cc.Intersection.pointInPolygon(n, i);
},
setStartTipBtnActive: function(e) {
this.startTipBtn.active = e;
},
showTurnTable: function() {
this.father.showTurnTable(!1);
},
setData: function(e, t, i, n, a) {
this.id = e;
this.idLab.string = e;
this.setGrass(Rand(4));
this.multiple.string = (t / 100).toFixed(2) + "x";
this.sendPackageUserDig = i;
this.turnBtn.node.active = a;
var o = this.turnBtn.node.getPositionX(), s = 5 * parseInt(e / 4);
this.turnBtn.node.setPositionX(o + s);
this.turnBtn.interactable = n;
this.multipleBg.spriteFrame = this.multipleBgFrame[n ? 1 : 0];
this.turnIcon.active = n;
},
setGrass: function(e) {
this.managerActive(!0, !1, !1, !1, !1);
this.grass.spriteFrame = this.grassFrames[e];
},
showBoom: function() {
this.managerActive(!1, !1, !1, !1, !0);
},
showFlg: function(e) {
this.managerActive(!1, !1, !1, !0, !1, e);
},
showMine: function(e) {
this.managerActive(!1, !0, !1, !1, !1, e);
},
clearMap: function() {
this.managerActive(!1, !1, !1, !1, !1);
this.flg.getComponent(sp.Skeleton).skeletonData = null;
this.boom.getComponent(sp.Skeleton).skeletonData = null;
this.mine.getComponent(sp.Skeleton).skeletonData = null;
this.setGrass(Rand(4));
},
managerActive: function(e, t, i, n, a, o) {
this.callBack = o;
var s = null;
this.grass.node.active = !1;
this.mine.active = t;
this.grassAni.active = i;
this.flg.active = n;
this.boom.active = a;
if (n) {
s = this.flg.getComponent(sp.Skeleton);
cc.loader.loadRes("306/AGameSpine/jintiao", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "start";
s.timeScale = 1.5;
});
}
if (a) {
s = this.boom.getComponent(sp.Skeleton);
cc.loader.loadRes("306/AGameSpine/kulou", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "start";
});
}
if (t) {
s = this.mine.getComponent(sp.Skeleton);
cc.loader.loadRes("306/AGameSpine/kulou", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "keep";
});
}
s && s.setCompleteListener(function() {
this.callBack && this.callBack();
}.bind(this));
},
playLightGrass: function() {
this.managerActive(!1, !1, !0, !1, !1);
}
});
cc._RF.pop();
}, {} ],
Mine2_turntable: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a6f355tdMFDGKjhl/F1J3xb", "Mine2_turntable");
cc.Class({
extends: cc.Component,
properties: {
frameNode: cc.Node,
spinlight: cc.Node,
awardNode: cc.Node,
awardItem: cc.Node,
awardIconSA: cc.SpriteAtlas,
c_awardIconSA: cc.SpriteAtlas,
turn: cc.Node,
spinBtn: cc.Button,
closeBtn: cc.Node,
winningLight: cc.Node,
nodeEndLayer: cc.Node,
fireworksAni: cc.Node,
lblCurWin: cc.Label,
btnCollect: cc.Button,
btnCollectFrame: [ cc.SpriteFrame ],
pfGameEndScore: cc.Prefab,
varyScoreNode: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
if (0 == GetProject().cbCheckAccounts) {
this.btnCollect.pressedSprite = this.btnCollectFrame[0];
this.btnCollect.normalSprite = this.btnCollectFrame[1];
} else {
this.btnCollect.pressedSprite = this.btnCollectFrame[3];
this.btnCollect.normalSprite = this.btnCollectFrame[4];
}
},
start: function() {
this.curIndex = 0;
this.initAngle = 0;
this.playFrameAni();
},
playFrameAni: function() {
this.frameNode.runAction(cc.repeatForever(cc.sequence(cc.rotateBy(3, -90).easing(cc.easeInOut(3)), cc.rotateBy(3.5, 90).easing(cc.easeInOut(3.5)), cc.delayTime(2))));
this.spinlight.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function(e) {
e.opacity = 255;
e.scale = .78;
}), cc.spawn(cc.scaleTo(1, 1.2), cc.fadeTo(1, 0)), cc.delayTime(1))));
},
setData: function(e, t, i) {
this.bSpine = i;
if (this.bSpine) this.playFireworks(); else {
this.spinBtn.interactable = !1;
this.spinlight.active = !1;
this.btnCollect.node.active = !1;
}
this.awardItems = [];
this.subGame = e;
this.oldWinScore = 1e3 * t;
this.lblCurWin.string = t;
for (var n = 0; n < e.Ratios.length; n++) {
var a = cc.instantiate(this.awardItem);
a.active = !0;
if (0 == e.Ratios[n]) {
a.getChildByName("jpNode").active = !0;
a.getChildByName("num").active = !1;
} else {
a.getChildByName("jpNode").active = !1;
a.getChildByName("num").active = !0;
a.getChildByName("num").getComponent(cc.Label).string = e.Ratios[n] / 100 + "%";
}
0 == GetProject().cbCheckAccounts ? a.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.awardIconSA.getSpriteFrame("jinbi" + e.IconLV[n]) : a.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.c_awardIconSA.getSpriteFrame("jinbi" + e.IconLV[n]);
a.rotation = 40 * (n + 1);
this.awardItems.push(a);
this.awardNode.addChild(a);
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_spinBtn" == i) this.doTrun(); else if ("btnClose" == i || "Dis_btnCollect" == i) {
if (!this.bSpine) {
this.node.destroy();
return;
}
this.SendPackageUserSettle();
}
},
SendPackageUserSettle: function() {
ManagerHelp_SetSystemAlert("Receive award，give up win wheel?", function(e, t) {
if (t == YQ_SYS_OK) {
this.pGameEngineJs.SendPackageUserSettle();
this.node.destroy();
}
}.bind(this), !0);
},
doTrun: function() {
this.pGameEngineJs.SendPackageUserSubGameRun();
},
OnGameUserSubGameRun: function(e) {
this.SubGameRunObj = e;
this.setSpinBtn(!1);
this.playTrun();
},
playTrun: function() {
for (var e = 0, t = 0; t < this.subGame.Ratios.length; t++) if (this.SubGameRunObj.SubGameMultiple == this.subGame.Ratios[t]) {
e = t + 1;
break;
}
var i = -40 * (e - this.curIndex) + this.initAngle;
window.mfConfig.PlayAudio("306/Audio/trun");
this.turn.runAction(cc.sequence(cc.rotateBy(5, 2880 + i).easing(cc.easeSineInOut()), cc.callFunc(function(t) {
this.curIndex = e;
this.initAngle = 0;
this.playWinAni();
this.SubGameRunObj.WinJackpotScore > 0 ? this.playJackpotAnim() : this.cashOut(this.SubGameRunObj.WinScore);
}.bind(this))));
},
playWinAni: function() {
this.winningLight.active = !0;
},
setSpinBtn: function(e) {
this.spinBtn.interactable = e;
this.closeBtn.active = e;
this.spinlight.active = e;
this.btnCollect.interactable = e;
},
playJpNum: function() {
var e = this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle"), t = cc.sequence(cc.callFunc(function(e) {
e.getChildByName("circle").active = !0;
}.bind(this)), cc.spawn(cc.scaleTo(.4, 2), cc.rotateTo(.4, 0)), cc.delayTime(.5), cc.callFunc(function(e) {
this.randJpNum();
}.bind(this)), cc.delayTime(1.55), cc.callFunc(function(e) {
window.mfConfig.StopAudioClip(this.numSound);
}.bind(this)), cc.spawn(cc.scaleTo(.3, 1), cc.rotateTo(.3, 6)), cc.callFunc(function(e) {
e.getChildByName("circle").active = !1;
}.bind(this)), cc.delayTime(.5), cc.callFunc(function(e) {
this.playTrun();
}.bind(this)));
e.runAction(t);
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore);
t.scale = 1.5;
var i = t.getComponent("jsGameEndScore");
this.varyScoreNode.addChild(t);
i.InitGameScore(e, 1, function() {
t.removeFromParent();
});
},
cashOut: function(e) {
var t = e - this.oldWinScore;
window.mfConfig.PlayAudio("306/Audio/coin", !1, window.mfConfig.fMusic);
this.nodeEndLayer.active = !0;
var i = this.nodeEndLayer.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "feijinbi").setCompleteListener(function() {
this.OnShowGameScore(t);
this.nodeEndLayer.active = !1;
this.lblCurWin.string = OnScoreToString(e, 2);
this.pGameViewJs.lblCurWin.string = OnScoreToString(e, 2);
this.schedule(function(t) {
this.pGameViewJs.cashOut(e);
this.node.destroy();
}.bind(this), 1);
}.bind(this));
},
playFireworks: function() {
this.fireworksAni.active = !0;
var e = this.fireworksAni.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "animation").setCompleteListener(function() {
this.fireworksAni.active = !1;
}.bind(this));
},
randJpNum: function() {
this.playAudio("306/Audio/num");
var e = 0;
this.schedule(function(t) {
15 == e ? this.SubGameRunObj.WinJackpotRatio > 0 ? this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = this.SubGameRunObj.WinJackpotRatio / 100 + "%" : this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = "0%" : this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = Rand(30, 1) + "%";
e++;
}, .07, 15);
},
playJackpotAnim: function() {
var e = this;
this.pGameViewJs.jsGameEngine.OnFrameButtonJackPotDraw(e.node, e.SubGameRunObj.WinJackpotRatio / 100, parseInt(e.SubGameRunObj.WinJackpotScore / e.SubGameRunObj.WinJackpotRatio * 10), function() {
e.pGameViewJs.cashOut(e.SubGameRunObj.WinScore);
e.node.destroy();
}, e.SubGameRunObj.WinJackpotScore);
},
playAudio: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.AudioClip, function(n, a) {
if (n) cc.warn(e + " is not found"); else switch (e) {
case "306/Audio/num":
i.numSound = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

default:
cc.audioEngine.play(a, t, window.mfConfig.fSound);
}
});
}
});
cc._RF.pop();
}, {} ],
Mine_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "98089r8qUdEx7IwW0C4EiU7", "Mine_CMD_Game");
t.exports.SUB_S_USERDIG_RET = 100;
t.exports.SUB_S_USERSETTLE_RET = 101;
t.exports.SUB_S_SUBGAME_RUN_RET = 102;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_USERDIG_REQ = 1;
t.exports.SUB_C_USERSETTLE_REQ = 2;
t.exports.SUB_C_SUBGAME_RUN_REQ = 3;
cc._RF.pop();
}, {} ],
Mine_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18403hK/6lJsbD9exmKnxKV", "Mine_GameEngine");
var n = e("Mine_CMD_Game"), a = cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Mine_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.bSendDig = !1;
this.clickTime = 0;
},
OnFrameEngineStart: function() {},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(a);
this.pGameViewJs.updateJackpot(a.JackpotScore);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERDIG_RET:
return this.OnGameUserDig(t, i);

case n.SUB_S_USERSETTLE_RET:
return this.OnGameUserSettle(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);

case n.SUB_S_SUBGAME_RUN_RET:
return this.OnGameUserSubGameRun(t, i);
}
return !0;
},
OnEngineUpdate: function(e) {
this.clickTime <= 0 || (this.clickTime -= e);
},
SendPackageUserDig: function(e) {
if (!(this.bSendDig || this.clickTime > 0)) {
this.bSendDig = !0;
this.clickTime = 1;
var t = this.pGameViewJs.curMapInfo;
if (null != t) {
var i = {};
i.MapID = this.pGameViewJs.curMapId;
i.BarrierID = parseInt((e - 1) / t.Width) + 1;
i.BetScore = this.pGameViewJs.lChipNum;
i.BetMul = 1;
i.DigPos = e % t.Width == 0 ? t.Width : e % t.Width;
var a = window.net.netSerializer.packMsg("CMD_C_UserDigReq", i);
this.SendGameData(n.SUB_C_USERDIG_REQ, a, a.length);
} else cc.error("mapInfo is null");
}
},
OnGameUserDig: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserDigRet", e);
this.pGameViewJs.OnGameUserDig(i);
this.bSendDig = !1;
return !0;
},
SendPackageUserSettle: function() {
if (!(this.bSendDig || this.clickTime > 0)) {
this.bSendDig = !0;
this.clickTime = 1;
var e = window.net.netSerializer.packMsg("CMD_C_UserSettleReq", {});
this.SendGameData(n.SUB_C_USERSETTLE_REQ, e, e.length);
}
},
OnGameUserSettle: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserSettleRet", e);
this.pGameViewJs.OnGameUserSettle(i);
this.bSendDig = !1;
return !0;
},
SendPackageUserSubGameRun: function() {
var e = window.net.netSerializer.packMsg("CMD_C_SubGameRunReq", {});
this.SendGameData(n.SUB_C_SUBGAME_RUN_REQ, e, e.length);
},
OnGameUserSubGameRun: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_SubGameRunRet", e);
this.pGameViewJs.OnGameUserSubGameRun(i);
return !0;
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
}
});
t.exports.GameEngineJs = a;
cc._RF.pop();
}, {
Mine_CMD_Game: "Mine_CMD_Game"
} ],
Mine_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "15ab2708MtKA4JPLxONEeH0", "Mine_GameView");
e("XHJ_CMD_Game");
var n = [ cc.v2(-125, 424), cc.v2(200, 700), cc.v2(500, 900), cc.v2(650, 1e3), cc.v2(750, 1e3) ], a = [ cc.v2(-180, -100), cc.v2(-160, -90), cc.v2(-140, -80), cc.v2(-120, -70), cc.v2(-100, -60) ];
cc.Class({
extends: GameFrameView,
properties: {
menuLayer: cc.Node,
mapMenuLayer: cc.Node,
mapMenuNode: cc.Node,
mapMenuItem: cc.Node,
mapMenuItemFont: [ cc.Font ],
mapNode: cc.Node,
Mine_landItem: cc.Prefab,
nodeJetton: [ cc.Node ],
spriteJetton: [ cc.SpriteFrame ],
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
btnStart: cc.Button,
btnStartFrame: [ cc.SpriteFrame ],
btnCollect: cc.Button,
btnCollectFrame: [ cc.SpriteFrame ],
btnMap: cc.Button,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
nodeEndLayer: cc.Node,
pfJackPotNum: cc.Prefab,
btnJackPot: cc.Node,
pfTurnTable: cc.Prefab,
pfGameEndScore: cc.Prefab,
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
clickNode: cc.Node
},
OnButtonMenuEvent: function(e, t) {
var i = t;
1 == i ? this.menuLayer.active = !this.menuLayer.active : 2 == i && (this.mapMenuLayer.active ? this.showMapMenuLayer(!1) : this.showMapMenuLayer(!0));
},
showMapMenuLayer: function(e) {
var t = cc.sequence(cc.callFunc(function() {
this.mapMenuLayer.active = !0;
}.bind(this)), cc.scaleTo(.1, 1, 1)), i = cc.sequence(cc.scaleTo(.1, 0, 1), cc.callFunc(function() {
this.mapMenuLayer.active = !1;
}.bind(this)));
this.mapMenuNode.runAction(e ? t : i);
},
OnMapMenuItemEvent: function(e, t) {
if (this.oldMapArrIndex != e.target.MapArrIndex) {
var i = new Object();
i = e.target.tagMapInfo;
this.notClearMap = !0;
this.generateMap(i, e.target.MapArrIndex);
this.showMapMenuLayer(!1);
}
},
setMapMenu: function() {
for (var e = 0; e < this.tagMapInfo.length; e++) {
var t = cc.instantiate(this.mapMenuItem);
t.active = !0;
t.setPosition(0, 0);
t.getComponent(cc.Label).string = this.tagMapInfo[e].Width + "x" + this.tagMapInfo[e].Height;
t.getComponent(cc.Label).font = this.mapMenuItemFont[0];
t.tagMapInfo = this.tagMapInfo[e];
t.MapArrIndex = e;
this.mapMenuNode.addChild(t);
this.mapMenuItemArr.push(t);
}
this.generateMap(this.tagMapInfo[2], 2);
},
selectMapMenu: function(e) {
null != this.oldMapArrIndex && (this.mapMenuItemArr[this.oldMapArrIndex].getComponent(cc.Label).font = this.mapMenuItemFont[0]);
this.mapMenuItemArr[e].getComponent(cc.Label).font = this.mapMenuItemFont[1];
this.oldMapArrIndex = e;
},
OnFrameViewLoad: function() {
if (0 == GetProject().cbCheckAccounts) {
this.btnCollect.pressedSprite = this.btnCollectFrame[0];
this.btnCollect.normalSprite = this.btnCollectFrame[1];
this.btnCollect.disabledSprite = this.btnCollectFrame[2];
} else {
this.btnCollect.pressedSprite = this.btnCollectFrame[3];
this.btnCollect.normalSprite = this.btnCollectFrame[4];
this.btnCollect.disabledSprite = this.btnCollectFrame[5];
}
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.lBetChip = null;
this.lBetLimit = 0;
this.betClicked = !1;
this.hasCashOut = !1;
window.mfConfig.PlayAudio("300/Audio/BG", !0, window.mfConfig.fMusic);
this.lChipIndex = 0;
this.lCurrentJetton = 1e3;
this.lChipNum = 1e3;
this.curMapId = 1;
this.curDigPos = 1;
this.curBarrierID = 1;
this.curMapInfo = null;
this.notClearMap = !0;
this.mapMenuItemArr = [];
this.oldMapArrIndex = 0;
this.curJackpotScore = 0;
this.percent = 0;
var t = cc.instantiate(this.pfJackPotNum);
this.jsJackPotNum = t.getComponent("jsJackPotNum");
this.btnJackPot.addChild(t);
var i = this;
this.schedule(function() {
i.percent += 1;
if (i.percent <= 100) {
i.updateBar.progress = i.percent / 100;
i.updatePrecent.string = i.percent + "%";
} else if (i.percent >= 151) {
i.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnEventScene: function(e) {
this.lBetChip = e.BetChips;
this.lBetLimit = e.BetLimit;
this.tagMapInfo = e.Maps;
this.subGames = new Map();
for (var t = 0; t < e.SubGames.length; t++) this.subGames.set(e.SubGames[t].ID, e.SubGames[t]);
this.ShowBetChip();
this.OnUpdateOperateButtonStatus(!0);
this.setMapMenu();
},
generateMap: function(e, t) {
this.curMapId = e.MapID;
this.curMapInfo = e;
this.selectMapMenu(t);
this.mapNode.removeAllChildren();
for (var i = e.Width * e.Height, a = 0; a < e.Height; a++) for (var o = 0; o < e.Width; o++) {
var s = cc.instantiate(this.Mine_landItem), r = 100 * o + -100 * a, c = -58 * o + -58 * a;
s.setPosition(r, c);
var l = s.getComponent("Mine_landItem");
l.father = this;
l.setData(i, e.Multiples[e.Height - a - 1], this.sendPackageUserDig.bind(this), 0 == a, o == e.Width - 1);
this.mapNode.addChild(s, 1, i--);
}
this.mapNode.scale = .2 * (this.tagMapInfo.length - this.curMapId) + 1;
this.mapNode.setPosition(n[this.curMapId - 1]);
},
startTipBtn: function() {
this.btnStart.node.active && this.btnStart.node.runAction(cc.sequence(cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[0];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[1];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[0];
}.bind(this)), cc.delayTime(.1), cc.callFunc(function(e) {
e.getComponent(cc.Sprite).spriteFrame = this.btnStartFrame[1];
}.bind(this))));
},
sendPackageUserDig: function(e) {
this.btnCollect.interactable = !1;
this.curDigPos = e;
this.pGameEngineJs.SendPackageUserDig(e);
},
ShowBetChip: function() {
for (var e = 0; e < this.nodeJetton.length; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnUpdateBetChipStatus: function(e) {
if (e) {
for (var t = -1, i = 0; i < this.nodeJetton.length; i++) {
var n = this.lMeScore >= this.lBetChip[i];
this.nodeJetton[i].getComponent(cc.Button).interactable = n;
n && (t = i);
}
if (-1 == t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var a = 0; a < this.nodeJetton.length; a++) this.nodeJetton[a].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
} else if (this.lChipIndex > t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var o = 0; o < this.nodeJetton.length; o++) this.nodeJetton[o].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
}
} else for (var s = 0; s < this.nodeJetton.length; s++) this.nodeJetton[s].getComponent(cc.Button).interactable = !1;
},
ClickJettonBtn: function(e, t) {
var i = parseInt(t);
this.lCurrentJetton = this.lBetChip[i];
i == this.lChipIndex ? this.OnUpdateBetChip(0) : this.OnUpdateBetChip(1);
this.lChipIndex = i;
for (var n = 0; n < this.nodeJetton.length; n++) this.nodeJetton[n].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[i].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
},
OnUpdateBetChip: function(e) {
if (0 == e) {
if (this.lChipNum + this.lCurrentJetton > this.lMeScore) return;
if (this.lChipNum + this.lCurrentJetton > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += this.lCurrentJetton;
} else if (1 == e) {
if (this.lCurrentJetton > this.lMeScore) return;
this.lChipNum = this.lCurrentJetton;
} else if (2 == e) this.lChipNum > this.lBetChip[0] && (this.lChipNum -= 1e3); else if (3 == e) {
if (this.lChipNum + 1e3 > this.lMeScore) return;
if (this.lChipNum + 1e3 > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += 1e3;
}
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnGameUserSubGameRun: function(e) {
0 == e.RetCode && null != this.jsTurnTable && this.jsTurnTable.OnGameUserSubGameRun(e);
},
OnGameUserDig: function(e) {
if (0 == e.RetCode) {
this.bMoveNextMap = !1;
this.curBarrierID = e.BarrierID;
if (1 == this.curBarrierID) {
this.lMeScore -= this.lChipNum;
this.OnUpdateUserScore(-this.lChipNum);
}
for (var t = (e.BarrierID - 1) * this.curMapInfo.Width + 1, i = 0; i < this.curMapInfo.Width; i++) {
this.mapNode.getChildByTag(t + i).getComponent("Mine_landItem").setGrass(0);
}
var n = this.mapNode.getChildByTag(this.curDigPos).getComponent("Mine_landItem");
if (0 == e.WinMultiple) {
window.mfConfig.PlayAudio("300/Audio/boom");
n.showBoom();
this.OnUpdateOperateButtonStatus(!0);
this.btnStart.node.active = !0;
this.setAllStartTipBtnActive();
this.btnCollect.node.active = !1;
this.showRemainingMap(e.BarrierID);
} else {
window.mfConfig.PlayAudio("300/Audio/flag");
n.showFlg(function(t) {
this.moveNextMap(e.MinePos, e.BarrierID);
}.bind(this));
this.lblCurWin.node.active = !0;
this.lblCurWin.string = OnScoreToString(e.WinScore, 2);
var a = t + e.MinePos - 1;
this.mapNode.getChildByTag(a).getComponent("Mine_landItem").showMine(function(t) {
this.bMoveNextMap || this.moveNextMap(e.MinePos, e.BarrierID);
}.bind(this));
}
}
},
setAllStartTipBtnActive: function() {
for (var e = 0; e < this.mapNode.children.length; e++) {
this.mapNode.children[e].getComponent("Mine_landItem").setStartTipBtnActive(this.btnStart.node.active);
}
},
OnGameUserSettle: function(e) {
0 == e.RetCode && this.cashOut(e.WinScore);
},
cashOut: function(e) {
window.mfConfig.PlayAudio("300/Audio/coin", !1, window.mfConfig.fMusic);
this.nodeEndLayer.active = !0;
this.showRemainingMap(this.curBarrierID);
this.btnCollect.interactable = !1;
var t = this.nodeEndLayer.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "feijinbi").setCompleteListener(function() {
this.OnShowGameScore(e);
this.nodeEndLayer.active = !1;
this.lMeScore += e;
this.OnUpdateUserScore(e);
this.OnUpdateOperateButtonStatus(!0);
this.btnStart.node.active = !0;
this.setAllStartTipBtnActive();
this.btnCollect.node.active = !1;
this.bExit && this.pGameEngineJs.SendPacketStandUp();
}.bind(this));
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore), i = t.getComponent("jsGameEndScore");
this.nodeViewUser[0].addChild(t);
i.InitGameScore(e, 1, function() {
t.removeFromParent();
});
},
showRemainingMap: function(e) {
for (var t = e; t < this.curMapInfo.Height; t++) for (var i = Rand(this.curMapInfo.Width) + 1 + t * this.curMapInfo.Width, n = 1; n <= this.curMapInfo.Width; n++) {
var a = t * this.curMapInfo.Width + n;
if (this.mapNode.getChildByTag(a)) {
var o = this.mapNode.getChildByTag(a).getComponent("Mine_landItem");
o.setGrass(0);
i == a && o.showMine();
}
}
},
lightGrass: function(e) {
for (var t = 0; t < this.curMapInfo.Width; t++) this.mapNode.getChildByTag(e + t) && this.mapNode.getChildByTag(e + t).getComponent("Mine_landItem").playLightGrass();
},
showTurnTable: function(e) {
var t = cc.instantiate(this.pfTurnTable);
this.jsTurnTable = t.getComponent("Mine_turntable");
this.jsTurnTable.pGameEngineJs = this.pGameEngineJs;
this.jsTurnTable.pGameViewJs = this;
this.jsTurnTable.setData(this.subGames.get(this.curMapInfo.SubGameID), this.lblCurWin.string, e);
this.nodeRootCanvas.addChild(t);
},
moveNextMap: function(e, t) {
this.bMoveNextMap = !0;
if (this.curMapInfo.Height <= t) {
window.mfConfig.PlayAudio("300/Audio/win");
this.showTurnTable(!0);
this.btnCollect.interactable = !0;
} else {
var i = cc.sequence(cc.moveBy(.3, a[this.curMapId - 1]), cc.delayTime(.1), cc.callFunc(function(e) {
this.btnCollect.interactable = !0;
}.bind(this)));
this.mapNode.runAction(i);
var n = t * this.curMapInfo.Width + 1;
this.lightGrass(n);
}
},
OnUpdateOperateButtonStatus: function(e) {
this.OnUpdateBetChipStatus(e);
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
this.btnMap.interactable = e;
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
},
CheckCanBet: function() {
return this.lMeScore >= this.lChipNum;
},
OnFrameUpdateUserScore: function(e) {},
startGame: function() {
if (this.CheckCanBet()) {
window.mfConfig.PlayAudio("300/Audio/start");
this.btnStart.node.active = !1;
this.setAllStartTipBtnActive();
this.lblCurWin.node.active = !1;
this.btnCollect.node.active = !0;
this.btnCollect.interactable = !1;
this.OnUpdateOperateButtonStatus(!1);
this.notClearMap || this.clearMap();
this.notClearMap = !1;
this.lightGrass(1);
} else this.OnOpenGameShop();
},
clearMap: function() {
for (var e = 0; e < this.mapNode.children.length; e++) {
this.mapNode.children[e].getComponent("Mine_landItem").clearMap();
}
this.mapNode.setPosition(n[this.curMapId - 1]);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnBetSub" == i) this.OnUpdateBetChip(2); else if ("Dis_btnBetAdd" == i) this.OnUpdateBetChip(3); else if ("Dis_btnStart" == i) this.startGame(); else if ("Dis_btnCollect" == i) this.pGameEngineJs.SendPackageUserSettle(); else if ("BtnGameExit" == i) {
this.bExit = !0;
if (this.btnCollect.node.active && this.btnCollect.interactable) {
var n = {};
n.target = this.btnCollect.node;
this.OnButtonEvent(n);
} else this.pGameEngineJs.SendPacketStandUp();
} else "btnJackPot" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore) : "clickNode" == i && (this.clickNode.active = !1);
},
OnOpenGameShop: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.jsJackPotNum.setString(e);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
}
});
cc._RF.pop();
}, {
XHJ_CMD_Game: "XHJ_CMD_Game"
} ],
Mine_landItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "012524dAj1BBY09K5f6m3yw", "Mine_landItem");
cc.Class({
extends: cc.Component,
properties: {
idLab: cc.Label,
grass: cc.Sprite,
grassAni: cc.Node,
grassFrames: [ cc.SpriteFrame ],
multiple: cc.Label,
mine: cc.Node,
flg: cc.Node,
boom: cc.Node,
btn: cc.Node,
startTipBtn: cc.Node,
multipleBg: cc.Sprite,
multipleBgFrame: [ cc.SpriteFrame ],
turnIcon: cc.Node,
turnBtn: cc.Button
},
start: function() {
this.OnTouchRegister();
},
OnTouchRegister: function() {
cc.director.getCollisionManager().enabled = !0;
this.btn.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded, this);
},
OnTouchEnded: function(e) {
this.checkBtnPolygonCollider(this.btn, e) && this.sendPackageUserDig && this.sendPackageUserDig(this.id);
},
OnTouchStartTipBtn: function(e) {
this.father.startTipBtn();
},
checkBtnPolygonCollider: function(e, t) {
var i = e.getComponent(cc.PolygonCollider).points, n = e.convertToNodeSpaceAR(t.getLocation());
return cc.Intersection.pointInPolygon(n, i);
},
setStartTipBtnActive: function(e) {
this.startTipBtn.active = e;
},
showTurnTable: function() {
this.father.showTurnTable(!1);
},
setData: function(e, t, i, n, a) {
this.id = e;
this.idLab.string = e;
this.setGrass(Rand(4));
this.multiple.string = (t / 100).toFixed(2);
this.sendPackageUserDig = i;
this.turnBtn.node.active = a;
this.turnBtn.interactable = n;
this.multiple.node.color = n ? cc.color(114, 0, 0) : cc.color(255, 255, 255);
this.multipleBg.spriteFrame = this.multipleBgFrame[n ? 1 : 0];
this.turnIcon.active = n;
},
setGrass: function(e) {
this.managerActive(!0, !1, !1, !1, !1);
this.grass.spriteFrame = this.grassFrames[e];
},
showBoom: function() {
this.managerActive(!1, !1, !1, !1, !0);
},
showFlg: function(e) {
this.managerActive(!1, !1, !1, !0, !1, e);
},
showMine: function(e) {
this.managerActive(!1, !0, !1, !1, !1, e);
},
clearMap: function() {
this.managerActive(!1, !1, !1, !1, !1);
this.flg.getComponent(sp.Skeleton).skeletonData = null;
this.boom.getComponent(sp.Skeleton).skeletonData = null;
this.mine.getComponent(sp.Skeleton).skeletonData = null;
this.setGrass(Rand(4));
},
managerActive: function(e, t, i, n, a, o) {
this.callBack = o;
var s = null;
this.grass.node.active = e;
this.mine.active = t;
this.grassAni.active = i;
this.flg.active = n;
this.boom.active = a;
if (n) {
s = this.flg.getComponent(sp.Skeleton);
cc.loader.loadRes("300/AGameSpine/flag", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "animation";
s.timeScale = 1.5;
});
}
if (a) {
s = this.boom.getComponent(sp.Skeleton);
cc.loader.loadRes("300/AGameSpine/burst", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "animation";
});
}
if (t) {
s = this.mine.getComponent(sp.Skeleton);
cc.loader.loadRes("300/AGameSpine/mine", sp.SkeletonData, function(e, t) {
s.skeletonData = t;
s.animation = "animation";
});
}
s && s.setCompleteListener(function() {
this.callBack && this.callBack();
}.bind(this));
},
playLightGrass: function() {
this.managerActive(!1, !1, !0, !1, !1);
this.grassAni.getComponent(cc.Animation).play("grassLight");
}
});
cc._RF.pop();
}, {} ],
Mine_turntable: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ae01bJf8yxPS6TZqphtptp5", "Mine_turntable");
cc.Class({
extends: cc.Component,
properties: {
frameNode: cc.Node,
spinlight: cc.Node,
awardNode: cc.Node,
awardItem: cc.Node,
awardIconSA: cc.SpriteAtlas,
c_awardIconSA: cc.SpriteAtlas,
turn: cc.Node,
spinBtn: cc.Button,
closeBtn: cc.Node,
winningLight: cc.Node,
nodeEndLayer: cc.Node,
fireworksAni: cc.Node,
lblCurWin: cc.Label,
btnCollect: cc.Button,
btnCollectFrame: [ cc.SpriteFrame ],
pfGameEndScore: cc.Prefab,
varyScoreNode: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
if (0 == GetProject().cbCheckAccounts) {
this.btnCollect.pressedSprite = this.btnCollectFrame[0];
this.btnCollect.normalSprite = this.btnCollectFrame[1];
} else {
this.btnCollect.pressedSprite = this.btnCollectFrame[3];
this.btnCollect.normalSprite = this.btnCollectFrame[4];
}
},
start: function() {
this.curIndex = 0;
this.initAngle = 0;
this.playFrameAni();
},
playFrameAni: function() {
this.frameNode.runAction(cc.repeatForever(cc.sequence(cc.rotateBy(3, -90).easing(cc.easeInOut(3)), cc.rotateBy(3.5, 90).easing(cc.easeInOut(3.5)), cc.delayTime(2))));
this.spinlight.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function(e) {
e.opacity = 255;
e.scale = .78;
}), cc.spawn(cc.scaleTo(1, 1.2), cc.fadeTo(1, 0)), cc.delayTime(1))));
},
setData: function(e, t, i) {
this.bSpine = i;
if (this.bSpine) this.playFireworks(); else {
this.spinBtn.interactable = !1;
this.spinlight.active = !1;
this.btnCollect.node.active = !1;
}
this.awardItems = [];
this.subGame = e;
this.oldWinScore = 1e3 * t;
this.lblCurWin.string = t;
for (var n = 0; n < e.Ratios.length; n++) {
var a = cc.instantiate(this.awardItem);
a.active = !0;
if (0 == e.Ratios[n]) {
a.getChildByName("jpNode").active = !0;
a.getChildByName("num").active = !1;
} else {
a.getChildByName("jpNode").active = !1;
a.getChildByName("num").active = !0;
a.getChildByName("num").getComponent(cc.Label).string = e.Ratios[n] / 100 + "%";
}
0 == GetProject().cbCheckAccounts ? a.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.awardIconSA.getSpriteFrame("jinbi" + e.IconLV[n]) : a.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.c_awardIconSA.getSpriteFrame("jinbi" + e.IconLV[n]);
a.rotation = 40 * (n + 1);
this.awardItems.push(a);
this.awardNode.addChild(a);
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_spinBtn" == i) this.doTrun(); else if ("btnClose" == i || "Dis_btnCollect" == i) {
if (!this.bSpine) {
this.node.destroy();
return;
}
this.SendPackageUserSettle();
}
},
SendPackageUserSettle: function() {
ManagerHelp_SetSystemAlert("Receive award，give up win wheel?", function(e, t) {
if (t == YQ_SYS_OK) {
this.pGameEngineJs.SendPackageUserSettle();
this.node.destroy();
}
}.bind(this), !0);
},
doTrun: function() {
this.pGameEngineJs.SendPackageUserSubGameRun();
},
OnGameUserSubGameRun: function(e) {
this.SubGameRunObj = e;
this.setSpinBtn(!1);
this.playTrun();
},
playTrun: function() {
for (var e = 0, t = 0; t < this.subGame.Ratios.length; t++) if (this.SubGameRunObj.SubGameMultiple == this.subGame.Ratios[t]) {
e = t + 1;
break;
}
var i = -40 * (e - this.curIndex) + this.initAngle;
window.mfConfig.PlayAudio("300/Audio/trun");
this.turn.runAction(cc.sequence(cc.rotateBy(5, 2880 + i).easing(cc.easeSineInOut()), cc.callFunc(function(t) {
this.curIndex = e;
this.initAngle = 0;
this.playWinAni();
this.SubGameRunObj.WinJackpotScore > 0 ? this.playJackpotAnim() : this.cashOut(this.SubGameRunObj.WinScore);
}.bind(this))));
},
playWinAni: function() {
this.winningLight.active = !0;
},
setSpinBtn: function(e) {
this.spinBtn.interactable = e;
this.closeBtn.active = e;
this.spinlight.active = e;
this.btnCollect.interactable = e;
},
playJpNum: function() {
var e = this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle"), t = cc.sequence(cc.callFunc(function(e) {
e.getChildByName("circle").active = !0;
}.bind(this)), cc.spawn(cc.scaleTo(.4, 2), cc.rotateTo(.4, 0)), cc.delayTime(.5), cc.callFunc(function(e) {
this.randJpNum();
}.bind(this)), cc.delayTime(1.55), cc.callFunc(function(e) {
window.mfConfig.StopAudioClip(this.numSound);
}.bind(this)), cc.spawn(cc.scaleTo(.3, 1), cc.rotateTo(.3, 6)), cc.callFunc(function(e) {
e.getChildByName("circle").active = !1;
}.bind(this)), cc.delayTime(.5), cc.callFunc(function(e) {
this.playTrun();
}.bind(this)));
e.runAction(t);
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore);
t.scale = 1.5;
var i = t.getComponent("jsGameEndScore");
this.varyScoreNode.addChild(t);
i.InitGameScore(e, 1, function() {
t.removeFromParent();
});
},
cashOut: function(e) {
var t = e - this.oldWinScore;
window.mfConfig.PlayAudio("300/Audio/coin", !1, window.mfConfig.fMusic);
this.nodeEndLayer.active = !0;
var i = this.nodeEndLayer.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "feijinbi").setCompleteListener(function() {
this.OnShowGameScore(t);
this.nodeEndLayer.active = !1;
this.lblCurWin.string = OnScoreToString(e, 2);
this.pGameViewJs.lblCurWin.string = OnScoreToString(e, 2);
this.schedule(function(t) {
this.pGameViewJs.cashOut(e);
this.node.destroy();
}.bind(this), 1);
}.bind(this));
},
playFireworks: function() {
this.fireworksAni.active = !0;
var e = this.fireworksAni.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "animation").setCompleteListener(function() {
this.fireworksAni.active = !1;
}.bind(this));
},
randJpNum: function() {
this.playAudio("300/Audio/num");
var e = 0;
this.schedule(function(t) {
15 == e ? this.SubGameRunObj.WinJackpotRatio > 0 ? this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = this.SubGameRunObj.WinJackpotRatio / 100 + "%" : this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = "0%" : this.awardItems[this.subGame.Ratios.length - 1].getChildByName("jpNode").getChildByName("circle").getChildByName("jpNum").getComponent(cc.Label).string = Rand(30, 1) + "%";
e++;
}, .07, 15);
},
playJackpotAnim: function() {
var e = this;
this.pGameViewJs.jsGameEngine.OnFrameButtonJackPotDraw(e.node, e.SubGameRunObj.WinJackpotRatio / 100, parseInt(e.SubGameRunObj.WinJackpotScore / e.SubGameRunObj.WinJackpotRatio * 10), function() {
e.pGameViewJs.cashOut(e.SubGameRunObj.WinScore);
e.node.destroy();
}, e.SubGameRunObj.WinJackpotScore);
},
playAudio: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.AudioClip, function(n, a) {
if (n) cc.warn(e + " is not found"); else switch (e) {
case "300/Audio/num":
i.numSound = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

default:
cc.audioEngine.play(a, t, window.mfConfig.fSound);
}
});
}
});
cc._RF.pop();
}, {} ],
MissionLogon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aa438+y5aBDkIVOrGyuC7vT", "MissionLogon");
var n = e("../HotUpdate/CUpdateManager").default;
e("GameDelegate");
window.EventEnum = {};
EventEnum.NoneEvent = 0;
EventEnum.LogonEvent = 1;
EventEnum.ListFinish = 2;
window.MissionLogon = cc.Class({
extends: window.CSocketDelegate,
statics: {
instance: null
},
ctor: function() {
MissionLogon.instance = this;
this.pReObject = null;
this.wLockServerID = 0;
this.nControlIndex = -1;
this.nControlSubIndex = -1;
this.jsEventDelegate = null;
this.jsLobbyRecord = null;
this.jsBankInterface = null;
this.jsUserInterface = null;
this.jsInformationface = null;
this.strUserSign = "";
this.wEventID = 0;
this.bYouKeLogon = !1;
this.httpxhr_array = [];
this.fLogonOutTime = 5e3;
this.tcp_logon_outtime_xhr = null;
},
SetUserInterface: function(e) {
this.jsUserInterface = e;
},
SetBankInterface: function(e) {
this.jsBankInterface = e;
},
setInformationface: function(e) {
this.jsInformationface = e;
},
SetEventDelegate: function(e) {
this.jsEventDelegate = e;
},
PerformSendData: function(e, t, i, n, a) {
e == MDM_MB_LOGON && t == SUB_MB_LOGON_ACCOUNTS && (this.pReObject = GameBufferData(e, t, i, n, "pObject"));
if (this.GetEventCheck()) {
this.OnRetainEvent();
this.OnMissionSendData(e, t, i, n, a);
} else {
var o = GetProject().GetColorNodeSef(!1);
this.OnMissionInitSocket(o.color, o.alpha, "MissionLogon", this);
this.OnMissionSendData(e, t, i, n, a);
}
if (t == SUB_MB_LOGON_ACCOUNTS || t == SUB_MB_LOGON_GAMEID) {
if (1 == window.logConsole.wirteserverlog) {
o = GetProject().GetColorNodeSef(!1);
ManagerHelp_SetSystemAlert(o.color);
WriteLogsForHttp("devicelog", o.color);
}
this.tcp_logon_outtime_xhr = {};
this.OnHttpRequestStart(this.tcp_logon_outtime_xhr, this.OnMissionOutTime.bind(this), this.fLogonOutTime);
}
},
PerformReConnect: function() {
var e = GetProject().GetColorNodeSef(!0);
this.OnMissionInitSocket(e.color, e.alpha, "MissionLogon", this);
this.OnMissionSendData(this.pReObject.wMainCmdID, this.pReObject.wSubCmdID, this.pReObject.pData, this.pReObject.wDataSize);
},
PerformClosed: function() {
this.OnDonedEvent();
return !0;
},
OnMissionClosed: function(e, t) {
this._super(e, t);
},
OnMissionOpen: function(e) {
this.pReObject && (this.pReObject = null);
if (this.tcp_logon_outtime_xhr) {
this.OnHttpRequestDone(this.tcp_logon_outtime_xhr);
this.tcp_logon_outtime_xhr = null;
}
},
OnMissionRelease: function(e) {
if (this.tcp_logon_outtime_xhr) {
this.OnHttpRequestDone(this.tcp_logon_outtime_xhr);
this.tcp_logon_outtime_xhr = null;
}
if (this.jsEventDelegate && this.jsEventDelegate.OnMissionRelease) {
this.jsEventDelegate.OnMissionRelease(e);
return !0;
}
if (this.pReObject && e != window.GST_NORMAL) if (GetProject().CanUseColorNode(!0)) this.PerformReConnect(); else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Network timeout, whether to retry", function() {
GetProject().OnInitHttpSwitchAgain();
});
} else if (e == window.GST_ERROR) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("Network error. Please check network and try again");
}
},
OnMissionOutTime: function(e, t, i) {
this.OnMissionClosed(window.GST_OUTTIME, null);
},
OnHttpRequestStart: function(e, t, i) {
e.fHelpOutTime = i;
e.pHelpcallback = t;
e.bOutTimeLogic = !1;
this.httpxhr_array.push(e);
this._callback = this.OnHttpRequestOutTime.bind(this, e);
this.scheduleOnce(this._callback, i / 1e3);
},
OnHttpRequestDone: function(e) {
for (var t = 0; t < this.httpxhr_array.length; t++) {
var i = this.httpxhr_array[t];
if (i == e) {
i.bOutTimeLogic = !0;
i.pHelpcallback = null;
break;
}
}
},
OnHttpRequestOutTime: function(e, t) {
for (var i = null, n = 0; n < this.httpxhr_array.length; n++) {
var a = this.httpxhr_array[n];
if (a == e) {
i = a;
this.httpxhr_array.splice(n, 1);
break;
}
}
if (null != i && !i.bOutTimeLogic && i.pHelpcallback) {
i.pHelpcallback(!1, null, e);
i.bOutTimeLogic = !0;
}
},
OnSocketRead: function(e, t, i, n) {
this.jsEventDelegate && this.jsEventDelegate.OnReadEventBegan(e, t, i, n);
this.jsEventDelegate && this.jsEventDelegate.OnMissionRead(e, t, i, n);
this.OnMissionRead(e, t, i, n);
this.jsEventDelegate && this.jsEventDelegate.OnReadEventEnded(e, t, i, n);
},
OnMissionRead: function(e, t, i, n) {
null != window.logConsole.MissionLogonOnMissionRead && cc.log("MissionLogon.Read:wMainCmdID:", e, ",wSubCmdID:", t, ",wDataSize:", n);
if (e == MDM_MB_LOGON) switch (t) {
case SUB_MB_LOGON_SUCCESS:
return this.OnSocketSubLogonSuccess(i, n);

case SUB_MB_LOGON_FAILURE:
return this.OnSocketSubLogonFailure(i, n);

case SUB_MB_UPDATE_NOTIFY:
return this.OnSocketSubUpdateNotify(i, n);

case SUB_MB_RESOURCE_NEED_UPDATE:
return this.OnSocketSubResourceNeedUpdate(i, n);

case SUB_GP_LOGIN_AWARD:
return this.OnSocketSubLogonAward(i, n);

case SUB_MB_LOWTTERY_LIST:
return this.OnSocketSubYuanbaoAward(i, n);

case SUB_MB_LOGON_RESULT:
return this.OnSocketSubLogonResult(i);
}
if (e == MDM_MB_SERVER_LIST) switch (t) {
case SUB_MB_LIST_KIND:
return this.OnSocketSubListKind(i, n);

case SUB_MB_LIST_SERVER:
return this.OnSocketSubListServer(i, n);

case SUB_MB_LIST_CONFIG:
return this.OnSocketSubListConfig(i, n);

case SUB_MB_LIST_TYPE:
return this.OnSocketSubListType(i, n);

case SUB_GP_LIST_AREA:
return this.OnSocketSubListArea(i, n);

case SUB_GP_LIST_FIELD:
return this.OnSocketSubListField(i, n);

case SUB_MB_LIST_FINISH:
return this.OnSocketSubListFinish(i, n);

case SUB_MB_ROOM_INFO:
return this.OnSocketSubRoomInfo(i);
} else if (e == MDM_GP_USER_SERVICE) switch (t) {
case SUB_GP_QUERY_MEMBER_INFO:
return this.OnSocketSubGPVipInfoResult(i, n);

case SUB_GP_SEND_SMS_RET:
return this.OnSocketSubSmsResult(i, n);

case SUB_GP_USER_INSURE_INFO:
return this.OnSocketSubGPInsureInfo(i, n);

case SUB_GP_USER_INSURE_SUCCESS:
return this.OnSocketSubGPBankSucceed(i, n);

case SUB_GP_USER_INSURE_FAILURE:
return this.OnSocketSubGPBankFailure(i, n);

case SUB_GP_EXCHANGE:
return this.OnSocketExChangeResult(i, n);

case SUB_GP_BINDRESULT:
return this.OnSocketBindResult(i, n);

case SUB_GP_REGISTERSAGENT:
return this.OnSocketRegistersExtensionRet(i, n);

case SUB_GP_QUERY_EXTENSION:
return this.OnSocketQueryExtensionRet(i, n);

case SUB_GP_QUERY_EXTERNFACE_URL:
return this.OnQueryExternFaceURL(i, n);

case SUB_GP_UPDATE_EXTERNFACE_URL:
return this.OnUpdateExternFaceURL(i, n);

case SUB_GP_GET_RANKINGS:
return this.OnSocketSubRankList(i, n);

case SUB_GP_QUERY_BIND:
return this.OnSocketSubBindInfo(i, n);

case SUB_GP_QUERY_LOCK_INFO:
return this.OnSocketSubQueryLockInfo(i, n);

case SUB_QUERY_PRIVATE_TABLE_RECORD:
return this.OnSocketPrivateTabelRecord(i, n);

case SUB_QUERY_PRIVATE_TABLE_GAME_RECORD:
return this.OnSocketPrivateTabelGameRecord(i, n);

case SUB_GP_QUERY_PRIVATE_TABLE_INFO:
return this.OnSocketPrivateTableInfo(i, n);

case SUB_GP_QUERY_DRAW_REPLAY_DATA:
return this.OnPrivateTableGameReplayDataconcat(i, n);

case SUB_GP_QUERY_DRAW_REPLAY_DATA_END:
return this.OnSocketPrivateGameReplayData(i, n);

case SUB_QUERY_PRIVATE_TABLE_RECORD_BY_GROUP:
return this.OnSocketGroupPrivateTabelRecord(i, n);

case SUB_GP_OPERATE_SUCCESS:
return this.OnSocketOperResult(i, n, SUB_GP_OPERATE_SUCCESS);

case SUB_GP_OPERATE_FAILURE:
return this.OnSocketOperResult(i, n, SUB_GP_OPERATE_FAILURE);

case SUB_GP_BINDPHONENUMBER_RESULT:
return this.OnSocketBindMobilePhoneResult(i, n, SUB_GP_OPERATE_FAILURE);

case SUB_GP_RECEIVE_RED_ENVELOPE:
return this.OnSocketSubReceiveBenefits(i, n);

case SUB_GP_LUCKGUY_INFO:
return this.OnSocketSubReceiveLuckInfo(i, n);

case SUB_GP_LUCKGUY_AWARD:
return this.OnSocketSubReceiveLuckWard(i, n);

case SUB_GP_LUCKGUY_RECORD:
return this.OnSocketSubReceiveLuckRecord(i, n);
} else if (e == MDM_SIGN) switch (t) {
case SUB_GET_SIGNCONFIG:
return OnSocketSingConfig(i, n);

case SUB_GET_MESIGNINFO:
return OnSocketMeSingInfo(i, n);

case SUB_GET_SIGNAWARDBOXCON:
return OnSocketSingAwardBox(i, n);

case SUB_GETSIGNBOX_REQUEST:
return OnSocketSingBoxRequest(i, n);
}
},
OnMissionGameEngine: function(e, t, i) {},
OnMissionGameFrame: function(e, t, i) {},
OnMissionUpdate: function(e) {},
OnSocketSubLogonSuccess: function(e, t) {
this.unschedule(this._callback);
this._callback = null;
var i = new CMD_MB_LogonSuccess();
i.init(e);
var n = i.GetDataSize();
PlayerManager.DeleteUserItemByAll(!0);
MSG_ClearMsgAry();
var a = PlayerManager.SetUserItemByUserID(i.dwUserID);
PlayerManager.SetMeUserItem(a);
a.pGlobalData.cbFaceID = i.cbFaceID;
a.pGlobalData.cbGender = i.cbFaceID % 2 == 0 ? GENDER_MANKIND : GENDER_FEMALE;
a.pGlobalData.cbFrameID = i.cbFrameID;
a.pGlobalData.dwUserID = i.dwUserID;
a.pGlobalData.dwGameID = i.dwGameID;
a.pGlobalData.dwExperience = i.dwExperience;
a.pGlobalData.szNickName = i.szNickName;
a.pGlobalData.strUtf8NickName = ToUtf8(i.szNickName);
a.pGlobalData.szAccounts = i.szAccounts;
a.pGlobalData.lUserScore = i.lUserScore;
a.pGlobalData.lUserInsure = i.lUserInsure;
a.pGlobalData.cbMemberOrder = i.cbMemberOrder;
a.pGlobalData.dwMemberExp = i.dwMemberExp;
a.pGlobalData.dwSpreadId = i.dwSpreadId;
a.pGlobalData.dwRegChannelID = i.dwRegChannelID;
var o = ToUtf8(i.szAccounts).slice(0, 12);
if (GetProject().GetAccountType() == PLATFORMID_VISITOR) {
"" == o && (o = i.dwGameID);
ACF_OnAddAccount_VISITOR(o);
}
MF_SaveOnMainChannelID("nNormalAccount", o);
ACF_SaveAccount();
ACF_SetAccountType(1);
EMA_OnLoadEamil();
Dispatcher.Excute(DSP_LOGIN_SUCCESS);
var s = 255 & i.dwIp, r = i.dwIp >> 8 & 255, c = i.dwIp >> 16 & 255, l = i.dwIp >> 24 & 255;
a.pGlobalData.ip = s + "." + r + "." + c + "." + l;
for (var h = n, u = sizeof(tagDataDescribe), d = ""; h < t; ) {
var m = RecvPacketHelper_GetPacket(e, t, h);
h += u + m.wDataSize;
if (m.wDataDescribe == DTP_NULL) break;
switch (m.wDataDescribe) {
case DTP_GP_MEMBER_INFO:
if (YQYAssertAlertStructSizeByEqual(DTP_GP_MemberInfo, m.wDataSize, "DTP_GP_MEMBER_INFO")) return !1;
var f = new DTP_GP_MemberInfo();
f.init(m.cbDataBuffer);
a.pGlobalData.cbMemberOrder = f.cbMemberOrder;
a.pGlobalData.MemberOverDate = f.MemberOverDate;
a.pGlobalData.dwMemberExp = f.dwMemberExp;
a.pGlobalData.dwMemberStatus = f.dwMemberStatus;
break;

case DTP_GP_UNDER_WRITE:
var p = Value_GetArrayData(m.cbDataBuffer, "szUnderWrite", LEN_UNDER_WRITE, 0);
SetArray(a.pGlobalData.szUnderWrite, p);
break;

case DTP_GP_UserGUID:
d = Value_GetArrayData(m.cbDataBuffer, "szUserGUID", LEN_GUID, 0);
a.pGlobalData.szUserGUID = [];
memset(a.pGlobalData.szUserGUID, 0, LEN_GUID);
SetArray(a.pGlobalData.szUserGUID, d);
break;

case DTP_GP_MobilePhone:
var _ = Value_GetArrayData(m.cbDataBuffer, "szMobilePhone", LEN_GUID, 0);
if (0 != _.length) {
GetProject().SetRegister(!0);
GetProject().szRegisterPhone = ToUtf8(_);
}
break;

case DTP_GP_LOCK_SERVERID:
this.wLockServerID = Value_GetWord(m.cbDataBuffer);
break;

case DTP_GP_GAME_AGENT:
var S = Value_GetByte(m.cbDataBuffer);
a.pGlobalData.cbExtensionID = S;
break;

case DTP_GP_BENEFITS:
var g = Value_GetInt(m.cbDataBuffer);
GetProject().nRemainingBenfits = g;
break;

case DTP_GP_EXCHANGE_STATUS:
var C = Value_GetByte(m.cbDataBuffer);
GetProject().cbExchangeStatus = C;
break;

case DTP_GP_FIRST_TOPUP:
var w = Value_GetByte(m.cbDataBuffer);
GetProject().cbFirstTopUp = w;
break;

case DTP_GP_SUPER_PARTNER:
Value_GetByte(m.cbDataBuffer);
break;

case DTP_GP_CHECK_ACCOUNTS:
var b = Value_GetByte(m.cbDataBuffer);
GetProject().cbCheckAccounts = b;
}
}
var A = "" + a.pGlobalData.dwUserID + ToUtf8(d) + GetProject().GetMachineIdWithString(), v = "" + a.pGlobalData.dwUserID + ToUtf8(d), G = hex_md5(A).toUpperCase(), I = hex_md5(v).toUpperCase();
a.pGlobalData.szUserSign = [];
memset(a.pGlobalData.szUserSign, 0, LEN_PASSWORD);
SetArrayFormUtf8(a.pGlobalData.szUserSign, G);
USI_OnSavaInfo(G, I, a.pGlobalData.dwUserID, ToUtf8(d));
GetProject().bMissionService && GetMissionService_Create();
ServerData_ClearAllMap();
this.wEventID = EventEnum.LogonEvent;
window.mfConfig.onEvent("af_login", JSON.stringify({
af_user_id: a.GetUserID()
}));
if (GetProject().isRegister) {
window.mfConfig.onEvent("af_complete_registration", JSON.stringify({
af_param_1: "success"
}));
GetProject().isRegister = !1;
OnPostSmsMessageId();
}
},
OnSocketSubLogonFailure: function(e, t) {
var i = new CMD_MB_LogonFailure();
i.init(e);
ACF_ReadAccount();
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert(ToUtf8(i.szDescribeString));
window.LOGONFAILE_WEIHU == i.nResultCode && window.OnPushWeiHuMsg();
GetProject().isRegister = !1;
this.PerformClosed();
},
OnSocketBindMobilePhoneResult: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var i = new CMD_GP_BindPhoneNumber_result();
i.init(e);
switch (i.dwResultCode) {
case DB_ERROR:
ManagerHelp_SetSystemAlert("Binding failed. Please try again");
break;

case DB_SUCCESS:
this.jsInformationface.OnBindSuccessCallBack();
break;

case DB_USER_REGISTERMOBILE_ERROR:
ManagerHelp_SetSystemAlert("You have already bound your mobile phone number");
break;

case DB_EXISTS_REGISTER_MOBILE_ERROR:
ManagerHelp_SetSystemAlert("The phone number has been bound, please try again");
break;

case DB_VERIFYCODE_ERROR:
ManagerHelp_SetSystemAlert("The verification code is wrong. Please try again");
break;

default:
ManagerHelp_SetSystemAlert("Binding failed：" + i.dwResultCode, ",Please contact customer service");
}
this.PerformClosed();
},
OnSocketOperResult: function(e, t, i) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var n = new CMD_GP_OperateSuccess();
n.init(e);
var a = n.wSourceMainId, o = n.wSourceSubId;
if (i == SUB_GP_OPERATE_SUCCESS) if (Dispatcher.HasListener(DSP_OPERATE_SUCCESS)) {
var s = ToUtf8(n.szDescribeString);
Dispatcher.Excute(DSP_OPERATE_SUCCESS, a, o, s);
} else if (this.jsInformationface && this.jsInformationface.OnOperSuccess) this.jsInformationface.OnOperSuccess(a, o); else {
var r = ToUtf8(n.szDescribeString);
r && "" != r && ManagerHelp_SetSystemLabel(ToUtf8(n.szDescribeString));
} else if (i == SUB_GP_OPERATE_FAILURE) if (Dispatcher.HasListener(SUB_GP_OPERATE_FAILURE)) {
var c = ToUtf8(n.szDescribeString);
Dispatcher.Excute(DSP_OPERATE_FAIL, a, o, c);
} else this.jsInformationface && this.jsInformationface.OnOperFailure ? this.jsInformationface.OnOperFailure(a, o, ToUtf8(n.szDescribeString)) : ManagerHelp_SetSystemAlert(ToUtf8(n.szDescribeString));
this.PerformClosed();
},
OnSocketSubUpdateNotify: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var i = new CMD_MB_UpdateNotify();
i.init(e);
GetProject().szNewColor = ToUtf8(i.szDownLoad);
n.getInstance().setUpdateUrl(GetProject().szNewColor);
if (i.cbUpdateType == window.UPDATE_PACKAGE) ManagerHelp_SetSystemAlert("The current version is too low. You need to download the latest version", function(e, t) {
if (t == YQ_SYS_OK) {
var i = GetProject().szDownloadUrl;
cc.sys.openURL(i);
}
}); else {
if (!window.bOpenGameSwitch) {
window.mfConfig.bAutoLogon = !1;
GetProject().OnInitHttpSwitchAgain();
return;
}
window.mfConfig.bAlreadyCheckVersion = !1;
n.getInstance().addUpdateTask(0);
Dispatcher.Excute(DSP_LOGIN_UPDATE);
}
this.PerformClosed();
},
OnSocketSubResourceNeedUpdate: function(e, t) {},
OnSocketSubLogonAward: function(e, t) {},
OnSocketSubYuanbaoAward: function(e, t) {},
OnSocketSubLogonResult: function(e) {
this.unschedule(this._callback);
this._callback = null;
var t = window.netlobby.netSerializer.unpackMsg("CMD_S_LogonResult", e);
if (0 == t.nRetCode) {
PlayerManager.DeleteUserItemByAll(!0);
MSG_ClearMsgAry();
var i = PlayerManager.SetUserItemByUserID(t.dwUserID);
PlayerManager.SetMeUserItem(i);
i.pGlobalData.cbFaceID = t.cbFaceID;
i.pGlobalData.cbGender = t.cbFaceID % 2 == 0 ? GENDER_MANKIND : GENDER_FEMALE;
i.pGlobalData.cbFrameID = t.cbFrameID;
i.pGlobalData.dwUserID = t.dwUserID;
i.pGlobalData.dwGameID = t.dwGameID;
i.pGlobalData.dwExperience = t.dwExperience;
CopyArrayValue(i.pGlobalData.szNickName, ToUnicode(t.szNickName));
i.pGlobalData.strUtf8NickName = t.szNickName;
i.pGlobalData.szAccounts = ToUnicode(t.szAccounts);
i.pGlobalData.lUserScore = t.lUserScore;
i.pGlobalData.cbMemberOrder = t.cbMemberOrder;
i.pGlobalData.dwMemberExp = t.dwMemberExp;
i.pGlobalData.dwSpreadId = t.dwSpreadId;
i.pGlobalData.dwRegChannelID = t.dwRegChannelID;
var n = t.szAccounts.slice(0, 12);
if (GetProject().GetAccountType() == PLATFORMID_VISITOR) {
"" == n && (n = t.dwGameID);
ACF_OnAddAccount_VISITOR(n);
}
MF_SaveOnMainChannelID("nNormalAccount", n);
ACF_SaveAccount();
ACF_SetAccountType(0);
EMA_OnLoadEamil();
Dispatcher.Excute(DSP_LOGIN_SUCCESS);
i.pGlobalData.cbMemberOrder = t.cbMemberOrder;
i.pGlobalData.dwMemberExp = t.dwMemberExp;
var a;
a = ToUnicode(t.szUserGUID);
i.pGlobalData.szUserGUID = [];
memset(i.pGlobalData.szUserGUID, 0, LEN_GUID);
SetArray(i.pGlobalData.szUserGUID, a);
var o = t.szMobilePhone;
if (0 != o.length) {
GetProject().SetRegister(!0);
GetProject().szRegisterPhone = o;
}
this.wLockServerID = t.wLockServerID;
var s = t.cbFirstTopup;
GetProject().cbFirstTopUp = s;
GetProject().cbCheckAccounts = t.cbCheckAccounts;
var r = "" + i.pGlobalData.dwUserID + ToUtf8(a) + GetProject().GetMachineIdWithString(), c = "" + i.pGlobalData.dwUserID + ToUtf8(a), l = hex_md5(r).toUpperCase(), h = hex_md5(c).toUpperCase();
i.pGlobalData.szUserSign = [];
memset(i.pGlobalData.szUserSign, 0, LEN_PASSWORD);
SetArrayFormUtf8(i.pGlobalData.szUserSign, l);
USI_OnSavaInfo(l, h, i.pGlobalData.dwUserID, ToUtf8(a));
GetProject().bMissionService && GetMissionService_Create();
ServerData_ClearAllMap();
this.wEventID = EventEnum.LogonEvent;
2 == t.nLogonType && ACF_SetAccountOtp(t.szAccounts, t.szUserToken);
window.mfConfig.onEvent("af_login", JSON.stringify({
af_user_id: i.GetUserID()
}));
if (1 == t.cbFirstLogon) {
window.mfConfig.onEvent("af_complete_registration", JSON.stringify({
af_param_1: "success"
}));
OnPostSmsMessageId();
}
} else {
ACF_ClearAccountOtp();
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
2 == t.nLogonType && ManagerHelp_SetSystemLabel(t.szDescribeString);
}
},
OnSocketSubListKind: function(e, t) {
var i = new _GameKind().GetDataSize(), a = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_GameKind, t, "_GameKind")) return !1;
for (var o = 0; o < a; o++) {
var s = new _GameKind();
s.init(e, o * i);
n.getInstance().setServerVersionByProcessVer(s.wKindID, s.dwGameVersion);
null != window.logConsole.GameKindList && s.log();
AH_SetItemByKey(ServerData.aryGameKind, s.wKindID, s);
}
return !0;
},
OnSocketSubListServer: function(e, t) {
var i = sizeof(_GameServer), n = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_GameServer, t, "_GameServer")) return !1;
for (var a = 0; a < n; a++) {
var o = new _GameServer();
o.init(e, a * i);
null != window.logConsole.GameServerList && o.log();
AH_SetItemByKey(ServerData.aryGameServer, o.wServerID, o);
}
},
OnSocketSubListConfig: function(e, t) {
var i = sizeof(_MBTableConfig), n = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_MBTableConfig, t, "_MBTableConfig")) return !1;
for (var a = 0; a < n; a++) {
var o = new _MBTableConfig();
o.init(e, a * i);
AH_SetItemByKey(ServerData.aryGameConfig, o.wServerID, o);
}
},
OnSocketSubListType: function(e, t) {
var i = sizeof(_GameType), n = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_GameType, t, "_GameType")) return !1;
for (var a = 0; a < n; a++) {
var o = new _GameType();
o.init(e, a * i);
AH_SetItemByKey(ServerData.aryGameType, o.wTypeID, o);
}
return !0;
},
OnSocketSubListArea: function(e, t) {
var i = sizeof(_GameArea), n = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_GameArea, t, "_GameArea")) return !1;
for (var a = 0; a < n; a++) {
var o = new _GameArea();
o.init(e, a * i);
AH_SetItemByKey(ServerData.aryGameArea, o.wAreaID, o);
}
return !0;
},
OnSocketSubListField: function(e, t) {
var i = new _GameField().GetDataSize(), n = t / i;
if (YQYAssertAlertStructSizeByLocalMultiple(_GameField, t, "_GameField")) return !1;
for (var a = 0; a < n; a++) {
var o = new _GameField();
o.init(e, a * i);
AH_SetItemByKey(ServerData.aryGameField, o.wFieldID, o);
}
},
OnSocketSubListFinish: function(e, t) {
this.OnLogonEventFinish(this.wLockServerID);
this.wLockServerID = 0;
this.PerformClosed();
return !0;
},
OnSocketSubRoomInfo: function(e) {
var t = window.netlobby.netSerializer.unpackMsg("CMD_S_QueryRoomRet", e);
if (t.Server && t.Server.wServerID > 0) {
var i = t.Server;
i.szServerAddr = ToUnicode(i.szServerAddr);
i.szServerName = ToUnicode(i.szServerName);
i.lMinEnterScore = null == i.lMinEnterScore.high ? i.lMinEnterScore : 0;
i.lMaxEnterScore = null == i.lMaxEnterScore.high ? i.lMaxEnterScore : 0;
i.lMaxSingleExp = null == i.lMaxSingleExp.high ? i.lMaxSingleExp : 0;
GetServerRoom().SetOperateName("QuickGame");
GetServerRoom().SetGameServer(i);
GetServerRoom().OnLogonGameEvent(i);
} else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("The room is full, please try later.");
}
this.PerformClosed();
return !0;
},
OnLogonEventFinish: function(e) {
if (0 != e) {
var t = ServerData_QueryGameServer(e);
if (t) {
GetServerRoom().SetOperateName("");
GetServerRoom().SetGameServer(t);
GetServerRoom().OnLogonGameEvent(t);
} else if (0 == GetProject().cbCheckAccounts) window.mfConfig.bLogonEnd || ManagerHelp_SetLayerEvent("RoomLayer", INVALID_WORD, "启动大厅"); else {
var i = ServerData_GetGameServerArray(GetProject().checkGameId);
if (i.length > 0) {
var n = i[0];
GetServerRoom().SetOperateName("");
GetServerRoom().SetGameServer(n);
GetServerRoom().OnLogonGameEvent(n);
}
}
} else if (0 == GetProject().cbCheckAccounts) window.mfConfig.bLogonEnd || ManagerHelp_SetLayerEvent("RoomLayer", INVALID_WORD, "启动大厅"); else {
var a = ServerData_GetGameServerArray(GetProject().checkGameId);
if (a.length > 0) {
var o = a[0];
GetServerRoom().SetOperateName("");
GetServerRoom().SetGameServer(o);
GetServerRoom().OnLogonGameEvent(o);
} else ManagerHelp_SetLayerEvent("RoomLayer", INVALID_WORD, "启动大厅");
}
},
SendPacketAccountLogon: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
this.bYouKeLogon = !1;
var i = new CMD_MB_LogonAccounts();
i.wModuleID = GetProject().wModuleID;
i.dwPlazaVersion = GetProject().dwPlazaVersion;
i.cbDeviceType = GetProject().GetDeviceType();
SetArrayFormUtf8(i.szMobilePhone, e);
var n = hex_md5(t).toUpperCase();
SetArrayFormUtf8(i.szPassword, n);
i.szMachineID = GetProject().szMachineID.concat();
i.dwChannelID = GetProject().GetChannelId();
ACF_OnAddAccount(e, t);
GetProject().SetPassword(n);
GetProject().SetAccountType(ACCOUNT_NORMAL);
window.mfConfig.headurl = "";
this.PerformSendData(MDM_MB_LOGON, SUB_MB_LOGON_ACCOUNTS, i.GetDataBytes(), i.GetDataSize());
},
SendPacketLogonOtp: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = {};
i.wModuleID = GetProject().wModuleID;
i.dwPlazaVersion = GetProject().dwPlazaVersion;
i.cbDeviceType = GetProject().GetDeviceType();
i.dwOtpCode = t;
i.szOpenID = ToUtf8(GetProject().szOpenID.concat());
i.szMachineID = ToUtf8(GetProject().szMachineID.concat());
i.szMobilePhone = e;
i.dwChannelID = parseInt(GetProject().GetChannelId());
if (cc.sys.isNative) {
var n = cc.sys.localStorage.getItem("CacheSpreadID");
n && (i.dwAgentID = n);
}
var a = window.netlobby.netSerializer.packMsg("CMD_C_LogonOtpCode", i);
this.PerformSendData(MDM_MB_LOGON, SUB_MB_LOGON_OTPCODE, a, a.length);
},
SendPacketLogonToken: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = {};
i.wModuleID = GetProject().wModuleID;
i.dwPlazaVersion = GetProject().dwPlazaVersion;
i.cbDeviceType = GetProject().GetDeviceType();
i.szToken = t;
i.szOpenID = ToUtf8(GetProject().szOpenID.concat());
i.szMachineID = ToUtf8(GetProject().szMachineID.concat());
i.szMobilePhone = e;
i.dwChannelID = parseInt(GetProject().GetChannelId());
var n = window.netlobby.netSerializer.packMsg("CMD_C_LogonToken", i);
this.PerformSendData(MDM_MB_LOGON, SUB_MB_LOGON_TOKEN, n, n.length);
},
SendPacketRegister: function(e, t, i) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
this.bYouKeLogon = !1;
var n = new CMD_MB_RegisterAccounts();
n.wModuleID = GetProject().wModuleID;
n.dwPlazaVersion = GetProject().dwPlazaVersion;
n.cbDeviceType = GetProject().GetDeviceType();
var a = hex_md5(t).toUpperCase();
SetArrayFormUtf8(n.szLogonPass, a);
n.szMachineID = GetProject().szMachineID.concat();
n.szOpenID = GetProject().szOpenID.concat();
SetArrayFormUtf8(n.szMobilePhone, e);
n.dwChannelID = GetProject().GetChannelId();
n.dwMBVerifyCode = i;
if (cc.sys.isNative) {
var o = cc.sys.localStorage.getItem("CacheSpreadID");
o && (n.dwAgentID = o);
}
GetProject().SetPassword(a);
window.mfConfig.headurl = "";
this.PerformSendData(MDM_MB_LOGON, SUB_MB_REGISTER_ACCOUNTS_BY_VERIFICATION, n.GetDataBytes(), n.GetDataSize());
},
SendPacketYouKeLogon: function(e, t, i, n) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
this.bYouKeLogon = !0;
var a = new CMD_MB_LogonOtherPlatform();
a.wModuleID = GetProject().wModuleID;
a.dwPlazaVersion = GetProject().dwPlazaVersion;
a.cbDeviceType = GetProject().GetDeviceType();
a.wPlatformID = e;
a.szMachineID = GetProject().szMachineID.concat();
a.dwChannelID = GetProject().GetChannelId();
var o = window.mfConfig.GetPromoterInfo();
a.dwSpreadId = null == o ? 0 : o;
GetProject().wPlatformID = e;
if (e == PLATFORMID_VISITOR) {
var s = GetProject().GetMachineIdWithString(), r = GetProject().GetMainChannelID(), c = hex_md5(s + r).toUpperCase();
SetArrayFormUtf8(a.szOpenID, c);
GetProject().szOpenID = a.szOpenID.concat();
GetProject().SetAccountType(PLATFORMID_VISITOR);
window.mfConfig.headurl = "";
}
this.PerformSendData(MDM_MB_LOGON, SUB_MB_LOGON_OTHERPLATFORM, a.GetDataBytes(), a.GetDataSize());
},
SendPacketModifyInsurePass: function(e, t, i) {
var n = new CMD_GP_ModifyInsurePass();
n.dwUserID = e;
var a = hex_md5(t).toUpperCase(), o = hex_md5(i).toUpperCase();
SetArrayFormUtf8(n.szOldPassword, a);
SetArrayFormUtf8(n.szNewPassword, o);
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_MODIFY_INSURE_PASS, n.GetDataBytes(), n.GetDataSize());
return !0;
},
SendPacketForgetPass: function(e, t, i, n) {
var a = new CMD_GP_ForgetLogonPass(), o = hex_md5(t).toUpperCase(), s = e;
SetArrayFormUtf8(a.szAccounts, s);
SetArrayFormUtf8(a.szMobilePhone, e);
SetArrayFormUtf8(a.szPassword, o);
a.dwVerificationCode = i;
a.szMachineID = GetProject().szMachineID.concat();
a.cbPassType = n;
a.dwChannelID = GetProject().GetChannelId();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_FORGET_LOGON_PASS, a.GetDataBytes(), a.GetDataSize());
return !0;
},
SendPacketModifyLogonPass: function(e, t, i) {
var n = new CMD_GP_ModifyLogonPass(), a = PlayerManager.GetMeUserItem();
n.dwUserID = a.GetUserID();
var o = hex_md5(e).toUpperCase(), s = hex_md5(t).toUpperCase();
SetArrayFormUtf8(n.szScrPassword, o);
SetArrayFormUtf8(n.szDesPassword, s);
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_MODIFY_LOGON_PASS, n.GetDataBytes(), n.GetDataSize());
return !0;
},
SendPacketGetVerify: function(e, t, i) {
if (0 == GetProject().bSmsType) {
var n = new CMD_GP_GetVerificationCode();
if (GetProject().GetAccountType() == PLATFORMID_VISITOR && 1 == t) n.szAccounts = GetProject().szOpenID.concat(); else {
var a = e + "_" + GetProject().GetMainChannelID();
SetArrayFormUtf8(n.szAccounts, a);
if (3 == t) {
a = PlayerManager.GetMeUserItem().GetAccount();
n.szAccounts = a;
}
}
SetArrayFormUtf8(n.szMobilePhone, e);
n.szMachineID = GetProject().szMachineID;
n.cbOutType = t;
n.dwChannelID = GetProject().GetChannelId();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_GETVERIFICATIONCODE, n.GetDataBytes(), n.GetDataSize());
} else if (1 == GetProject().bSmsType) {
var o = e + "_" + GetProject().GetMainChannelID();
if (3 == t) {
o = PlayerManager.GetMeUserItem().GetAccount();
o = ToUtf8(o);
}
var s = USI_OnGetInfo(), r = "";
r += null == s ? "uid=0&sign=0" : "uid=" + s.dwUserID + "&sign=" + s.szSign;
r += "&accounts=" + o + "&phone=" + e + "&optType=" + t + "&channelID=" + GetProject().GetChannelId();
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szSmsUrl, r, function(e, t) {
if (e) if (200 == t.statusCode) {
ManagerHelp_SetSystemLabel(t.message);
GetProject().szSmsPostUrl = t.url;
i && i();
} else ManagerHelp_SetSystemLabel(t.message); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
},
SendPacketBindMobilePhone: function(e, t, i) {
var n = new CMD_GP_BindPhoneNumber(), a = PlayerManager.GetMeUserItem();
n.dwUserID = a.GetUserID();
var o = hex_md5(t).toUpperCase();
SetArrayFormUtf8(n.szMobilePhone, e);
SetArrayFormUtf8(n.szPassword, o);
n.dwVerificationCode = i;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_BINDPHONENUMBER, n.GetDataBytes(), n.GetDataSize());
return !0;
},
SendPacketQueryLockInfo: function() {
var e = PlayerManager.GetMeUserItem(), t = new CMD_GP_QueryLockInfo_Req();
t.dwUserID = e.GetUserID();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_LOCK_INFO, t.GetDataBytes(), t.GetDataSize());
return !0;
},
OnSocketSubQueryLockInfo: function(e, t) {
var i = new CMD_GP_QueryLockInfo_Res();
i.init(e);
this.OnLogonEventFinish(i.dwServerId);
this.PerformClosed();
return !0;
},
SendExtensionRequest: function(e, t, i) {
var n = new CMD_GP_BindAgentIdReq();
n.dwUserId = e;
n.dwAgentId = t;
this.SendExtensionRequest_CallBack = i;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_BINDRESULT, n.GetDataBytes(), n.GetDataSize());
},
OnSocketBindResult: function(e, t) {
var i = new CMD_GP_BindAgentIdRet();
i.init(e);
if (this.SendExtensionRequest_CallBack) {
this.SendExtensionRequest_CallBack(i);
this.SendExtensionRequest_CallBack = void 0;
}
this.PerformClosed();
return !0;
},
SendRegistersExtensionReq: function(e, t, i, n) {
var a = PlayerManager.GetMeUserItem(), o = new CMD_GP_RegistersAgentIdReq();
o.dwGameID = a.GetGameID();
SetArrayFormUtf8(o.szCompellation, e);
SetArrayFormUtf8(o.szMobilePhone, t);
o.dwUpAgentId = parseInt(i);
this.SendRegistersExtensionReq_callback = n;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_REGISTERSAGENT, o.GetDataBytes(), o.GetDataSize());
},
OnSocketRegistersExtensionRet: function(e, t) {
var i = new CMD_GP_RegistersAgentIdRet();
i.init(e);
if (this.SendRegistersExtensionReq_callback) {
this.SendRegistersExtensionReq_callback(i);
this.SendRegistersExtensionReq_callback = void 0;
}
this.PerformClosed();
return !0;
},
SendQueryExtensionReq: function(e) {
var t = PlayerManager.GetMeUserItem(), i = new CMD_GP_QueryAgentReq();
i.dwGameID = t.GetGameID();
this.SendQueryExtensionReq_callback = e;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_EXTENSION, i.GetDataBytes(), i.GetDataSize());
},
OnSocketQueryExtensionRet: function(e, t) {
var i = new CMD_GP_QueryAgentRet();
i.init(e);
if (this.SendQueryExtensionReq_callback) {
this.SendQueryExtensionReq_callback(i);
this.SendQueryExtensionReq_callback = void 0;
}
this.PerformClosed();
return !0;
},
SendQueryExternFaceURL: function(e, t) {
var i = new CMD_MB_QueryExternFaceURL();
i.dwGameID = e;
this.SendQueryExternFaceURL_callback = t;
this.PerformSendData(MDM_MB_LOGON, SUB_MB_QUERY_EXTERN_FACE_URL, i.GetDataBytes(), i.GetDataSize());
},
OnQueryExternFaceURL: function(e, t) {
var i = new CMD_GP_QueryExternFaceURL();
i.init(e);
this.SendQueryExternFaceURL_callback && this.SendQueryExternFaceURL_callback(i);
this.PerformClosed();
return !0;
},
OnUpdateExternFaceURL: function(e, t) {
new CMD_GP_UpdateExternFaceURL().init(e);
this.PerformClosed();
},
SendPacketExchangeRequest: function(e, t, i, n) {
var a = new CMD_GP_ExchangeRequest();
a.dwUserId = e;
a.dwExchangeCount = t;
a.cbType = i;
a.cbRes = 0;
this.SendPacketExchangeRequest_CallBack = n;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_EXCHANGE, a.GetDataBytes(), a.GetDataSize());
},
OnSocketExChangeResult: function(e, t) {
var i = new CMD_GP_ExchangeRequest();
i.init(e);
this.SendPacketExchangeRequest_CallBack && null != this.SendPacketExchangeRequest_CallBack && this.SendPacketExchangeRequest_CallBack(i);
this.PerformClosed();
return !0;
},
SendPacketUserVipInfo: function() {
var e = PlayerManager.GetMeUserItem(), t = new CMD_GP_QueryUserMemberInfo_Req();
t.dwUserId = e.GetUserID();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_MEMBER_INFO, t.GetDataBytes(), t.GetDataSize());
return !0;
},
OnSocketSubGPVipInfoResult: function(e, t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GP_QueryUserMemberInfo_Res, t, "MissionLogon.3.304===")) return !1;
var i = new CMD_GP_QueryUserMemberInfo_Res();
i.init(e);
var n = PlayerManager.GetMeUserItem();
n.SetMemberOrder(i.cbMemberOrder);
n.SetMemberExp(i.dwMemberExp);
this.jsBankInterface && this.jsBankInterface.OnSocketSubGPVipInfo && this.jsBankInterface.OnSocketSubGPVipInfo(e, t);
this.jsUserInterface && this.jsUserInterface.OnSocketSubGPVipInfo && this.jsUserInterface.OnSocketSubGPVipInfo(e, t);
this.PerformClosed();
},
OnSocketSubSmsResult: function(e, t) {
var i = window.netlobby.netSerializer.unpackMsg("CMD_S_SendSmsRet", e);
GetProject().szMessageId = i.szMessageId;
this.PerformClosed();
return !0;
},
SendPacketInsureInfo: function() {
var e = PlayerManager.GetMeUserItem(), t = new CMD_GP_QueryInsureInfo();
t.dwUserID = e.GetUserID();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_INSURE_INFO, t.GetDataBytes(), t.GetDataSize());
return !0;
},
OnSocketSubGPInsureInfo: function(e, t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GP_UserInsureInfo, t, "MissionLogon.3.403===")) return !1;
var i = new CMD_GP_UserInsureInfo();
i.init(e);
var n = PlayerManager.GetMeUserItem();
if (n) {
n.SetUserScore(i.lUserScore);
n.SetUserInsure(i.lUserInsure);
n.SetUserMedal(i.lUserMedal);
n.SetUserPlatformCoin(i.lUserPlatformCoin);
n.SetUserVolume(i.lVolume);
}
this.jsBankInterface && this.jsBankInterface.OnSocketSubGPInsureInfo && this.jsBankInterface.OnSocketSubGPInsureInfo(e, t);
this.jsUserInterface && this.jsUserInterface.OnSocketSubGPInsureInfo && this.jsUserInterface.OnSocketSubGPInsureInfo(e, t);
this.PerformClosed();
},
OnSocketDepositCoin: function(e) {
var t = PlayerManager.GetMeUserItem(), i = new CMD_GP_UserSaveScore();
i.lSaveScore = e;
i.dwUserID = t.GetUserID();
i.szMachineID = GetProject().szMachineID;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_USER_SAVE_SCORE, i.GetDataBytes(), i.GetDataSize());
},
OnSocketDrawCoin: function(e, t) {
var i = PlayerManager.GetMeUserItem(), n = new CMD_GP_UserTakeScore();
n.lTakeScore = e;
n.dwUserID = i.GetUserID();
var a = hex_md5(t).toUpperCase();
SetArrayFormUtf8(n.szPassword, a);
n.szMachineID = GetProject().szMachineID;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_USER_TAKE_SCORE, n.GetDataBytes(), n.GetDataSize());
},
OnSocketSubGPBankSucceed: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMax(CMD_GP_UserInsureSuccess, t, "MissionLogon.3.405===")) return !1;
var i = new CMD_GP_UserInsureSuccess();
i.init(e);
var n = PlayerManager.GetMeUserItem();
n.SetUserScore(i.lUserScore);
n.SetUserInsure(i.lUserInsure);
n.SetUserPlatformCoin(i.lUserPlatformCoin);
n.SetUserVolume(i.lVolume);
this.jsBankInterface && this.jsBankInterface.OnSocketSubGPBankSucceed && this.jsBankInterface.OnSocketSubGPBankSucceed(e, t);
this.jsUserInterface && this.jsUserInterface.OnSocketSubGPBankSucceed && this.jsUserInterface.OnSocketSubGPBankSucceed(e, t);
this.PerformClosed();
},
OnSocketSubGPBankFailure: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMax(CMD_GP_UserInsureFailure, t, "MissionLogon===3.406")) return !1;
var i = new CMD_GP_UserInsureFailure();
i.init(e);
this.jsBankInterface && this.jsBankInterface.OnSocketSubGPBankFailure && this.jsBankInterface.OnSocketSubGPBankFailure(e, t, i);
this.jsUserInterface && this.jsUserInterface.OnSocketSubGPBankFailure && this.jsUserInterface.OnSocketSubGPBankFailure(e, t, i);
this.PerformClosed();
},
SendQueryShopInfo: function() {
this.PerformSendData(MDM_PLATCOIN_SHOP, SUB_PLATCOIN_SHOP_LIST, 0, 0);
},
SendGetGameKindServer: function(e) {
this.PerformSendData(MDM_MB_SERVER_LIST, SUB_MB_GET_SERVER, Value_GetValueBytes(Value_TypeWORD, e), Value_TypeWORD);
this.pGameSocket.wKindID = e;
},
SendGetGameKindServerList: function(e, t) {
var i = {};
i.dwChannelID = parseInt(GetProject().GetChannelId());
i.dwUserID = PlayerManager.GetMeUserItem().GetUserID();
i.dwMemberExp = PlayerManager.GetMeUserItem().GetMemberExp();
i.wKindID = e;
i.wFieldID = t || 0;
var n = window.netlobby.netSerializer.packMsg("CMD_C_QueryRoomReq", i);
this.PerformSendData(MDM_MB_SERVER_LIST, SUB_MB_GET_ROOM_LIST, n, n.length);
},
SendQueryPrivateTableInfo: function(e, t) {
var i = new CMD_GP_QueryPrivateTableInfoReq();
i.dwPrivateTableId = e;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_PRIVATE_TABLE_INFO, i.GetDataBytes(), i.GetDataSize());
this.SendQueryPrivateTableInfo_callback = t;
},
SendGetAllPrivateTabelRecord: function(e, t, i) {
var n = new CMD_QueryPrivateTableRecord_Req();
n.dwUserId = e;
n.wKindID = t;
this.SendGetAllPrivateTabelRecord_callback = i;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_QUERY_PRIVATE_TABLE_RECORD, n.GetDataBytes(), n.GetDataSize());
},
SendGetGroupPrivateTabelRecord: function(e, t, i) {
var n = new CMD_QueryPrivateTableRecordByGroup_Req();
n.dwUserId = e;
n.dwGroupID = t;
this.SendGetGroupPrivateTabelRecord_callback = i;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_QUERY_PRIVATE_TABLE_RECORD_BY_GROUP, n.GetDataBytes(), n.GetDataSize());
},
SendGetDetailPrivateTableRecord: function(e, t) {
var i = new CMD_QueryPrivateTableGameRecord_Req();
i.dwRecordId = e;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_QUERY_PRIVATE_TABLE_GAME_RECORD, i.GetDataBytes(), i.GetDataSize());
this.SendGetDetailPrivateTableRecord_callback = t;
},
SendGetDetailGameReplayData: function(e, t, i) {
var n = new CMD_GP_QueryDrawReplayData_Req();
n.dwDrawId = t;
n.dwUserId = e;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_DRAW_REPLAY_DATA, n.GetDataBytes(), n.GetDataSize());
this.tAryDrawReplayData = [];
this.tAryDrawReplayData.length = 0;
this.SendGetDetailGameReplayData_callback = i;
},
OnSocketPrivateTabelRecord: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMin(CMD_QueryPrivateTableRecord_Res, t, "MissionLogon.3.424===")) return !1;
if (this.SendGetAllPrivateTabelRecord_callback) {
this.SendGetAllPrivateTabelRecord_callback(e, t);
this.SendGetAllPrivateTabelRecord_callback = void 0;
}
this.PerformClosed();
},
OnSocketGroupPrivateTabelRecord: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMin(CMD_QueryPrivateTableRecord_Res, t, "MissionLogon.3.424===")) return !1;
if (this.SendGetGroupPrivateTabelRecord_callback) {
this.SendGetGroupPrivateTabelRecord_callback(e, t);
this.SendGetGroupPrivateTabelRecord_callback = void 0;
}
this.PerformClosed();
},
OnSocketPrivateTabelGameRecord: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMin(CMD_QueryPrivateTableGameRecord_Res, t, "MissionLogon.3.425===")) return !1;
if (this.SendGetDetailPrivateTableRecord_callback) {
this.SendGetDetailPrivateTableRecord_callback(e, t);
this.SendGetDetailPrivateTableRecord_callback = void 0;
}
this.PerformClosed();
},
OnSocketPrivateTableInfo: function(e, t) {
var i = new CMD_GP_QueryPrivateTableInfoRes();
i.init(e);
this.PerformClosed();
if (0 !== i.dwServerId) {
var n = ServerData_QueryGameServer(i.dwServerId);
if (n) {
GetServerRoom().SetOperateName("EnterPrivateTable");
GetServerRoom().SetEnterPrivateID(i.dwPrivateTableId);
GetServerRoom().SetGameServer(n);
GetServerRoom().OnLogonGameEvent(n);
} else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("The room was not found, please login again and try again.");
window.mfConfig.setText(" ");
this.SendQueryPrivateTableInfo_callback && this.SendQueryPrivateTableInfo_callback();
}
} else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemAlert("This room was not found or closed, please check the room number and try again");
window.mfConfig.setText(" ");
this.SendQueryPrivateTableInfo_callback && this.SendQueryPrivateTableInfo_callback();
}
},
OnPrivateTableGameReplayDataconcat: function(e, t) {
this.tAryDrawReplayData = this.tAryDrawReplayData.concat(e);
},
OnSocketPrivateGameReplayData: function(e, t) {
if (this.SendGetDetailGameReplayData_callback) {
this.SendGetDetailGameReplayData_callback(this.tAryDrawReplayData, this.tAryDrawReplayData.length);
this.SendGetDetailGameReplayData_callback = void 0;
}
this.PerformClosed();
},
SendRankListRequest: function(e, t) {
var i = new CMD_GP_GetRankings(), n = PlayerManager.GetMeUserItem().GetUserID();
i.dwUserID = n;
i.wListID = e;
this.SendRankReq_callback = t;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_GET_RANKINGS, i.GetDataBytes(), i.GetDataSize());
},
OnSocketSubRankList: function(e, t) {
if (YQYAssertAlertStructSizeByEqual(_TopRankings, t, "MissionLogon.3.409===")) return !1;
var i = new _TopRankings();
i.init(e);
if (this.SendRankReq_callback) {
this.SendRankReq_callback(i);
this.SendRankReq_callback = null;
}
this.PerformClosed();
},
SendSystemFaceInfo: function(e, t, i) {
var n = new CMD_GP_SystemFaceInfo();
n.cbFaceID = e;
n.cbFrameID = t;
var a = PlayerManager.GetMeUserItem(), o = a.GetUserID();
n.dwUserID = o;
SetArrayFormUtf8(n.szPassword, i);
n.szLogonGUID = a.GetLogonGuid();
n.szMachineID = GetProject().szMachineID.concat();
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_SYSTEM_FACE_INFO, n.GetDataBytes(), n.GetDataSize());
},
SendPacketModifyIndividual: function(e) {
var t = PlayerManager.GetMeUserItem(), i = new CMD_GP_ModifyIndividual();
i.dwUserID = t.GetUserID();
i.szPassword = GetProject().GetPasswordMD5().concat();
i.szLogonGUID = t.GetLogonGuid();
i.dwSpreaderID = 0;
var n = i.GetDataBytes(), a = i.GetDataSize();
if (arguments.length > 0) for (var o = 0; o < arguments.length; o++) {
n = n.concat(arguments[o].GetDataBytes());
a += arguments[o].GetDataSize();
}
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_MODIFY_INDIVIDUAL, n, a);
},
SendPacketModifyIndividualEx: function(e) {
var t = PlayerManager.GetMeUserItem(), i = new CMD_GP_ModifyIndividual();
i.dwUserID = t.GetUserID();
i.szPassword = GetProject().GetPasswordMD5().concat();
i.szLogonGUID = t.GetLogonGuid();
i.dwSpreaderID = t.GetUpSpreadID();
var n = i.GetDataBytes(), a = i.GetDataSize();
if (arguments.length > 0) for (var o = 0; o < arguments.length; o++) {
n = n.concat(arguments[o].GetDataBytes());
a += arguments[o].GetDataSize();
}
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_MODIFY_INDIVIDUAL, n, a);
},
SendQueryBindInfo: function(e) {
var t = new CMD_GP_QueryIndividual(), i = PlayerManager.GetMeUserItem().GetUserID();
t.dwUserID = i;
this.SendBindReq_callback = e;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_QUERY_BIND, t.GetDataBytes(), t.GetDataSize());
},
OnSocketSubBindInfo: function(e, t) {
var i = new CMD_GP_UserIndividual();
i.init(e);
if (null != PlayerManager.GetMeUserItem()) {
var n = PlayerManager.GetMeUserItem().GetUserID();
if (i.dwUserID == n) for (var a = i.GetDataSize(), o = sizeof(tagDataDescribe); a < t; ) {
var s = RecvPacketHelper_GetPacket(e, t, a);
a += o + s.wDataSize;
if (s.wDataDescribe == DTP_NULL) break;
switch (s.wDataDescribe) {
case DTP_GP_UI_ALIPAY:
var r = Value_GetArrayData(s.cbDataBuffer, "szAliAccount", LEN_ALIPAY, 0);
this.SendBindReq_callback && this.SendBindReq_callback(DTP_GP_UI_ALIPAY, r);
break;

case DTP_GP_UI_BANK_CARD:
var c = Value_GetArrayData(s.cbDataBuffer, "szBankCard", LEN_BANK_CARD, 0);
this.SendBindReq_callback && this.SendBindReq_callback(DTP_GP_UI_BANK_CARD, c);
break;

case DTP_GP_UI_EXCHANGE_LIMIT:
if (YQYAssertAlertStructSizeByEqual(_ExchangeLimit, s.wDataSize, "_ExchangeLimit")) return !1;
var l = new _ExchangeLimit();
l.init(s.cbDataBuffer);
this.SendBindReq_callback && this.SendBindReq_callback(DTP_GP_UI_EXCHANGE_LIMIT, l);
}
}
if (this.SendBindReq_callback) {
this.SendBindReq_callback(null);
this.SendBindReq_callback = null;
}
this.PerformClosed();
}
},
SenBindBankInfo: function(e, t) {
var i = new CMD_GP_BindBankCard();
i.BankCardInfo = e;
i.dwVerificationCode = t;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_BIND_BANK_CARD, i.GetDataBytes(), i.GetDataSize());
},
SedBindZFBInfo: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = new CMD_GP_BindAliPay();
i.AlipayInfo = e;
i.dwVerificationCode = t;
this.PerformSendData(MDM_GP_USER_SERVICE, SUB_GP_BIND_ALIPAY, i.GetDataBytes(), i.GetDataSize());
},
SedReceiveBenefits: function(e, t) {
var i = new _ReceiveBenefits(), n = PlayerManager.GetMeUserItem();
i.dwUserID = n.GetUserID();
i.szLogonGUID = n.GetLogonGuid();
i.szMachineID = GetProject().szMachineID.concat();
this.OnSedReceiveBenefits_Callback = t;
this.PerformSendData(MDM_GP_USER_SERVICE, e, i.GetDataBytes(), i.GetDataSize());
},
OnSocketSubReceiveBenefits: function(e, t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GP_ReceiveBenefitsSuccess, t, "CMD_GP_ReceiveBenefitsSuccess")) return !1;
var i = new CMD_GP_ReceiveBenefitsSuccess();
i.init(e);
if (this.OnSedReceiveBenefits_Callback) {
this.OnSedReceiveBenefits_Callback(i);
this.OnSedReceiveBenefits_Callback = null;
}
},
SendLuckInfo: function(e) {
var t = new CMD_GP_REQUEST_LUCKGUY(), i = PlayerManager.GetMeUserItem();
t.dwUserID = i.GetUserID();
var n = ACF_GetAccount(), a = hex_md5(n.password).toUpperCase();
SetArrayFormUtf8(t.szPassword, a);
this.PerformSendData(MDM_GP_USER_SERVICE, e, t.GetDataBytes(), t.GetDataSize());
},
OnSocketSubReceiveLuckInfo: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMultiple(CMD_GP_LUCKGUY_INFO, t, "CMD_GP_LUCKGUY_INFO")) return !1;
var i = new CMD_GP_LUCKGUY_INFO();
i.init(e);
Dispatcher.Excute(DSP_LUCK_INFO, i);
this.PerformClosed();
},
OnSocketSubReceiveLuckWard: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMultiple(CMD_GP_LUCKGUY_AWARD, t, "CMD_GP_LUCKGUY_AWARD")) return !1;
var i = new CMD_GP_LUCKGUY_AWARD();
i.init(e);
Dispatcher.Excute(DSP_LUCK_AWARD, i);
this.PerformClosed();
},
OnSocketSubReceiveLuckRecord: function(e, t) {
if (YQYAssertAlertStructSizeByLocalMultiple(CMD_GP_LUCKGUY_RECORD, t, "CMD_GP_LUCKGUY_RECORD")) return !1;
var i = new CMD_GP_LUCKGUY_RECORD();
i.init(e);
Dispatcher.Excute(DSP_LUCK_RECORD, i);
this.PerformClosed();
}
});
window.GetMissionLogon = function() {
MissionLogon.instance || (MissionLogon.instance = new MissionLogon());
cc.assert(MissionLogon.instance, "ErrorNull.MissionLogon.instance");
return MissionLogon.instance;
};
window.s_MissionLogon = GetMissionLogon();
cc._RF.pop();
}, {
"../HotUpdate/CUpdateManager": "CUpdateManager",
GameDelegate: "GameDelegate"
} ],
MissionService: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "89dc82sMdJFsocTNBEjOJlG", "MissionService");
e("GameDelegate");
window.MissionService = cc.Class({
extends: window.CSocketDelegate,
statics: {
instance: null
},
ctor: function() {
MissionService.instance = this;
this.jsEventDelegate = null;
this.jsEventLobby = null;
this.jsEmailInterface = null;
this.bLogonOther = !1;
this.fAgainLink = .5;
this.bVerification = !1;
},
OnSetLogonStatus: function(e) {
this.bLogonOther = e;
},
OnGetLogonStatus: function() {
return this.bLogonOther;
},
SetEventDelegate: function(e) {
this.jsEventDelegate = e;
},
SetEventLobby: function(e) {
this.jsEventLobby = e;
},
SetEmailInterface: function(e) {
this.jsEmailInterface = e;
},
PerformCreate: function() {
this.PerformClear();
var e = GetProject().GetMsgAddress(), t = GetProject().GetMsgAlpha();
this.OnMissionInitSocket(e, t, "MissionService", this);
this.OnSendPacketWithVerificationReq();
},
PerformClear: function() {
this.OnMissionClosed(window.GST_NORMAL);
},
PerformStruct: function(e, t, i) {
if (0 != GetProject().bMissionService) {
0 == this.GetEventCount() && this.PerformCreate();
this.SendStruct(e, t, i);
}
},
PerformSendData: function(e, t, i, n) {
if (0 != GetProject().bMissionService) {
this.GetEventCheck() || this.PerformCreate();
this.SendData(e, t, i, n);
}
},
OnFlushSendData: function(e) {},
PerformClosed: function() {
this.OnDonedEvent(!0);
return !0;
},
OnMissionClosed: function(e, t) {
this._super(e, t);
},
OnMissionOpen: function(e) {},
OnMissionRelease: function(e) {
e != window.GST_NORMAL && this.scheduleOnce(this.OnLinkAgainConnect, this.fAgainLink);
},
OnLinkAgainConnect: function() {
if (!this.GetEventCheck()) {
var e = GetProject().GetMsgAddress(), t = GetProject().GetMsgAlpha();
this.OnMissionInitSocket(e, t, "MissionService", this);
if (1 == window.logConsole.wirteserverlog) {
var i = PlayerManager.GetMeUserItem(), n = "service-userid:" + i.GetUserID() + "sign:" + i.GetLogonGuid().join();
ManagerHelp_SetSystemAlert(n);
WriteLogsForHttp("devicelog", n);
}
this.OnSendPacketWithVerificationReq();
}
},
OnSocketRead: function(e, t, i, n) {
this.jsEventLobby && this.jsEventLobby.OnReadEventBegan && this.jsEventLobby.OnReadEventBegan(e, t, i, n);
this.jsEventLobby && this.jsEventLobby.OnMissionRead && this.jsEventLobby.OnMissionRead(e, t, i, n);
this.OnMissionRead(e, t, i, n);
this.jsEventLobby && this.jsEventLobby.OnReadEventEnded && this.jsEventLobby.OnReadEventEnded(e, t, i, n);
},
OnMissionRead: function(e, t, i, n) {
MDM_MB_LOGON;
if (e == MDM_MB_SERVER_LIST) ; else if (e == MDM_GP_USER_SERVICE) ; else if (e == MDM_MS_CONNECTION) t == SUB_CONNECTION_VERIFICATION && this.OnSocketPacketWithRequestResult(i, n); else if (e == MDM_MAIL_SYSTEM) {
SUB_MAIL_USER_QUERY == t && this.OnSocketEmailListResult(i, n);
SUB_MAIL_USER_NEW_MAIL == t && this.OnSockecNewEmail(i, n);
SUB_MAIL_USER_READ == t && this.OnSocketReadEmailResult(i, n);
SUB_MAIL_USER_GET_ATTACHMENT == t && this.OnSocketReceiveMailResult(i, n);
} else if (e == MDM_SYS_MSG) {
SUB_SYS_MSG_PUSH_CLIENT == t && this.OnSocketMsgPush(i, n);
SUB_SYS_GAME_WIN_SOCRE_NTF == t && this.OnSocketMsgPush_OterGame(i, n);
SUB_SYS_CATCH_FISH_NTF == t && this.OnSocketMsgPush_BYGame(i, n);
} else if (e == MDM_USER_SERVICE) {
t == SUB_USER_ACTION && this.OnSocketUserAction(i, n);
t == SUB_NOTIFY_RECHARGE ? this.OnSocketNotifyRecharge(i, n) : t == SUB_WEB_NOTIFY_USER && this.OnSocketWebNotifyUser(i, n);
} else e == MDM_CS_BROAD_CAST && t == SUB_S_USER_BRAOD_CAST && this.OnSocketMsgPush_BigAward(i, n);
},
OnMissionGameEngine: function(e, t, i) {},
OnMissionGameFrame: function(e, t, i) {},
OnMissionUpdate: function(e) {},
OnSendPacketWithVerificationReq: function() {
var e = PlayerManager.GetMeUserItem();
if (e) {
var t = new CMD_UserConnectionVerificationReq();
t.dwUserId = e.GetUserID();
t.szLogonGUID = e.GetLogonGuid();
this.PerformStruct(MDM_MS_CONNECTION, SUB_CONNECTION_VERIFICATION, t);
}
},
OnSocketPacketWithRequestResult: function(e, t) {
var i = new CMD_UserConnectionVerificationRes();
i.init(e);
var n = this;
if (0 == i.dwResult) ; else {
var a = "";
if (i.dwResult == EM_ErrorCode.EC_LOGON_AT_OTHER_PLACE) {
a = "Your account has been logged in on another device";
this.OnSetLogonStatus(!0);
} else a = i.dwResult == EM_ErrorCode.EC_LOGON_GUID_ERROR ? "Signature verification failed. Please login again and try again！" : "Verification failed. Please login again and try again！";
GetMissionService_Clear();
ManagerHelp_SetSystemAlert(a, function() {
n.OnSetLogonStatus(!1);
ManagerHelp_SetLayerEvent("ClearAccounts");
});
}
},
OnSocketMsgPush_BigAward: function(e, t) {
var i = window.netGameMsg.netSerializer.unpackMsg("CMD_S_UserBroadCast", e);
BMSG_OnAddMsg(i);
},
OnSocketMsgPush: function(e, t) {
YQYAssertAlertStructSizeByLocalMax(CMD_SysMsgPushClient_Ntf, t, "CMD_SysMsgPushClient_Ntf");
var i = new CMD_SysMsgPushClient_Ntf();
i.init(e);
var n = i.msgInfo.dwChannelId;
if (IsLocalChannelMsg(MSG_SYSTEM, n)) if (i.dwOpType == SYS_MSG_PUSH_OP_ADD || i.dwOpType == SYS_MSG_PUSH_OP_UPDATE) {
var a = i.msgInfo;
a.dwType == SYS_MSG_TYPE_REPLAY_MSG && MSG_OnAddMsg(a);
} else i.dwOpType == SYS_MSG_PUSH_OP_REMOVE && MSG_OnDeleteMsg(i.msgInfo);
},
OnSocketMsgPush_OterGame: function(e, t) {
YQYAssertAlertStructSizeByLocalMax(CMD_UserWinScoreMessageBroadCast_Ntf, t, "CMD_UserWinScoreMessageBroadCast_Ntf");
var i = new CMD_UserWinScoreMessageBroadCast_Ntf();
i.init(e);
i.dwType = SYS_MSG_TYPE_WIN_BROADCAST;
MSG_OnAddMsg(i);
},
OnSocketMsgPush_BYGame: function(e, t) {
YQYAssertAlertStructSizeByLocalMax(CMD_UserCatchFishWinScoreMessageBroadCast_Ntf, t, "CMD_UserCatchFishWinScoreMessageBroadCast_Ntf");
var i = new CMD_UserCatchFishWinScoreMessageBroadCast_Ntf();
i.init(e);
i.dwType = SYS_MSG_TYPE_WIN_BROADCAST;
MSG_OnAddMsg(i);
},
OnSocketUserAction: function(e, t) {
YQYAssertAlertStructSizeByEqual(CMD_PushUserAction, t, "CMD_PushPayResult");
new CMD_PushUserAction().init(e);
},
OnSocketNotifyRecharge: function(e, t) {
var i = window.netMsg.netSerializer.unpackMsg("CMD_S_NotifyRcharge", e);
window.mfConfig.onEvent("af_purchase", JSON.stringify({
af_revenue: i.lAmount,
af_currency: "PHP"
}));
0 == i.cbFisrt && window.mfConfig.onEvent("af_complete_firstcharge", JSON.stringify({
af_param_1: "success"
}));
for (var n = i.lTotal, a = i.lAmount, o = [ 500, 1e3, 2e3 ], s = 0; s < 3; s++) {
var r = o[s];
if (n - a < r && n >= r) {
var c = "af_totalcharge_" + r;
window.mfConfig.onEvent(c, JSON.stringify({
af_param_1: "success"
}));
}
}
OnUpdateBuoyStatus(1);
},
OnSocketWebNotifyUser: function(e, t) {
var i = window.netMsg.netSerializer.unpackMsg("CMD_S_NotifyRcharge", e);
cc.error("通知玩家: ", i);
},
OnSendEmailListRequest: function(e) {
var t = new CMD_QueryUserMailList_Req(), i = PlayerManager.GetMeUserItem().GetUserID();
t.dwUserId = i;
this.EmailListReq_Callback = e;
this.PerformStruct(MDM_MAIL_SYSTEM, SUB_MAIL_USER_QUERY, t);
},
OnSocketEmailListResult: function(e, t) {
YQYAssertAlertStructSizeByLocalMax(CMD_QueryUserMailList_Res, t, "CMD_QueryUserMailList_Res");
var i = new CMD_QueryUserMailList_Res();
i.init(e);
var n = i.mailInfo.dwChannelId;
if (IsLocalChannelMsg(MSG_EMAIL, n)) {
EMA_OnAddEamil(i.mailInfo);
this.jsEventLobby && this.jsEventLobby.OnUpdateEmailTip && this.jsEventLobby.OnUpdateEmailTip();
}
},
OnSockecNewEmail: function(e, t) {
YQYAssertAlertStructSizeByLocalMax(CMD_UserNewMail_Ntf, t, "CMD_UserNewMail_Ntf");
var i = new CMD_UserNewMail_Ntf();
i.init(e);
var n = i.mailInfo.dwChannelId;
if (IsLocalChannelMsg(MSG_EMAIL, n)) {
EMA_OnAddToFirst(i.mailInfo);
this.jsEventLobby && this.jsEventLobby.OnUpdateEmailTip && this.jsEventLobby.OnUpdateEmailTip();
this.jsEmailInterface && this.jsEmailInterface.OnInstantiateItem && this.jsEmailInterface.OnInstantiateItem(i.mailInfo, !0);
}
},
OnSendReadEmailRequest: function(e, t) {
var i = new CMD_UserReadMail_Req(), n = PlayerManager.GetMeUserItem().GetUserID();
i.dwUserId = n;
i.lMailId = e;
this.ReadEmailReq_Callback = t;
this.PerformStruct(MDM_MAIL_SYSTEM, SUB_MAIL_USER_READ, i);
},
OnSocketReadEmailResult: function(e, t) {
YQYAssertAlertStructSizeByEqual(CMD_UserReadMail_Res, t, "CMD_UserReadMail_Res");
var i = new CMD_UserReadMail_Res();
i.init(e);
this.ReadEmailReq_Callback && this.ReadEmailReq_Callback(i);
},
OnSendReceiveMailRequset: function(e, t) {
var i = new CMD_ReceiveMailAttachment_Req(), n = PlayerManager.GetMeUserItem().GetUserID();
i.dwUserId = n;
i.lMailId = e;
this.ReceiveMailReq_Callback = t;
this.PerformStruct(MDM_MAIL_SYSTEM, SUB_MAIL_USER_GET_ATTACHMENT, i);
},
OnSocketReceiveMailResult: function(e, t) {
YQYAssertAlertStructSizeByEqual(CMD_ReceiveMailAttachment_Res, t, "CMD_ReceiveMailAttachment_Res");
var i = new CMD_ReceiveMailAttachment_Res();
i.init(e);
this.ReceiveMailReq_Callback && this.ReceiveMailReq_Callback(i);
}
});
window.MS_OnSetLocalData = function(e, t, i) {
if (cc.sys.isNative) {
var n = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "doc/" + t + "/", a = n + i + ".json";
jsb.fileUtils.isFileExist(a) || jsb.fileUtils.isDirectoryExist(n) || jsb.fileUtils.createDirectory(n);
jsb.fileUtils.writeStringToFile(JSON.stringify(e), a);
} else cc.sys.localStorage.setItem("" + t + i, JSON.stringify(e));
};
window.MS_OnQueryAllLocalData = function(e, t) {
var i = null;
if (cc.sys.isNative) {
var n = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "doc/" + e + "/" + t + ".json";
if (jsb.fileUtils.isFileExist(n)) {
var a = jsb.fileUtils.getStringFromFile(n);
i = JSON.parse(a);
}
} else {
var o = cc.sys.localStorage.getItem("" + e + t);
o && (i = JSON.parse(o));
}
return i;
};
window.GetMissionService = function() {
MissionService.instance || (MissionService.instance = new MissionService());
cc.assert(MissionService.instance, "ErrorNull.MissionService.instance");
return MissionService.instance;
};
window.GetMissionService_Create = function() {
GetMissionService().PerformCreate();
};
window.GetMissionService_Clear = function() {
GetMissionService().PerformClear();
};
cc._RF.pop();
}, {
GameDelegate: "GameDelegate"
} ],
NetSerializer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc1deWfZ4NOuLVLMxhxdkdy", "NetSerializer");
var n = e("PBHelper");
cc.Class({
ctor: function() {
this.pbHelper = new n();
},
setPackageName: function(e) {
this.pbHelper.setPackage(e);
},
loadProto: function(e, t) {
this.pbHelper.loadProtoFile(e, function() {
t && t();
});
},
packMsg: function(e, t) {
var i = this.pbHelper.encode(e, t), n = new Uint8Array(i);
return Array.from(n);
},
unpackMsg: function(e, t) {
return this.pbHelper.decode(e, t);
}
});
cc._RF.pop();
}, {
PBHelper: "PBHelper"
} ],
Net: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8f302tPd7dOBIlqYbsX7bX+", "Net");
var n = e("NetSerializer");
cc.Class({
ctor: function() {
this.netSerializer = new n();
var e = arguments[0], t = arguments[1];
this.protoFilePath = e || "";
this.netSerializer.setPackageName(t);
},
start: function() {
cc.log("loadProto begin!");
this.netSerializer.loadProto(this.protoFilePath, function() {
cc.log("loadProto success!");
});
}
});
cc._RF.pop();
}, {
NetSerializer: "NetSerializer"
} ],
PBHelper: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0d2bdaWMlxDn5pp3bpBC6tK", "PBHelper");
var n = e("protobuf");
cc.Class({
ctor: function() {
this.TAG = "PBHelper";
this.builder = null;
this.package = "";
},
loadProtoFile: function(e, t) {
var i = this;
n.loadProtoFile(e, function(e, n) {
if (e) cc.error(e, i.TAG); else {
i.builder = n.build(i.package);
t && t();
}
});
},
findPbClass: function(e) {
return this.builder && e ? this.builder[e] : null;
},
encode: function(e, t) {
var i = this.findPbClass(e);
if (i) {
return new i(t).encode().toBuffer();
}
return null;
},
decode: function(e, t) {
var i = this.findPbClass(e);
if (i) {
return i.decode(t);
}
return null;
},
formatData: function(e) {
return e;
},
setPackage: function(e) {
this.package = e;
}
});
cc._RF.pop();
}, {
protobuf: "protobuf"
} ],
PPC_NewActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8b5a6MQzHNOg4V579I8myhb", "PPC_NewActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.5, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllNode();
}));
this.node.runAction(t);
},
StartCompareAction: function(e, t) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetStartFontAction();
if (null != i.callbackIng) {
i.callbackIng(i);
i.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameEndAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
StartGameBeginAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
this.callbackFinish = e;
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetStartGameAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.3, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.3, 1, 1));
},
SetStartGameAction: function() {
this.nodeFont4.active = !0;
this.nodeFont5.active = !0;
this.nodeFont4.scaleX = 1;
this.nodeFont4.scaleY = 0;
this.nodeFont5.scaleX = 1;
this.nodeFont5.scaleY = 0;
var e = this;
this.nodeFont4.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont5.runAction(cc.scaleTo(.3, 1, 1));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.3, 1, 1), cc.delayTime(1.5), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.3, 1, 1));
}
});
cc._RF.pop();
}, {} ],
PPC_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8d38c2O+ulCWLmVVBNVfL35", "PPC_NewCMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_PLAY, o = GAME_STATUS_PLAY + 1, s = GAME_STATUS_PLAY + 2;
t.exports.GS_PLACE_JETTON = a;
t.exports.GS_GAME_END = o;
t.exports.GS_MOVECARD_END = s;
t.exports.UpdateScore = 100;
t.exports.OVER_USERSCORE_COUNT = 5;
t.exports.TIME_FREE = 1;
t.exports.TIME_PLACE_JETTON = 20;
t.exports.TIME_GAME_END = 20;
t.exports.TURAN_TABLE_MAX = 32;
t.exports.CAR_BENCHI_40 = 0;
t.exports.CAR_BENCHI_5 = 1;
t.exports.CAR_BAOMA_30 = 2;
t.exports.CAR_BAOMA_5 = 3;
t.exports.CAR_AODI_20 = 4;
t.exports.CAR_AODI_5 = 5;
t.exports.CAR_DAZHONG_10 = 6;
t.exports.CAR_DAZHONG_5 = 7;
t.exports.AREA_COUNT = 8;
t.exports.MAX_SCORE_HISTORY = 65;
t.exports.MAX_FALG_COUNT = 9;
t.exports.RATE_TWO_PAIR = 12;
t.exports.MAX_APPLY_NUM = 10;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_PLACE_JETTON = 102;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.S_CR_FAILURE = 0;
t.exports.S_CR_UPDATE_SUCCES = 1;
t.exports.S_CR_SET_SUCCESS = 2;
t.exports.S_CR_CANCEL_SUCCESS = 3;
t.exports.SUB_C_PLACE_JETTON = 1;
cc._RF.pop();
}, {} ],
PPC_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3a38foUWLdH8bjFBRS9p/QX", "PPC_NewGameEngine");
var n = e("PPC_NewCMD_Game"), a = e("PPC_NewGameLogic").GameLogic;
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
chipsData: [],
lSumScore: [],
lMeScore: [],
lMeLastScore: [],
lTrueUserScore: [],
pUserScore: [],
pAudioClip: [],
lCurrenMeScore: 0,
lUserScore: 0,
pcurrenEndInfo: null,
lApplyBankerCondition: 0,
wBankerUser: 0,
szBankerNick: "",
lBankerScore: 0,
iBankerTime: 0,
wMaxBankerTimes: 0,
lBankerTotallScore: 0
},
OnFrameEngineLoad: function() {
this.pGameLogic = new a();
this.pGameViewJs = this.pGameView.getComponent("PPC_NewGameView");
this.pGameViewJs.pGameEngineJS = this;
this.initData();
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
var e = this;
cc.loader.loadResDir("139/Audio", cc.AudioClip, function(t, i) {
if (i) {
for (var n = 0; n < i.length; n++) {
var a = getFileName(i[n]);
e.pAudioClip[a] = i[n];
}
if (0 != window.mfConfig.fMusic) {
var o = parseInt(2 * Math.random(), 10);
window.mfConfig.PlayAudio("139/Audio/Bg" + o, !0, window.mfConfig.fMusic);
}
} else cc.warn("139/Audio.asset" + i);
});
},
ResetGameEngine: function() {},
initData: function() {
ZeroArray(this.lSumScore, n.AREA_COUNT + 1);
ZeroArray(this.lMeScore, n.AREA_COUNT + 1);
ZeroArray(this.lMeLastScore, n.AREA_COUNT + 1);
ZeroArray(this.lTrueUserScore, n.AREA_COUNT + 1);
},
OnEventSceneMessage: function(e, t, i, a) {
switch (e) {
case GAME_STATUS_FREE:
return this.OnGameSceneFree(e, t, i, a);

case n.GS_PLACE_JETTON:
case n.GS_GAME_END:
return this.OnGameSceneEnd(e, t, i, a);
}
return !1;
},
OnGameSceneFree: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.CountDown(a.TimeLeave);
this.chipsData = a.BetChips;
this.pGameViewJs.SetChipButton(this.chipsData);
for (var o = 0; o < a.nGameRecord.length; o++) this.pGameViewJs.addRecord((a.nGameRecord[o] - 1) % 8);
this.nodeRootCanvas.getChildByName("RecordLayer") && this.pGameViewJs.updateRecords();
return !0;
},
OnGameSceneEnd: function(e, t, i, a) {
var o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.CountDown(o.TimeLeave);
this.pGameLogic.CopyMemory(this.lSumScore, 0, o.AreaTotalBet, o.AreaTotalBet.length);
this.pGameLogic.CopyMemory(this.lMeScore, 0, o.UserAreaBet, o.UserAreaBet.length);
this.pGameViewJs.showSumBetInfo(o.AreaTotalBet);
this.pGameViewJs.showMeBetInfo(o.UserAreaBet);
e == n.GS_PLACE_JETTON && this.pGameViewJs.updateMeScore(o.UserAreaBet);
for (var s = 0; s < o.nGameRecord.length; s++) this.pGameViewJs.addRecord((o.nGameRecord[s] - 1) % 8);
this.nodeRootCanvas.getChildByName("RecordLayer") && this.pGameViewJs.updateRecords();
this.chipsData = o.BetChips;
this.pGameViewJs.SetChipButton(this.chipsData);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnSubGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnSubGameStart(t, i);

case n.SUB_S_PLACE_JETTON:
return this.OnSubPlaceJetton(t, i);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t, i);

case n.SUB_S_GAME_END:
return this.OnSubGameEnd(t, i);

case n.SUB_S_SHOW_USERLIST:
return this.OnSocketSubGamePlayerList(t, i);
}
return !0;
},
OnSubGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.SetGameStatus(n.GS_MOVECARD_END);
this.pGameViewJs.resetInfo();
this.pGameViewJs.CountDown(i.TimeLeave);
return !0;
},
OnSubGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.SetGameStatus(n.GS_PLACE_JETTON);
this.pGameViewJs.CountDown(i.TimeLeave);
this.pGameViewJs.StarBetAnim();
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pAudioClip.start_bet, !1, window.mfConfig.fSound);
return !0;
},
OnSubPlaceJetton: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == i.RetCode) {
if (i.ChairID == this.GetMeChairID()) {
this.lMeScore[i.AreaIndex - 1] += i.BetScore;
this.lCurrenMeScore -= i.BetScore;
this.pGameViewJs.LabelMeScore.getComponent(cc.Label).string = OnScoreToString(this.lCurrenMeScore);
}
this.lSumScore[i.AreaIndex - 1] += i.BetScore;
this.pGameViewJs.showSumBetInfo(this.lSumScore);
this.pGameViewJs.showMeBetInfo(this.lMeScore);
this.pGameViewJs.PlayChipAnim(i.ChairID == this.GetMeChairID(), i.AreaIndex, i.BetScore);
return !0;
}
var n = "" + i.ResultTip;
ManagerHelp_SetSystemLabel(n);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var n = t.UsersBetList[i];
if (this.GetMeChairID() != n.ChairID) {
this.lSumScore[n.AreaIndex - 1] += n.BetScore;
this.pGameViewJs.PlayChipAnim(n.ChairID == this.GetMeChairID(), n.AreaIndex, n.BetScore);
}
}
this.pGameViewJs.showSumBetInfo(this.lSumScore);
this.pGameViewJs.showMeBetInfo(this.lMeScore);
return !0;
},
OnSubGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.pcurrenEndInfo = i;
var a = [];
memset(a, 0, MAX_CHAIR);
for (var o = 0, s = i.UserWinList.length, r = 0; r < s; r++) {
var c = i.UserWinList[r];
null == c.WinScore.high && null == c.WinScore.low ? a[c.ChairID] = c.WinScore : a[c.ChairID] = 0;
c.ChairID == this.GetMeChairID() && (o = a[c.ChairID]);
}
var l = PlayerManager.GetMeUserItem();
this.lCurrenMeScore = l.GetUserScore();
this.lUserScore = o;
this.lMeLastScore = this.lMeScore;
this.SetGameStatus(n.GS_GAME_END);
this.pGameViewJs.CountDown(i.TimeLeave);
this.pGameViewJs.ilcurrentResult = i.Pattern - 1;
this.pGameViewJs.addRecord(this.pGameViewJs.ilcurrentResult % 8);
this.pGameViewJs.startMove();
return !0;
},
OnSocketSubGamePlayerList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(i);
return !0;
},
SendBet: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_PLACE_JETTON, a, a.length);
}
});
cc._RF.pop();
}, {
PPC_NewCMD_Game: "PPC_NewCMD_Game",
PPC_NewGameLogic: "PPC_NewGameLogic"
} ],
PPC_NewGameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4fb4bBil59KlZ8cxO+Eiua/", "PPC_NewGameLogic");
t.exports.cbControlArea = [ 1, 9, 17, 25, 2, 10, 16, 26, 7, 15, 23, 31, 8, 16, 24, 32, 5, 13, 21, 29, 6, 14, 22, 30, 3, 11, 19, 27, 4, 12, 20, 28 ];
var n = cc.Class({
properties: {},
CopyMemory: function(e, t, i, n) {
for (var a = 0; a < n; a++) e[t + a] = i[a];
}
});
t.exports.GameLogic = n;
cc._RF.pop();
}, {} ],
PPC_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "da320WEShpMf5l31ZzMnoak", "PPC_NewGameView");
var n = e("PPC_NewCMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
LabelMeScore: cc.Label,
nodeBanker: cc.Node,
LabelTimer: cc.Label,
pIconItems: [ cc.Node ],
NodeArea: [ cc.Node ],
m_fSpeed: 0,
m_iIconIndex: 0,
m_iStartIndex: 0,
m_iMovecircle: 0,
m_iActionTime: 0,
m_iTotalTime: 0,
m_lcurrentScore: 0,
m_fMeScoreItems: [ cc.Node ],
m_fSumScoreItems: [ cc.Node ],
iRecords: [],
pfRecordList: cc.Prefab,
pfRecordItem: cc.Prefab,
ilcurrentResult: 0,
Nodetips: cc.Label,
ApplyButton: cc.Node,
DownButton: cc.Node,
CancelButton: cc.Node,
isApplyBanker: !1,
NodeUserList: cc.Prefab,
NodeUserItem: cc.Prefab,
ApplyBankerItem: cc.Prefab,
UpBankerUsers: [],
upBnkerLayout: cc.Node,
UpBankerContent: cc.Node,
ChipButtons: [ cc.Node ],
nodeChipLayer: [ cc.Node ],
chiplist: [],
chipMoveEffect: cc.Prefab,
nodePlayerUser: cc.Node,
pfGameEndLayout: cc.Prefab,
pfGameItem: cc.Prefab,
pHelpLayout: cc.Prefab,
pfGameEndScore: cc.Prefab,
pfGameAction: cc.Node,
m_lUserScore: 0,
pEndScoreEffect: null,
nodeMenu: cc.Node
},
OnFrameViewLoad: function() {
this.OnStatusUpdate();
for (var e = 0; e < 8; e++) this.chiplist[e] = new Array();
for (var t = 0; t < this.iRecords.length; t++) this.iRecords[t] = -1;
this.nodeRootCanvas.getChildByName("RecordLayer") && this.updateRecords();
var i = PlayerManager.GetMeUserItem();
this.LabelMeScore.getComponent(cc.Label).string = OnScoreToString(i.GetUserScore());
this.pGameEngineJS.lCurrenMeScore = i.GetUserScore();
for (var n = 0; n < this.pIconItems.length; n++) this.pIconItems[n].getChildByName("01PPC").active = !1;
},
ResetGameView: function() {
this.ResetFrameData();
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
},
startMove: function() {
this.m_lUserScore = this.LabelMeScore.getComponent(cc.Label).string;
this.downMusicVolume();
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.Start_car, !1, window.mfConfig.fSound);
this.m_iStartIndex = this.m_iIconIndex;
this.m_fSpeed = .7;
this.m_iActionTime = 0;
this.m_iIconIndex > this.ilcurrentResult ? this.m_iTotalTime = n.TURAN_TABLE_MAX - this.m_iIconIndex - 1 + this.ilcurrentResult : this.m_iTotalTime = this.ilcurrentResult - this.m_iIconIndex;
this.m_iTotalTime += 3 * n.TURAN_TABLE_MAX - 2;
this.circles();
},
getSpeed: function(e) {
for (var t = [ 0, .1, .16, .2, .26, .4, .44, .46, .56, .66, .76, .86, .9, .94, 1 ], i = [ 1, .8, .5, .3, .2, .3, .4, .9, 1.6, 2.1, 2.7, 3.4, 4.2, 6, 7.5 ], n = 0; n < t.length - 1; n++) if (e >= t[n] && e <= t[n + 1]) return (e - t[n]) * (i[n + 1] - i[n]) / (t[n + 1] - t[n]) + i[n];
if (e >= 1) return i[i.length - 1];
},
circles: function() {
this.m_iIconIndex >= n.TURAN_TABLE_MAX && (this.m_iIconIndex = 0);
this.m_iStartIndex == this.m_iIconIndex && this.m_iMovecircle++;
var e = this.pIconItems[this.m_iIconIndex];
if (this.m_iActionTime >= this.m_iTotalTime && this.ilcurrentResult == this.m_iIconIndex) {
cc.audioEngine.stop(window.mfConfig.nSoundID);
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.StopCar, !1, window.mfConfig.fSound);
this.upMusicVolume();
var t = e.getChildByName("01PPC");
if (t) {
t.active = !0;
t.getComponent(sp.Skeleton).setAnimation(0, "02PPC", !0);
}
this.NodeArea[this.ilcurrentResult % 8].getComponent(cc.Animation).play("AniClipTwinkle");
this.setBankerInfo(this.pGameEngineJS.wBankerUser);
this.nodeRootCanvas.getChildByName("RecordLayer") && this.updateRecords();
this.playEndChipAnim();
} else e.runAction(cc.sequence(cc.delayTime(this.m_fSpeed / n.TURAN_TABLE_MAX), cc.callFunc(function(e) {
var t = e.getChildByName("01PPC");
if (t) {
t.active = !0;
t.getComponent(sp.Skeleton).setAnimation(0, "01PPC", !1);
}
}, this, e), cc.callFunc(function(e) {
this.m_iActionTime++;
this.m_fSpeed = this.getSpeed(this.m_iActionTime / this.m_iTotalTime);
this.circles();
}, this, e)));
this.m_iIconIndex++;
},
setBankerInfo: function(e) {
if (e == INVALID_CHAIR) {
var t = this.nodeBanker.getComponent("jsFrameUser");
cc.find("score/UserScore", this.nodeBanker).getComponent(cc.Label).string = "";
cc.loader.loadRes("common/default_face", cc.SpriteFrame, function(e, i) {
if (!e) {
if (!t.spUserHead) return;
t.spUserHead.spriteFrame = i;
}
});
} else {
cc.find("name/UserName", this.nodeBanker).getComponent(cc.Label).string = ToUtf8(this.pGameEngineJS.szBankerNick);
cc.find("score/UserScore", this.nodeBanker).getComponent(cc.Label).string = OnScoreToString(this.pGameEngineJS.lBankerScore);
}
this.updateBankerButton();
},
showSumBetInfo: function(e) {
for (var t = 0; t < this.m_fSumScoreItems.length; t++) {
this.m_fSumScoreItems[t].getComponent(cc.Label).string = OnScoreToString(e[t]);
}
},
showMeBetInfo: function(e) {
for (var t = 0; t < this.m_fMeScoreItems.length; t++) {
var i = this.m_fMeScoreItems[t].getComponent(cc.Label);
e[t] > 0 ? i.string = OnScoreToString(e[t]) : i.string = "0";
}
},
updateMeScore: function(e) {
for (var t = 0, i = 0; i < e.length; i++) t += e[i];
var n = PlayerManager.GetMeUserItem();
this.LabelMeScore.string = OnScoreToString(parseInt(n.GetUserScore() - t));
},
BetButton: function(e, t) {
this.m_lcurrentScore >= n.UpdateScore && this.pGameEngineJS.SendBet(parseInt(t), this.m_lcurrentScore);
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
SetChipButton: function(e) {
for (var t = 0; t < e.length; t++) if (t < this.ChipButtons.length) {
this.ChipButtons[t].active = !0;
this.ChipButtons[t].getChildByName("Label").getComponent(cc.Label).string = e[t] / 1e3;
}
for (var i = e.length; i < this.ChipButtons.length; i++) this.ChipButtons[i].active = !1;
this.ChipButtons[0].getChildByName("select").active = !0;
this.ChipButtons[0].getComponent(cc.Animation).play("AniClipChipSelect");
this.m_lcurrentScore = e[0];
},
ChipSelectButton: function(e, t) {
if (n.GS_PLACE_JETTON == this.pGameEngineJS.GetGameStatus()) {
var i = parseInt(t);
i < this.pGameEngineJS.chipsData.length ? this.m_lcurrentScore = this.pGameEngineJS.chipsData[i] : cc.console.warn("bet overflow config chipsData");
for (var a = 0; a < this.ChipButtons.length; a++) if (this.ChipButtons[a].active) {
this.ChipButtons[a].getComponent(cc.Animation).play("AniClipChipSelectStop");
this.ChipButtons[a].getChildByName("select").active = !1;
}
this.ChipButtons[t].getChildByName("select").active = !0;
this.ChipButtons[t].getComponent(cc.Animation).play("AniClipChipSelect");
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.sound_button, !1, window.mfConfig.fSound);
}
},
StarBetAnim: function() {
var e = this.pfGameAction.getComponent("PPC_NewActionHelp");
e.ResetAllNode();
e.StartCompareAction();
},
CountDown: function(e) {
switch (this.pGameEngineJS.GetGameStatus()) {
case n.GS_GAME_END:
this.Nodetips.string = "Draw a prize";
break;

case n.GS_MOVECARD_END:
case GAME_STATUS_FREE:
this.Nodetips.string = "Wait start";
break;

case n.GS_PLACE_JETTON:
this.pGameEngineJS.wBankerUser == this.pGameEngineJS.GetMeChairID() ? this.Nodetips.string = "Wait other bet" : this.Nodetips.string = "Please bet";
}
this.nMaxTime = e;
this.unscheduleAllCallbacks();
this.LabelTimer.string = this.nMaxTime;
this.schedule(function e() {
this.nMaxTime = this.nMaxTime - 1;
this.nMaxTime <= 3 && this.pGameEngineJS.GetGameStatus() == n.GS_PLACE_JETTON && 0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.sound_button, !1, window.mfConfig.fSound);
this.nMaxTime < 0 ? this.unschedule(e) : this.LabelTimer.string = this.nMaxTime;
}, 1);
},
resetInfo: function() {
this.pGameEngineJS.lMeLastScore = CopyArray(this.pGameEngineJS.lMeScore);
ZeroArray(this.pGameEngineJS.lSumScore, n.AREA_COUNT + 1);
ZeroArray(this.pGameEngineJS.lMeScore, n.AREA_COUNT + 1);
ZeroArray(this.pGameEngineJS.lTrueUserScore, n.AREA_COUNT + 1);
this.pGameEngineJS.pUserScore.length = 0;
this.pGameEngineJS.lUserScore = 0;
this.showSumBetInfo(this.pGameEngineJS.lSumScore);
this.showMeBetInfo(this.pGameEngineJS.lMeScore);
this.upDateTrueUserScore();
this.UpdateUserScoreList();
this.pIconItems[this.ilcurrentResult].getComponent(cc.Animation).play("AniClipStop");
var e = this.pIconItems[this.ilcurrentResult].getChildByName("01PPC");
e && (e.active = !1);
for (var t = 0; t < this.NodeArea.length; t++) {
this.NodeArea[t].getComponent(cc.Animation).play("AniClipAreaStop");
}
if (this.pEndScoreEffect) {
this.pEndScoreEffect.removeFromParent();
this.pEndScoreEffect = null;
}
},
addRecord: function(e) {
this.iRecords.push(0);
for (var t = 0; t < this.iRecords.length - 1; t++) this.iRecords[this.iRecords.length - t - 1] = this.iRecords[this.iRecords.length - t - 2];
this.iRecords[0] = e;
},
updateBankerButton: function() {
if (this.jsGameEngine.wBankerUser == this.jsGameEngine.GetMeChairID()) {
this.DownButton.active = !0;
this.ApplyButton.active = !1;
this.CancelButton.active = !1;
} else {
this.DownButton.active = !1;
if (this.isApplyBanker) {
this.ApplyButton.active = !1;
this.CancelButton.active = !0;
} else {
this.ApplyButton.active = !0;
this.CancelButton.active = !1;
}
}
},
updateRecords: function() {
var e = void 0;
if (this.nodeRootCanvas.getChildByName("RecordLayer")) e = this.nodeRootCanvas.getChildByName("RecordLayer"); else {
e = cc.instantiate(this.pfRecordList);
this.nodeRootCanvas.addChild(e, 51);
}
var t = [];
ZeroArray(t, 8);
for (var i = 0; i < 8; i++) t[i] = this.getWinCount(i) / this.iRecords.length * 100;
for (var n = cc.find("content", e), a = 0; a < 8; a++) n.getChildByName("Percentages").getChildByName("P" + a).getComponent(cc.Label).string = t[a].toFixed(2) + "%";
for (var o = 0; o < 30 && !(o >= this.iRecords.length); o++) {
var s = cc.instantiate(this.pfRecordItem);
n.getChildByName("ScrollView").getChildByName("view").getChildByName("content").addChild(s);
var r = s.getChildByName("JG" + this.iRecords[o]).getComponent(cc.Label);
r.string = "Win";
r.node.color = new cc.Color(254, 255, 145, 255);
o % 2 == 0 && (s.getChildByName("bg").active = !1);
}
},
getWinCount: function(e) {
for (var t = 0, i = 0; i < this.iRecords.length; i++) this.iRecords[i] == e && t++;
return t;
},
ApplyBanker: function(e, t) {
var i = PlayerManager.GetMeUserItem().GetChairID();
this.pGameEngineJS.lApplyBankerCondition > this.pGameEngineJS.GetClientUserScore(i) ? ManagerHelp_SetSystemAlert("Not enough gold to be a dealer") : this.pGameEngineJS.SendUpBanker();
},
CancelBanker: function(e, t) {
this.pGameEngineJS.SendCancelBanker();
},
DownBanker: function(e, t) {
this.pGameEngineJS.SendCancelBanker();
},
showUserList: function(e, t) {
var i = cc.instantiate(this.NodeUserList);
this.nodeRootCanvas.addChild(i);
for (var n = 1, a = [], o = 0; o < this.pGameEngineJS.stOnLineUser.length; o++) a[o] = this.pGameEngineJS.stOnLineUser[o];
a.splice(0, 1);
for (var s = 0; s < a.length; s++) {
var r = a[s];
if (0 != r.dwGameID && this.pGameEngineJS.GetMeChairID() != r.wChairID) {
var c = cc.instantiate(this.NodeUserItem);
i.getChildByName("ScrollView").getChildByName("view").getChildByName("content").addChild(c);
c.getChildByName("index").getComponent(cc.Label).string = n + ".";
c.getChildByName("name").getComponent(cc.Label).string = ToUtf8(r.szNickName);
c.getChildByName("score").getComponent(cc.Label).string = OnScoreToString(r.lUserScore);
n++;
}
}
},
ContinueBetButton: function(e, t) {
for (var i = 0; i < this.pGameEngineJS.lMeLastScore.length; i++) {
var n = this.pGameEngineJS.lMeLastScore[i];
n > 0 && this.pGameEngineJS.SendBet(i + 1, n);
}
},
showApplyBankerList: function(e, t) {
this.upBnkerLayout.active = !0;
this.UpBankerContent.removeAllChildren();
for (var i = 0; i < this.UpBankerUsers.length; i++) {
var n = this.UpBankerUsers[i];
if (n) {
var a = cc.instantiate(this.ApplyBankerItem);
this.UpBankerContent.addChild(a);
a.getChildByName("name").getComponent(cc.Label).string = ToUtf8(n.szNickName);
a.getChildByName("score").getComponent(cc.Label).string = OnScoreToString(n.lBankerUserScore);
}
}
},
showUpBankerLayout: function(e, t) {
this.upBnkerLayout.active = !this.upBnkerLayout.active;
},
ShowMyScoreAnim: function() {
if (0 != this.pGameEngineJS.lUserScore && !this.pEndScoreEffect) {
this.pEndScoreEffect = cc.instantiate(this.pfGameEndScore);
this.nodeViewUser[0].addChild(this.pEndScoreEffect);
this.pEndScoreEffect.getComponent("jsGameEndScore").InitGameScore(this.pGameEngineJS.lUserScore);
this.pGameEngineJS.lUserScore > 0 ? 0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.END_WIN, !1, window.mfConfig.fSound) : this.pGameEngineJS.lUserScore < 0 && 0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.END_LOST, !1, window.mfConfig.fSound);
}
},
playEndChipAnim: function() {
for (var e = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), t = 1; t < 9; t++) if (this.pGameEngineJS.lSumScore[t] > 0) {
var i = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodeChipLayer[t - 1].convertToWorldSpaceAR(cc.v2(0, 0))), n = this.pGameEngineJS.lSumScore[t] / this.m_lcurrentScore / 3;
n = n > 3 ? 3 : n;
for (var a = 0; a < n; a++) {
var o = 220 * Math.random() - 110, s = 220 * Math.random() - 110, r = cc.instantiate(this.chipMoveEffect);
this.nodeRootCanvas.addChild(r, 30);
r.position = cc.v2(i.x + o, i.y + s);
var c = [];
this.getBezierRoute(r.position, e, c);
r.runAction(cc.sequence(cc.delayTime(.15 * a), cc.bezierTo(.4, c), cc.delayTime(.5), cc.callFunc(function(e) {
if (this.pGameEngineJS.wBankerUser == this.pGameEngineJS.GetMeChairID()) {
this.LabelMeScore.getComponent(cc.Label).string = OnScoreToString(this.pGameEngineJS.lBankerScore);
}
this.ShowMyScoreAnim();
e.removeFromParent();
}, this, r)));
}
}
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.chouma, !1, window.mfConfig.fSound);
this.nodeRootCanvas.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
this.PlayWinChipAnim();
}, this, this.nodeRootCanvas)));
},
PlayWinChipAnim: function() {
if (this.pGameEngineJS.pcurrenEndInfo.lUserScore > 0) {
var e = this.nodeRootCanvas.convertToNodeSpaceAR(this.nodeBanker.convertToWorldSpaceAR(cc.v2(0, 0))), t = this.nodeRootCanvas.convertToNodeSpaceAR(this.LabelMeScore.node.convertToWorldSpaceAR(cc.v2(0, 0))), i = this.pGameEngineJS.pcurrenEndInfo.lUserScore / this.m_lcurrentScore;
i = i > 10 ? 10 : i;
for (var n = 0; n < i; n++) {
var a = 220 * Math.random() - 110, o = 220 * Math.random() - 110, s = cc.instantiate(this.chipMoveEffect);
this.nodeRootCanvas.addChild(s, 30);
s.position = cc.v2(e.x + a, e.y + o);
var r = [];
this.getBezierRoute(e, t, r);
s.runAction(cc.sequence(cc.delayTime(.05 * n), cc.bezierTo(.4, r), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.chouma, !1, window.mfConfig.fSound);
}, this, s), cc.delayTime(.5), cc.callFunc(function(e) {
e.removeFromParent();
}, this, s)));
}
this.schedule(this.PlayGoldAnim, .02);
} else {
var c = this.LabelMeScore.getComponent(cc.Label);
this.pGameEngineJS.wBankerUser != this.pGameEngineJS.GetMeChairID() && (c.string = OnScoreToString(this.pGameEngineJS.lCurrenMeScore));
}
},
PlayGoldAnim: function() {
this.LabelMeScore.getComponent(cc.Label).string = OnScoreToString(this.pGameEngineJS.lCurrenMeScore);
},
showWin: function() {
var e = this.pGameEngineJS.pcurrenEndInfo, t = cc.instantiate(this.pfGameEndLayout);
this.nodeRootCanvas.addChild(t, 51);
var i = this.jsGameEngine.GetMeUserItem();
t.getChildByName("Meinfo").getComponent("jsFrameUser").SetUserDataItem(i);
t.getChildByName("Meinfo").getChildByName("Score").getComponent(cc.Label).string = this.pGameEngineJS.lCurrenMeScore - this.m_lUserScore;
e.lUserScore < 0 && (t.getChildByName("Meinfo").getChildByName("Score").color = cc.color(255, 0, 0));
var n = this.jsGameEngine.GetClientUserItem(this.pGameEngineJS.wBankerUser);
if (n) {
t.getChildByName("Bankerinfo").getComponent("jsFrameUser").SetUserDataItem(n);
} else t.getChildByName("Bankerinfo").getChildByName("Name").getComponent(cc.Label).string = "System Banker";
t.getChildByName("Bankerinfo").getChildByName("Score").getComponent(cc.Label).string = e.lBankerScore;
e.lBankerScore < 0 && (t.getChildByName("Bankerinfo").getChildByName("Score").color = cc.color(255, 0, 0));
for (var a = 0; a < e.wTopUserChairID.length; a++) if (e.wTopUserChairID[a] != INVALID_CHAIR) {
var o = this.jsGameEngine.GetClientUserItem(e.wTopUserChairID[a]);
if (o) {
var s = cc.instantiate(this.pfGameItem);
t.getChildByName("ScrollView").getChildByName("view").getChildByName("content").addChild(s);
s.getComponent("jsFrameUser").SetUserDataItem(o);
var r = s.getChildByName("Score").getComponent(cc.Label);
if (e.lTopScore[a] > 0) r.string = "+" + e.lTopScore[a]; else {
r.string = 0;
r.node.color = new cc.color(252, 112, 112, 255);
}
}
}
t.scale = 1;
t.runAction(cc.sequence(cc.scaleTo(.2, 1), cc.delayTime(8), cc.callFunc(function(e) {
e.removeFromParent();
}, this, t)));
},
PlayChipAnim: function(e, t, i) {
var n = this.nodeChipLayer[t - 1], a = void 0;
a = e ? this.nodeRootCanvas.convertToNodeSpaceAR(this.LabelMeScore.node.convertToWorldSpaceAR(cc.v2(0, 0))) : this.nodeRootCanvas.convertToNodeSpaceAR(this.nodePlayerUser.convertToWorldSpaceAR(cc.v2(0, 0)));
var o = this.nodeRootCanvas.convertToNodeSpaceAR(n.convertToWorldSpaceAR(cc.v2(0, 0))), s = [];
this.getBezierRoute(a, o, s);
var r = cc.instantiate(this.chipMoveEffect);
this.nodeRootCanvas.addChild(r, 30);
r.position = a;
r.runAction(cc.sequence(cc.bezierTo(.3, s), cc.callFunc(function(e) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudioForRawUrl(this.pGameEngineJS.pAudioClip.chouma, !1, window.mfConfig.fSound);
}, this, r), cc.delayTime(1), cc.callFunc(function(e) {
e.removeFromParent();
}, this, r)));
},
getBezierRoute: function(e, t, i) {
var n = 100 * Math.random(), a = 100 * Math.random();
i.push(e);
var o = cc.v2(0, 0);
if (e.y > t.y) {
o.x = t.x + n;
o.y = e.y + a;
} else {
o.x = e.x + n;
o.y = t.y + a;
}
i.push(o);
i.push(t);
},
upDateTrueUserScore: function() {
var e = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != e) {
var t = e.getComponent("PPC_Control");
t.init(this, this.jsGameEngine);
t.setTrueUserScore(this.jsGameEngine.lTrueUserScore);
}
},
UpdateLookUpUserScore: function(e) {
var t = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != t) {
var i = t.getComponent("PPC_Control");
i.init(this, this.jsGameEngine);
i.setUserScore(e);
}
},
UpdateStorage: function(e, t) {
var i = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != i) {
var n = i.getComponent("PPC_Control");
n.init(this, this.jsGameEngine);
n.setStorage(e, t);
}
},
UpdateUserScoreList: function() {
var e = this.nodeRootCanvas.getChildByName("AadminControl");
if (null != e) {
var t = e.getComponent("PPC_Control");
t.init(this, this.jsGameEngine);
t.UpdateUserScoreList();
}
},
downMusicVolume: function() {
cc.audioEngine.setVolume(window.mfConfig.nMusicID, .2);
},
upMusicVolume: function() {
cc.audioEngine.setVolume(window.mfConfig.nMusicID, window.mfConfig.fMusic);
},
showHelpLayout: function(e, t) {
var i = cc.instantiate(this.pHelpLayout);
this.nodeRootCanvas.addChild(i, 51);
}
});
cc._RF.pop();
}, {
PPC_NewCMD_Game: "PPC_NewCMD_Game"
} ],
PYB_ActionHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "70ec3q/4w1MJa+hvKb03QhO", "PYB_ActionHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeFontbg0: cc.Node,
nodeFontbg1: cc.Node,
nodeFont0: cc.Node,
nodeFont1: cc.Node,
nodeFont2: cc.Node,
nodeFont3: cc.Node
},
onLoad: function() {},
ResetAllNode: function() {
this.nodeFontbg0.x = -this.node.width / 2;
this.nodeFontbg1.x = this.node.width / 2;
this.nodeFontbg0.active = !1;
this.nodeFontbg1.active = !1;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
this.nodeFont0.active = !1;
this.nodeFont1.active = !1;
this.nodeFont2.active = !1;
this.nodeFont3.active = !1;
this.node.x = 0;
},
ResetAllNodeAction: function() {
var e = this, t = cc.sequence(cc.moveTo(.2, this.node.width, this.node.y), cc.callFunc(function() {
e.ResetAllNode();
}));
this.node.runAction(t);
},
StartCompareAction: function(e, t) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != t && null != t && (this.callbackFinish = t);
null != e && null != e && (this.callbackIng = e);
var i = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.1, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
i.SetStartFontAction();
if (null != i.callbackIng) {
i.callbackIng(i);
i.callbackIng = void 0;
}
})));
this.nodeFontbg1.runAction(cc.moveTo(.1, -45, this.nodeFontbg1.y));
},
SetStartFontAction: function() {
this.nodeFont0.active = !0;
this.nodeFont1.active = !0;
this.nodeFont0.scaleX = 1;
this.nodeFont0.scaleY = 0;
this.nodeFont1.scaleX = 1;
this.nodeFont1.scaleY = 0;
var e = this;
this.nodeFont0.runAction(cc.sequence(cc.scaleTo(.1, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont1.runAction(cc.scaleTo(.1, 1, 1));
},
StartGameEndAction: function(e) {
this.nodeFontbg0.active = !0;
this.nodeFontbg1.active = !0;
null != e && null != e && (this.callbackFinish = e);
var t = this;
this.nodeFontbg0.runAction(cc.sequence(cc.spawn(cc.moveTo(.1, 45, this.nodeFontbg0.y), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/ShowTip");
})), cc.callFunc(function(e) {
t.SetGameEndFontAction();
})));
this.nodeFontbg1.runAction(cc.moveTo(.1, -45, this.nodeFontbg1.y));
},
SetGameEndFontAction: function() {
this.nodeFont2.active = !0;
this.nodeFont3.active = !0;
this.nodeFont2.scaleX = 1;
this.nodeFont2.scaleY = 0;
this.nodeFont3.scaleX = 1;
this.nodeFont3.scaleY = 0;
var e = this;
this.nodeFont2.runAction(cc.sequence(cc.scaleTo(.1, 1, 1), cc.delayTime(.6), cc.callFunc(function(t) {
if (null != e.callbackFinish) {
e.callbackFinish(e);
e.callbackFinish = void 0;
}
e.ResetAllNodeAction();
})));
this.nodeFont3.runAction(cc.scaleTo(.1, 1, 1));
}
});
cc._RF.pop();
}, {} ],
PYB_BetArea: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "09adcPP++BPao4SDzH5MEQR", "PYB_BetArea");
cc.Class({
extends: cc.Component,
properties: {
nodeJettonArea: cc.Node,
labelAllBet: cc.Label,
labelMeBet: cc.Label,
nodeAnimation: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
PYB_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3ab64Sxb5NBo5HTjS+NXnCB", "PYB_CMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_NAME = "CoinGame";
t.exports.KIND_ID = 131;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY + 1;
t.exports.GS_GAME_FREE = a;
t.exports.GS_USER_BET = o;
t.exports.GS_GAME_END = s;
t.exports.AREA_TAIL = 0;
t.exports.AREA_HEAD = 1;
t.exports.AREA_MAX = 2;
t.exports.JETTON_NUM = 5;
t.exports.MAX_LUDAN_HISTORY = 60;
t.exports.MAX_TABLE_HISTORY = 18;
t.exports.SUB_C_USER_BET = 1;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_USER_BET = 102;
t.exports.SUB_S_OTHERS_BET = 103;
t.exports.SUB_S_GAME_END = 104;
t.exports.SUB_S_SHOW_USERLIST = 105;
t.exports.SUB_S_JACKPOT_SYNC = 200;
var r = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwRecordCount = 0;
}
});
t.exports.tagGameRecordHead = r;
function c() {
this.bPlayer = 0;
this.bDraw = 0;
this.bBanker = 0;
this.clone = function() {
var e = new c();
e.bPlayer = this.bPlayer;
e.bDraw = this.bDraw;
e.bBanker = this.bBanker;
return e;
};
}
t.exports.tagTableResult = c;
t.exports.tagTableResult = c;
cc._RF.pop();
}, {} ],
PYB_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5883aMiaZZJMpkzK44d2OeF", "PYB_GameEngine");
var n = e("PYB_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
cbGameStatus: 0,
cbCurrJettonIndex: 0
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("PYB_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.ResetGameEngine();
},
OnFrameEngineStart: function() {
this.cbGameStatus = 0;
this.stGameRecord = [];
this.dwRecordCount = 0;
this.lAllBet = [];
memset(this.lAllBet, 0, n.AREA_MAX);
this.lPlayBet = [];
memset(this.lPlayBet, 0, n.AREA_MAX);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("131/Audio/music", !0);
},
ResetGameEngine: function() {},
OnEventSceneMessage: function(e, t, i, a) {
this.cbGameStatus = e;
switch (e) {
case n.GS_GAME_FREE:
return this.OnGameSceneFree(i, a);

case n.GS_USER_BET:
case n.GS_GAME_END:
return this.OnGameSceneEnd(i, a);
}
return !0;
},
OnGameSceneFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.lAreaBetLimit = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave - 1;
this.arrBetChip = i.BetChips;
this.SetTime(!1);
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.updateJackpot(i.JackpotScore);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var a = 0; a < n.AREA_MAX; ++a) this.pGameViewJs.ShowUserJettonWithGameScene(a, this.lAllBet[a], this.lPlayBet[a]);
this.stGameRecord = i.GameRecord;
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
return !0;
},
OnGameSceneEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.lAreaBetLimit = i.AreaBetLimit;
this.fRoundTime = i.TimeLeave - 1;
this.arrBetChip = i.BetChips;
this.lAllBet = i.AreaTotalBet;
this.lPlayBet = i.UserAreaBet;
var a = [ 0, 0 ], o = [ 0, 0 ];
this.SetGameStatus(GAME_STATUS_FREE);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ShowBetChip(this.arrBetChip);
this.pGameViewJs.updateJackpot(i.JackpotScore);
for (var s = 0; s < n.AREA_MAX; ++s) this.pGameViewJs.ShowUserJettonWithGameScene(s, this.lAllBet[s], this.lPlayBet[s]);
this.pGameViewJs.ShowUserBetInfo(this.lAllBet, [ 0, 0 ], this.lPlayBet, [ 0, 0 ], o);
if (this.cbGameStatus == n.GS_USER_BET) {
this.SetTime(!0);
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!1);
for (var r = 0; r < n.AREA_MAX; r++) if (this.lPlayBet[r] > 0) {
this.SetGameStatus(GAME_STATUS_PLAY);
break;
}
} else if (this.cbGameStatus == n.GS_GAME_END) {
this.cbCurrJettonIndex = 0;
this.pGameViewJs.ChangeJettonState(!0);
var c = [];
memset(c, 0, n.GAME_PLAYER);
o[0] != INVALID_CHAIR && (c[o[0]] = a[0]);
o[1] != INVALID_CHAIR && (c[o[1]] = a[1]);
c[this.GetMeChairID()] = 0;
this.pGameViewJs.ShowPokerResult(1, c, !1);
this.pGameViewJs.OnWaitStatus(!0);
}
this.stGameRecord = i.GameRecord;
this.pGameViewJs.ShowGameRecordView(this.stGameRecord);
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnGameFree(t);

case n.SUB_S_GAME_START:
return this.OnGameStart(t);

case n.SUB_S_USER_BET:
return this.OnGameUserBet(t);

case n.SUB_S_OTHERS_BET:
return this.OnGameOthersBet(t);

case n.SUB_S_GAME_END:
return this.OnGameEnd(t);

case n.SUB_S_SHOW_USERLIST:
return this.OnGameShowUserlist(t);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
return !0;
},
OnGameFree: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.cbGameStatus = n.GS_GAME_FREE;
this.fRoundTime = t.TimeLeave;
this.lUserScore = this.jsMeUserItem.GetUserScore();
this.SetTime(!1);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.SetGameStatus(GAME_STATUS_FREE);
memset(this.lAllBet, 0, n.AREA_MAX);
memset(this.lPlayBet, 0, n.AREA_MAX);
this.pGameViewJs.OnResetGameView();
return !0;
},
OnGameStart: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.cbGameStatus = n.GS_USER_BET;
this.fRoundTime = t.TimeLeave;
this.pGameViewJs.ChangeJettonState(!1);
this.SetTime(!0);
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.OnGameStartAction();
return !0;
},
OnGameUserBet: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
if (0 == t.RetCode) {
if (this.GetMeChairID() == t.ChairID) {
this.lPlayBet[t.AreaIndex - 1] += t.BetScore;
this.SetGameStatus(GAME_STATUS_PLAY);
}
this.pGameViewJs.PlaceJettonAction(t.ChairID, t.BetScore, t.AreaIndex - 1);
this.lAllBet[t.AreaIndex - 1] += t.BetScore;
for (var i = 0; i < n.AREA_MAX; i++) this.pGameViewJs.ShowUserJettonWithGameScene(i, this.lAllBet[i], this.lPlayBet[i]);
this.pGameViewJs.ChangeJettonState(!1);
return !0;
}
var a = "" + t.ResultTip;
ManagerHelp_SetSystemLabel(a);
},
OnGameOthersBet: function(e) {
for (var t = window.net.netSerializer.unpackMsg("CMD_S_OthersBet", e), i = 0; i < t.UsersBetList.length; i++) {
var a = t.UsersBetList[i];
if (this.GetMeChairID() != a.ChairID) {
this.pGameViewJs.PlaceJettonAction(a.ChairID, a.BetScore, a.AreaIndex - 1);
this.lAllBet[a.AreaIndex - 1] += a.BetScore;
for (var o = 0; o < n.AREA_MAX; o++) this.pGameViewJs.ShowUserJettonWithGameScene(o, this.lAllBet[o], this.lPlayBet[o]);
}
}
return !0;
},
OnGameEnd: function(e) {
var t = this, i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.cbGameStatus = n.GS_GAME_END;
this.fRoundTime = i.TimeLeave;
this.pGameViewJs.ShowGameStatus(this.cbGameStatus);
this.pGameViewJs.ChangeJettonState(!0);
var a = [];
memset(a, 0, MAX_CHAIR);
for (var o = i.UserWinList.length, s = 0; s < o; s++) {
var r = i.UserWinList[s];
null == r.WinScore.high && null == r.WinScore.low ? a[r.ChairID] = r.WinScore : a[r.ChairID] = 0;
}
for (var c = 0, l = i.WinJPUserList.length, h = 0; h < l; h++) {
var u = i.WinJPUserList[h];
null == u.WinScore.high && null == u.WinScore.low && u.ChairID == this.GetMeChairID() && (c = u.WinScore);
}
this.pGameViewJs.OnBetFinish(function() {
t.pGameViewJs.ShowPokerResult(i.AreaWinLose, a, !0);
if (i.WinJackpotScore > 0 && i.WinJackpotPercent > 0) {
var e = -1;
1 == i.AreaWinLose[0] && 0 == i.AreaWinLose[1] ? e = 0 : 0 == i.AreaWinLose[0] && 1 == i.AreaWinLose[1] && (e = 1);
t.scheduleOnce(function() {
this.pGameViewJs.ShowJackPotWin(i.WinJackpotScore, i.WinJackpotPercent, c, e);
}.bind(t), 3);
}
});
return !0;
},
OnGameShowUserlist: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_ShowUserList", e);
this.pGameViewJs.OnShowUserlist(t);
return !0;
},
SetTime: function(e) {
this.pGameViewJs.SetTimeClock(this.fRoundTime, e);
},
OnButtonJetton: function(e, t) {
this.cbCurrJettonIndex = t;
this.pGameViewJs.SetBtnSelectState(t);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
return !0;
},
OnPlaceJetton: function(e, t) {
var i = this.arrBetChip[this.cbCurrJettonIndex], a = this.jsMeUserItem.GetUserScore();
window.mfConfig.PlayAudio("131/Audio/btnclick", !1);
this.cbGameStatus == n.GS_USER_BET && a >= i && this.SendPlaceJetton(t, i);
},
OnFrameButtonJackPotDraw: function(e, t, i, n, a, o) {
var s = this;
GameFrameView.instances && GameFrameView.instances.strJackPotDrawPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotDrawPath, cc.Prefab, function(r, c) {
if (!r) {
var l = cc.instantiate(c);
s.jackPotTurnItemJs = l.getComponent("jsNewJackPotDraw");
s.jackPotTurnItemJs.doDraw(t, i, n, a, o);
e.addChild(l);
}
});
},
OnFrameButtonJackPotRecord: function(e, t) {
var i = this;
GameFrameView.instances && GameFrameView.instances.strJackPotRecordPath.length > 0 && cc.loader.loadRes(GameFrameView.instances.strJackPotRecordPath, cc.Prefab, function(n, a) {
if (!n) {
var o = cc.instantiate(a);
i.jsJackpotRank = o.getComponent("jsNewJackPotDrawRecord");
i.jsJackpotRank.jsGameEngine = i;
i.jsJackpotRank.setData(OnIntScore(e), t);
i.nodeRootCanvas.addChild(o);
}
});
},
OnLoadGameRecord: function(e) {
if (!e) {
var t = this.pGameViewJs.OnInitHistoryView();
if (!t) return;
this.nodeGameHistory = t;
}
if (this.nodeGameHistory) {
var i = this.nodeGameHistory.getComponent("PYB_GameHistory");
i.ResetGameResultData();
if (this.stGameRecord) {
this.stGameRecord.length > n.MAX_LUDAN_HISTORY && (this.stGameRecord = this.stGameRecord.slice(-n.MAX_LUDAN_HISTORY));
for (var a = 0; a < this.stGameRecord.length; a++) {
var o = this.stGameRecord[a], s = new n.tagTableResult();
if (1 == o) {
s.bPlayer = !0;
s.bBanker = !1;
} else if (2 == o) {
s.bPlayer = !1;
s.bBanker = !0;
}
i.InsertNewGameRecord(s);
i.InsertNewGameResult(s);
}
}
i.UpdateGameRecordAll(e);
}
},
SendPlaceJetton: function(e, t) {
var i = {};
i.AreaIndex = parseInt(e);
i.BetScore = t;
var a = window.net.netSerializer.packMsg("CMD_C_UserBet", i);
this.SendGameData(n.SUB_C_USER_BET, a, a.length);
}
});
cc._RF.pop();
}, {
PYB_CMD_Game: "PYB_CMD_Game"
} ],
PYB_GameHistory: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b66a8CFghEiI7VXpqJO9+Z", "PYB_GameHistory");
var n = e("PYB_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_aGameResult: [],
m_aGameRecord: [],
m_aDaLuTFullData: [],
m_aDaLuTFullDataOrder: [],
m_aXiaSanLuTFullData: [],
m_bGuaiWan: 0,
m_nGuaiWanItemCount: 0,
m_nChangeX: 0,
m_nChangeY: 0,
m_aXiaSanLuItemArray: [],
m_aLabGameCount: cc.Label,
m_aLabAreaWinCount: {
default: [],
type: cc.Label
},
m_GameRecordXian: {
default: [],
type: cc.Label
},
m_GameRecordZhuang: {
default: [],
type: cc.Label
},
m_GameRecordNode: cc.Node,
m_PrefabRecordItem: cc.Prefab,
m_ZhuZaiLuNode: cc.Node,
m_DaLuNode: cc.Node,
m_DaYanZaiLuNode: cc.Node,
m_XiaoLuNode: cc.Node,
m_XiaoQiangLuNode: cc.Node,
m_NodeNextXian_DaYanZaiLu: cc.Node,
m_NodeNextXian_XiaoLu: cc.Node,
m_NodeNextXian_XiaoQiangLu: cc.Node,
m_NodeNextZhuang_DaYanZaiLu: cc.Node,
m_NodeNextZhuang_XiaoLu: cc.Node,
m_NodeNextZhuang_XiaoQiangLu: cc.Node,
m_PrefabZhuZaiLuItem: cc.Prefab,
m_PrefabDaLuItem: cc.Prefab,
m_PrefabDaYanZaiLuItem: cc.Prefab,
m_PrefabXiaoLuItem: cc.Prefab,
m_PrefabXiaoQiangLuItem: cc.Prefab,
m_aZhuZaiLuItemJs: [],
m_aDaLuItemJs: [],
m_aDaYanZaiLuItemJs: [],
m_aXiaoLuItemJs: [],
m_aXiaoQiangLuItemJs: []
},
onLoad: function() {
for (var e = 0; e < 100; ++e) for (var t = 0; t < 6; ++t) this.m_aXiaSanLuItemArray.push(0);
for (var i = 0; i < 8; ++i) for (var n = 0; n < 6; ++n) {
var a = cc.instantiate(this.m_PrefabZhuZaiLuItem), o = a.getComponent("PYB_LuDan_ZhuZaiLu");
this.m_ZhuZaiLuNode.addChild(a);
o.ResetBoxMatrixPos(i, n);
this.m_aZhuZaiLuItemJs.push(o);
}
for (var s = 0; s < 24; ++s) for (var r = 0; r < 6; ++r) {
var c = cc.instantiate(this.m_PrefabDaLuItem);
this.m_DaLuNode.addChild(c);
var l = c.getComponent("PYB_LuDan_DaLu");
l.ResetBoxMatrixPos(s, r);
this.m_aDaLuItemJs.push(l);
}
for (var h = 0; h < 24; ++h) for (var u = 0; u < 6; ++u) {
var d = cc.instantiate(this.m_PrefabDaYanZaiLuItem);
this.m_DaYanZaiLuNode.addChild(d);
var m = d.getComponent("PYB_LuDan_DaYanZaiLu");
m.ResetBoxMatrixPos(h, u);
this.m_aDaYanZaiLuItemJs.push(m);
d = cc.instantiate(this.m_PrefabXiaoLuItem);
this.m_XiaoLuNode.addChild(d);
var f = d.getComponent("PYB_LuDan_XiaoLu");
f.ResetBoxMatrixPos(h, u);
this.m_aXiaoLuItemJs.push(f);
d = cc.instantiate(this.m_PrefabXiaoQiangLuItem);
this.m_XiaoQiangLuNode.addChild(d);
var p = d.getComponent("PYB_LuDan_XiaoQiangLu");
p.ResetBoxMatrixPos(h, u);
this.m_aXiaoQiangLuItemJs.push(p);
}
},
ResetGameResultHistory: function(e) {
cc.assert(!1, "接口未启用");
},
ResetGameResultData: function() {
this.m_aGameResult = [];
this.m_aGameRecord = [];
},
InsertNewGameResult: function(e) {
this.m_aGameResult.length >= n.MAX_LUDAN_HISTORY && this.m_aGameResult.splice(0, 1);
this.m_aGameResult.push(e);
},
InsertNewGameRecord: function(e) {
this.m_aGameRecord.length >= 25 && this.m_aGameRecord.shift();
this.m_aGameRecord.push(e);
},
UpdateGameRecordAll: function(e) {
this.UpdateGameRecord_HistoryLayer();
this.UpdateAreaPercentView();
this.UpdateZhuZaiLuView(e);
this.UpdateDaLuView(e);
this.UpdateDaYanZaiLuView(e);
this.UpdateXiaoLuView(e);
this.UpdateXiaoQiangLuView(e);
this.UpdateYuCe();
},
UpdateGameRecord_HistoryLayer: function() {
this.m_GameRecordNode.removeAllChildren();
var e = this.m_aGameRecord.length, t = 0;
e > 25 && (t = e - 25);
for (;t < e; ++t) {
var i = this.m_aGameRecord[t], n = cc.instantiate(this.m_PrefabRecordItem), a = n.getComponent("PYB_GameRecordItem");
this.m_GameRecordNode.addChild(n);
n.setPosition(cc.v2(0, 0));
i.bPlayer ? a.OnSetSpriteFrame(0) : i.bBanker && a.OnSetSpriteFrame(1);
}
},
UpdateAreaPercentView: function() {
var e, t = 0, i = 0;
e = this.m_aGameResult.length;
for (var a = 0; a < e; ++a) {
var o = this.m_aGameResult[a];
o.bPlayer && t++;
o.bBanker && i++;
}
this.m_aLabAreaWinCount[n.AREA_TAIL].string = t;
this.m_aLabAreaWinCount[n.AREA_HEAD].string = i;
this.m_aLabGameCount.string = e;
},
DaLu_FindLastNodePos: function(e, t) {
cc.assert(!(0 == e && 0 == t));
if (0 == t) return {
x: e - 1,
y: t
};
if (t > 0) {
if (null != this.m_aDaLuTFullData[6 * e + (t - 1)]) return {
x: e,
y: t - 1
};
if (null == this.m_aDaLuTFullData[6 * e + (t - 1)] && null != this.m_aDaLuTFullData[6 * (e - 1) + t]) return {
x: e - 1,
y: t
};
}
},
DaLu_FindNextNodePos: function(e, t, i, n) {
if (e) {
if (null == this.m_aDaLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker == this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aDaLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aDaLuTFullData[6 * (t - 1) + i] && null == this.m_aDaLuTFullData[6 * t + i - 1] && this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bPlayer == this.m_aDaLuTFullData[6 * t + i].gameResult.bPlayer && (this.m_aDaLuTFullData[6 * (t - 1) + i].gameResult.bBanker, 
this.m_aDaLuTFullData[6 * t + i].gameResult.bBanker), t += 1);
return {
x: t,
y: i
};
}
if (null == this.m_aXiaSanLuTFullData[6 * t + (i + 1)]) {
if (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue) t += 1; else if ((i += 1) >= 6) {
t += 1;
i -= 1;
}
} else null != this.m_aXiaSanLuTFullData[6 * t + (i + 1)] && (t > 0 && i > 0 && null != this.m_aXiaSanLuTFullData[6 * (t - 1) + i] && null == this.m_aXiaSanLuTFullData[6 * t + i - 1] && this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bRed == this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bRed && (this.m_aXiaSanLuTFullData[6 * (t - 1) + i].aXiaSanLuData.bBlue, 
this.m_aXiaSanLuTFullData[6 * t + i].aXiaSanLuData.bBlue), t += 1);
return {
x: t,
y: i
};
},
DaLu_FindFirstUnusedXPos: function(e) {
if (e) {
for (var t = 0; t < 100; ++t) if (null == this.m_aDaLuTFullData[6 * t]) return t;
} else for (var i = 0; i < 100; ++i) if (null == this.m_aXiaSanLuTFullData[6 * i]) return i;
},
UpdateZhuZaiLuView: function(e) {
for (var t = 0; t < 48; ++t) this.m_aZhuZaiLuItemJs[t].ResetGameResult();
var i = this.m_aGameResult.length - 48 + 2;
i = i > 0 ? i : 0;
for (var n = 0; n < 48 && !(n >= this.m_aGameResult.length); ++n) {
var a = n % 6, o = parseInt(n / 6);
if (i + n < this.m_aGameResult.length) {
this.m_aZhuZaiLuItemJs[o + 8 * a].ResetGameResult(this.m_aGameResult[i + n]);
i + n == this.m_aGameResult.length - 1 && e && this.m_aZhuZaiLuItemJs[o + 8 * a].OnPlayAnim();
} else this.m_aZhuZaiLuItemJs[o + 8 * a].ResetGameResult(null);
}
},
UpdateDaLuView: function(e) {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var t = 0; t < 144; ++t) {
this.m_aDaLuItemJs[t].ResetGameResult();
this.m_aDaLuItemJs[t].ResetDrawCount(0);
}
for (var i = 0, n = 0, a = 0, o = 0, s = 0, r = 0; r < this.m_aGameResult.length; ++r) {
var c = this.m_aGameResult[r], l = 6 * i + n, h = 0, u = null;
if (l > 0) {
var d = this.DaLu_FindLastNodePos(i, n);
h = 6 * d.x + d.y;
u = this.m_aDaLuTFullData[h].gameResult;
cc.assert(null != u, "error, lastPos=" + d.x + "," + d.y + ";lastIndex=" + h);
}
if (n > 0 && c.bBanker != u.bBanker) {
l = 6 * (i = this.DaLu_FindFirstUnusedXPos(!0)) + (n = 0);
i >= a && (a = i);
}
var m = {};
m.x = i;
m.y = n;
m.gameResult = c;
m.nDrawCount = 0;
this.m_aDaLuTFullData[l] = m;
this.m_aDaLuTFullDataOrder.push(6 * i + n);
o = i;
s = n;
var f = this.DaLu_FindNextNodePos(!0, i, n);
i = f.x;
n = f.y;
i >= a && (a = i);
}
if (!(this.m_aDaLuTFullData.length <= 0 || this.m_aDaLuTFullDataOrder.length <= 0)) {
var p = a - 24 + 1;
p = p < 0 ? 0 : p;
for (var _ = 0; _ < this.m_aDaLuTFullData.length; ++_) if (null != this.m_aDaLuTFullData[_]) {
var S = this.m_aDaLuTFullData[_];
if (!(S.x < p)) {
this.m_aDaLuItemJs[S.x - p + 24 * S.y].ResetGameResult(S.gameResult);
this.m_aDaLuItemJs[S.x - p + 24 * S.y].ResetDrawCount(S.nDrawCount);
_ == this.m_aDaLuTFullData.length - 1 && e && this.m_aDaLuItemJs[o - p + 24 * s].OnPlayAnim();
}
}
}
},
isSameXLastItemData: function(e, t) {
for (var i = !0, n = 0; n < 6; ++n) if (null != this.m_aDaLuTFullData[6 * e + n] && null == this.m_aDaLuTFullData[6 * t + n] || null == this.m_aDaLuTFullData[6 * e + n] && null != this.m_aDaLuTFullData[6 * t + n]) {
i = !1;
break;
}
return i;
},
UpdateDaYanZaiLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aDaYanZaiLuItemJs[t].ResetData(0);
var i = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (i = 12);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
var c = r.x, l = r.y;
if (!(6 * c + l < i)) {
var h = this.m_aDaLuTFullData[6 * (c - 1) + l], u = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == l) if (this.isSameXLastItemData(c - 2, c - 1)) {
u.bQiJiao = !0;
u.bRed = !0;
} else {
u.bTuJiao = !0;
u.bBlue = !0;
} else if (null != h) {
u.bYouDui = !0;
u.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (c - 1) + l - 1]) {
u.bYouDui = !0;
u.bRed = !0;
} else {
u.bWuDui = !0;
u.bBlue = !0;
}
this.aXiaSanLuItemData.push(u);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
for (var d = 0, m = 0, f = 0, p = 0, _ = 0, S = 0; S < this.aXiaSanLuItemData.length; ++S) {
var g = this.aXiaSanLuItemData[S], C = 6 * d + m, w = null;
if (C > 0) {
w = this.aXiaSanLuItemData[S - 1];
if (g.bRed != w.bRed) {
C = 6 * (d = this.DaLu_FindFirstUnusedXPos(!1)) + (m = 0);
d >= f && (f = d);
}
}
var b = {};
b.aXiaSanLuData = g;
b.x = d;
b.y = m;
this.m_aXiaSanLuTFullData[C] = b;
p = d;
_ = m;
var A = this.DaLu_FindNextNodePos(!1, d, m);
d = A.x;
m = A.y;
d >= f && (f = d);
}
var v = f - 24 + 1;
v = v < 0 ? 0 : v;
for (var G = 0; G < this.m_aXiaSanLuTFullData.length; ++G) if (null != this.m_aXiaSanLuTFullData[G]) {
var I = this.m_aXiaSanLuTFullData[G];
if (!(I.x < v)) {
this.m_aDaYanZaiLuItemJs[I.x - v + 24 * I.y].ResetData(this.m_aXiaSanLuTFullData[G].aXiaSanLuData);
G == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aDaYanZaiLuItemJs[p - v + 24 * _].OnPlayAnim();
}
}
}
}
},
UpdateXiaoLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoLuItemJs[t].ResetData(0);
var i = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (i = 18);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
var c = r.x, l = r.y;
if (!(6 * c + l < i)) {
var h = this.m_aDaLuTFullData[6 * (c - 2) + l], u = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == l) if (this.isSameXLastItemData(c - 3, c - 1)) {
u.bQiJiao = !0;
u.bRed = !0;
} else {
u.bTuJiao = !0;
u.bBlue = !0;
} else if (null != h) {
u.bYouDui = !0;
u.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (c - 2) + l - 1]) {
u.bYouDui = !0;
u.bRed = !0;
} else {
u.bWuDui = !0;
u.bBlue = !0;
}
this.aXiaSanLuItemData.push(u);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
for (var d = 0, m = 0, f = 0, p = 0, _ = 0, S = 0; S < this.aXiaSanLuItemData.length; ++S) {
var g = this.aXiaSanLuItemData[S], C = 6 * d + m, w = null;
if (C > 0) {
w = this.aXiaSanLuItemData[S - 1];
if (g.bRed != w.bRed) {
C = 6 * (d = this.DaLu_FindFirstUnusedXPos(!1)) + (m = 0);
d >= f && (f = d);
}
}
var b = {};
b.aXiaSanLuData = g;
b.x = d;
b.y = m;
this.m_aXiaSanLuTFullData[C] = b;
p = d;
_ = m;
var A = this.DaLu_FindNextNodePos(!1, d, m);
d = A.x;
m = A.y;
d >= f && (f = d);
}
var v = f - 24 + 1;
v = v < 0 ? 0 : v;
for (var G = 0; G < this.m_aXiaSanLuTFullData.length; ++G) if (null != this.m_aXiaSanLuTFullData[G]) {
var I = this.m_aXiaSanLuTFullData[G];
if (!(I.x < v)) {
this.m_aXiaoLuItemJs[I.x - v + 24 * I.y].ResetData(this.m_aXiaSanLuTFullData[G].aXiaSanLuData);
G == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoLuItemJs[p - v + 24 * _].OnPlayAnim();
}
}
}
}
},
UpdateXiaoQiangLuView: function(e) {
this.aXiaSanLuItemData = [];
for (var t = 0; t < 144; ++t) this.m_aXiaoQiangLuItemJs[t].ResetData(0);
var i = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (i = 24);
for (var n = this.m_aDaLuTFullDataOrder.indexOf(i), a = this.m_aDaLuTFullDataOrder.length, o = n; o < a; ++o) {
var s = this.m_aDaLuTFullDataOrder[n++], r = this.m_aDaLuTFullData[s];
if (null != r) {
var c = r.x, l = r.y;
if (!(6 * c + l < i)) {
var h = this.m_aDaLuTFullData[6 * (c - 3) + l], u = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == l) if (this.isSameXLastItemData(c - 4, c - 1)) {
u.bQiJiao = !0;
u.bRed = !0;
} else {
u.bTuJiao = !0;
u.bBlue = !0;
} else if (null != h) {
u.bYouDui = !0;
u.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (c - 3) + l - 1]) {
u.bYouDui = !0;
u.bRed = !0;
} else {
u.bWuDui = !0;
u.bBlue = !0;
}
this.aXiaSanLuItemData.push(u);
}
}
}
if (!(this.aXiaSanLuItemData.length <= 0)) {
this.m_aXiaSanLuTFullData.splice(0, this.m_aXiaSanLuTFullData.length);
for (var d = 0, m = 0, f = 0, p = 0, _ = 0, S = 0; S < this.aXiaSanLuItemData.length; ++S) {
var g = this.aXiaSanLuItemData[S], C = 6 * d + m, w = null;
if (C > 0) {
w = this.aXiaSanLuItemData[S - 1];
if (g.bRed != w.bRed) {
C = 6 * (d = this.DaLu_FindFirstUnusedXPos(!1)) + (m = 0);
d >= f && (f = d);
}
}
var b = {};
b.aXiaSanLuData = g;
b.x = d;
b.y = m;
this.m_aXiaSanLuTFullData[C] = b;
p = d;
_ = m;
var A = this.DaLu_FindNextNodePos(!1, d, m);
d = A.x;
m = A.y;
d >= f && (f = d);
}
var v = f - 24 + 1;
v = v < 0 ? 0 : v;
for (var G = 0; G < this.m_aXiaSanLuTFullData.length; ++G) if (null != this.m_aXiaSanLuTFullData[G]) {
var I = this.m_aXiaSanLuTFullData[G];
if (!(I.x < v)) {
this.m_aXiaoQiangLuItemJs[I.x - v + 24 * I.y].ResetData(this.m_aXiaSanLuTFullData[G].aXiaSanLuData);
G == this.m_aXiaSanLuTFullData.length - 1 && e && this.m_aXiaoQiangLuItemJs[p - v + 24 * _].OnPlayAnim();
}
}
}
}
},
UpdateYuCe: function() {
if (null != this.m_aDaLuTFullData[7] || null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12]) {
this.m_NodeNextXian_DaYanZaiLu.active = !0;
this.m_NodeNextZhuang_DaYanZaiLu.active = !0;
this.UpdateYuCe_DaYanZaiLu();
} else {
this.m_NodeNextXian_DaYanZaiLu.active = !1;
this.m_NodeNextZhuang_DaYanZaiLu.active = !1;
}
if (null != this.m_aDaLuTFullData[13] || null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18]) {
this.m_NodeNextXian_XiaoLu.active = !0;
this.m_NodeNextZhuang_XiaoLu.active = !0;
this.UpdateYuCe_XiaoLu();
} else {
this.m_NodeNextXian_XiaoLu.active = !1;
this.m_NodeNextZhuang_XiaoLu.active = !1;
}
if (null != this.m_aDaLuTFullData[19] || null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24]) {
this.m_NodeNextXian_XiaoQiangLu.active = !0;
this.m_NodeNextZhuang_XiaoQiangLu.active = !0;
this.UpdateYuCe_XiaoQiangLu();
} else {
this.m_NodeNextXian_XiaoQiangLu.active = !1;
this.m_NodeNextZhuang_XiaoQiangLu.active = !1;
}
},
UpdateYuCe_DaYanZaiLu: function() {
var e = new n.tagTableResult();
e.bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateDaYanZaiLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoLu: function() {
var e = new n.tagTableResult();
e.bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateYuCe_XiaoQiangLu: function() {
var e = new n.tagTableResult();
e.bPlayer = !0;
e.bBanker = !1;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!0);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
(e = new n.tagTableResult()).bPlayer = !1;
e.bBanker = !0;
this.InsertNewGameResult(e);
this.UpdateDaLuData();
this.UpdateXiaoQiangLuData(!1);
this.m_aGameResult.splice(this.m_aGameResult.length - 1, 1);
this.UpdateDaLuData();
},
UpdateDaLuData: function() {
this.m_aDaLuTFullData.splice(0, this.m_aDaLuTFullData.length);
this.m_aDaLuTFullDataOrder.splice(0, this.m_aDaLuTFullDataOrder.length);
for (var e = 0, t = 0, i = 0; i < this.m_aGameResult.length; ++i) {
var n = this.m_aGameResult[i], a = 6 * e + t, o = 0, s = null;
if (a > 0) {
var r = this.DaLu_FindLastNodePos(e, t);
o = 6 * r.x + r.y;
s = this.m_aDaLuTFullData[o].gameResult;
cc.assert(null != s, "error, lastPos=" + r.x + "," + r.y + ";lastIndex=" + o);
}
t > 0 && n.bBanker != s.bBanker && (a = 6 * (e = this.DaLu_FindFirstUnusedXPos(!0)) + (t = 0));
var c = {};
c.x = e;
c.y = t;
c.gameResult = n;
c.nDrawCount = 0;
this.m_aDaLuTFullData[a] = c;
this.m_aDaLuTFullDataOrder.push(6 * e + t);
var l = this.DaLu_FindNextNodePos(!0, e, t);
e = l.x;
t = l.y;
}
},
UpdateDaYanZaiLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 7;
if (null != this.m_aDaLuTFullData[7] || null != this.m_aDaLuTFullData[12]) {
null == this.m_aDaLuTFullData[7] && null != this.m_aDaLuTFullData[12] && (t = 12);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 1) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 2, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 1) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_DaYanZaiLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_DaYanZaiLu, !1);
}
},
UpdateXiaoLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 13;
if (null != this.m_aDaLuTFullData[13] || null != this.m_aDaLuTFullData[18]) {
null == this.m_aDaLuTFullData[13] && null != this.m_aDaLuTFullData[18] && (t = 18);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 2) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 3, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 2) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoLu, !1);
}
},
UpdateXiaoQiangLuData: function(e) {
this.aXiaSanLuItemData = [];
var t = 19;
if (null != this.m_aDaLuTFullData[19] || null != this.m_aDaLuTFullData[24]) {
null == this.m_aDaLuTFullData[19] && null != this.m_aDaLuTFullData[24] && (t = 24);
for (var i = this.m_aDaLuTFullDataOrder.indexOf(t), n = this.m_aDaLuTFullDataOrder.length, a = i; a < n; ++a) {
var o = this.m_aDaLuTFullDataOrder[i++], s = this.m_aDaLuTFullData[o];
if (null != s) {
var r = s.x, c = s.y;
if (!(6 * r + c < t)) {
var l = this.m_aDaLuTFullData[6 * (r - 3) + c], h = {
bYouDui: !1,
bWuDui: !1,
bQiJiao: !1,
bTuJiao: !1,
bTuJiaoLian: !1,
bRed: !1,
bBlue: !1
};
if (0 == c) if (this.isSameXLastItemData(r - 4, r - 1)) {
h.bQiJiao = !0;
h.bRed = !0;
} else {
h.bTuJiao = !0;
h.bBlue = !0;
} else if (null != l) {
h.bYouDui = !0;
h.bRed = !0;
} else if (null == this.m_aDaLuTFullData[6 * (r - 3) + c - 1]) {
h.bYouDui = !0;
h.bRed = !0;
} else {
h.bWuDui = !0;
h.bBlue = !0;
}
this.aXiaSanLuItemData.push(h);
}
}
}
var u = this.aXiaSanLuItemData[this.aXiaSanLuItemData.length - 1];
e ? u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextXian_XiaoQiangLu, !1) : u.bRed && !u.bBlue ? this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !0) : !u.bRed && u.bBlue && this.SetGameSprite(this.m_NodeNextZhuang_XiaoQiangLu, !1);
}
},
SetGameSprite: function(e, t) {
e.getComponent("PYB_LuDan_Next").OnSetSpriteFrame(t);
}
});
cc._RF.pop();
}, {
PYB_CMD_Game: "PYB_CMD_Game"
} ],
PYB_GameRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed3bbJhzYVNFLYpaG8tuPKJ", "PYB_GameRecordItem");
cc.Class({
extends: cc.Component,
properties: {
spfWinArea: cc.Sprite,
spfAryArea: [ cc.SpriteFrame ]
},
onLoad: function() {},
OnSetSpriteFrame: function(e) {
this.spfAryArea && this.spfAryArea[e] && this.spfWinArea && (this.spfWinArea.spriteFrame = this.spfAryArea[e]);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
PYB_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3554dZzQepE4KoPPh3hGb8d", "PYB_GameView");
var n = e("PYB_CMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
arrChipItem: [ cc.Label ],
arrBetArea: [ cc.Node ],
labelGameStatus: cc.Label,
nodeGameTime: cc.Node,
GameStatusAnim: cc.Node,
nodeWaitStatus: cc.Node,
nodeRecord: cc.Node,
pfRecordItem: cc.Prefab,
nodePlayerList: cc.Node,
nodeGameHistory: cc.Node,
pfHistory: cc.Prefab,
pMenuLayer: cc.Node,
nodeTass: cc.Node,
nodeSpineTass: cc.Node,
nodeJackpot: cc.Node,
nodeJackPotTurn: cc.Node,
UserScore: cc.Node,
yanhuaNode: [ cc.Node ],
faseNode: [ cc.Node ],
rulePf: cc.Prefab,
pfJpRule: cc.Prefab
},
OnFrameViewLoad: function() {
this.strJackPotRecordPath = "AGameHelp/NewJackpot/pfNewJackPot";
this.strJackPotDrawPath = "AGameHelp/NewJackpot/pfNewJackPotDraw";
},
OnResetGameView: function() {
for (var e = 0; e < this.faseNode.length; e++) this.faseNode[e].active = !1;
for (var t = 0; t < this.yanhuaNode.length; t++) this.yanhuaNode[t].active = !1;
for (var i = 0; i < n.AREA_MAX; i++) this.ShowUserJettonWithGameScene(i, 0, 0);
for (var a = 0; a < n.AREA_MAX; a++) {
this.arrBetArea[a].getComponent("PYB_BetArea").nodeAnimation.active = !1;
}
this.OnFrameResetView();
this.OnWaitStatus(!1);
this.nodeSpineTass.active = !1;
},
ShowBetChip: function(e) {
for (var t = 0, i = 0; i < n.JETTON_NUM; i++) {
t = OnIntScore(e[i]);
this.arrChipItem[i] && (this.arrChipItem[i].string = t);
}
this.OnFrameInitJetton(e);
},
ChangeJettonState: function(e) {
for (var t = this.pGameEngineJs.jsMeUserItem.GetUserScore(), i = 0, a = 0; a < n.AREA_MAX; a++) i += this.pGameEngineJs.lPlayBet[a];
t -= i;
var o = this.pGameEngineJs.arrBetChip.concat(), s = [];
memset(s, !1, n.JETTON_NUM);
if (!e) for (var r = 0; r < n.JETTON_NUM && t >= o[r]; r++) s[r] = !0;
var c = this.pGameEngineJs.cbCurrJettonIndex;
if (s[c]) this.SetBtnSelectState(c); else for (var l = c - 1; l >= 0; l--) if (s[l]) {
this.pGameEngineJs.cbCurrJettonIndex = l;
c = l;
this.SetBtnSelectState(l);
break;
}
for (var h = 0; h < n.JETTON_NUM; h++) if (this.arrChipItem[h]) {
var u = this.arrChipItem[h].node.parent;
if (u) {
var d = u.getComponent(cc.Button);
this.OnSetBtnDisable(d, s[h]);
}
}
},
OnSetBtnDisable: function(e, t) {
e.interactable = t;
if (!t) {
e.node.getChildByName("Select").active = !1;
}
},
SetBtnSelectState: function(e) {
for (var t = 0; t < n.JETTON_NUM; t++) if (this.arrChipItem[t]) {
var i = this.arrChipItem[t].node.parent;
if (i) {
var a = i.getComponent(cc.Button).node.getChildByName("Select");
a && (a.active = t == e);
}
}
},
OnFrameEventUserScore: function(e, t) {
return !0;
},
SetTimeClock: function(e, t) {
this.nodeGameTime.getComponent("jsTimeDown").OnSetGameTime(parseInt(e), t, t);
},
ShowUserJettonWithGameScene: function(e, t, i) {
var n = this.arrBetArea[e].getComponent("PYB_BetArea");
n.labelAllBet.string = OnIntScore(t);
n.labelMeBet.string = OnIntScore(i);
n.labelAllBet.node.parent.active = 0 != t;
n.labelMeBet.node.parent.active = 0 != i;
},
ShowUserBetInfo: function(e, t, i, a, o) {
for (var s = 0, r = 0, c = 0, l = 0; l < n.AREA_MAX; l++) {
s += i[l];
r += t[l];
c += a[l];
}
var h = [];
memset(h, 0, n.GAME_PLAYER);
o[0] != INVALID_CHAIR && (h[o[0]] = r);
o[1] != INVALID_CHAIR && (h[o[1]] = c);
h[this.GetMeChairID()] = s;
this.OnFrameBetInfo(e, t, h);
},
OnGameStartAction: function() {
this.ShowStartBet();
},
ShowStartBet: function() {
var e = this.GameStatusAnim.getComponent("PYB_ActionHelp");
e.ResetAllNode();
e.StartCompareAction();
window.mfConfig.PlayAudio("GameFrame/Audio/StartBet");
},
OnBetFinish: function(e) {
var t = this.GameStatusAnim.getComponent("PYB_ActionHelp");
t.ResetAllNode();
window.mfConfig.PlayAudio("GameFrame/Audio/StopBet");
e ? t.StartGameEndAction(e) : t.StartGameEndAction();
},
OnWaitStatus: function(e) {
this.nodeWaitStatus && (this.nodeWaitStatus.active = e);
},
ShowPokerResult: function(e, t, i) {
var n = this, a = -1;
1 == e[0] && 0 == e[1] ? a = 0 : 0 == e[0] && 1 == e[1] && (a = 1);
if (i) {
var o = "";
o = 0 == a ? "reverse side" : "front";
this.nodeTass.active = !0;
this.nodeSpineTass.active = !0;
var s = this.nodeSpineTass.getComponent(sp.Skeleton);
PlaySkeletonAnimation(s, !1, o).setCompleteListener(function() {
n.nodeTass.active = !1;
n.ShowWinAreaAnim(a);
n.OnAddGameRecord(a);
n.OnGameEndJettonAction(a, t, !0);
});
} else {
this.ShowWinAreaAnim(a);
this.OnGameEndJettonAction(a, t, !1);
}
},
ShowWinAreaAnim: function(e) {
if (-1 != e) {
window.mfConfig.PlayAudio("131/Audio/paoqi", !1);
this.arrBetArea[e].getComponent("PYB_BetArea").nodeAnimation.active = !0;
}
},
PlaceJettonAction: function(e, t, i) {
var n = this.arrBetArea[i].getComponent("PYB_BetArea").nodeJettonArea, a = n.width, o = n.height, s = parseInt(Math.random() * (a - 100)), r = parseInt(Math.random() * (o - 100)), c = cc.v2(s + 50, r + 50);
this.OnFramePlaceJetton(e, i, t, c);
},
OnGameEndJettonAction: function(e, t, i) {
var n = [];
this.pGameEngineJs.lAllBet[e] > 0 && n.push(e);
this.OnFrameGameEndAction(n, t, i);
},
ShowGameStatus: function(e) {
switch (e) {
case n.GS_GAME_FREE:
this.labelGameStatus.string = "Have a rest";
return;

case n.GS_USER_BET:
this.labelGameStatus.string = "Bet in time";
return;

case n.GS_GAME_END:
this.labelGameStatus.string = "";
return;
}
},
ShowGameRecordView: function(e) {
var t = e.concat();
this.nodeRecord.removeAllChildren();
t.length > n.MAX_TABLE_HISTORY && (t = t.slice(-n.MAX_TABLE_HISTORY));
for (var i = 0; i < t.length; i++) {
var a = cc.instantiate(this.pfRecordItem);
this.nodeRecord.addChild(a);
a.getComponent("PYB_GameRecordItem").OnSetSpriteFrame(t[i] - 1);
}
},
OnAddGameRecord: function(e) {
var t = this.nodeRecord.children.length, i = cc.instantiate(this.pfRecordItem), a = i.getComponent("PYB_GameRecordItem");
a.OnSetSpriteFrame(e);
t >= n.MAX_TABLE_HISTORY && this.nodeRecord.children.shift();
this.nodeRecord.addChild(i);
a.OnPlayAnim();
this.pGameEngineJs.stGameRecord.push(e + 1);
this.pGameEngineJs.dwRecordCount == n.MAX_LUDAN_HISTORY ? this.pGameEngineJs.dwRecordCount = 1 : this.pGameEngineJs.dwRecordCount++;
this.pGameEngineJs.OnLoadGameRecord(!0);
},
OnButtonGameRecord: function() {
if (this.pGameEngineJs.nodeGameHistory) {
this.pGameEngineJs.nodeGameHistory.active = !0;
SceneManager_AlertShow(this.pGameEngineJs.nodeGameHistory);
} else this.pGameEngineJs.OnLoadGameRecord(!1);
},
OnInitHistoryView: function() {
if (this.nodeGameHistory && this.pfHistory && 0 == this.nodeGameHistory.childrenCount) {
var e = cc.instantiate(this.pfHistory);
this.nodeGameHistory.addChild(e);
return e;
}
return null;
},
onButtonJp: function() {
this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore, this);
},
showHelpPanel: function() {
this.onButtonJPRule();
},
obButtonRule: function() {
var e = cc.instantiate(this.rulePf);
this.nodeRootCanvas.addChild(e, 999);
},
onButtonJPRule: function() {
var e = cc.instantiate(this.pfJpRule);
this.nodeRootCanvas.addChild(e, 999);
},
OnMenuLayerShow: function() {
this.pMenuLayer.active = !this.pMenuLayer.active;
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("jsJackPotNum").setNumHundredJp(e, t);
this.pGameEngineJs.jsJackpotRank && this.pGameEngineJs.jsJackpotRank.jsJackPotDraw && this.pGameEngineJs.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
ShowJackPotWin: function(e, t, i, n) {
var a = this;
a.winJackpotScore = i;
this.faseNode[n].active = !0;
this.faseNode[n].getComponent(sp.Skeleton).animation = "fashe";
0 == n && this.faseNode[n].getComponent(cc.Animation).play("fase1");
this.faseNode[n].getComponent(sp.Skeleton).setCompleteListener(function(o, s, r) {
if ("fashe" == o.animation.name) {
this.faseNode[n].active = !1;
this.yanhuaNode[n].active = !0;
this.pGameEngineJs.OnFrameButtonJackPotDraw(this.nodeJackPotTurn, t / 100, parseInt(e / t * 10), function() {
a.OnSubStake(a.winJackpotScore);
a.winJackpotScore = 0;
}, e, i);
}
}.bind(this));
},
OnSubStake: function(e) {
var t = this.UserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
OnShowUserlist: function(e) {
var t = [], i = new _OnLineUserInfo();
i.dwGameID = e.MostWinUser.GameID;
i.wChairID = e.MostWinUser.ChairID;
i.szNickName = ToUnicode(e.MostWinUser.NickName);
i.cbFaceID = e.MostWinUser.FaceID;
i.cbFrameID = e.MostWinUser.FrameID;
i.cbMemberOrder = e.MostWinUser.VipLv;
i.lUserScore = e.MostWinUser.UserScore;
i.lBetScore = e.MostWinUser.TotalBet;
i.cbWinCount = e.MostWinUser.WinCount;
t.push(i);
for (var n = 0; n < 5; n++) if (null != e.MostBetUsers[n]) {
(i = new _OnLineUserInfo()).dwGameID = e.MostBetUsers[n].GameID;
i.wChairID = e.MostBetUsers[n].ChairID;
i.szNickName = ToUnicode(e.MostBetUsers[n].NickName);
i.cbFaceID = e.MostBetUsers[n].FaceID;
i.cbFrameID = e.MostBetUsers[n].FrameID;
i.cbMemberOrder = e.MostBetUsers[n].VipLv;
i.lUserScore = e.MostBetUsers[n].UserScore;
i.lBetScore = e.MostBetUsers[n].TotalBet;
i.cbWinCount = e.MostBetUsers[n].WinCount;
t.push(i);
}
var a = this.node.getComponent("jsPlayerList");
null != a && a.OnLoadUserInfo(this.GetMeTableID(), this.GetMeChairID(), t);
}
});
cc._RF.pop();
}, {
PYB_CMD_Game: "PYB_CMD_Game"
} ],
PYB_JPRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "231b9gZlLdJ/4IRHlEMbDaa", "PYB_JPRule");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
close: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
PYB_LuDan_DaLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d352dFTtLFGR7Unn5o5aun6", "PYB_LuDan_DaLu");
var n = e("PYB_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_nDrawCount: 0,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_labCount: cc.Label
},
onLoad: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
this.m_GameResult = new n.tagTableResult();
this.m_nDrawCount = 0;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
ResetDrawCount: function(e) {
this.m_nDrawCount = e;
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_labCount.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (0 != this.m_nDrawCount) {
this.m_labCount.node.active = !0;
this.m_labCount.string = this.m_nDrawCount;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
PYB_CMD_Game: "PYB_CMD_Game"
} ],
PYB_LuDan_DaYanZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "856d0dAEuRJlpp0szkMgtog", "PYB_LuDan_DaYanZaiLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
PYB_LuDan_Next: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e1f66cn1elFq4Uj+Tu58AR+", "PYB_LuDan_Next");
cc.Class({
extends: cc.Component,
properties: {
m_TextureRed: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame
},
OnSetSpriteFrame: function(e) {
this.node.getComponent(cc.Sprite).spriteFrame = null;
this.node.getComponent(cc.Sprite).spriteFrame = e ? this.m_TextureRed : this.m_TextureBlue;
}
});
cc._RF.pop();
}, {} ],
PYB_LuDan_XiaoLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8e1edh2oHFLJburZvIOhegT", "PYB_LuDan_XiaoLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
PYB_LuDan_XiaoQiangLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "18d187424NO0qUJ3cV/s72o", "PYB_LuDan_XiaoQiangLu");
cc.Class({
extends: cc.Component,
properties: {
m_bYouDui: !1,
m_bWuDui: !1,
m_bQiJiao: !1,
m_bTuJiao: !1,
m_bTuJiaoLian: !1,
m_bRed: !1,
m_bBlue: !1,
m_XPos: 0,
m_YPos: 0,
m_TextureRead: cc.SpriteFrame,
m_TextureBlue: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite
},
onLoad: function() {
this.m_bYouDui = !1;
this.m_bWuDui = !1;
this.m_bQiJiao = !1;
this.m_bTuJiao = !1;
this.m_bTuJiaoLian = !1, this.m_bRed = !1;
this.m_bBlue = !1;
this.m_XPos = 0;
this.m_YPos = 0;
this.UpdateView();
},
ResetData: function(e) {
this.m_bYouDui = e.bYouDui;
this.m_bWuDui = e.bWuDui;
this.m_bQiJiao = e.bQiJiao;
this.m_bTuJiao = e.bTuJiao;
this.m_bTuJiaoLian = e.bTuJiaoLian;
this.m_bRed = e.bYellow;
this.m_bBlue = e.bBlue;
this.UpdateView();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
UpdateView: function() {
this.m_sprCenterFlg.spriteFrame = null;
(this.m_bYouDui || this.m_bQiJiao || this.m_bTuJiaoLian) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureRead);
(this.m_bWuDui || this.m_bTuJiao) && (this.m_sprCenterFlg.spriteFrame = this.m_TextureBlue);
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {} ],
PYB_LuDan_ZhuZaiLu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "78a831Qv+JBUZbX/b01tVQp", "PYB_LuDan_ZhuZaiLu");
var n = e("PYB_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
m_GameResult: null,
m_XPos: 0,
m_YPos: 0,
m_TexturePlayer: cc.SpriteFrame,
m_TextureDraw: cc.SpriteFrame,
m_TextureBanker: cc.SpriteFrame,
m_TexturePlayerPair: cc.SpriteFrame,
m_TextureBankerPair: cc.SpriteFrame,
m_sprCenterFlg: cc.Sprite,
m_sprLeftTopFlg: cc.Sprite,
m_sprRightBottomFlg: cc.Sprite
},
onLoad: function() {
this.m_XPos = 0;
this.m_YPos = 0;
this.m_GameResult = new n.tagTableResult();
this.UpdateView();
},
ResetGameResult: function(e) {
null == e && (e = new n.tagTableResult());
this.m_GameResult = e.clone();
this.UpdateView();
},
GetGameResult: function() {
return this.m_GameResult.clone();
},
ResetBoxMatrixPos: function(e, t) {
this.m_XPos = e;
this.m_YPos = t;
},
SetVisiable: function(e) {
this.node.active = e;
},
UpdateView: function() {
this.m_sprCenterFlg.node.active = !1;
this.m_sprLeftTopFlg.node.active = !1;
this.m_sprRightBottomFlg.node.active = !1;
if (1 == this.m_GameResult.bPlayer) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TexturePlayer;
}
if (1 == this.m_GameResult.bDraw) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureDraw;
}
if (1 == this.m_GameResult.bBanker) {
this.m_sprCenterFlg.node.active = !0;
this.m_sprCenterFlg.spriteFrame = this.m_TextureBanker;
}
if (1 == this.m_GameResult.bPlayerPair) {
this.m_sprLeftTopFlg.node.active = !0;
this.m_sprLeftTopFlg.spriteFrame = this.m_TexturePlayerPair;
}
if (1 == this.m_GameResult.bBankerPair) {
this.m_sprRightBottomFlg.node.active = !0;
this.m_sprRightBottomFlg.spriteFrame = this.m_TextureBankerPair;
}
},
OnPlayAnim: function() {
var e = this.node.getComponent(cc.Animation);
e && e.play();
}
});
cc._RF.pop();
}, {
PYB_CMD_Game: "PYB_CMD_Game"
} ],
PYB_Rule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f76449cb/5HaJBsM6Aep13K", "PYB_Rule");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
close: function() {
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
PYB_UserChatItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d5d36ItbwhDlYRen6ZI9jf9", "PYB_UserChatItem");
cc.Class({
extends: cc.Component,
properties: {
LabelStr: cc.Label,
UserImage: cc.Node
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
PYB_UserChat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b0882tEVWRAZLI1gxbhJqS8", "PYB_UserChat");
cc.Class({
extends: cc.Component,
properties: {
pfChatItem: cc.Prefab
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
PlayerManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "82937oDa0tHG6d4pmJFzcgt", "PlayerManager");
e("ACMD_AStruct");
window.tagGlobalUserData = cc.Class({
extends: CMD_Struct,
properties: {
dwUserID: 0,
dwGameID: 0,
dwExperience: 0,
dwLoveLiness: 0,
szAccounts: [],
szNickName: [],
strUtf8NickName: "",
szPassword: [],
szUserGUID: [],
wPlatformID: 0,
lUserScore: 0,
lUserScore_Backup: 0,
lUserInsure: 0,
lUserMedal: 0,
lUserPlatformCoin: 0,
lUserVolume: 0,
dwWinCount: 0,
dwLostCount: 0,
dwDrawCount: 0,
dwFleeCount: 0,
wTableID: 0,
wChairID: 0,
cbGender: 0,
cbMoorMachine: 0,
cbMoorMobile: 0,
cbPaid: 0,
cbGiveTimes: 0,
szUnderWrite: [],
lAccuracy: 0,
lLatitude: 0,
dwGroupID: 0,
szGroupName: [],
cbMemberOrder: 0,
dwMemberOverDate: 0,
dwMemberExp: 0,
dwMasterRight: 0,
dwUserRight: 0,
cbFaceID: 0,
cbFrameID: 0,
dwCustomID: 0,
szExternFaceUrl: "",
ip: "",
cbExtensionID: 0,
dwSpreadId: 0,
dwRegChannelID: 0
},
ctor: function() {
this.dwUserID = 0;
this.dwGameID = 0;
this.dwExperience = 0;
this.dwLoveLiness = 0;
this.szAccounts = [];
ZeroArray(this.szAccounts, LEN_ACCOUNTS);
this.szNickName = [];
ZeroArray(this.szNickName, LEN_NICKNAME);
this.szPassword = [];
ZeroArray(this.szPassword, LEN_PASSWORD);
this.szUserGUID = [];
ZeroArray(this.szUserGUID, 0);
this.lUserScore = 0;
this.lUserScore_Backup = 0;
this.lUserInsure = 0;
this.lUserMedal = 0;
this.lUserPlatformCoin = 0;
this.lUserVolume = 0;
this.wPlatformID = 0;
this.dwWinCount = 0;
this.dwLostCount = 0;
this.dwDrawCount = 0;
this.dwFleeCount = 0;
this.wTableID = 0;
this.wChairID = 0;
this.wViewID = 0;
this.cbGender = 0;
this.cbMoorMachine = 0;
this.cbPaid = 0;
this.dwIp = 0;
this.cbGiveTimes = 0;
this.szUnderWrite = [];
ZeroArray(this.szUnderWrite, LEN_UNDER_WRITE);
this.dwGroupID = 0;
this.szGroupName = [];
ZeroArray(this.szGroupName, LEN_GROUP_NAME);
this.cbMemberOrder = 0;
this.dwMemberOverDate = 0;
this.dwMemberExp = 0;
this.cbFaceID = 0;
this.cbFrameID = 0;
this.dwCustomID = 0;
this.lAccuracy = 0;
this.lLatitude = 0;
this.szExternFaceUrl = "";
this.ip = "";
this.cbExtensionID = 0;
this.dwSpreadId = 0;
this.dwRegChannelID = 0;
}
});
window.PlayerItem = cc.Class({
ctor: function() {
this.pGlobalData = new tagGlobalUserData();
this.szExternFaceUrl = "";
this.wPreChairID = 0;
this.wPreTableID = 0;
this.cbPreUserStatus = 0;
},
SetTableID: function(e) {
this.SetPreTableID(this.pGlobalData.wTableID);
this.pGlobalData.wTableID = e;
},
SetChairID: function(e) {
this.SetPreChairID(this.pGlobalData.wChairID);
this.pGlobalData.wChairID = e;
},
SetViewID: function(e) {
this.pGlobalData.wViewID = e;
},
GetViewID: function() {
return this.pGlobalData.wViewID;
},
SetUserStatus: function(e) {
this.SetPreUserStatus(this.pGlobalData.cbUserStatus);
this.pGlobalData.cbUserStatus = e;
},
GetUserStatus: function() {
return this.pGlobalData.cbUserStatus;
},
GetPreTableID: function() {
return this.wPreTableID;
},
GetPreChairID: function() {
return this.wPreChairID;
},
GetPreUserStatus: function() {
return this.cbPreUserStatus;
},
SetPreTableID: function(e) {
this.wPreTableID = e;
},
SetPreChairID: function(e) {
this.wPreChairID = e;
},
SetPreUserStatus: function(e) {
this.cbPreUserStatus = e;
},
GetLogonGuid: function() {
return this.pGlobalData.szUserGUID;
},
GetAccount: function() {
return this.pGlobalData.szAccounts;
},
GetNickName: function() {
return this.pGlobalData.szNickName;
},
SetNickName: function(e) {
this.pGlobalData.szNickName = e;
},
GetNickNameUtf8: function() {
return this.pGlobalData.strUtf8NickName;
},
SetNickNameUtf8: function(e) {
this.pGlobalData.strUtf8NickName = e;
},
SetUserID: function(e) {
this.pGlobalData.dwUserID = e;
},
GetUserID: function() {
return this.pGlobalData.dwUserID;
},
GetGameID: function() {
return this.pGlobalData.dwGameID;
},
GetExperience: function() {
return this.pGlobalData.dwExperience;
},
GetLoveLiness: function() {
return this.pGlobalData.dwLoveLiness;
},
GetUserScore: function() {
return this.pGlobalData.lUserScore;
},
SetUserScore: function(e) {
this.pGlobalData.lUserScore = e;
},
GetBackupUserScore: function() {
return this.pGlobalData.lUserScore_Backup;
},
GetUserInsure: function() {
return this.pGlobalData.lUserInsure;
},
SetUserInsure: function(e) {
this.pGlobalData.lUserInsure = e;
},
GetUserMedal: function() {
return this.pGlobalData.lUserMedal;
},
SetUserMedal: function(e) {
this.pGlobalData.lUserMedal = e;
},
GetUserPlatformCoin: function() {
return this.pGlobalData.lUserPlatformCoin;
},
SetUserPlatformCoin: function(e) {
this.pGlobalData.lUserPlatformCoin = e;
},
SetUserVolume: function(e) {
this.pGlobalData.lUserVolume = e;
},
GetUserVolume: function() {
return this.pGlobalData.lUserVolume;
},
GetTableID: function() {
return this.pGlobalData.wTableID;
},
GetChairID: function() {
return this.pGlobalData.wChairID;
},
GetGender: function() {
return this.pGlobalData.cbGender;
},
GetMoorMachine: function() {
return this.pGlobalData.cbMemberOrder;
},
GetPaid: function() {
return this.pGlobalData.cbPaid;
},
GetGiveTimes: function() {
return this.pGlobalData.cbGiveTimes;
},
GetUnderWrite: function() {
return this.pGlobalData.szUnderWrite;
},
GetGroupID: function() {
return this.pGlobalData.dwGroupID;
},
GetGroupName: function() {
return this.pGlobalData.szGroupName;
},
GetMemberOrder: function() {
return this.pGlobalData.cbMemberOrder;
},
SetMemberOrder: function(e) {
this.pGlobalData.cbMemberOrder = e;
},
GetMemberExp: function() {
return this.pGlobalData.dwMemberExp;
},
SetMemberExp: function(e) {
this.pGlobalData.dwMemberExp = e;
},
GetMemberOverDate: function() {
return this.pGlobalData.dwMemberOverDate;
},
SetMasterRight: function(e) {
this.pGlobalData.dwMasterRight = e;
},
SetUserRight: function(e) {
this.pGlobalData.dwUserRight = e;
},
GetMasterRight: function() {
return this.pGlobalData.dwMasterRight;
},
GetUserRight: function() {
return this.pGlobalData.dwUserRight;
},
GetFaceID: function() {
return this.pGlobalData.cbFaceID;
},
SetFaceID: function(e) {
this.pGlobalData.cbFaceID = e;
this.pGlobalData.cbGender = e % 2 == 0 ? GENDER_MANKIND : GENDER_FEMALE;
},
GetCustomID: function() {
return this.pGlobalData.dwCustomID;
},
GetFaceFrameID: function() {
return this.pGlobalData.cbFrameID;
},
SetFaceFrameID: function(e) {
this.pGlobalData.cbFrameID = e;
},
GetExternFaceUrl: function() {
return this.pGlobalData.szExternFaceUrl;
},
GetIp: function() {
return this.pGlobalData.ip;
},
SetExtensionID: function(e) {
this.pGlobalData.cbExtensionID = e;
},
GetExtensionID: function() {
return this.pGlobalData.cbExtensionID;
},
SetUpSpreadID: function(e) {
this.pGlobalData.dwSpreadId = e;
},
GetUpSpreadID: function() {
return this.pGlobalData.dwSpreadId;
},
GetRegChannelID: function() {
return this.pGlobalData.dwRegChannelID;
},
GetAccuracy: function() {
return this.pGlobalData.lAccuracy;
},
GetLatitude: function() {
return this.pGlobalData.lLatitude;
},
GetCoordinates: function() {
return this.pGlobalData.lAccuracy + "," + this.pGlobalData.lLatitude;
},
SetCoordinates: function(e, t) {
this.pGlobalData.lAccuracy = e;
this.pGlobalData.lLatitude = t;
}
});
window.PlayerItem.create = function() {
return new PlayerItem();
};
window.tagGlobalChatData = cc.Class({
extends: CMD_Struct,
properties: {
dwGameID: 0,
dwGroupID: 0,
szGroupName: [],
strUtf8GroupName: "",
listInfo: [],
nCount: 0,
szExternFaceUrl: ""
},
ctor: function() {
this.dwGameID = 0;
this.dwGroupID = 0;
this.szGroupName = [];
ZeroArray(this.szGroupName, LEN_GROUP_NAME);
this.strUtf8GroupName = "";
this.listInfo = [];
ZeroArrayStruct(this.listInfo, LEN_GROUP_ENJOY, ChatGroupEnjoyInfo);
this.nCount = 0;
this.szExternFaceUrl = "";
}
});
window.ChatItem = cc.Class({
ctor: function() {
this.pGlobalChatData = new tagGlobalChatData();
},
GetdwGameID: function() {
return this.pGlobalChatData.dwGameID;
},
GetdwGroupID: function() {
return this.pGlobalChatData.dwGroupID;
},
GetszGroupName: function() {
return this.pGlobalChatData.szGroupName;
},
SetszGroupName: function(e) {
this.pGlobalChatData.szGroupName = e;
},
GetstrUtf8GroupName: function() {
return this.pGlobalChatData.strUtf8GroupName;
},
GetlistInfo: function() {
return this.pGlobalChatData.listInfo;
},
GetnCount: function() {
return this.pGlobalChatData.nCount;
},
GetszExternFaceUrl: function() {
return this.pGlobalChatData.szExternFaceUrl;
}
});
window.ChatItem.create = function() {
return new ChatItem();
};
window.PlayerManager = cc.Class({
statics: {
instance: null
},
properties: {
jsUserManager: [],
jsMeUserItem: null,
jsChatManager: [],
jsItChatItem: null
},
ctor: function() {
PlayerManager.instance = this;
this.jsUserManager = [];
this.jsMeUserItem = null;
this.jsChatManager = [];
this.jsItChatItem = null;
}
});
window.GetPlayerManager = function() {
if (!PlayerManager.instance) {
PlayerManager.instance = new PlayerManager();
window.s_PlayerManager = PlayerManager.instance;
}
cc.assert(PlayerManager.instance, "PlayerManager.instance is null");
return PlayerManager.instance;
};
window.PlayerManager.DeleteUserItemByUserID = function(e) {
for (var t = GetPlayerManager(), i = 0; i < t.jsUserManager.length; i++) {
var n = t.jsUserManager[i];
if (n.GetUserID() == e) {
t.jsUserManager.splice(i, 1);
return n;
}
}
};
window.PlayerManager.DeleteUserItemByGameID = function(e) {
for (var t = GetPlayerManager(), i = 0; i < t.jsUserManager.length; i++) {
var n = t.jsUserManager[i];
if (n.GetGameID() == e) {
t.jsUserManager.splice(i, 1);
return n;
}
}
};
window.PlayerManager.DeleteUserItemByTableID = function(e) {
for (var t = GetPlayerManager(), i = 0; i < t.jsUserManager.length; ) {
t.jsUserManager[i].GetTableID() == e ? t.jsUserManager.splice(i, 1) : i++;
}
};
window.PlayerManager.DeleteUserItemByAll = function(e) {
var t = GetPlayerManager(), i = 1 == arguments.length && e;
t.jsUserManager.length = 0;
i || t.jsUserManager.push(t.jsMeUserItem);
};
window.PlayerManager.SetUserItemByGameID = function(e) {
var t = GetPlayerManager(), i = PlayerManager.GetUserItemByGameID(e);
if (!i) {
(i = PlayerItem.create()).dwGameID = e;
t.jsUserManager.push(i);
}
return i;
};
window.PlayerManager.SetUserItemByUserID = function(e) {
var t = GetPlayerManager(), i = PlayerManager.GetUserItemByUserID(e);
if (!i) {
(i = PlayerItem.create()).dwUserID = e;
t.jsUserManager.push(i);
}
return i;
};
window.PlayerManager.SetUserItem = function(e) {
var t = GetPlayerManager(), i = PlayerItem.create();
i.pGlobalData.szNickName = e.szNickName;
i.pGlobalData.strUtf8NickName = ToUtf8(e.szNickName);
i.pGlobalData.cbMemberOrder = e.cbMemberOrder;
i.pGlobalData.cbFaceID = e.cbFaceID;
i.pGlobalData.cbFrameID = e.cbFrameID;
i.pGlobalData.ip = e.dwIp;
i.pGlobalData.lUserScore = e.lUserScore;
t.jsUserManager.push(i);
return i;
};
window.PlayerManager.SetTempUserItem = function(e) {
GetPlayerManager();
var t = PlayerItem.create();
t.pGlobalData.szNickName = e.szNickName;
t.pGlobalData.strUtf8NickName = ToUtf8(e.szNickName);
t.pGlobalData.cbMemberOrder = e.cbMemberOrder;
t.pGlobalData.cbFaceID = e.cbFaceID;
t.pGlobalData.cbFrameID = e.cbFrameID;
t.pGlobalData.ip = e.dwIp;
t.pGlobalData.lUserScore = e.lUserScore;
return t;
};
window.PlayerManager.GetUserItemByUserID = function(e) {
for (var t = GetPlayerManager(), i = null, n = 0; n < t.jsUserManager.length; n++) if ((i = t.jsUserManager[n]).GetUserID() == e) return i;
return null;
};
window.PlayerManager.GetUserItemByGameID = function(e) {
for (var t = GetPlayerManager(), i = null, n = 0; n < t.jsUserManager.length; n++) if ((i = t.jsUserManager[n]).GetGameID() == e) return i;
return null;
};
window.PlayerManager.GetUserItemByTableInfo = function(e, t) {
cc.assert(2 == arguments.length, "PlayerManager.GetUserItemByTableInfo.arguments.Error");
for (var i = GetPlayerManager(), n = null, a = 0; a < i.jsUserManager.length; a++) if ((n = i.jsUserManager[a]).GetTableID() == e && n.GetChairID() == t) return n;
return null;
};
window.PlayerManager.GetUserItemByTableID = function(e) {
cc.assert(1 == arguments.length, "PlayerManager.GetUserItemByTableID.arguments.Error");
for (var t = GetPlayerManager(), i = null, n = 0; n < t.jsUserManager.length; n++) if ((i = t.jsUserManager[n]).GetTableID() == e) return i;
return null;
};
window.PlayerManager.SetMeUserItem = function(e) {
GetPlayerManager().jsMeUserItem = e;
};
window.PlayerManager.GetMeUserItem = function() {
return GetPlayerManager().jsMeUserItem;
};
window.PlayerManager.GetUserItems = function() {
return GetPlayerManager().jsUserManager;
};
window.PlayerManager.DeleteChatItemByGroupID = function(e) {
for (var t = GetPlayerManager(), i = 0; i < t.jsChatManager.length; i++) {
var n = t.jsChatManager[i];
if (n.GetdwGroupID() == e) {
t.jsChatManager.splice(i, 1);
return n;
}
}
};
window.PlayerManager.SetChatItemBydwGroupID = function(e) {
var t = GetPlayerManager(), i = PlayerManager.GetChatItemBydwGroupID(e);
if (!i) {
(i = ChatItem.create()).dwGroupID = e;
t.jsChatManager.push(i);
}
return i;
};
window.PlayerManager.GetChatItemBydwGroupID = function(e) {
for (var t = GetPlayerManager(), i = null, n = 0; n < t.jsChatManager.length; n++) if ((i = t.jsChatManager[n]).GetdwGroupID() == e) return i;
return null;
};
window.PlayerManager.SetItChatItem = function(e) {
GetPlayerManager().jsItChatItem = e;
};
window.PlayerManager.GetItChatItem = function() {
return GetPlayerManager().jsItChatItem;
};
window.PlayerManager.GetChatItems = function() {
return GetPlayerManager().jsChatManager;
};
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
Plinko_AutoItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "81de6pfzNtJwp9dR35zxSHv", "Plinko_AutoItem");
cc.Class({
extends: cc.Component,
properties: {
lbl: cc.Label
},
start: function() {},
initData: function(e, t, i) {
this.playCount = e;
this.index = t;
-1 == this.playCount ? this.lbl.string = "∞" : this.lbl.string = this.playCount;
this.pGameViewJs = i.getComponent("Plinko_NewGameView");
},
onAutoBtn: function() {
cc.log(this.index);
this.pGameViewJs.onBtnCount(this.index);
}
});
cc._RF.pop();
}, {} ],
Plinko_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1f6b4L8dLRDpohV1ijkivHQ", "Plinko_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_GET_RANK_RET = 200;
t.exports.SUB_C_SCENE_START = 1;
t.exports.SUB_C_GET_RANK = 2;
cc._RF.pop();
}, {} ],
Plinko_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b83eet1bPRAt6OXm+bWlyAG", "Plinko_GameEngine");
var n = e("Plinko_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Plinko_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("Plinko_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/music", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
console.log("Scene = ", a);
this.objSceneData = a;
this.jsGameView.initMap(this.objSceneData.MapArray);
this.jsGameView.initMaxbet(this.objSceneData.MaxBetGold);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_GET_RANK_RET:
return this.OnGameRecord(t, i);
}
},
OnGameRecord: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GetRankRes", e);
console.log("OnGameRecord", i);
this.objResultData = i;
this.pGameViewJs.OnGameRecord(i);
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ThrowBetRes", e);
console.log("objResult", i);
this.objResultData = i;
this.pGameViewJs.onGameStart(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i) {
var a = {};
a.Row = e;
a.BetGold = t;
a.BallTag = i;
console.log("send start:", a);
var o = window.net.netSerializer.packMsg("CMD_C_ThrowBetReq", a);
this.SendGameData(n.SUB_C_SCENE_START, o, o.length);
},
OnSendEventGameRecord: function() {
var e = window.net.netSerializer.packMsg("CMD_C_GetRank", {});
this.SendGameData(n.SUB_C_GET_RANK, e, e.length);
}
});
cc._RF.pop();
}, {
Plinko_CMD_Game: "Plinko_CMD_Game"
} ],
Plinko_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "56fa7szmx5H77zj/TUdiV6e", "Plinko_GameView");
var n = [ null, null, null, null, null, null, null, null, {
scale: 1.25,
bet: [ 5, 4, 3, 2, 1, 2, 3, 4, 5 ],
startY: 500
}, {
scale: 1.12,
bet: [ 5, 4, 3, 2, 1, 1, 2, 3, 4, 5 ],
startY: 500
}, {
scale: 1.01,
bet: [ 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6 ],
startY: 500
}, {
scale: .92,
bet: [ 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6 ],
startY: 500
}, {
scale: .84,
bet: [ 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7 ],
startY: 500
}, {
scale: .78,
bet: [ 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7 ],
startY: 500
}, {
scale: .73,
bet: [ 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8 ],
startY: 500
}, {
scale: .68,
bet: [ 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8 ],
startY: 500
}, {
scale: .64,
bet: [ 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],
startY: 500
} ];
cc.Class({
extends: GameFrameView,
properties: {
mapNode: cc.Node,
mapLine: cc.Node,
mapLineItem: cc.Prefab,
ball: cc.Prefab,
bg: cc.Node,
resultNode: cc.Prefab,
switchLayer: cc.Node,
lineNum: cc.Label,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
nodeJetton: [ cc.Node ],
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
swicthBtn: cc.Button,
switchNum: [ cc.Node ],
menuLayer: cc.Node,
localRecord: cc.Node,
recordItem: cc.Prefab,
rankLayer: cc.Node,
wall: cc.Node,
countLayer: cc.Node,
countBtn: cc.Node,
labelCount: cc.Label,
stopBtn: cc.Node,
stopLabel: cc.Label,
wxSp: cc.Node
},
OnFrameViewLoad: function() {
this.OnInitPhysics();
this.OnInitNodePool();
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.playCount = 1;
this.lChipNum = 1e3;
},
OnFrameViewStart: function() {
0;
this.lBaseScore = GetProject().lBaseScore;
this.lBetChip = [ 1 * this.lBaseScore, 10 * this.lBaseScore, 100 * this.lBaseScore, 1e3 * this.lBaseScore ];
this.recordData = [];
this.recordItemArr = [];
this.scheduleOnce(function() {
this.wall.getComponent("result").setData(0, this);
}.bind(this), .5);
this.readLocalFile();
},
readLocalFile: function() {
this.mapPath = [];
cc.loader.loadRes("301/posAll", function(e, t) {
e ? console.log(e) : this.mapPath = t;
}.bind(this));
},
ShowBetChip: function() {
for (var e = 0; e < this.nodeJetton.length; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
},
initMap: function(e) {
this._mapData = e;
this.generateMap(0);
this.ShowBetChip();
this.OnUpdateOperateButtonStatus(!0);
},
initMaxbet: function(e) {
this.MaxBetGold = e;
},
OnFrameUpdateUserScore: function(e) {},
addLocalRecord: function(e) {
var t = this, i = cc.instantiate(this.recordItem);
i.x = 0;
i.y = this.localRecord.height;
i.getComponent("result").setData(e);
this.localRecord.addChild(i);
this.recordItemArr.push(i);
for (var n = function(e) {
t.recordItemArr[e] && t.recordItemArr[e].runAction(cc.sequence(cc.moveBy(.2, cc.p(0, -i.height)), cc.callFunc(function() {
if (cc.isValid(this.recordItemArr[e]) && this.recordItemArr[e].y < -i.height) {
this.recordItemArr[e].removeFromParent();
this.recordItemArr.splice(e, 1);
}
}.bind(t))));
}, a = this.recordItemArr.length - 1; a >= 0; a--) n(a);
},
resetView: function() {
this.mapNode.removeAllChildren();
if (this.ballArr) for (var e = 0; e < this.ballArr.length; e++) cc.isValid(this.ballArr[e]) && this.OnPutBall(this.ballArr[e]);
},
OnButtonMenuEvent: function(e, t) {
this.menuLayer.active = !this.menuLayer.active;
},
onBtnShowRank: function() {
this.jsGameEngine.OnSendEventGameRecord();
},
updateMapIndex: function(e) {
for (var t = 0; t < this.switchNum.length; t++) if (this.switchNum[t]) {
this.switchNum[t].removeComponent(cc.LabelOutline);
if (t == e) {
this.switchNum[t].addComponent(cc.LabelOutline);
this.switchNum[t].getComponent(cc.LabelOutline).color = cc.color(255, 0, 0);
this.switchNum[t].getComponent(cc.LabelOutline).width = 2;
}
}
},
generateMap: function(e) {
this.mapIndex = e;
this.updateMapIndex(e);
this.mapCurData = this._mapData[e];
this.lineCurCount = this.mapCurData.Row;
this.resetView();
var t = 1;
this.lineArr = [];
this.ballWidth = 40;
this.pointWidth = 25;
this.lineHeight = 60;
this.lineWidht = 60;
this.allScale = n[this.lineCurCount].scale;
this.resultNumArr = this.mapCurData.Multiples;
this.mapNode.scale = this.allScale;
for (var i = 0; i < this.lineCurCount; i++) {
var a = cc.instantiate(this.mapLine);
a.active = !0;
a.setPosition(0, 0);
for (var o = [], s = 0; s < i + 3; s++) {
var r = cc.instantiate(this.mapLineItem);
r.active = !0;
r.tagNum = t;
t++;
r.getChildByName("id").active = !1;
a.addChild(r);
0 == i && 1 == s && (this.startX = r.convertToWorldSpaceAR(cc.v2(0, 0)).x);
o.push(r);
}
this.lineArr.push(o);
0;
this.mapNode.addChild(a);
}
this.createResultNode();
},
createResultNode: function() {
var e = cc.instantiate(this.mapLine);
e.active = !0;
e.setPosition(0, 0);
e.getComponent(cc.Layout).spacingX = this.pointWidth;
e.height = 1;
this.mapNode.addChild(e);
var t = this.lineArr[this.lineArr.length - 1];
this.resultItemArr = [];
for (var i = 0; i < t.length; i++) if (0 != i) {
var n = cc.instantiate(this.resultNode);
n.active = !0;
n.resultNum = this.resultNumArr[i - 1] / 100;
n.y = 40;
n.getComponent("result").setData(this.resultNumArr[i - 1] / 100, this, i - 1);
e.addChild(n);
n.upLeft = t[i - 1];
n.upRight = t[i];
t[i - 1].downRight = n;
t[i].downLeft = n;
this.resultItemArr.push(n);
}
},
OnInitPhysics: function() {
cc.director.getCollisionManager().enabled = !0;
},
OnInitNodePool: function() {
this.ballPool = new cc.NodePool();
},
OnCreateBall: function() {
var e = null;
(e = this.ballPool.size() > 0 ? this.ballPool.get() : cc.instantiate(this.ball)).active = !0;
e.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);
return e;
},
OnPutBall: function(e) {
this.ballPool.put(e);
},
ballGameEnd: function(e, t, i, n) {
e == t.Multiples / 100 ? this.OnUpdateUserScore(t.WinGold) : console.log("出现错误结果 num = " + e);
this.addLocalRecord(e);
this.ballCount--;
this.ballCount < 0 && (this.ballCount = 0);
0 == this.ballCount && this.OnUpdateOperateButtonStatus(!0);
},
saveForBrowser: function(e, t) {
if (cc.sys.isBrowser) {
console.log("浏览器");
var i = new Blob([ e ], {
type: "text/plain;charset=utf-8"
}), n = document.createElement("a");
n.download = t;
n.innerHTML = "Download File";
if (null != window.webkitURL) n.href = window.webkitURL.createObjectURL(i); else {
n.href = window.URL.createObjectURL(i);
n.onclick = destroyClickedElement;
n.style.display = "none";
document.body.appendChild(n);
}
n.click();
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"Dis_btnBetSub" == i ? this.OnUpdateBetChip(2) : "Dis_btnBetAdd" == i ? this.OnUpdateBetChip(3) : "BtnGameExit" == i && this.jsGameEngine.SendPacketStandUp();
},
OnUpdateOperateButtonStatus: function(e) {
this.OnUpdateBetChipStatus(e);
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
this.swicthBtn.interactable = e;
},
OnUpdateBetChipStatus: function(e) {
if (e) {
for (var t = -1, i = 0; i < this.nodeJetton.length; i++) {
var n = this.lMeScore >= this.lBetChip[i];
this.nodeJetton[i].getComponent(cc.Button).interactable = n;
n && (t = i);
}
if (-1 == t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
} else if (this.lChipIndex > t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
this.lChipNum = this.lBetChip[0];
this.lblBetScore.string = this.lChipNum / 1e3;
}
} else for (var a = 0; a < this.nodeJetton.length; a++) this.nodeJetton[a].getComponent(cc.Button).interactable = !1;
},
ClickJettonBtn: function(e, t) {
var i = parseInt(t);
this.lCurrentJetton = this.lBetChip[i];
i == this.lChipIndex ? this.OnUpdateBetChip(0) : this.OnUpdateBetChip(1);
this.lChipIndex = i;
},
OnUpdateBetChip: function(e) {
if (0 == e) {
if (this.lChipNum + this.lCurrentJetton > this.lMeScore) return;
if (this.lChipNum + this.lCurrentJetton > this.MaxBetGold) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += this.lCurrentJetton;
} else if (1 == e) {
if (this.lCurrentJetton > this.lMeScore) return;
this.lChipNum = this.lCurrentJetton;
} else if (2 == e) this.lChipNum > this.lBetChip[0] && (this.lChipNum -= 1e3); else if (3 == e) {
if (this.lChipNum + 1e3 > this.lMeScore) return;
if (this.lChipNum + 1e3 > this.MaxBetGold) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += 1e3;
}
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
this.lMeScore = t;
},
onBtnbg: function() {
this.countLayer.active = !1;
this.switchLayer.active = !1;
},
onGameStart: function(e) {
if (0 == e.RetCode) {
this.ballCount || (this.ballCount = 0);
this.ballCount++;
this.OnUpdateUserScore(-this.lChipNum);
var t = this.OnCreateBall();
t.getComponent("ball").setMain(this);
if (this.mapPath[this.mapIndex][e.retIndex - 1]) {
var i = parseInt(this.randomNum(0, this.mapPath[this.mapIndex][e.retIndex - 1].length - 1), 10);
t.getComponent("ball").setPathNode(this.mapPath[this.mapIndex][e.retIndex - 1][i]);
t.setPosition(this.mapPath[this.mapIndex][e.retIndex - 1][i][0][0], this.mapPath[this.mapIndex][e.retIndex - 1][i][0][1]);
}
t.scale = this.allScale;
t.gameData = e;
this.bg.addChild(t);
} else {
1 == e.RetCode ? ManagerHelp_SetSystemLabel("Your balance is insufficient!") : ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
0 == this.ballCount && this.OnUpdateOperateButtonStatus(!0);
this.stopBtnEvent();
}
},
stopBtnEvent: function() {
if (this.auotCount > 0 || -1 == this.auotCount) {
this.unschedule(this.auotBet, this);
this.auotCount = 0;
}
this.stopBtn.active = !1;
},
startBtnEvent: function() {
if (this.auotCount > 0 || -1 == this.auotCount) this.unschedule(this.auotBet, this); else {
this.doBet();
if (this.playCount > 1 || -1 == this.playCount) {
this.stopBtn.active = !0;
if (-1 == this.playCount) {
this.auotCount = -1;
this.stopLabel.node.active = !1;
this.wxSp.active = !0;
this.schedule(this.auotBet, .5);
} else {
this.auotCount = this.playCount - 1;
this.stopLabel.string = this.auotCount;
this.stopLabel.node.active = !0;
this.wxSp.active = !1;
this.schedule(this.auotBet, .5, this.playCount - 2);
}
}
}
},
auotBet: function() {
if (this.auotCount > 0) {
this.auotCount--;
if (this.auotCount <= 0) {
this.stopBtn.active = !1;
this.auotCount = 0;
this.unschedule(this.auotBet, this);
}
this.stopLabel.string = this.auotCount;
}
this.doBet();
},
doBet: function(e, t) {
if (this.mapPath) {
if (1e3 * this.lblUserScore.string - this.lChipNum < 0) {
ManagerHelp_SetSystemLabel("Your balance is insufficient!");
this.stopBtnEvent();
} else {
this.OnUpdateOperateButtonStatus(!1);
this.switchLayer.active = !1;
this.sendBallTag || (this.sendBallTag = 0);
this.sendBallTag++;
this.sendBallTag >= 65535 && (this.sendBallTag = 0);
this.jsGameEngine.OnSendEventGameStart(this.lineCurCount, this.lChipNum, this.sendBallTag);
}
} else console.log("json 没有加载完");
},
findSamePos: function(e) {
for (var t = 0; t < this.posArr.length; t++) if (e.x == this.posArr[t].x && e.y == this.posArr[t].y) return !0;
return !1;
},
randomNum: function(e, t) {
switch (arguments.length) {
case 1:
return Math.random() * e + 1;

case 2:
return Math.random() * (t - e + 1) + e;

default:
return 0;
}
},
getResultPath: function(e) {
this.pathArr = [];
for (var t = [], i = 0; i < this.resultItemArr.length; i++) e == this.resultItemArr[i].resultNum && t.push(this.resultItemArr[i]);
if (0 != t.length) for (var n = 0; n < t.length; n++) {
this.getUpNode(t[n]);
this.pathArr.push(t[n]);
}
},
getUpNode: function(e) {
if (e.upLeft || e.upRight) {
if (e.upLeft) {
for (var t = !1, i = 0; i < this.pathArr.length; i++) if (e.upLeft == this.pathArr[i]) {
t = !0;
break;
}
t || this.pathArr.push(e.upLeft);
this.getUpNode(e.upLeft);
}
if (e.upRight) {
for (var n = !1, a = 0; a < this.pathArr.length; a++) if (e.upRight == this.pathArr[a]) {
n = !0;
break;
}
n || this.pathArr.push(e.upRight);
this.getUpNode(e.upRight);
}
}
},
resetStartPositon: function() {
var e = {};
if (this.lineArr && this.lineArr.length > 0) for (var t = 0; t < this.lineArr.length; t++) for (var i = 0; i < this.lineArr[t].length; i++) {
var n = this.lineArr[t][i];
if (n) {
if (1 == n.tagNum) {
e.startX = n.parent.convertToWorldSpaceAR(n.getPosition()).x;
e.startY = n.parent.convertToWorldSpaceAR(n.getPosition()).y + 30;
}
3 == n.tagNum && (e.endX = n.parent.convertToWorldSpaceAR(n.getPosition()).x);
if (2 == n.tagNum) {
e.startX || (e.startX = n.parent.convertToWorldSpaceAR(n.getPosition()).x);
e.endX || (e.endX = n.parent.convertToWorldSpaceAR(n.getPosition()).x);
}
}
}
return e;
},
OnGameRecord: function(e) {
this.rankLayer.active = !0;
this.rankLayer.getComponent("RankLayer").setData(e);
},
onBtnShowSwicth: function() {
this.switchLayer.active = !this.switchLayer.active;
},
onBtnSwicth: function(e, t) {
this.switchLayer.active = !1;
this.ballCount || this.generateMap(parseInt(t, 10));
},
onBtnShowCount: function() {
this.countLayer.active = !this.countLayer.active;
},
onBtnCount: function(e, t) {
this.countLayer.active = !1;
this.playCount = parseInt(t, 10);
-1 == this.playCount ? this.labelCount.string = "∞" : this.labelCount.string = this.playCount;
},
onDestroy: function() {
this.ballPool.clear();
}
});
cc._RF.pop();
}, {} ],
Plinko_NewCMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ebb910h+mlDsZ7Hz0f5PRCi", "Plinko_NewCMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_GET_RANK_RET = 200;
t.exports.SUB_C_SCENE_START = 1;
t.exports.SUB_C_GET_RANK = 2;
cc._RF.pop();
}, {} ],
Plinko_NewGameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f5e7dL4EptHT7S0/4+7cTnQ", "Plinko_NewGameEngine");
var n = e("Plinko_NewCMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Plinko_NewGameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("Plinko_NewGameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio(GetServerRoom().GetGameServer().wKindID + "/Audio/music", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.objSceneData = a;
this.jsGameView.initAutoConfig(this.objSceneData.NumButton);
this.jsGameView.OnBetConfig(this.objSceneData.BetChips, this.objSceneData.BetMultiples);
this.jsGameView.initMap(this.objSceneData.MapArray, this.objSceneData.DefaultMapId - 1);
this.jsGameView.initMaxbet(this.objSceneData.MaxBetGold);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_GET_RANK_RET:
return this.OnGameRecord(t, i);
}
},
OnGameRecord: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GetRankRes", e);
this.objResultData = i;
this.pGameViewJs.OnGameRecord(i);
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ThrowBetRes", e);
this.objResultData = i;
this.pGameViewJs.onGameStart(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i) {
var a = {};
a.MapId = e + 1;
a.BetGold = t;
a.BallTag = i;
var o = window.net.netSerializer.packMsg("CMD_C_ThrowBetReq", a);
this.SendGameData(n.SUB_C_SCENE_START, o, o.length);
},
OnSendEventGameRecord: function() {
var e = window.net.netSerializer.packMsg("CMD_C_GetRank", {});
this.SendGameData(n.SUB_C_GET_RANK, e, e.length);
}
});
cc._RF.pop();
}, {
Plinko_NewCMD_Game: "Plinko_NewCMD_Game"
} ],
Plinko_NewGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "141e7PumR1AGbp8TGIrXLqP", "Plinko_NewGameView");
cc.Class({
extends: GameFrameView,
properties: {
mapNode: cc.Node,
mapLine: cc.Node,
mapLineItem: cc.Prefab,
ball: cc.Prefab,
bg: cc.Node,
resultNode: cc.Prefab,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
nodeJetton: [ cc.Node ],
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
swicthBtn: cc.Button,
menuLayer: cc.Node,
localRecord: cc.Node,
recordItem: cc.Prefab,
rankLayer: cc.Node,
wall: cc.Node,
countLayer: cc.Node,
autoContent: cc.Node,
countBtn: cc.Node,
labelCount: cc.Label,
stopBtn: cc.Node,
stopLabel: cc.Label,
wxSp: cc.Node,
resultItemArr: [ cc.Node ],
mainNode: cc.Node,
lineBetPrefab: cc.Prefab,
LineBetNode: cc.Node,
LineBetBigbg: cc.Node,
startNode: cc.Node,
endNode: cc.Node,
mapFrame: [ cc.SpriteFrame ],
mapSp: cc.Sprite,
Betbtn: cc.Button,
spJinBiL: sp.Skeleton,
spJinBiR: sp.Skeleton,
spFase: sp.Skeleton,
lazhuSp: sp.Skeleton,
bigwinNode: cc.Node,
pfAutoItem: cc.Prefab
},
OnFrameViewLoad: function() {
this.OnInitPhysics();
this.OnInitNodePool();
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.playCount = 5;
this.lChipNum = 1e3;
this.labelCount.string = "x" + this.playCount;
},
OnFrameViewStart: function() {
0;
this.i_totalBet = [];
this.i_totalBetIndex = 0;
this.lBaseScore = GetProject().lBaseScore;
this.recordData = [];
this.recordItemArr = [];
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
this.scheduleOnce(function() {
this.wall.getComponent("newresult").setData(0, this);
}.bind(this), .5);
this.readLocalFile();
this.jsGameEngine.OnSendEventGameRecord();
this.schedule(function() {
this.jsGameEngine.OnSendEventGameRecord();
}.bind(this), 5);
},
readLocalFile: function() {
this.mapPath = [];
cc.loader.loadRes("304/posAll", function(e, t) {
e ? console.log(e) : this.mapPath = t;
}.bind(this));
},
initMap: function(e, t) {
this._mapData = e;
this.updateMap(t);
this.OnUpdateOperateButtonStatus(!0);
this.mainNode.active = !0;
},
initMaxbet: function(e) {
this.MaxBetGold = e;
},
OnFrameUpdateUserScore: function(e) {},
addLocalRecord: function(e) {
var t = cc.instantiate(this.recordItem);
t.getComponent("newrecord").setData(e);
this.localRecord.addChild(t);
this.recordItemArr.push(t);
for (var i = this.recordItemArr.length - 1; i >= 0; i--) i == this.recordItemArr.length - 1 ? this.recordItemArr[i].getComponent("newrecord").setNew() : this.recordItemArr[i].getComponent("newrecord").setOld();
if (this.recordItemArr.length > 5) {
this.recordItemArr[0].removeFromParent();
this.recordItemArr.splice(0, 1);
}
},
resetView: function() {
if (this.ballArr) for (var e = 0; e < this.ballArr.length; e++) cc.isValid(this.ballArr[e]) && this.OnPutBall(this.ballArr[e]);
},
OnButtonMenuEvent: function(e, t) {
this.menuLayer.active = !this.menuLayer.active;
},
updateMap: function(e) {
this.CurMapId = e;
this.mapCurData = this._mapData[this.CurMapId];
this.resultNumArr = this.mapCurData.Multiples;
this.updateResultNode();
},
updateResultNode: function() {
for (var e = 0; e < this.resultItemArr.length; e++) this.resultItemArr[e].getComponent("newresult").setData(this.resultNumArr[e] / 100, this, e);
},
OnInitPhysics: function() {
cc.director.getCollisionManager().enabled = !0;
},
OnInitNodePool: function() {
this.ballPool = new cc.NodePool();
},
OnCreateBall: function() {
var e = null;
(e = this.ballPool.size() > 0 ? this.ballPool.get() : cc.instantiate(this.ball)).active = !0;
e.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);
return e;
},
OnPutBall: function(e) {
this.ballPool.put(e);
},
ballGameEnd: function(e, t, i, n) {
if (e == t.Multiples / 100) {
0 == t.WinGold.high && 0 == t.WinGold.low && (t.WinGold = 0);
this.OnUpdateUserScore(t.WinGold);
} else console.log("出现错误结果 num = " + e);
this.addLocalRecord(e);
this.ballCount--;
this.ballCount < 0 && (this.ballCount = 0);
0 == this.ballCount && this.OnUpdateOperateButtonStatus(!0);
if (t.isGoldWin) {
this.spJinBiL.node.active = !0;
this.spJinBiR.node.active = !0;
this.spJinBiL.animation = "3";
this.spJinBiR.animation = "3";
this.spFase.animation = "Fashe";
window.mfConfig.PlayAudio("304/Audio/jl", !1, window.mfConfig.fSound);
this.spFase.addAnimation(0, "Jingzhi", !1);
this.lazhuSp.animation = "Lazhu_B";
this.lazhuSp.loop = !1;
this.lazhuSp.addAnimation(0, "Lazhu_A", !0);
window.mfConfig.PlayAudio("304/Audio/lz", !1, window.mfConfig.fSound);
window.mfConfig.PlayAudio("304/Audio/pjb", !1, window.mfConfig.fSound);
}
if (t.isBigWin) {
this.bigwinNode.active = !0;
window.mfConfig.PlayAudio("304/Audio/bigwin", !1, window.mfConfig.fSound);
this.bigwinNode.getComponent("BigWin").playNumChange(t.WinGold, 2, function() {
this.bigwinNode.active = !1;
}.bind(this));
}
var a = {};
a.date = this.getCurrentTime();
a.bet = t.BetGold;
a.Mul = t.Multiples / 100;
a.Wingold = t.WinGold;
this.rankLayer.getComponent("newRankLayer").addRecordBet(a);
},
getCurrentTime: function() {
var e = new Date();
return this.zeroFill(e.getMonth() + 1) + "-" + this.zeroFill(e.getDate()) + " " + this.zeroFill(e.getHours()) + ":" + this.zeroFill(e.getMinutes()) + ":" + this.zeroFill(e.getSeconds());
},
zeroFill: function(e) {
return e >= 0 && e <= 9 ? "0" + e : e;
},
saveForBrowser: function(e, t) {
if (cc.sys.isBrowser) {
console.log("浏览器");
var i = new Blob([ e ], {
type: "text/plain;charset=utf-8"
}), n = document.createElement("a");
n.download = t;
n.innerHTML = "Download File";
if (null != window.webkitURL) n.href = window.webkitURL.createObjectURL(i); else {
n.href = window.URL.createObjectURL(i);
n.onclick = destroyClickedElement;
n.style.display = "none";
document.body.appendChild(n);
}
n.click();
}
},
OnStakeUpdate: function() {
for (var e = 0; e < this.i_totalBet.length; e++) if (this.i_totalBet[e].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = e;
break;
}
this.lChipNum = 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string);
this.lblBetScore.string = OnScoreToString(this.lChipNum, 2);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnBetSub" == i) {
this.i_totalBetIndex--;
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnBetAdd" == i) {
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else "BtnGameExit" == i ? this.jsGameEngine.SendPacketStandUp() : "Dis_LineBetBigbg" == i ? this.LineBetBigbg.active = !1 : "imBetBg" == i && (this.LineBetBigbg.active = !0);
},
initAutoConfig: function(e) {
var t = this;
this.autoConfig = e;
this.autoContent.height = 80 * this.autoConfig.length;
this.autoConfig.forEach(function(e, i, n) {
var a = cc.instantiate(t.pfAutoItem);
t.autoContent.addChild(a);
a.getComponent("Plinko_AutoItem").initData(e, i, t.node);
});
this.onBtnCount(0);
},
onBtnCount: function(e) {
this.countLayer.active = !1;
this.playCount = this.autoConfig[e];
if (-1 == this.playCount) {
this.labelCount.string = "∞";
this.labelCount.fontSize = 45;
} else {
this.labelCount.fontSize = 36;
this.labelCount.string = "x" + this.playCount;
}
},
OnBetConfig: function(e, t) {
this.lBetChip = e;
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, "");
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
OnUpdateOperateButtonStatus: function(e) {
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
this.Betbtn.interactable = e;
this.swicthBtn.interactable = e;
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
this.lMeScore = t;
},
onBtnbg: function() {
this.countLayer.active = !1;
},
onGameStart: function(e) {
if (0 == e.RetCode) {
this.ballCount || (this.ballCount = 0);
window.mfConfig.PlayAudio("304/Audio/start", !1, window.mfConfig.fSound);
this.ballCount++;
this.OnUpdateUserScore(-this.lChipNum);
var t = this.OnCreateBall();
t.getComponent("newball").setMain(this);
if (this.mapPath[e.retIndex - 1]) {
var i = parseInt(this.randomNum(0, this.mapPath[e.retIndex - 1].length - 1), 10);
t.getComponent("newball").setPathNode(this.mapPath[e.retIndex - 1][i]);
t.setPosition(this.mapPath[e.retIndex - 1][i][0][0], this.mapPath[e.retIndex - 1][i][0][1]);
}
t.gameData = e;
this.bg.addChild(t);
this.auotBet();
} else {
1 == e.RetCode ? ManagerHelp_SetSystemLabel("Your balance is insufficient!") : ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
0 == this.ballCount && this.OnUpdateOperateButtonStatus(!0);
this.stopBtnEvent();
}
},
stopBtnEvent: function() {
(this.auotCount > 0 || -1 == this.auotCount) && (this.auotCount = 0);
this.stopBtn.active = !1;
},
startBtnEvent: function() {
if (this.auotCount > 0 || -1 == this.auotCount) this.auotCount = 0; else {
if (this.playCount > 1 || -1 == this.playCount) {
this.stopBtn.active = !0;
if (-1 == this.playCount) {
this.auotCount = -1;
this.stopLabel.node.active = !1;
this.wxSp.active = !0;
} else {
this.auotCount = this.playCount - 1;
this.stopLabel.string = this.auotCount;
this.stopLabel.node.active = !0;
this.wxSp.active = !1;
}
}
this.doBet();
}
},
findSamePos: function(e) {
for (var t = 0; t < this.posArr.length; t++) if (e.x == this.posArr[t].x && e.y == this.posArr[t].y) return !0;
return !1;
},
auotBet: function() {
if (this.auotCount > 0) {
this.auotCount--;
if (this.auotCount <= 0) {
this.stopBtn.active = !1;
this.auotCount = 0;
}
this.doBet();
this.stopLabel.string = this.auotCount;
} else -1 == this.auotCount && this.scheduleOnce(function() {
this.doBet();
}.bind(this), .5);
},
doBet: function(e, t) {
if (this.mapPath.length <= 0) console.log("json 没有加载完"); else {
if (1e3 * this.lblUserScore.string - this.lChipNum < 0) {
ManagerHelp_SetSystemLabel("Your balance is insufficient!");
this.stopBtnEvent();
} else {
this.OnUpdateOperateButtonStatus(!1);
this.sendBallTag || (this.sendBallTag = 0);
this.sendBallTag++;
this.sendBallTag >= 65535 && (this.sendBallTag = 0);
this.jsGameEngine.OnSendEventGameStart(this.CurMapId, this.lChipNum, this.sendBallTag);
}
}
},
randomNum: function(e, t) {
switch (arguments.length) {
case 1:
return Math.random() * e + 1;

case 2:
return Math.random() * (t - e + 1) + e;

default:
return 0;
}
},
resetStartPositon: function() {
var e = {};
e.startX = this.startNode.parent.convertToWorldSpaceAR(this.startNode.getPosition()).x;
e.startY = this.startNode.parent.convertToWorldSpaceAR(this.startNode.getPosition()).y + 30;
e.endX = this.endNode.parent.convertToWorldSpaceAR(this.endNode.getPosition()).x;
return e;
},
OnGameRecord: function(e) {
this.rankLayer.getComponent("newRankLayer").setData(e.Ranking);
},
onBtnSwicth: function(e, t) {
this.CurMapId++;
this.CurMapId > 2 && (this.CurMapId = 0);
this.mapSp.spriteFrame = this.mapFrame[this.CurMapId];
this.updateMap(this.CurMapId);
for (var i = 0; i < this.resultItemArr.length; i++) this.resultItemArr[i].getComponent("newresult").playGuangSp();
},
updateMapStatr: function() {},
onBtnShowCount: function() {
this.countLayer.active = !this.countLayer.active;
},
onDestroy: function() {
this.ballPool.clear();
}
});
cc._RF.pop();
}, {} ],
Property: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "299baeK4CFDopvSgtTEUpch", "Property");
e("ACMD_AStruct");
window.PT_ISSUE_AREA_WEB = 1;
window.PT_ISSUE_AREA_GAME = 2;
window.PT_ISSUE_AREA_SERVER = 4;
window.PT_SERVICE_AREA_MESELF = 1;
window.PT_SERVICE_AREA_PLAYER = 2;
window.PT_SERVICE_AREA_LOOKON = 4;
window.PT_TYPE_ERROR = 0;
window.PT_TYPE_PROPERTY = 1;
window.PT_TYPE_PRESENT = 2;
window.PROPERTY_ID_CAR = 1;
window.PROPERTY_ID_EGG = 2;
window.PROPERTY_ID_CLAP = 3;
window.PROPERTY_ID_KISS = 4;
window.PROPERTY_ID_BEER = 5;
window.PROPERTY_ID_CAKE = 6;
window.PROPERTY_ID_RING = 7;
window.PROPERTY_ID_BEAT = 8;
window.PROPERTY_ID_BOMB = 9;
window.PROPERTY_ID_SMOKE = 10;
window.PROPERTY_ID_VILLA = 11;
window.PROPERTY_ID_BRICK = 12;
window.PROPERTY_ID_FLOWER = 13;
window.PROPERTY_ID_TWO_CARD = 14;
window.PROPERTY_ID_FOUR_CARD = 15;
window.PROPERTY_ID_SCORE_CLEAR = 16;
window.PROPERTY_ID_ESCAPE_CLEAR = 17;
window.PROPERTY_ID_TRUMPET = 18;
window.PROPERTY_ID_TYPHON = 19;
window.PROPERTY_ID_GUARDKICK_CARD = 20;
window.PROPERTY_ID_POSSESS = 21;
window.PROPERTY_ID_BLUERING_CARD = 22;
window.PROPERTY_ID_YELLOWRING_CARD = 23;
window.PROPERTY_ID_WHITERING_CARD = 24;
window.PROPERTY_ID_REDRING_CARD = 25;
window.PROPERTY_ID_VIPROOM_CARD = 26;
window.PROPERTY_NEW_ID_BOX = 1;
window.PROPERTY_NEW_ID_CARD_JIN = 2;
window.PROPERTY_NEW_ID_CARD_YIN = 3;
window.PROPERTY_NEW_ID_CARD_TONG = 4;
window.PROPERTY_NEW_ID_POWER_BULLET = 5;
window.PROPERTY_NEW_ID_DONG = 6;
window.PROPERTY_NEW_ID_CANNON_JIANG = 7;
window.PROPERTY_NEW_ID_ROSE = 8;
window.PROPERTY_NEW_ID_KISS = 9;
window.PROPERTY_NEW_ID_MULES = 10;
window.PROPERTY_NEW_ID_ICE_BACKET = 11;
window.PROPERTY_NEW_ID_TOMATO = 12;
window.PROPERTY_NEW_ID_TRUMPET = 18;
window.PROPERTY_NEW_ID_TYPHON = 19;
window._PropertyInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropID = 0;
this.wParentID = 0;
this.cbIssueArea = 0;
this.cbPropertyType = 0;
this.cbServiceArea = 0;
this.szPropertyName = [];
ZeroArray(this.szPropertyName, 32);
this.szRegulationsInfo = [];
ZeroArray(this.szRegulationsInfo, 256);
this.lPropertyGold = 0;
this.dwValidTime = 0;
this.lSendLoveLiness = 0;
this.lRecvLoveLiness = 0;
}
});
window._PropertyAttrib = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wIndex = 0;
this.wPropertyType = 0;
this.wServiceArea = 0;
this.szMeasuringunit = [];
his.szPropertyName = [];
this.szRegulationsInfo = [];
ZeroArray(this.szMeasuringunit, 8);
ZeroArray(this.szPropertyName, 32);
ZeroArray(this.szRegulationsInfo, 256);
}
});
window._PropertyItem = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.PropertyInfo = new _PropertyInfo();
this.PropertyAttrib = new _PropertyAttrib();
}
});
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
RankLayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "513e29M1i5JMIkPVHSttUr3", "RankLayer");
cc.Class({
extends: cc.Component,
properties: {
rankItem: cc.Prefab,
rankScroll: cc.Node,
todayBtn: cc.Node,
lastDaybtn: cc.Node,
rankLayer: cc.Node,
content_layout: cc.Node
},
start: function() {
this.onBtnToday();
this.node.on(cc.Node.EventType.TOUCH_END, this.onBtnCloseRank, this);
},
setData: function(e) {
this.rankData = e;
this.updateRankView();
},
updateRankView: function() {
if (this.rankData) {
var e = this.rankData.todayRanking;
"7DAY" == this.curType && (e = this.rankData.m7dayRanking);
this.content_layout.removeAllChildren();
this.content_layout.height = 70 * e.length;
for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.rankItem);
i.getComponent("rankItem").setData(e[t]);
this.content_layout.addChild(i);
}
}
},
onBtnToday: function() {
this.curType = "TODAY";
this.todayBtn.getComponent(cc.Button).interactable = !1;
this.lastDaybtn.getComponent(cc.Button).interactable = !0;
this.lastDaybtn.getChildByName("curSprite").active = !1;
this.todayBtn.getChildByName("curSprite").active = !0;
this.todayBtn.getChildByName("dayText").color = cc.color(255, 255, 255);
this.lastDaybtn.getChildByName("dayText").color = cc.color(125, 125, 125);
this.updateRankView();
},
onBtnLastToday: function() {
this.curType = "7DAY";
this.lastDaybtn.getComponent(cc.Button).interactable = !1;
this.todayBtn.getComponent(cc.Button).interactable = !0;
this.todayBtn.getChildByName("curSprite").active = !1;
this.lastDaybtn.getChildByName("curSprite").active = !0;
this.lastDaybtn.getChildByName("dayText").color = cc.color(255, 255, 255);
this.todayBtn.getChildByName("dayText").color = cc.color(125, 125, 125);
this.updateRankView();
},
onBtnCloseRank: function() {
this.rankLayer.active = !1;
}
});
cc._RF.pop();
}, {} ],
RightDefine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5e4fZU3i5AfaEvcjwg4UH7", "RightDefine");
window.UR_CANNOT_PLAY = 1;
window.UR_CANNOT_LOOKON = 2;
window.UR_CANNOT_WISPER = 4;
window.UR_CANNOT_ROOM_CHAT = 8;
window.UR_CANNOT_GAME_CHAT = 16;
window.UR_CANNOT_BUGLE = 32;
window.UR_GAME_DOUBLE_SCORE = 256;
window.UR_GAME_KICK_OUT_USER = 512;
window.UR_GAME_ENTER_VIP_ROOM = 1024;
window.UR_GAME_MATCH_USER = 268435456;
window.UR_GAME_CHEAT_USER = 536870912;
window.UR_CAN_LIMIT_PLAY = 1;
window.UR_CAN_LIMIT_LOOKON = 2;
window.UR_CAN_LIMIT_WISPER = 4;
window.UR_CAN_LIMIT_ROOM_CHAT = 8;
window.UR_CAN_LIMIT_GAME_CHAT = 16;
window.UR_CAN_KILL_USER = 256;
window.UR_CAN_SEE_USER_IP = 512;
window.UR_CAN_DISMISS_GAME = 1024;
window.UR_CAN_LIMIT_USER_CHAT = 2048;
window.UR_CAN_CONFINE_IP = 4096;
window.UR_CAN_CONFINE_MAC = 8192;
window.UR_CAN_SEND_WARNING = 16384;
window.UR_CAN_MODIFY_SCORE = 32768;
window.UR_CAN_FORBID_ACCOUNTS = 65536;
window.UR_CAN_BIND_GAME = 1048576;
window.UR_CAN_BIND_GLOBAL = 2097152;
window.UR_CAN_ISSUE_MESSAGE = 16777216;
window.UR_CAN_MANAGER_SERVER = 33554432;
window.UR_CAN_MANAGER_OPTION = 67108864;
window.UR_CAN_MANAGER_ANDROID = 134217728;
window.CUserRight_CanPlay = function(e) {
return 0 == (e & window.UR_CANNOT_PLAY);
};
window.CUserRight_CanLookon = function(e) {
return 0 == (e & window.UR_CANNOT_LOOKON);
};
window.CUserRight_CanWisper = function(e) {
return 0 == (e & window.UR_CANNOT_WISPER);
};
window.CUserRight_CanRoomChat = function(e) {
return 0 == (e & window.UR_CANNOT_ROOM_CHAT);
};
window.CUserRight_CanGameChat = function(e) {
return 0 == (e & window.UR_CANNOT_GAME_CHAT);
};
window.CUserRight_CanEnterVipRoom = function(e) {
return 0 == (e & window.UR_GAME_ENTER_VIP_ROOM);
};
window.CUserRight_CanDoubleScore = function(e) {
return 0 != (e & window.UR_GAME_DOUBLE_SCORE);
};
window.CUserRight_CanKillOutUser = function(e) {
return 0 != (e & window.UR_GAME_KICK_OUT_USER);
};
window.CUserRight_IsGameMatchUser = function(e) {
return 0 != (e & window.UR_GAME_MATCH_USER);
};
window.CUserRight_IsGameCheatUser = function(e) {
return 0 != (e & window.UR_GAME_CHEAT_USER);
};
window.CMasterRight_CanLimitPlay = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_PLAY);
};
window.CMasterRight_CanLimitLookon = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_LOOKON);
};
window.CMasterRight_CanLimitWisper = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_WISPER);
};
window.CMasterRight_CanLimitRoomChat = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_ROOM_CHAT);
};
window.CMasterRight_CanLimitGameChat = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_GAME_CHAT);
};
window.CMasterRight_CanKillUser = function(e) {
return 0 != (e & window.UR_CAN_KILL_USER);
};
window.CMasterRight_CanSeeUserIP = function(e) {
return 0 != (e & window.UR_CAN_SEE_USER_IP);
};
window.CMasterRight_CanDismissGame = function(e) {
return 0 != (e & window.UR_CAN_DISMISS_GAME);
};
window.CMasterRight_CanLimitUserChat = function(e) {
return 0 != (e & window.UR_CAN_LIMIT_USER_CHAT);
};
window.CMasterRight_CanConfineIP = function(e) {
return 0 != (e & window.UR_CAN_CONFINE_IP);
};
window.CMasterRight_CanConfineMac = function(e) {
return 0 != (e & window.UR_CAN_CONFINE_MAC);
};
window.CMasterRight_CanSendWarning = function(e) {
return 0 != (e & window.UR_CAN_SEND_WARNING);
};
window.CMasterRight_CanModifyScore = function(e) {
return 0 != (e & window.UR_CAN_MODIFY_SCORE);
};
window.CMasterRight_CanForbidAccounts = function(e) {
return 0 != (e & window.UR_CAN_FORBID_ACCOUNTS);
};
window.CMasterRight_CanBindGame = function(e) {
return 0 != (e & window.UR_CAN_BIND_GAME);
};
window.CMasterRight_CanBindGlobal = function(e) {
return 0 != (e & window.UR_CAN_BIND_GLOBAL);
};
window.CMasterRight_CanIssueMessage = function(e) {
return 0 != (e & window.UR_CAN_ISSUE_MESSAGE);
};
window.CMasterRight_CanManagerServer = function(e) {
return 0 != (e & window.UR_CAN_MANAGER_SERVER);
};
window.CMasterRight_CanManagerAndroid = function(e) {
return 0 != (e & window.UR_CAN_MANAGER_ANDROID);
};
cc._RF.pop();
}, {} ],
SHLL_BingDong: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a825a51o2FMYaMAlSvVlwS/", "SHLL_BingDong");
cc.Class({
extends: cc.Component,
properties: {
pfBingDong: cc.Prefab
},
onEnable: function() {
var e = cc.instantiate(this.pfBingDong), t = e.getComponent(cc.Widget);
t.isAlignLeft = !0;
t.isAbsoluteLeft = !1;
t.isAlignTop = !0;
t.isAbsoluteTop = !1;
t.left = .25;
t.top = .25;
this.node.addChild(e);
(t = (e = cc.instantiate(this.pfBingDong)).getComponent(cc.Widget)).isAlignTop = !0;
t.isAbsoluteTop = !1;
t.isAlignRight = !0;
t.isAbsoluteRight = !1;
t.right = .25;
t.top = .25;
this.node.addChild(e);
(t = (e = cc.instantiate(this.pfBingDong)).getComponent(cc.Widget)).isAlignRight = !0;
t.isAbsoluteRight = !1;
t.isAlignBottom = !0;
t.isAbsoluteBottom = !1;
t.right = .25;
t.bottom = .25;
this.node.addChild(e);
(t = (e = cc.instantiate(this.pfBingDong)).getComponent(cc.Widget)).isAlignBottom = !0;
t.isAbsoluteBottom = !1;
t.isAlignLeft = !0;
t.isAbsoluteLeft = !1;
t.bottom = .25;
t.left = .25;
this.node.addChild(e);
}
});
cc._RF.pop();
}, {} ],
SHLL_BoundBox: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4402cLjV8lOZatmdFKF6HWi", "SHLL_BoundBox");
var n = e("SHLL_CMD_Game"), a = {
x1_: 0,
x2_: 0,
x3_: 0,
x4_: 0,
y1_: 0,
y2_: 0,
y3_: 0,
y4_: 0
};
a.kRotateRadian1 = 210 * n.M_PI / 180;
a.kRotateRadian2 = 30 * n.M_PI / 180;
a.kFactor = Math.sqrt(3) / 3;
a.CreateBoundBox = function(e, t, i, n, o) {
var s = e / 2, r = t / 2, c = Math.sin(o), l = Math.cos(o), h = -s, u = -r, d = s, m = r;
a.x1_ = h * l - u * c + i;
a.y1_ = h * c + u * l + n;
a.x2_ = d * l - u * c + i;
a.y2_ = d * c + u * l + n;
a.x3_ = d * l - m * c + i;
a.y3_ = d * c + m * l + n;
a.x4_ = h * l - m * c + i;
a.y4_ = h * c + m * l + n;
};
a.CreateBoundBox2 = function(e, t, i, n, a) {};
a.ComputeCollision = function(e, t) {
var i = [ {
x: a.x1_,
y: a.y1_
}, {
x: a.x2_,
y: a.y2_
}, {
x: a.x3_,
y: a.y3_
}, {
x: a.x4_,
y: a.y4_
} ], n = 0, o = 0, s = !1, r = 0, c = 0;
for (n = 0, o = 3; n < 4; o = n++) {
var l = (e - i[o].x) * (i[n].y - i[o].y) - (t - i[o].y) * (i[n].x - i[o].x);
l > 0 ? ++r : l < 0 && ++c;
}
0 != r && 0 != c || (s = !0);
return s;
};
a.CreateBoundingTriangle = function(e, t, i, o) {
var s = e * kFactor;
a.x1_ = t + s * Math.cos(o - n.M_PI_2);
a.y1_ = i + s * Math.sin(o - n.M_PI_2);
a.x2_ = t + s * Math.cos(o - a.kRotateRadian1);
a.y2_ = i + s * Math.sin(o - a.kRotateRadian1);
a.x3_ = t + s * Math.cos(o + a.kRotateRadian2);
a.y3_ = i + s * Math.sin(o + a.kRotateRadian2);
};
a.CreateBoundingTriangleWithRadius = function(e, t, i, n) {
a.x1_ = t + e * Math.cos(n - M_PI_2);
a.y1_ = i + e * Math.sin(n - M_PI_2);
a.x2_ = t + e * Math.cos(n - a.kRotateRadian1);
a.y2_ = i + e * Math.sin(n - a.kRotateRadian1);
a.x3_ = t + e * Math.cos(n + a.kRotateRadian2);
a.y3_ = i + e * Math.sin(n + a.kRotateRadian2);
};
a.ComputeCollision = function(e, t) {
var i = [ {
x: a.x1_,
y: a.y1_
}, {
x: a.x2_,
y: a.y2_
}, {
x: a.x3_,
y: a.y3_
} ], n = 0, o = 0, s = !1, r = 0, c = 0;
for (n = 0, o = 2; n < 3; o = n++) {
var l = (e - i[o].x) * (i[n].y - i[o].y) - (t - i[o].y) * (i[n].x - i[o].x);
l > 0 ? ++r : l < 0 && ++c;
}
0 != r && 0 != c || (s = !0);
return s;
};
t.exports = a;
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_BulletItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0064aZpJ2xFQ47VtpyUwpU0", "SHLL_BulletItem");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
cc.Class({
extends: cc.Component,
properties: {
nodeBullet: [ cc.Node ]
},
onLoad: function() {},
InitInterface: function(e) {
this.jsFishManager = e.jsFishManager;
this.jsGameEngine = e;
this.wMeChairID = e.wMeChairID;
var t = this.getComponent(cc.PolygonCollider);
t && (t.enabled = !0);
var i = this.getComponent(cc.BoxCollider);
i && (i.enabled = !0);
},
onCollisionStay: function(e, t) {
var i = t.node.name, n = t.node.getComponent("SHLL_BulletItem"), a = e.node.getComponent("SHLL_FishItem"), o = a.GetFishKind(), s = a.GetFishID(), r = n.GetFireChairID(), c = n.GetBulletID(), l = n.GetBulletKind(), h = n.GetBulletMut(), u = n.GetAndroidID(), d = GameFrameEngine.instances, m = d.jsFishManager;
if ("JiGuang" != i) {
var f = n.GetLockFishID();
if (f > 0) {
if (m.GetFish(f) && a.nFishID != f) return;
}
t.enabled = !1;
n.CastingNet();
r == this.wMeChairID && PlayGameAudio("3002/Audio/wang", !1);
a.OnHitTest();
if (c <= 0) {
n.SetCatchFishID(s);
n.SetCatchKind(o);
} else if (r == this.wMeChairID || u == this.wMeChairID) {
var p = m.GetSweepFish(a, o);
d.SendCatchFish(s, r, c, l, h, p);
}
} else {
var _ = "JiGuang" + r;
if (null == a[_] || d.fUpdateTime - a[_] > .5) {
a[_] = d.fUpdateTime;
d.SendCatchFish(s, r, c, l, h, []);
}
a.OnHitTest();
}
},
onCollisionEnter1: function(e, t) {},
init: function(e, t, i, n, a, o) {
this.cbBulletKind = e;
this.nBulletID = t;
this.nBulletMut = i;
this.wFireChairID = n;
this.nNetRadius = o;
this.nAndroidID = a;
this.nSpeed = 0;
this.fFireAngle = 0;
this.wAndroidChairID = 0;
this.nLockFishID = 0;
this.cbBulletStatus = 0;
this.arrayTrace = [];
this.nTraceIndex = 0;
this.cbCatchKind = 0;
this.nCantchFishID = 0;
},
GetBulletKind: function() {
return this.cbBulletKind;
},
SetBulletKind: function(e) {
this.cbBulletKind = e;
},
GetBulletMut: function() {
return this.nBulletMut;
},
GetAndroidID: function() {
return this.nAndroidID;
},
SetBulletID: function(e) {
this.nBulletID = e;
},
GetBulletID: function(e) {
return this.nBulletID;
},
SetCatchFishID: function(e) {
this.nCantchFishID = e;
},
GetCatchFishID: function() {
return this.nCantchFishID;
},
SetCatchKind: function(e) {
this.nCantchKind = e;
},
GetCatchKind: function() {
return this.nCantchKind;
},
GetTraceArray: function() {
return this.arrayTrace;
},
GetTraceLast: function() {
var e = this.arrayTrace.length - 1;
return this.arrayTrace[e];
},
SetTraceIndex: function(e, t) {
this.nTraceIndex = e;
if (0 != this.arrayTrace.length && 1 == t) {
this.node.x = this.arrayTrace[0].x;
this.node.y = this.arrayTrace[1].y;
}
},
GetSpeed: function() {
return this.nSpeed;
},
SetSpeed: function(e) {
this.nSpeed = e;
},
GetFireChairID: function() {
return this.wFireChairID;
},
ClearTrace: function() {
this.arrayTrace.length = 0;
},
SetAngle: function(e) {
this.fFireAngle = e;
this.node.rotation = 180 * e / n.M_PI;
},
GetAngle: function() {
return this.fFireAngle;
},
SetAndroidChairID: function(e) {
this.wAndroidChairID = e;
},
GetAndroidChairID: function(e) {
this.wAndroidChairID = e;
},
GetLockFishID: function() {
return this.nLockFishID;
},
SetLockFishID: function(e) {
this.nLockFishID = e;
},
GetBulletStatus: function(e) {
return this.cbBulletStatus;
},
SetBulletStatus: function(e) {
this.cbBulletStatus = e;
},
SetFireBullet: function() {
var e = "Bullet" + n.GetBulletIndex(this.cbBulletKind);
PlayAnimationClipName(this.node, e);
},
CastingNet: function() {
this.SetBulletStatus(n.BULLET_CASTING_NET);
var e = "Net" + n.GetBulletIndex(this.cbBulletKind);
if ("NetKui" == e) {
0;
}
var t = this.node.getComponent(cc.Animation);
t.getAnimationState(e).jsClipTemp = this;
t.play(e);
t.on("finished", this.CasetineNetOver, this);
return !0;
},
CasetineNetOver: function(e) {
if (e.target.jsClipTemp) {
var t = e.target.jsClipTemp;
e.target.jsClipTemp = void 0;
t.SetBulletStatus(n.BULLET_INVALID);
}
},
OnFrame: function(e) {
if (this.cbBulletStatus != n.BULLET_INVALID) {
var t = this.arrayTrace.length;
if (0 == t) {
this.SetBulletStatus(n.BULLET_INVALID);
cc.warn("bullet array_trace = 0 and set is invalid");
}
if (this.cbBulletStatus == n.BULLET_FLYING) {
if (this.nTraceIndex < t) {
var i = this.nTraceIndex;
this.node.x = this.arrayTrace[i].x;
this.node.y = this.arrayTrace[i].y;
this.nTraceIndex++;
}
this.nTraceIndex == t && a.ReboundBullet(this);
}
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_BulletManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a410891zWJHn4iSaZt2dc7H", "SHLL_BulletManager");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
cc.Class({
extends: cc.Component,
properties: {
pfBullet: cc.Prefab
},
onLoad: function() {},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
this.arrayAllBullet = [];
this.arrayAllCount = [];
this.fAryFireTime = [];
this.arrayBulletBuffer = [];
this.arrayBufferCount = [];
for (var i = 0; i < n.GAME_PLAYER; i++) {
this.arrayAllBullet[i] = [];
this.fAryFireTime[i] = 0;
this.arrayBulletBuffer[i] = [];
this.arrayBufferCount[i] = 0;
this.arrayAllCount[i] = 0;
}
this.nodePoolBullet = new cc.NodePool("SHLL_BulletItem");
this.wMeChairID = this.jsGameEngine.GetMeChairID();
},
CanFireBullet: function(e) {
return this.arrayAllCount[e] < n.MAX_BULLET_COUNT;
},
onEnable: function() {},
onDisable: function() {},
OnLogicOtherBulletMaxCount: function(e) {
if (this.arrayAllCount[e] > n.MAX_BULLET_COUNT) {
var t = this.arrayAllBullet[e].shift();
this.nodePoolBullet.put(t.node);
this.arrayAllCount[e]--;
}
},
BulletBufferShift: function(e) {
var t = this.arrayBulletBuffer[e].shift();
this.arrayBufferCount[e]--;
return t;
},
GetBulletBufferCount: function(e) {
return this.arrayBufferCount[e];
},
AddBulletBufferForMe: function(e, t) {
this.arrayBulletBuffer[e].push(t);
this.arrayBufferCount[e]++;
},
AddBulletBufferForOther: function(e, t) {
this.OnLogicOtherBulletMaxCount(e);
this.arrayBulletBuffer[e].push(t);
this.arrayBufferCount[e]++;
},
OnFireBullet: function(e, t, i, o, s, r, c, l, h, u, d) {
if (c >= n.GAME_PLAYER) return 0;
var m = null;
null == (m = this.nodePoolBullet.get()) && (m = cc.instantiate(this.pfBullet));
this.node.addChild(m);
c == this.wMeChairID && PlayGameAudio("3002/Audio/shoot0", !1);
if (c == this.wMeChairID) {
this.jsGameEngine.fGameTime = 0;
this.jsGameEngine.bForceTi = !1;
}
var f = m.getComponent("SHLL_BulletItem");
f.init(o, s, r, c, u, h);
f.SetAndroidChairID(u);
f.SetLockFishID(d);
f.SetBulletStatus(n.BULLET_FLYING);
f.SetFireBullet();
f.InitInterface(this.jsGameEngine);
this.arrayAllBullet[c].push(f);
o != n.BULLET_KUI && this.arrayAllCount[c]++;
c == this.jsGameEngine.GetMeChairID() && o != n.BULLET_KUI && this.AddBulletBufferForMe(c, f);
var p = [ e, 0 ], _ = [ t, 0 ], S = !1;
do {
if (d <= 0) break;
if (n.LockScreen) break;
f.ClearTrace();
this.jsGameEngine.jsLockManager;
var g = this.jsGameEngine.jsFishManager, C = g.GetFish(d);
if (!C) break;
var w = C.node.getPosition();
p[1] = w.x;
_[1] = w.y;
if (this.jsGameView.nodeBingDong.active) {
var b = a.GetMidPoint(e, t, w.x, w.y), A = [ e, b.x, w.x ], v = [ t, b.y, w.y ];
a.BuildLinear(A, v, 3, f.arrayTrace, l);
var G = [];
if (n.InsideScreen(w)) {
p[0] = w.x;
_[0] = w.y;
var I = a.GetTargetPoint(p[0], _[0], i);
p[1] = I.x;
_[1] = I.y;
a.BuildLinear(p, _, 2, G, l);
f.arrayTrace.shift();
f.arrayTrace = f.arrayTrace.concat(G);
} else {
var D = a.GetTargetPoint(p[0], _[0], i);
p[1] = D.x;
_[1] = D.y;
a.BuildLinear(p, _, 2, G, l);
f.arrayTrace = f.arrayTrace.concat(G);
}
} else {
a.BuildLinear(p, _, 2, f.arrayTrace, l);
var y = C.GetTraceSpeed(), E = {};
if (!g.LockFishReachPos(c, d, f.arrayTrace.length * (y / 1), E)) break;
var L = a.GetMidPoint(e, t, E.x, E.y), T = [ e, L.x, E.x ], N = [ t, L.y, E.y ];
a.BuildLinear(T, N, 3, f.arrayTrace, l);
var R = [];
if (n.InsideScreen(E)) {
p[0] = E.x;
_[0] = E.y;
var B = a.GetTargetPoint(p[0], _[0], i);
p[1] = B.x;
_[1] = B.y;
a.BuildLinear(p, _, 2, R, l);
f.arrayTrace.shift();
f.arrayTrace = f.arrayTrace.concat(R);
} else {
var M = a.GetTargetPoint(p[0], _[0], i);
p[1] = M.x;
_[1] = M.y;
a.BuildLinear(p, _, 2, R, l);
f.arrayTrace = f.arrayTrace.concat(R);
}
}
S = !0;
} while (0);
if (!S) {
p[0] = e;
_[0] = t;
var P = a.GetTargetPoint(p[0], _[0], i);
p[1] = P.x;
_[1] = P.y;
a.BuildLinear(p, _, 2, f.arrayTrace, l);
}
f.SetSpeed(l);
f.SetAngle(i);
f.SetTraceIndex(0, !0);
return f;
},
OnFrame: function(e, t) {
this.jsGameEngine.jsFishManager;
for (var i = 0; i < n.GAME_PLAYER; i++) for (var o = 0, s = this.arrayAllBullet[i].length; o < s; ) {
var r = this.arrayAllBullet[i][o];
r.OnFrame(e);
if (r.GetBulletStatus() == n.BULLET_INVALID) {
this.nodePoolBullet.put(r.node);
this.arrayAllBullet[i].splice(o, 1);
r.GetBulletKind() != n.BULLET_KUI && this.arrayAllCount[r.GetFireChairID()]--;
s--;
} else o++;
}
for (var c = 0; c < n.GAME_PLAYER; c++) if (!this.jsGameEngine.IsMeChairID(c)) {
this.fAryFireTime[c] += e;
if (this.arrayBufferCount[c] > 0) {
var l = this.arrayBulletBuffer[c][0];
if (this.fAryFireTime[c] > n.FIRE_DT / 2 || l.cbFireType == n.FIRE_IGNORE || l.cbFireType == n.FIRE_PRO_JIGUANG) {
this.fAryFireTime[c] = 0;
var h = this.BulletBufferShift(c), u = h.wChairID, d = h.nAngle / 100, m = h.nLockFishID, f = this.jsGameEngine.jsLockManager, p = this.jsGameEngine.jsFishManager, _ = this.jsGameEngine.jsCannonManager, S = this.jsGameEngine;
_.SetCurrentAngle(u, d);
var g = _.GetCannonPos(u);
-1 == m && 0 == (m = f.GetLockFishID(u)) && (m = f.LockFish());
_.bDisableFire[u] || f.SetLockFishID(u, m);
if (m > 0) {
var C = p.GetFish(m), w = {
x: 0,
y: 0
};
C && (w = C.node.getPosition());
if (null != C && n.InsideScreen(w)) {
var b = w;
_.bDisableFire[u] || f.SetLockFishID(u, m);
if (n.InsideScreen(b)) {
d = a.CalcAngle(b.x, b.y, g.x, g.y);
_.SetCurrentAngle(u, d);
}
} else {
f.ClearLockTrace(u);
m = 0;
}
}
if (l.cbFireType == n.FIRE_PRO_JIGUANG) {
_.SetProCannonReady(u, h.nBulletMut, n.PRO_TYPE_LASER, !1);
_.cbProCannonStatus[u] = n.PRO_CANNON_FIRE_START;
_.SetProCanonFire(u, d, !0);
} else {
_.SetCannonStatus(u, h.cbBulletKind, h.nBulletMut);
_.SetFishChangeScore(u, h.lFishScore);
_.OnFireAnimate(u, h.cbBulletKind);
g = _.GetFireSrcPos(u);
this.OnFireBullet(g.x, g.y, d, h.cbBulletKind, h.nBulletID, h.nBulletMut, u, S.nBulletSpeed[h.cbBulletKind], S.nNetRadius[h.cbBulletKind], h.wAndroidChairID, m);
}
}
}
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1b3d6ZQwL9L2ZXbSadlYNvr", "SHLL_CMD_Game");
var n = {
SCORE_TAIL_COUNT: 2,
FISH_KIND_0: 0,
FISH_KIND_1: 1,
FISH_KIND_2: 2,
FISH_KIND_3: 3,
FISH_KIND_4: 4,
FISH_KIND_5: 5,
FISH_KIND_6: 6,
FISH_KIND_7: 7,
FISH_KIND_8: 8,
FISH_KIND_9: 9,
FISH_KIND_10: 10,
FISH_KIND_11: 11,
FISH_KIND_12: 12,
FISH_KIND_13: 13,
FISH_KIND_14: 14,
FISH_KIND_15: 15,
FISH_KIND_16: 16,
FISH_KIND_17: 17,
FISH_KIND_18: 18,
FISH_KIND_19: 19,
FISH_KIND_20: 20,
FISH_KIND_21: 21,
FISH_KIND_22: 22,
FISH_KIND_23: 23,
FISH_KIND_24: 24,
FISH_KIND_25: 25,
FISH_KIND_26: 26,
FISH_KIND_27: 27,
FISH_KIND_28: 28,
FISH_KIND_29: 29,
FISH_KIND_30: 30,
FISH_KIND_31: 31,
FISH_KIND_32: 32,
FISH_KIND_33: 33,
FISH_KIND_34: 34,
FISH_COUNT: 35,
IsLongKing: function(e) {
return e >= n.FISH_KIND_15 && e <= n.FISH_KIND_18;
},
IsFishKing: function(e) {
return e >= n.FISH_KIND_19 && e <= n.FISH_KIND_26;
},
IsBingoScore: function(e) {
return n.IsLongKing(e) || n.IsBomb(e) || n.IsFishKing(e);
},
IsNormal: function(e) {
return e < n.FISH_KIND_19;
},
IsHaiKui: function(e) {
return e == n.FISH_KIND_27 || e == n.FISH_KIND_28;
},
CanAutoLock: function(e) {
return e > n.FISH_KIND_14;
},
IsBomb: function(e) {
return e == n.FISH_KIND_29;
},
IsBubble: function(e) {
return e == n.FISH_KIND_30 || e == n.FISH_KIND_31;
},
IsBubbleCannon: function(e) {
return e == n.FISH_KIND_30;
},
IsBubbleBingDong: function(e) {
return e == n.FISH_KIND_31;
},
GetHaiKuiIndex: function(e) {
return e - n.FISH_KIND_27;
},
GetFishKingIndex: function(e) {
return e - n.FISH_KIND_19;
},
GetBubbleType: function(e) {
return e == n.FISH_KIND_30 ? n.PRO_TYPE_LASER : e == n.FISH_KIND_31 ? n.PRO_TYPE_DONG : void 0;
},
IsChangeFishStatus: function(e) {
return e == n.FISH_KIND_29;
},
KIND_ID: 3002,
GAME_NAME: "Fish Reef",
GAME_PLAYER: 4
}, a = n.GAME_PLAYER;
n.M_2PI = 6.283185307179586;
n.M_PI = 3.141592653589793;
n.M_PI_2 = 1.5707963267948966;
n.M_PI_4 = .7853981633974483;
n.M_1_PI = .3183098861837907;
n.M_2_PI = .6366197723675814;
n.kChairDefaultAngle = [ n.M_PI, n.M_PI, 0, n.M_PI_2 ];
n.kChairDefaultBulletAngle = [ n.M_PI, n.M_PI, 2 * n.M_PI, 2 * n.M_PI ];
n.TRACE_S_COUNT = 50;
n.TRACE_LINEAR = 0;
n.TRACE_BEZIER = 1;
n.TRACE_ZUHE = 2;
n.TRACE_TOTAL = 3;
n.BULLET_INVALID = 0;
n.BULLET_FLYING = 1;
n.BULLET_CASTING_NET = 2;
n.MAX_BULLET_COUNT = 15;
n.FIRE_DT = .2;
n.ROOMMESSAGE = 0;
n.SYSTEMMESSAGE = 1;
n.FISH_INVALID = 0;
n.FISH_ALIVE = 1;
n.FISH_DIED = 2;
n.ScreenWidth = 1920;
n.ScreenHeight = 1080;
n.ScreenWidth_2 = n.ScreenWidth / 2;
n.ScreenHeight_2 = n.ScreenHeight / 2;
n.InsideScreen = function(e, t) {
return 1 == arguments.length && e.x > 0 && e.x < n.ScreenWidth && e.y > 0 && e.y < n.ScreenHeight || 2 == arguments.length && e > 0 && e < n.ScreenWidth && t >= 0 && t < n.ScreenHeight;
};
n.FPoint = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.fx = 0;
this.fy = 0;
}
});
n.FPointAngle = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.fx = 0;
this.fy = 0;
this.fangle = 0;
}
});
n.FileTrack = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nCount = 0;
this.pos = [];
memset(this.pos, 2e3, n.FPointAngle);
}
});
n.SCENE_KIND_1 = 0;
n.SCENE_KIND_2 = 1;
n.SCENE_KIND_3 = 2;
n.SCENE_KIND_4 = 3;
n.SCENE_KIND_5 = 4;
n.SCENE_KIND_6 = 5;
n.SCENE_KIND_COUNT = 6;
n.BULLET_KIND_1_NORMAL = 0;
n.BULLET_KIND_2_NORMAL = 1;
n.BULLET_KIND_3_NORMAL = 2;
n.BULLET_KIND_4_NORMAL = 3;
n.BULLET_KUI = 4;
n.BULLET_KIND_LASE = 5;
n.BULLET_KIND_COUNT = 6;
n.MAX_SWEEP_COUNT = 200;
n.PRO_TYPE_NONE = 0;
n.PRO_TYPE_LASER = 1;
n.PRO_TYPE_DONG = 2;
n.GetBulletKind = function(e) {
return e > 0 && e < 10 ? n.BULLET_KIND_1_NORMAL : e >= 10 && e < 100 ? n.BULLET_KIND_2_NORMAL : e >= 100 && e < 1e3 ? n.BULLET_KIND_3_NORMAL : n.BULLET_KIND_4_NORMAL;
};
n.GetBulletIndex = function(e) {
return e == n.BULLET_KIND_1_NORMAL ? 0 : e == n.BULLET_KIND_2_NORMAL ? 1 : e == n.BULLET_KIND_3_NORMAL ? 2 : e == n.BULLET_KIND_4_NORMAL ? 3 : e == n.BULLET_KUI ? "Kui" : e == n.BULLET_KIND_LASE ? 4 : void 0;
};
n.dwBulletIonTime = 20;
n.dwLockTime = 10;
n.dwMaxCatchFishCount = 2;
n.PRO_CANNON_NONE = 0;
n.PRO_CANNON_GET_START = 1;
n.PRO_CANNON_FIRE_READY = 2;
n.PRO_CANNON_FIRE_START = 3;
n.PRO_CANNON_FIRE_ING = 4;
n.SUB_S_SCENE_END = 1700;
n.SUB_S_STOCK_OPERATE_RESULT = 1701;
n.SUB_S_SWITCH_SCENE = 1702;
n.SUB_S_CATCH_SWEEP_FISH_RESULT = 1704;
n.SUB_S_CATCH_SWEEP_FISH = 1705;
n.SUB_S_CATCH_FISH = 1708;
n.SUB_S_USER_FIRE = 1709;
n.SUB_S_FISH_TRACE = 1711;
n.SUB_S_GAME_CONFIG = 1712;
n.SUB_S_CATCH_KUI = 1727;
n.SUB_S_CATCH_KUI27 = 1731;
n.SUB_S_CATCH_PRO = 1732;
n.SUB_S_CATCH_PRO_RESULT = 1733;
n.SUB_S_SEND_LIST_INFO = 1800;
n.SUB_C_QUERY_LIST_INFO = 1850;
n.INSERT_BLACK_LIST = 0;
n.INSERT_WHITE_LIST = 1;
n.REMOVE_FROM_BLACK_LIST = 2;
n.REMOVE_FROM_WHITE_LIST = 3;
n.GET_BLACK_WHITE_LIST = 4;
n.SET_PLAYER_Probability = 5;
n.MAX_CONTROL_CODE = 6;
n.VIEW_LIST_INFO = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwBlack_gameID_array = [];
this.dwBlack_Nums = 0;
this.dwWhite_gameID_array = [];
this.dwWhite_Nums = 0;
memset(this.dwBlack_gameID_array, 0, 50);
memset(this.dwBlack_gameID_array, 0, 50);
}
});
var o = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbTraceType = 0;
this.wFishTraceID = 0;
this.nFishID = 0;
this.cbFishKind = 0;
this.nRandx = 0;
this.nRandy = 0;
this.cbRandType = 0;
this.dwMoveTime = 0;
}
});
n.FishStatusTrace = o;
n.CMD_S_GameStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lChangeScore = [];
this.lInitScore = [];
this.nFishStatusCount = 0;
this.fishStatusTrace = [];
memset(this.lChangeScore, 0, a);
memset(this.lInitScore, 0, a);
memset(this.fishStatusTrace, 100, n.FishStatusTrace);
}
});
n.MAX_KUI_COUNT = 10;
n.CMD_S_CreateKui = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nCatchFishID = 0;
this.wChairID = 0;
this.nFishCount = 0;
this.cbFishKind = 0;
this.nFishID = [];
this.nRandTraceID = [];
memset(this.nFishID, 0, n.MAX_KUI_COUNT);
memset(this.nRandTraceID, 0, n.MAX_KUI_COUNT);
}
});
n.CMD_S_CreateBullet = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nCatchFishID = 0;
this.wChairID = 0;
this.wAndroidChairID = 0;
this.nBulletCount = 0;
this.cbBulletKind = 0;
this.nBulletMut = 0;
this.nBulletID = [];
memset(this.nBulletID, 0, n.TRACE_S_COUNT / 2);
}
});
n.CMD_S_GameConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lMaxUserScore = 0;
this.lMinUserScore = 0;
this.cbShowBox = 0;
this.nMinBulletMut = 0;
this.nMaxBulletMut = 0;
this.nBombWidth = 0;
this.nBombHeight = 0;
this.nFishMut = [];
this.nFishSpeed = [];
this.nFishBoxWidth = [];
this.nFishBoxHeight = [];
this.nFishHitRadius = [];
this.nBulletSpeed = [];
this.nNetRadius = [];
memset(this.nFishMut, 0, n.FISH_COUNT);
memset(this.nFishSpeed, 0, n.FISH_COUNT);
memset(this.nFishBoxWidth, 0, n.FISH_COUNT);
memset(this.nFishBoxHeight, 0, n.FISH_COUNT);
memset(this.nFishHitRadius, 0, n.FISH_COUNT);
memset(this.nBulletSpeed, 0, a);
memset(this.nNetRadius, 0, n.BULLET_KIND_COUNT);
}
});
n.MAX_FISH_TRACE = 12;
n.CMD_S_FishTrace = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.bNullData = 0;
this.wFishInterval = 0;
this.wFishTraceID = 0;
this.cbTraceType = 0;
this.nFishCount = 0;
this.cbMaxKind = 0;
this.cbFishKind = [];
this.nFishID = [];
this.nRandx = [];
this.nRandy = [];
this.cbRandType = 0;
memset(this.cbFishKind, 0, n.MAX_FISH_TRACE);
memset(this.nFishID, 0, n.MAX_FISH_TRACE);
memset(this.nRandx, 0, n.MAX_FISH_TRACE);
memset(this.nRandy, 0, n.MAX_FISH_TRACE);
}
});
n.CMD_S_UserFire = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbFireType = 0;
this.wChairID = 0;
this.nBulletID = 0;
this.nBulletMut = 0;
this.nLockFishID = 0;
this.wAndroidChairID = 0;
this.nAngle = 0;
this.lFishScore = 0;
this.cbBulletKind = 0;
}
});
n.CMD_S_CatchFish = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.lFishScore = 0;
this.nFishID = 0;
this.nBulletMut = 0;
this.cbFishKind = 0;
this.lFishMedal = 0;
}
});
n.CMD_S_CatchPro = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbProType = 0;
this.cbProStatus = 0;
this.wChairID = 0;
this.nFishID = 0;
this.cbFishKind = 0;
this.nBulletMut = 0;
}
});
n.CMD_S_ProCatchFishResult = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.lResultScore = 0;
this.cbProType = 0;
this.nCatchFishCount = 0;
this.nCatchBulletMul = 0;
this.nCatchFishID = [];
memset(this.nCatchFishID, 0, n.MAX_SWEEP_COUNT);
}
});
n.CMD_S_CatchSweepFish = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nFishID = 0;
this.wChairID = 0;
}
});
n.CMD_S_CatchSweepFishResult = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nFishID = 0;
this.wChairID = 0;
this.lFishScore = 0;
this.nCatchFishCount = 0;
this.nCatchFishID = [];
this.nBulletMut = 0;
memset(this.nCatchFishID, 0, 300);
}
});
n.CMD_S_SwitchScene = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wFishInterval = 0;
this.nFishCount = 0;
this.cbSceneKind = 0;
}
});
n.CMD_S_StockOperateResult = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbOperateCode = 0;
this.lStockScore = 0;
this.bNullData = 0;
}
});
n.SUB_C_ANDROID_BULLET_MUL = 71;
n.SUB_C_ANDROID_STAND_UP = 73;
n.SUB_C_USER_FILTER = 74;
n.SUB_C_STOCK_OPERATE = 75;
n.SUB_C_CATCH_SWEEP_FISH = 77;
n.SUB_C_CATCH_FISH = 78;
n.SUB_C_USER_FIRE = 79;
n.SUB_C_CALC_SCORE = 82;
n.SUB_C_CATCH_KUI = 87;
n.SUB_C_CATCH_KUI27 = 88;
n.SUB_C_FAILURE_BULLET = 89;
n.SUB_C_PRO_CATCH_FISH = 90;
n.CMD_C_CreateBulletFailure = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nFailureID = 0;
}
});
n.FIRE_NONE = 0;
n.FIRE_IGNORE = 1;
n.FIRE_PRO_JIGUANG = 2;
n.CMD_C_UserFire = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbFireType = 0;
this.nBulletMut = 0;
this.nLockFishID = 0;
this.nAngle = 0;
this.cbBulletKind = 0;
}
});
n.CMD_C_CatchFish = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.bNullData = 0;
this.nBulletID = 0;
this.nFishID = 0;
this.nBulletMut = 0;
this.cbBulletKind = 0;
}
});
n.CMD_C_ProCatchFish = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbProType = 0;
this.cbUseStatus = 0;
this.nCatchFishCount = 0;
this.nCatchFishID = [];
}
});
n.MAX_CATCH_FISH_COUNT = 300;
n.CMD_C_CatchSweepFish = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.nFishID = 0;
this.wChairID = 0;
this.bNullData = 0;
this.nCatchFishCount = 0;
this.nCatchFishID = [];
memset(this.nCatchFishID, 0, n.MAX_CATCH_FISH_COUNT);
}
});
n.CMD_C_StockOperate = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbOperateCode = 0;
this.bNullData = 0;
}
});
n.CMD_C_UserFilter = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbOperateCode = 0;
this.bNullData = 0;
this.dwGameID = 0;
}
});
n.CMD_C_AndroidBulletMul = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChair_id = 0;
this.nBullet_mulriple = 0;
this.nBullet_id = 0;
this.cbBullet_kind = 0;
this.bNull_data = 0;
}
});
n._UserPropStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPropID = 0;
this.cbStatus = 0;
this.wMulity = 0;
this.dwValidTime = 0;
this.dwStartTime = 0;
}
});
n.CMD_S_GameProperty = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbPropCount = 0;
this.GameProperty = [];
memset(this.GameProperty, 32, _GameProperty);
}
});
n.CMD_S_UserProperty = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wChairID = 0;
this.cbPropCount = 0;
this.UserPropStatus = [];
memset(this.UserPropStatus, 32, _UserPropStatus);
}
});
n.ActionStruct = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wSubCmdID = 0;
this.tStruct = 0;
},
init: function(e, t) {
this.wSubCmdID = e;
this.tStruct = t;
}
});
var s = [];
s[0] = 3;
s[1] = 9;
s[2] = 6;
s[3] = 8;
s[4] = 20;
s[5] = 12;
s[6] = 2;
s[7] = 10;
s[8] = 25;
s[9] = 30;
s[10] = 4;
s[11] = 14;
s[12] = 18;
s[13] = 40;
s[14] = 50;
s[15] = 300;
s[16] = 60;
s[17] = 70;
s[18] = 80;
s[19] = "Similar Bomb";
s[20] = "Similar Bomb";
s[21] = "Similar Bomb";
s[22] = "Similar Bomb";
s[23] = "Similar Bomb";
s[24] = "Similar Bomb";
s[25] = "Similar Bomb";
s[26] = "Similar Bomb";
s[27] = "Anemone Fission";
s[28] = "Anemone Bomb Fission";
s[29] = "Full Screen Bomb";
s[30] = "Laser Props";
s[31] = "Frozen Props";
s[32] = 120;
s[33] = 180;
s[34] = 240;
n.fish_mut = s;
t.exports = n;
cc._RF.pop();
}, {} ],
SHLL_CannonItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "462ffA+kodNG4FLQ0oN+0js", "SHLL_CannonItem");
var n = e("SHLL_CMD_Game");
e("SHLL_MathAide"), cc.Class({
extends: cc.Component,
properties: {
nodeBtnSub: cc.Node,
nodeBtnAdd: cc.Node,
labCannonMut: cc.Label,
nodeCannonLayout: cc.Node,
nodeCannon: cc.Node,
nodeFire: cc.Node,
wChairID: 0,
bSelf: !1,
bCutover: !1
},
onLoad: function() {
this.bSelf = !1;
this.cbBulletKind = 0;
},
start: function() {
if (this.bSelfChairID && this.nodeBtnSub) {
this.nodeBtnSub.active = !0;
this.nodeBtnAdd.active = !0;
}
},
GetBullet: function() {
return this.nodeFire ? this.nodeFire.getComponent("SHLL_BulletItem") : null;
},
initInterface: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
},
init: function(e, t, i) {
this.jsGameView = e;
this.jsGameEngine = t;
this.wChairID = i;
this.bSelfChairID = this.wChairID == this.jsGameEngine.GetMeChairID();
},
SetBulletKind: function(e) {
this.cbBulletKind = e;
},
SetCannonAngle: function(e) {
this.nodeCannonLayout.rotation = e;
},
SetMultiple: function(e) {
this.labCannonMut && (this.labCannonMut.string = OnScoreToString(e, n.SCORE_TAIL_COUNT));
},
SetCannonSpriteFrame: function(e) {
this.nodeCannon.getComponent(cc.Sprite).spriteFrame = e;
},
GetCannonPos: function() {
var e = this.nodeCannon.convertToWorldSpaceAR(cc.v2(0, 0));
return e = this.jsGameView.node.convertToNodeSpaceAR(e);
},
GetCannonRotation: function() {
return this.nodeCannonLayout.rotation;
},
GetFireSrcPos: function() {
var e = this.nodeCannonLayout.y + this.nodeCannonLayout.height / 2, t = this.nodeCannonLayout.convertToWorldSpaceAR(cc.v2(0, e));
return t = this.jsGameView.node.convertToNodeSpaceAR(t);
},
SetFireAction: function(e) {
PlayAnimationClip(this.nodeCannon, 0);
PlayAnimationClip(this.nodeFire, this.cbBulletKind);
},
OnChangeCannonMut: null,
OnCannonAdd: function(e) {
this.bSelfChairID && this.OnChangeCannonMut && this.OnChangeCannonMut(!0);
},
OnCannonSub: function(e) {
this.bSelfChairID && this.OnChangeCannonMut && this.OnChangeCannonMut(!1);
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_CannonManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b0a94v9CJpLrbEnGhUog60N", "SHLL_CannonManager");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
cc.Class({
extends: cc.Component,
properties: {
nodeInfoLayout: cc.Node,
nodeUserInfo: [ cc.Node ],
nodeCannon: [ cc.Node ],
nodeProCannon: [ cc.Node ],
nodeWait: [ cc.Node ],
nodeGreyBack: cc.Node,
nodeLockSelf: cc.Node,
sfCannon: [ cc.SpriteFrame ],
sfProIcon: [ cc.SpriteFrame ],
pfNodeTemplate: cc.Prefab,
pfActionScore: cc.Prefab,
pfShopLayer: cc.Prefab
},
onLoad: function() {},
start: function() {},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
this.fFireTime = [];
memset(this.fFireTime, 0, n.GAME_PLAYER);
this.fCurrentAngle = [];
this.cbBulletKind = [];
this.nBulletMut = [];
this.bAutoFire = !1;
this.vTouchPoint = cc.v2(0, 0);
this.jsCannon = [];
this.bEnableCannon = [];
this.lFishChangeScore = [];
this.lUserStartScore = [];
this.nodePoolActionBuffer = new cc.NodePool("");
this.nodePoolTemplate = new cc.NodePool();
this.bBingDong = [];
this.bProCannon = [];
this.cbProCannonStatus = [];
this.cbProCannonType = [];
this.cbProCannonMut = [];
this.jsProCannon = [];
this.jsUserInfo = [];
this.bCannonFire = !1;
this.bDisableFire = [];
for (var i = 0; i < n.GAME_PLAYER; i++) {
this.bBingDong[i] = !1;
this.bProCannon[i] = !1;
this.cbProCannonType[i] = 0;
this.cbProCannonStatus[i] = 0;
this.cbProCannonMut[i] = 0;
this.bDisableFire[i] = !1;
this.fCurrentAngle[i] = 0;
this.cbBulletKind[i] = 0;
this.nBulletMut[i] = 0;
this.jsCannon[i] = this.nodeCannon[i].getComponent("SHLL_CannonItem");
this.jsCannon[i].initInterface(e, t);
this.bEnableCannon[i] = !1;
this.lFishChangeScore[i] = 0;
this.lUserStartScore[i] = 0;
this.jsUserInfo[i] = this.nodeUserInfo[i].getComponent("SHLL_UserItem");
this.jsProCannon[i] = this.nodeProCannon[i].getComponent("SHLL_CannonItem");
this.jsProCannon[i].init(this.jsGameView, this.jsGameEngine, i);
}
this.wMeChairID = this.jsGameEngine.GetMeChairID();
this.SetTouchPoint(this.GetBingoPos(this.wMeChairID));
this.bShowShopLayer = !1;
},
SetCannonFire: function(e) {
this.bCannonFire = e;
},
GetCannonFire: function() {
return this.bCannonFire;
},
SetAutoFire: function(e) {
this.bAutoFire = e;
},
GetAutoFire: function() {
return this.bAutoFire;
},
SetTouchPoint: function(e, t) {
if (1 == arguments.length) this.vTouchPoint = e; else {
this.vTouchPoint.x = e;
this.vTouchPoint.y = t;
}
},
onEnable: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchBegan.bind(this), this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this.OnTouchMoved.bind(this), this);
this.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnded.bind(this), this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancel.bind(this), this);
},
onDisable: function() {},
SetProCanonTemplate: function(e, t, i, a) {
var o = n.GetBubbleType(i), s = this, r = this.nodePoolTemplate.get();
r || (r = cc.instantiate(this.pfNodeTemplate));
r.scale = 2;
this.node.addChild(r);
var c = this.GetCannonPos(e);
r.getComponent(cc.Sprite).spriteFrame = this.sfProIcon[o - 1];
r.x = t.x;
r.y = t.y;
r.nodepool = this.nodePoolTemplate;
r.chair_id = e;
r.cbProType = o;
r.cbCatchKind = i;
r.nCatchBulletMut = a;
r.runAction(cc.sequence(cc.moveTo(1, c), cc.callFunc(function(e) {
if (e.nodepool) {
var t = r.chair_id, i = (r.cbProType, r.cbCatchKind);
r.nCatchBulletMut;
n.IsBubbleBingDong(i) ? s.bBingDong[t] = !0 : n.IsBubbleCannon(i) && (s.bProCannon[t] = !0);
t == s.wMeChairID && s.jsGameView.UpdateProStatus(!0, r.cbProType);
e.nodepool.put(e);
e.nodepool = void 0;
e.chair_id = void 0;
}
})));
return r;
},
GetProCannonType: function(e) {
return this.cbProCannonType[e];
},
GetProCannonStatus: function(e) {
return this.cbProCannonStatus[e];
},
OnCutoverProCannon: function(e, t, i) {
var a = this.wMeChairID;
this.bProCannon[a] && this.jsGameEngine.SendUseProStatus(n.PRO_TYPE_LASER, 1);
},
SetProCannonReady: function(e, t, i, a) {
var o = this.jsCannon[e].node;
this.cbProCannonType[e] = i;
var s = this.nodeProCannon[e];
s.active = !0;
var r = o.getPosition();
o.getComponent(cc.Widget).enabled = !1;
if (a) {
var c = 230;
0 != e && 1 != e || (c = -230);
s.x = r.x;
s.y = r.y + c;
s.rotation = o.rotation;
s.getComponent(cc.Widget).enabled = !1;
this.cbProCannonStatus[e] = n.PRO_CANNON_FIRE_READY;
s.runAction(cc.sequence(cc.delayTime(.2), cc.moveTo(.6, r.x, r.y)));
PlayGameAudio("3002/Audio/paocutover");
o.runAction(cc.moveTo(.4, cc.v2(r.x, r.y + c)));
} else {
s.stopAllActions();
s.x = r.x;
s.y = r.y;
s.rotation = o.rotation;
s.getComponent(cc.Widget).enabled = !0;
this.cbProCannonStatus[e] = n.PRO_CANNON_FIRE_READY;
}
this.jsProCannon[e].GetBullet().init(n.BULLET_KIND_LASE, 0, 0, e, 0, 0);
this.bDisableFire[e] = !0;
this.jsGameEngine.jsLockManager.ClearLockTrace(e);
s.chair_id = e;
},
CutoverProCannonFinish: function(e) {
var t = this.jsCannon[e].node, i = this.nodeProCannon[e];
this.jsProCannon[e].nodeFire.active = !1;
this.cbProCannonStatus[e] = n.PRO_CANNON_NONE;
var a = i.getPosition(), o = 230;
0 != e && 1 != e || (o = -230);
var s = this;
s.bDisableFire[e] = !0;
t.chair_id = e;
t.runAction(cc.sequence(cc.delayTime(.3), cc.moveTo(.5, a.x, a.y), cc.callFunc(function(e) {
s.bDisableFire[e.chair_id] = !1;
e.getComponent(cc.Widget).enabled = !0;
})));
PlayGameAudio("3002/Audio/paocutover");
i.chair_id = e;
i.runAction(cc.moveTo(1, cc.v2(a.x, a.y + o)));
},
OnTouchBegan: function(e) {
if (this.bLockSelfActive) {
this.nodeGreyBack.active = !1;
this.bLockSelfActive = !1;
}
if (this.bEnableCannon[this.wMeChairID] && this.cbProCannonStatus[this.wMeChairID] != n.PRO_CANNON_FIRE_ING) {
var t = e.getTouches()[0].getLocation(), i = this.node.convertToNodeSpaceAR(t), a = this.jsGameEngine.jsFishManager, o = this.jsGameEngine.jsLockManager;
if (this.cbProCannonStatus[this.wMeChairID] != n.PRO_CANNON_FIRE_READY) {
if (!(this.cbProCannonStatus[this.wMeChairID] > n.PRO_CANNON_GET_START)) {
if (this.GetAutoFire()) {
var s = a.LockFishByPos(t);
if (s) {
s.node.getPosition();
o.SetLockFishID(this.wMeChairID, s.GetFishID());
} else o.ClearLockTrace(this.wMeChairID);
}
0 == o.GetLockFishID(this.wMeChairID) && this.SetTouchPoint(i);
if (!this.GetAutoFire()) {
this.fFireTime[this.wMeChairID] += 1e5;
this.SetCannonFire(!0);
}
return !1;
}
} else {
this.cbProCannonStatus[this.wMeChairID] = n.PRO_CANNON_FIRE_START;
this.SetTouchPoint(i);
}
}
},
OnTouchMoved: function(e) {
if (this.bEnableCannon[this.wMeChairID] && !(this.cbProCannonStatus[this.wMeChairID] > n.PRO_CANNON_GET_START)) {
var t = e.getTouches()[0].getLocation(), i = this.node.convertToNodeSpaceAR(t);
0 == this.jsGameEngine.jsLockManager.GetLockFishID(this.wMeChairID) && this.SetTouchPoint(i);
}
},
OnTouchEnded: function(e) {
if (this.bEnableCannon[this.wMeChairID] && !(this.cbProCannonStatus[this.wMeChairID] > n.PRO_CANNON_GET_START)) {
var t = e.getTouches()[0].getLocation(), i = this.node.convertToNodeSpaceAR(t);
0 == this.jsGameEngine.jsLockManager.GetLockFishID(this.wMeChairID) && this.SetTouchPoint(i);
this.GetAutoFire() || this.SetCannonFire(!1);
}
},
OnTouchCancel: function(e) {
this.OnTouchEnded(e);
},
SetCanonFire: function(e, t, i) {
var o = this.GetCannonPos(e), s = a.CalcAngle(t.x, t.y, o.x, o.y);
this.SetCurrentAngle(e, s);
var r = this.jsGameEngine.jsBulletManager;
if (i && this.fFireTime[e] > n.FIRE_DT && r.CanFireBullet(e)) {
var c = this.jsGameEngine, l = this.jsGameEngine.jsLockManager.GetLockFishID(e), h = this.cbBulletKind[e], u = this.nBulletMut[e], d = this.fCurrentAngle[e], m = c.nBulletSpeed[h], f = c.nNetRadius[h];
if (this.GetUserScore(e) < u) {
if (!this.bShowShopLayer) {
var p = cc.director.getScene().getChildByName("Canvas");
p.getChildByTag(1001) && p.removeChildByTag(1001);
var _ = cc.instantiate(this.pfShopLayer);
_.setTag(1001);
p.addChild(_, 0);
var S = _.getComponent("jsButtonItem"), g = this;
S.SetRemoveCallBack(function() {
g.jsGameEngine.SendPacketStandUp(null, !1);
});
this.bShowShopLayer = !0;
}
return;
}
this.OnFireAnimate(e);
this.SetFishChangeScore(e, -u);
var C = this.GetFireSrcPos(e);
r.OnFireBullet(C.x, C.y, d, h, -1, u, e, m, f, 0, l);
this.fFireTime[e] > 1e5 ? c.SendUserFire(h, d, u, l, n.FIRE_IGNORE) : c.SendUserFire(h, d, u, l, n.FIRE_NONE);
this.fFireTime[e] = 0;
}
},
ResetProCannon: function(e) {
this.bDisableFire[e] = !1;
this.bProCannon[e] = !1;
this.cbProCannonType[e] = 0;
this.cbProCannonStatus[e] = 0;
this.cbProCannonMut[e] = 0;
e == this.wMeChairID && this.jsGameView.UpdateProStatus(!1, n.PRO_TYPE_LASER);
},
SetProCanonFire: function(e, t, i) {
this.bDisableFire[e] = !0;
this.SetCurrentAngle(e, t);
this.jsGameEngine, this.jsGameEngine.jsBulletManager, this.fCurrentAngle[e];
PlayGameAudio("3002/Audio/jiguang");
e == this.wMeChairID && this.jsGameEngine.SendUserFire(n.BULLET_KIND_LASE, t, this.nBulletMut[e], 0, n.FIRE_PRO_JIGUANG);
this.OnFireAnimate(e);
this.fFireTime[e] = 0;
this.cbProCannonStatus[e] = n.PRO_CANNON_FIRE_ING;
},
SetCannonStatus: function(e, t, i) {
if (!(e >= n.GAME_PLAYER)) {
this.nBulletMut[e] = i;
this.cbBulletKind[e] = t;
var a = n.GetBulletIndex(t);
if (this.jsCannon[e]) {
this.jsCannon[e].SetMultiple(i);
this.jsCannon[e].SetBulletKind(t);
this.jsCannon[e].SetCannonSpriteFrame(this.sfCannon[a]);
}
}
},
SetUserStartScore: function(e, t) {
this.lUserStartScore[e] = t;
},
GetUserScore: function(e) {
return this.lUserStartScore[e] + this.lFishChangeScore[e];
},
SetFishChangeScore: function(e, t) {
this.lFishChangeScore[e] += t;
this.jsCannon[e] && this.jsUserInfo[e].SetGameScore(this.GetUserScore(e), t);
},
SetFishChangeAction: function(e, t) {
if (0 != t) {
var i = this.nodePoolActionBuffer.get();
i || (i = cc.instantiate(this.pfActionScore));
this.nodeInfoLayout.addChild(i);
if (e == this.wMeChairID) {
i.getChildByName("ActionScore_Win").getComponent(cc.Label).node.active = !0;
i.getChildByName("ActionScore_Lose").getComponent(cc.Label).node.active = !1;
} else {
i.getChildByName("ActionScore_Win").getComponent(cc.Label).node.active = !1;
i.getChildByName("ActionScore_Lose").getComponent(cc.Label).node.active = !0;
}
var a = this.jsUserInfo[e].node.getPosition(), o = 1;
2 != e && 3 != e || (o = -1);
i.x = a.x;
i.y = a.y + 90 * o;
i.opacity = 255;
e == this.wMeChairID ? i.getChildByName("ActionScore_Win").getComponent(cc.Label).string = OnScoreToString(t, n.SCORE_TAIL_COUNT) : i.getChildByName("ActionScore_Lose").getComponent(cc.Label).string = OnScoreToString(t, n.SCORE_TAIL_COUNT);
i.pool = this.nodePoolActionBuffer;
i.runAction(cc.moveTo(2, i.x, i.y + 100 * o));
i.runAction(cc.sequence(cc.delayTime(.4), cc.fadeOut(1.6), cc.callFunc(function(e) {
if (e.pool) {
var t = e.pool;
e.pool = void 0;
t.put(e);
}
})));
}
},
ResetFishChangeScore: function(e) {
this.lFishChangeScore[e] = 0;
},
SetUserNickName: function(e, t) {
this.jsCannon[e] && this.jsUserInfo[e].SetNickName(t);
},
SetUserZuan: function(e, t) {
this.jsCannon[e] && this.jsUserInfo[e].SetUserZuan(t);
},
OnChangeCannonMut: function(e) {
var t = this.wMeChairID, i = 1, a = this.jsGameEngine.nMinBulletMut, o = this.jsGameEngine.nMaxBulletMut, s = this.nBulletMut[t];
if (e) {
i = s >= 1e3 ? 1e3 : s >= 100 ? 100 : s >= 10 ? 10 : 1;
s < o ? s + i > o ? s = o : s += i : s == o && (s = a);
} else s - (i = s > 1e3 ? 1e3 : s > 100 ? 100 : s > 10 ? 10 : 1) >= a ? s -= i : s = o;
PlayGameAudio("3002/Audio/switch", !1);
var r = n.GetBulletKind(s);
this.SetCannonStatus(t, r, s);
},
OnButtonChangeCannonMut: function(e) {
var t = this.wMeChairID, i = 1, a = this.jsGameEngine.nMinBulletMut, o = this.jsGameEngine.nMaxBulletMut, s = this.nBulletMut[t];
if (e) {
i = s >= 1e3 ? 1e3 : s >= 100 ? 100 : s >= 10 ? 10 : 1;
s < o ? s + i > o ? s = o : s += i : s == o && (s = a);
} else s - (i = s > 1e3 ? 1e3 : s > 100 ? 100 : s > 10 ? 10 : 1) >= a ? s -= i : s = o;
PlayGameAudio("3002/Audio/switch", !1);
var r = n.GetBulletKind(s);
this.SetCannonStatus(t, r, s);
},
SetEnableCannon: function(e, t, i) {
if (this.bEnableCannon[t] != i) {
this.nodeWait[t].active = !i;
this.nodeCannon[t].active = i;
this.bEnableCannon[t] = i;
this.jsCannon[t].init(this.jsGameView, this.jsGameEngine, t);
this.jsCannon[t].OnChangeCannonMut = this.OnChangeCannonMut.bind(this);
i || this.jsGameEngine.jsLockManager.ClearLockTrace(t);
if (t == this.wMeChairID) {
this.bLockSelfActive = !0;
this.nodeLockSelf.active = !0;
var n = CopyNodeWidget(this.nodeLockSelf, this.nodeWait[t]);
0 == t || 1 == t ? n.bottom = 150 : n.top = 150;
}
if (e) {
this.SetUserStartScore(t, e.GetUserScore());
this.jsUserInfo[t].OnInitInfo(e);
this.jsUserInfo[t].node.active = i;
}
}
},
OnAddCannon: function() {
this.OnButtonChangeCannonMut(!0);
},
OnSubCannon: function() {
this.OnButtonChangeCannonMut(!1);
},
GetBingoPos: function(e) {
var t = this.GetCannonPos(e);
0 == e || 1 == e ? t.y += 300 : t.y -= 300;
return t;
},
GetCannonPos: function(e) {
return this.cbProCannonStatus[e] > n.PRO_CANNON_GET_START ? this.jsProCannon[e].GetCannonPos() : this.jsCannon[e].GetCannonPos();
},
GetCannonRotation: function(e) {
return this.jsCannon[e].GetCannonRotation();
},
GetFireSrcPos: function(e) {
return this.jsCannon[e].GetFireSrcPos();
},
SetCurrentAngle: function(e, t) {
if (!(e >= n.GAME_PLAYER)) {
var i = t;
if (0 == e || 1 == e) {
i < n.M_PI && (i = 2.5 * n.M_PI);
i > n.M_PI && i < 1.5 * n.M_PI && (i = 1.5 * n.M_PI);
} else if (2 == e || 3 == e) {
i > 1.5 * n.M_PI && i < 2 * n.M_PI && (i = 1.5 * n.M_PI);
i > 2 * n.M_PI && (i = n.M_PI / 2);
}
this.fCurrentAngle[e] = i;
var a = 180 * i / n.M_PI;
this.cbProCannonStatus[e] > n.PRO_CANNON_GET_START ? e < n.GAME_PLAYER / 2 ? this.jsProCannon[e].SetCannonAngle(a) : this.jsProCannon[e].SetCannonAngle(a - 180) : e < n.GAME_PLAYER / 2 ? this.jsCannon[e].SetCannonAngle(a) : this.jsCannon[e].SetCannonAngle(a - 180);
}
},
OnFireAnimate: function(e) {
if (!(e >= n.GAME_PLAYER)) if (this.cbProCannonStatus[e] > n.PRO_CANNON_GET_START) {
if (this.cbProCannonStatus[e] == n.PRO_CANNON_FIRE_START) {
this.jsProCannon[e].nodeFire.active = !0;
this.jsProCannon[e].nodeFire.scaleX = 0;
this.jsProCannon[e].nodeFire.runAction(cc.scaleTo(.3, 1, 1));
PlaySkeletonAnimation(this.jsProCannon[e].nodeFire, !0, "animation");
}
} else this.jsCannon[e].SetFireAction(this.cbBulletKind[e]);
},
OnFrame: function(e, t) {
for (var i = 0; i < n.GAME_PLAYER; i++) {
this.fFireTime[i] += e;
if (this.fFireTime[i] > 3.5 && this.cbProCannonStatus[i] == n.PRO_CANNON_FIRE_ING) {
this.CutoverProCannonFinish(i);
this.ResetProCannon(i);
if (i == this.wMeChairID) {
this.jsGameView.jsGameMenu.nodeAutoFire.getComponent(cc.Button).interactable = !0;
}
}
}
if (this.cbProCannonStatus[this.wMeChairID] > n.PRO_CANNON_GET_START) {
if (this.cbProCannonStatus[this.wMeChairID] == n.PRO_CANNON_FIRE_START) {
var o = this.GetCannonPos(this.wMeChairID), s = a.CalcAngle(this.vTouchPoint.x, this.vTouchPoint.y, o.x, o.y);
this.SetProCanonFire(this.wMeChairID, s, this.bCannonFire);
}
} else this.bCannonFire && !this.bDisableFire[this.wMeChairID] && this.SetCanonFire(this.wMeChairID, this.vTouchPoint, this.bCannonFire);
},
OnWebKeepLight: function(e) {
ManagerHelp_WebKeepLight(e);
},
update: function(e) {}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_CoinManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0e056PFAppJB6zENorX+dg4", "SHLL_CoinManager");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
cc.Class({
extends: cc.Component,
properties: {
pfCoin: cc.Prefab,
pfBingo: cc.Prefab,
pfFishScore: cc.Prefab,
ftScore: [ cc.Font ]
},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
this.nodePoolCoin = new cc.NodePool();
this.nodePoolBingo = new cc.NodePool();
this.nodePoolScore = new cc.NodePool();
},
onLoad: function() {},
BuildScreenCoin: function(e, t, i, o, s) {
for (var r = n.ScreenWidth, c = n.ScreenHeight, l = 0; l < e; l++) {
var h = this.nodePoolCoin.get();
null == h && (h = cc.instantiate(this.pfCoin));
this.node.addChild(h);
var u = "gold";
s || (u = "silver");
PlaySkeletonAnimation(h, !0, u);
var d = cc.v2(0, 0);
if (o) {
d.x = Rand(r, 0);
d.y = Rand(c, 0);
} else if (e <= 7) {
d.x = t.x - 50 * (e - 1) + 50 * l;
d.y = t.y + 35;
} else {
d.x = t.x;
d.y = t.y;
}
h.x = d.x;
h.y = d.y;
var m = a.CalcDistance(d.x, d.y, i.x, i.y);
if (e <= 7) {
h.bMeChairID = s;
h.pool = this.nodePoolCoin;
h.runAction(cc.sequence(cc.delayTime(.1 * l), cc.jumpBy(.4, 0, 0, 100, 1), cc.jumpBy(.3, 0, 0, 70, 1), cc.jumpBy(.2, 0, 0, 30, 1), cc.jumpBy(.1, 0, 0, 10, 1), cc.delayTime(.2), cc.callFunc(function(e) {
e.bMeChairID && PlayGameAudio("3002/Audio/collect", !1);
}), cc.moveTo(6e-4 * m, i), cc.callFunc(function(e) {
if (e.pool) {
e.bMeChairID = void 0;
e.pool.put(e);
e.pool = void 0;
}
})));
} else if (o) {
h.bMeChairID = s;
h.pool = this.nodePoolCoin;
h.runAction(cc.sequence(cc.jumpBy(.4, 0, 0, 100, 1), cc.jumpBy(.3, 0, 0, 70, 1), cc.jumpBy(.2, 0, 0, 30, 1), cc.jumpBy(.1, 0, 0, 10, 1), cc.delayTime(1), cc.callFunc(function(e) {
e.bMeChairID && PlayGameAudio("3002/Audio/collect", !1);
}), cc.moveTo(6e-4 * m, i), cc.callFunc(function(e) {
if (e.pool) {
e.bMeChairID = void 0;
e.pool.put(e);
e.pool = void 0;
}
})));
} else {
var f = a.BuildCircle(t.x, t.y, 15 * e, e);
m = a.CalcDistance(f[l].x, f[l].y, i.x, i.y);
h.pool = this.nodePoolCoin;
h.bMeChairID = s;
h.runAction(cc.sequence(cc.moveTo(.3, f[l].x, f[l].y).easing(cc.easeBackOut()), cc.delayTime(1.5), cc.callFunc(function(e) {
e.bMeChairID && PlayGameAudio("3002/Audio/collect", !1);
}), cc.moveTo(6e-4 * m, i), cc.callFunc(function(e) {
if (e.pool) {
e.bMeChairID = void 0;
e.pool.put(e);
e.pool = void 0;
}
})));
}
}
var p = "3002/Audio/";
p += e <= 7 ? "coin" : "coins";
PlayGameAudio(p, !1);
},
BuildBingo: function(e, t) {
var i = this.nodePoolBingo.get();
null == i && (i = cc.instantiate(this.pfBingo));
this.node.addChild(i);
var a = this.jsGameEngine.jsCannonManager.GetBingoPos(e);
i.pool = this.nodePoolBingo;
i.x = a.x;
i.y = a.y;
i.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function(e) {
if (e.pool) {
e.pool.put(e);
e.pool = null;
}
})));
var o = 1;
e == this.wMeChairID && (o = 0);
i.getChildByName("nodeScore").getChildByName("name").getComponent(cc.Label).font = this.ftScore[o];
var s = i.getChildByName("nodeScore").getChildByName("score").getComponent(cc.Label);
s.string = OnScoreToString(t, n.SCORE_TAIL_COUNT);
s.font = this.ftScore[o];
},
BuildCatchScore: function(e, t, i, a) {
var o = this.nodePoolScore.get();
null == o && (o = cc.instantiate(this.pfFishScore));
this.node.addChild(o);
var s = 1;
a == this.wMeChairID && (s = 0);
o.getComponent(cc.Label).font = this.ftScore[s];
o.x = e.x;
o.y = e.y;
o.scale = 0;
o.opacity = 255;
o.getComponent(cc.Label).string = OnScoreToString(t, n.SCORE_TAIL_COUNT);
o.pool = this.nodePoolScore;
o.runAction(cc.sequence(cc.scaleTo(.2, 1.2).easing(cc.easeBackOut(2)), cc.scaleTo(.12, .7).easing(cc.easeBackOut(2)), cc.scaleTo(.12, 1).easing(cc.easeBackOut(2)), cc.delayTime(1), cc.fadeOut(.8), cc.callFunc(function(e) {
if (e.pool) {
e.pool.put(e);
e.pool = null;
}
})));
},
BuildCoinCount: function(e) {
for (var t = [ 0, 100, 1e3, 1e4, 1e5 ], i = [ 1, 2, 3, 4, 5 ], n = 0, a = 4; a >= 0; --a) if (e >= t[a]) {
if (4 == a) {
n = i[a] + parseInt((e - t[a]) / 1e5);
n = Math.min(30, n);
} else n = i[a];
break;
}
return n;
},
onEnable: function() {},
onDisable: function() {},
OnFrame: function(e) {}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_FishItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "78ddcWG2t9IK4VFyVu7v/Ns", "SHLL_FishItem");
var n = e("SHLL_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
nodeKing: cc.Node,
nodeFish: cc.Node,
nodePro: [ cc.Node ],
nodeBubble: cc.Node,
labPos: cc.Label
},
onLoad: function() {
this.nodeKing && (this.nodeKing.zIndex = -1);
},
onEnable: function() {},
onDisable: function() {
this.node.stopAllActions();
this.nodeFish && this.nodeFish.stopAllActions();
},
InitValue: function() {
this.cbFishKind = 0;
this.bActive = 0;
this.cbFishStatus = 0;
this.nFishID = 0;
this.nFishMut = 0;
this.fFishSpeed = 0;
this.nBoundBoxWidth = 0;
this.nBoundBoxHeight = 0;
this.nHitRadius = 0;
this.wCatchChairID = 0;
this.lCatchScore = 0;
this.lCatchBulletMut = 0;
this.cbTraceID = 0;
this.cbTraceType = 0;
this.arrayTrace = [];
this.nTraceIndex = 0;
this.nTraceSpeed = 1;
this.nStopIndex = 0;
this.nStopCount = 0;
this.bTintToAction = !1;
},
InitFish: function(e, t, i, a, o, s, r) {
this.InitValue();
this.node.opacity = 255;
this.nodeFish.color = cc.color(255, 255, 255, 255);
this.cbFishKind = e;
this.nFishID = t;
this.nFishMut = i;
this.nFishSpeed = a;
this.nBoundBoxWidth = o;
this.nBoundBoxHeight = s;
this.nHitRadius = r;
this.nRandx = 0;
this.nRandy = 0;
this.nRandCount = 0;
this.nOffsetx = 0;
this.nOffsety = 0;
this.nTraceSpeed = a;
this.nodeKing && (this.nodeKing.color = cc.color(255, 255, 255, 255));
n.IsLongKing(e) ? this.nodeFish.zIndex = 1 : this.nodeFish.zIndex = 0;
this.SetColliderEnable(!0);
},
SetColliderEnable: function(e) {
var t = this.node.getComponent(cc.BoxCollider), i = this.node.getComponent(cc.CircleCollider);
t && (t.enabled = e);
i && (i.enabled = e);
},
InsertBomb: function(e) {
var t = this.nHitRadius / 2;
return e.x > this.node.x - t && e.x > this.node.x + t && e.y > this.node.y - t && e.y < this.node.y + t;
},
EffectBomb: function(e) {
this.CatchFish(e, 0, 0, !0);
n.IsBomb(this.cbFishKind);
},
SetTraceType: function(e, t) {
this.cbTraceType = e;
this.cbTraceID = t;
},
SetTraceSpeed: function(e) {
this.nTraceSpeed = e;
},
AddTraceSpeed: function(e) {
this.nTraceSpeed += e;
},
SetFishStatus: function(e) {
this.cbFishStatus = e;
},
SetFishTrace: function(e) {
this.arrayTrace = e;
},
SetFishActive: function(e) {
this.bActive = e;
},
SetFishStop: function(e, t) {
this.nStopIndex = e;
this.nStopCount = t;
},
SetFishPos: function(e, t) {
var i = this.arrayTrace[e][0], n = this.arrayTrace[e][1], a = this.arrayTrace[e][2];
this.node.x = i + this.nOffsetx;
this.node.y = n + this.nOffsety;
this.node.rotation = a + 90;
1 == t && (this.nTraceIndex = e);
},
SetRandPos: function(e, t, i) {
this.nRandx = e;
this.nRandy = t;
this.nRandCount = i;
this.nOffsetx = this.nRandx;
this.nOffsety = this.nRandy;
},
SetOffsetPos: function(e, t) {
this.nOffsetx = e;
this.nOffsety = t;
},
GetOffsetPos: function() {
return cc.v2(this.nOffsetx, this.nOffsety);
},
GetFishPos: function() {
return cc.v2(this.node.x + this.nOffsetx, this.node.y + this.nOffsety);
},
GetFishID: function() {
return this.nFishID;
},
GetFishActive: function() {
return this.bActive;
},
GetFishStatus: function() {
return this.cbFishStatus;
},
GetIsFishStatus: function(e) {
return this.cbFishStatus == e;
},
GetFishKind: function() {
return this.cbFishKind;
},
GetFishMut: function() {
return this.nFishMut;
},
SetFishMut: function(e) {
this.nFishMut = e;
},
GetTraceIndex: function() {
return this.nTraceIndex;
},
GetTraceSpeed: function() {
return this.nTraceSpeed;
},
SetTraceArray: function(e) {
this.arrayTrace = e;
},
GetTraceArray: function() {
return this.arrayTrace;
},
GetTraceLength: function() {
return this.arrayTrace.length;
},
GetTraceContent: function(e) {
return this.arrayTrace[e];
},
GetTraceCurrent: function() {
if (this.nTraceIndex < this.arrayTrace.length) return this.arrayTrace[this.nTraceIndex];
if (this.arrayTrace.length > 0) {
cc.warn("nTraceIndex is not range");
return this.arrayTrace[this.arrayTrace.length - 1];
}
return null;
},
IsTraceValid: function() {
var e = this.arrayTrace.length;
return this.nTraceIndex < e && 0 != e;
},
OnHitTest: function() {
if (!this.bTintToAction) {
this.bTintToAction = !0;
this.nodeFish.tempColorScript = this;
this.nodeFish.runAction(cc.sequence(cc.tintTo(.15, 255, 0, 0), cc.tintTo(.15, 255, 255, 255), cc.callFunc(function(e) {
if (e.tempColorScript) {
e.tempColorScript.bTintToAction = !1;
e.tempColorScript = void 0;
}
})));
this.nodeKing && this.nodeFish.runAction(cc.sequence(cc.tintTo(.15, 255, 0, 0), cc.tintTo(.15, 255, 255, 255)));
}
},
ChangeFishStatus: function(e, t) {},
CatchFish: function(e, t, i, a) {
this.wCatchChairID = e;
this.lCatchScore = t;
this.lCatchBulletMut = i;
this.SetFishStatus(n.FISH_DIED);
this.SetColliderEnable(!1);
if (1 != a) {
if (!n.IsBomb(this.cbFishKind) && !n.IsHaiKui(this.cbFishKind)) {
var o = this.nodeFish.getComponent(cc.Animation);
o && o.stop("activefish");
this.nodeFish.stopAllActions();
}
if (n.IsHaiKui(this.cbFishKind) && n) {
this.node.script = this;
this.node.runAction(cc.sequence(cc.delayTime(1.5), cc.fadeOut(.5), cc.callFunc(function(e) {
if (e.script) {
e.script.SetFishStatus(n.FISH_INVALID);
e.script = void 0;
}
})));
} else if (n.IsBomb(this.cbFishKind)) {
this.node.script = this;
this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function(e) {
if (e.script) {
e.script.SetFishStatus(n.FISH_INVALID);
e.script = void 0;
}
})));
} else if (n.IsFishKing(this.cbFishKind)) {
this.node.script = this;
this.node.runAction(cc.sequence(cc.rotateTo(.1, 60), cc.rotateTo(.1, -60), cc.rotateTo(.1, 60), cc.rotateTo(.1, -60), cc.rotateTo(.1, 60), cc.rotateTo(.1, 0), cc.delayTime(1.5), cc.callFunc(function(e) {
if (e.script) {
e.script.SetFishStatus(n.FISH_INVALID);
e.script = void 0;
}
})));
} else {
this.node.script = this;
this.node.runAction(cc.sequence(cc.rotateTo(.1, 60), cc.rotateTo(.1, -60), cc.rotateTo(.1, 60), cc.rotateTo(.1, -60), cc.rotateTo(.1, 60), cc.rotateTo(.1, 0), cc.fadeOut(.25), cc.callFunc(function(e) {
if (e.script) {
e.script.SetFishStatus(n.FISH_INVALID);
e.script = void 0;
}
})));
}
}
},
update: function(e) {
if (!this.bActive || this.cbFishStatus == n.FISH_DIED) return !0;
var t = this.arrayTrace.length;
if (this.nTraceIndex < t) {
if (this.nStopCount > 0 && this.nStopIndex < this.nStopCount) {
this.nStopIndex++;
this.nStopIndex >= this.nStopCount && this.SetFishStop(0, 0);
return;
}
if (n.LockScreen) return;
this.SetFishPos(this.nTraceIndex, !1);
this.nTraceIndex += this.nTraceSpeed;
} else this.SetFishStatus(n.FISH_INVALID);
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_FishManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1e584NHlTxHAb2vLqbjmiyM", "SHLL_FishManager");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
e("SHLL_BoundBox"), cc.Class({
extends: cc.Component,
properties: {
pfFishAll: [ cc.Prefab ],
pfEffectBomb: cc.Prefab,
pfDian: cc.Prefab,
pfDianResult: cc.Prefab
},
onLoad: function() {},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
this.arrayFish = [];
this.nodeFishPool = [];
for (var i = 0, n = this.pfFishAll.length; i < n; i++) this.nodeFishPool[i] = new cc.NodePool("SHLL_FishItem");
this.nodePoolDian = new cc.NodePool();
this.nodePoolDianResult = new cc.NodePool();
this.nodePoolEffectBoom = new cc.NodePool();
},
start: function() {},
OnLoadResources: function() {},
OnPauseAllAnimatio: function() {
for (var e = this.node.children, t = 0; t < e.length; t++) {
var i = e[t].getComponent(cc.Animation);
i && i.pause();
}
},
OnResumeAllAnimatio: function() {
for (var e = this.node.children, t = 0; t < e.length; t++) {
var i = e[t].getComponent(cc.Animation);
i && i.resume();
}
},
LockFish: function() {
for (var e = this.arrayFish.length, t = null, i = [], a = [], o = 0; o < e; o++) {
var s = this.arrayFish[o], r = s.GetFishKind();
if (s.GetFishActive() && (s.GetIsFishStatus(n.FISH_ALIVE) && s.IsTraceValid())) {
var c = s.node.getPosition();
n.InsideScreen(c.x, c.y) && (n.IsBubble(r) || (n.IsHaiKui(r) ? null == t && (t = s) : n.CanAutoLock(r) ? i.push(s) : a.push(s)));
}
}
var l = i.length;
if (0 == l && null != t) return t;
if (l > 0) return i[Rand(l - 1, 0)];
var h = a.length;
return h > 0 ? a[Rand(h - 1, 0)] : null;
},
LockFishByPos: function(e) {
for (var t = null, i = 0, a = this.arrayFish.length; i < a; i++) {
var o = this.arrayFish[i];
if (o.GetFishActive() && (o.GetIsFishStatus(n.FISH_ALIVE) && o.IsTraceValid())) {
var s = o.node.getComponent(cc.BoxCollider), r = o.node.getComponent(cc.PolygonCollider), c = o.node.getComponent(cc.CircleCollider);
(s && cc.Intersection.pointInPolygon(e, s.world.points) || r && cc.Intersection.pointInPolygon(e, r.world.points) || c && cc.pDistance(c.world.position, e) < c.world.radius) && (t ? t && t.GetFishKind() < o.GetFishKind() && (t = o) : t = o);
}
}
return t;
},
LockFishReachPos: function(e, t, i, n) {
var a = this.GetFish(t);
if (a) {
if (!a.GetFishActive()) return !1;
if (a.GetFishID() != t) return !1;
var o = parseInt(i) + a.GetTraceIndex();
o > a.GetTraceLength() && (o = a.GetTraceLength() - 1);
var s = a.GetTraceContent(o), r = a.GetOffsetPos();
if (s) {
n.x = s[0] + r.x;
n.y = s[1] + r.y;
n.angle = s[2];
}
return !0;
}
return !1;
},
GetSweepFish: function(e, t) {
if (n.IsBomb(t)) {
for (var i = [], a = 0, o = null, s = 0, r = this.arrayFish.length; s < r; ++s) if (null != (o = this.arrayFish[s]) && o.GetFishActive() && o.IsTraceValid()) {
var c = o.node.getPosition();
if (n.InsideScreen(c)) {
i[a++] = o.GetFishID();
if (a >= n.MAX_SWEEP_COUNT) break;
}
}
return i;
}
if (n.IsFishKing(t)) {
for (var l = [], h = 0, u = null, d = n.GetFishKingIndex(t), m = 0, f = this.arrayFish.length; m < f; ++m) if (null != (u = this.arrayFish[m]) && u.GetFishActive() && u.IsTraceValid() && u.GetFishKind() == d) {
var p = u.node.getPosition();
if (n.InsideScreen(p)) {
l[h++] = u.GetFishID();
if (h >= n.MAX_SWEEP_COUNT) break;
}
}
return l;
}
return 0;
},
CatchSweepFishFinish: function() {},
CatchSweepFish: function(e, t) {
var i = this.GetFish(t);
if (null != i) {
var a = i.GetFishKind(), o = (i.node.getPosition(), new n.CMD_C_CatchSweepFish());
o.nFishID = t;
o.wChairID = e;
var s = n.MAX_CATCH_FISH_COUNT;
if (n.IsBomb(a)) {
i.EffectBomb(e);
for (var r = null, c = 0, l = this.arrayFish.length; c < l; ++c) if (null != (r = this.arrayFish[c]) && r != i && r.GetFishActive() && r.IsTraceValid()) {
var h = r.node.getPosition();
if (n.InsideScreen(h)) {
o.nCatchFishID[o.nCatchFishCount++] = r.GetFishID();
if (o.nCatchFishCount >= s) break;
}
}
this.jsGameEngine.SendCatchSweepFish(o);
} else if (n.IsFishKing(a)) {
for (var u = null, d = n.GetFishKingIndex(a), m = 0, f = this.arrayFish.length; m < f; ++m) if (null != (u = this.arrayFish[m]) && u != i && u.GetFishActive() && u.IsTraceValid() && u.GetFishKind() == d) {
var p = u.node.getPosition();
if (n.InsideScreen(p)) {
o.nCatchFishID[o.nCatchFishCount++] = u.GetFishID();
if (o.nCatchFishCount >= s) break;
}
}
this.jsGameEngine.SendCatchSweepFish(o);
}
}
},
CatchSweepFishResult: function(e, t, i, o, s, r) {
var c = this, l = (this.jsGameEngine.jsCoinManager, this.jsGameEngine.jsCannonManager, 
this.GetFish(t));
if (null != l) {
var h = l.node.getPosition(), u = l.GetFishKind(), d = n.IsFishKing(u), m = n.IsBomb(u);
if (d || m) {
l.CatchFish(e, i, o, !1);
this.CatchEffect(e, u, l.node.getPosition(), 0);
this.CatchScore(e, u, l.node.getPosition(), i, o, 1);
for (var f = function(t) {
var i = c.GetFish(s[t]);
if (null == i) return "continue";
var r = i.node.getPosition();
i.CatchFish(e, i.nFishMut * o, o, !0);
if (d) {
var l = c.nodePoolDian.get();
null == l && (l = cc.instantiate(c.pfDian));
c.node.addChild(l);
var u = a.CalcDistance(h.x, h.y, r.x, r.y), m = a.CalcAngle(h.x, h.y, r.x, r.y);
l.rotation = 180 * m / n.M_PI;
l.x = h.x;
l.y = h.y;
l.scaleY = 0;
l.height = u;
PlayAnimationClip(l, 0);
l.tempFishManager = c;
l.fish_temp = i;
l.bindfispos = r;
l.bindfisKind = i.GetFishKind();
PlayGameAudio("3002/Audio/thunder1", !1);
l.runAction(cc.sequence(cc.scaleTo(.08, 1, 1).easing(cc.easeIn(.08)), cc.callFunc(function(e) {
var t = e.tempFishManager;
if (t) {
var i = t.nodePoolDianResult.get();
i || (i = cc.instantiate(t.pfDianResult));
t.node.addChild(i);
i.x = e.bindfispos.x;
i.y = e.bindfispos.y;
e.nodeDianResult = i;
}
}), cc.delayTime(1.9), cc.callFunc(function(e) {
var t = e.tempFishManager;
if (t) {
if (e.nodeDianResult) {
t.nodePoolDianResult.put(e.nodeDianResult);
e.nodeDianResult = void 0;
}
if (e.fish_temp) {
var i = e.fish_temp;
e.fish_temp = void 0;
i.CatchFish(i.wCatchChairID, i.lCatchScore, i.lCatchBulletMut, !1);
t.CatchScore(i.wCatchChairID, i.GetFishKind(), i.node.getPosition(), i.lCatchScore, i.lCatchBulletMut, 2);
}
t.nodePoolDian.put(e);
e.tempFishManager = void 0;
}
})));
} else {
i.node.tempFishManager = c;
i.node.tempCatchResultScript = i;
i.node.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function(e) {
if (e.tempCatchResultScript) {
var t = e.tempCatchResultScript;
e.tempCatchResultScript = void 0;
var a = e.tempFishManager;
e.tempFishManager = void 0;
var o = i.GetFishKind(), s = i.node.getPosition();
t.CatchFish(i.wCatchChairID, i.lCatchScore, i.lCatchBulletMut, !1);
n.IsBomb(o) || a.CatchEffect(i.wCatchChairID, o, s, i.lCatchScore, i.lCatchBulletMut);
a.CatchScore(i.wCatchChairID, o, s, i.lCatchScore, i.lCatchBulletMut, 2);
}
})));
}
}, p = 0; p < r; ++p) f(p);
return !0;
}
}
},
CatchProSweepFishResult: function(e, t, i, n, a) {
for (var o = this, s = (this.jsGameEngine.jsCoinManager, this.jsGameEngine.jsCannonManager, 
"ProTime" + e), r = function(t) {
var a = o.GetFish(n[t]);
if (null == a) return "continue";
a.node.getPosition();
a.CatchFish(e, a.nFishMut * i, i, !0);
a[s] = 0;
a.node.tempFishManager = o;
a.node.tempProScript = a;
a.node.runAction(cc.sequence(cc.delayTime(1.2), cc.callFunc(function(e) {
if (e.tempProScript) {
var t = e.tempProScript;
e.tempProScript = void 0;
var i = e.tempFishManager;
e.tempFishManager = void 0;
var n = a.node.getPosition(), o = a.GetFishKind();
t.CatchFish(a.wCatchChairID, a.lCatchScore, a.lCatchBulletMut, !1);
i.CatchEffect(a.wCatchChairID, o, n, a.lCatchScore, a.lCatchBulletMut);
i.CatchScore(a.wCatchChairID, o, n, a.lCatchScore, a.lCatchBulletMut, 0);
}
})));
}, c = 0; c < a; ++c) r(c);
return !0;
},
GetFish: function(e) {
for (var t = 0, i = this.arrayFish.length; t < i; t++) {
var n = this.arrayFish[t];
if (n && n.GetFishID() == e && n.GetFishActive()) return n;
}
return null;
},
ChangeFishStatus: function(e, t, i) {
if (!(e >= n.GAME_PLAYER)) {
var a = this.GetFish(t);
if (null == a) return null;
a.ChangeFishStatus(e, i);
}
},
CatchFish: function(e, t, i, a) {
if (!(e >= n.GAME_PLAYER)) {
var o = this.GetFish(t);
if (null == o) return null;
var s = o.GetFishKind(), r = (this.wMeChairID, o.node.getPosition());
o.CatchFish(e, i, a, !1);
this.CatchSound(e, s);
this.CatchEffect(e, s, r, i, a);
this.CatchScore(e, s, r, i, a, 1);
return o;
}
},
SetALiveTraceSpeed: function(e) {
for (var t = 0, i = this.arrayFish.length; t < i; t++) {
var a = this.arrayFish[t];
n.InsideScreen(a.node.getPosition()) ? a.AddTraceSpeed(e) : a.SetFishStatus(n.FISH_INVALID);
}
},
CatchSound: function(e, t) {
n.IsFishKing(t) || (n.IsHaiKui(t) ? PlayGameAudio("3002/Audio/fish22") : t == n.FISH_KIND_14 ? PlayGameAudio("3002/Audio/fish21") : t == n.FISH_KIND_15 ? PlayGameAudio("3002/Audio/fish20") : t == n.FISH_KIND_16 ? PlayGameAudio("3002/Audio/fish19") : t == n.FISH_KIND_17 ? PlayGameAudio("3002/Audio/fish18") : t == n.FISH_KIND_12 ? PlayGameAudio("3002/Audio/fish13") : t == n.FISH_KIND_11 ? PlayGameAudio("3002/Audio/fish12") : n.IsFishKing(t) && PlayGameAudio("3002/Audio/fishking"));
},
CatchScore: function(e, t, i, a, o, s) {
if (0 != a) {
var r = this.jsGameEngine.jsCoinManager, c = this.jsGameEngine.jsCannonManager;
if (1 == s && (n.IsBingoScore(t) || 0 != o && a / o > 100)) {
r.BuildBingo(e, a);
PlayGameAudio("3002/Audio/bingo");
} else if (2 == s) {
var l = c.GetCannonPos(e), h = r.BuildCoinCount(a, o);
r.BuildScreenCoin(2 * h, i, l, !1, this.wMeChairID == e);
r.BuildCatchScore(i, a, o, e);
} else {
var u = c.GetCannonPos(e), d = r.BuildCoinCount(a, o);
r.BuildScreenCoin(d, i, u, !1, this.wMeChairID == e);
r.BuildCatchScore(i, a, o, e);
}
}
},
EffectBombFinish: function() {
if (this.tempBomb) {
this.nodePoolEffectBoom.put(this.tempBomb);
this.tempBomb = null;
}
},
CatchEffect: function(e, t, i, a, o) {
var s = !1;
if (n.IsBomb(t)) {
var r = this.nodePoolEffectBoom.get();
r || (r = cc.instantiate(this.pfEffectBomb));
r.x = i.x;
r.y = i.y;
this.node.addChild(r);
this.tempBomb = r;
PlaySkeletonAnimation(r, !1, "05oom").setCompleteListener(this.EffectBombFinish.bind(this));
s = !0;
} else if (n.IsFishKing(t)) ; else if (n.IsBubbleCannon(t)) {
this.jsGameEngine.jsCannonManager.SetProCanonTemplate(e, i, t, o);
} else if (n.IsBubbleBingDong(t)) {
this.jsGameEngine.jsCannonManager.SetProCanonTemplate(e, i, t);
}
if (s) {
this.jsGameEngine.jsGameView.SetGameViewShake(!0, .6);
}
},
ActiveFish: function(e, t, i, a, o, s, r) {
var c = this.nodeFishPool[e].get();
if (c) {
var l = c.getComponent(cc.Animation);
l && l.resume();
} else c = cc.instantiate(this.pfFishAll[e]);
this.node.addChild(c);
var h = c.getComponent("SHLL_FishItem");
h.InitFish(e, t, i, a, o, s, r);
h.jsFishManager = this;
h.SetFishStatus(n.FISH_ALIVE);
this.arrayFish.push(h);
return h;
},
OnFrame: function(e, t) {
for (var i = this.jsGameEngine.jsLockManager, a = !1, o = cc.v2(0, 0), s = 0, r = this.arrayFish.length; s < r; ) {
var c = this.arrayFish[s];
if (c) {
var l = c.GetFishKind(), h = c.GetFishStatus();
if (h == n.FISH_INVALID) {
for (var u = c.node.getPosition(), d = 0; d < n.GAME_PLAYER; ++d) if (i.GetLockFishID(d) == c.GetFishID()) {
if (d == this.wMeChairID && !a) {
a = !0;
o.x = u.x;
o.y = u.y;
}
i.ClearLockTrace(d);
}
this.arrayFish.splice(s, 1);
this.nodeFishPool[l].put(c.node);
r--;
} else {
for (var m = c.node.getPosition(), f = 0; f < n.GAME_PLAYER; ++f) if (i.GetLockFishID(f) == c.GetFishID()) if (n.InsideScreen(m) && h != n.FISH_DIED) i.UpdateLockTrace(f, m.x, m.y); else {
if (f == this.wMeChairID && !a) {
a = !0;
o.x = m.x;
o.y = m.y;
}
i.ClearLockTrace(f);
}
s++;
}
}
}
if (a) {
var p = this.LockFish();
if (p) {
i.SetLockFishID(this.wMeChairID, p.GetFishID());
i.UpdateLockTrace(this.wMeChairID, o.x, o.y);
} else {
i.UpdateLockTrace(this.wMeChairID, o.x, o.y);
i.ClearLockTrace(this.wMeChairID);
}
}
}
});
cc._RF.pop();
}, {
SHLL_BoundBox: "SHLL_BoundBox",
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_FishTrace: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1673eeAU6JEKpraFoYWq8b9", "SHLL_FishTrace");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide"), o = {
scene_kind_1_trace: [],
scene_kind_2_trace: [],
scene_kind_2_small_fish_stop_index: [],
scene_kind_2_small_fish_stop_count: 0,
scene_kind_2_big_fish_stop_index: 0,
scene_kind_2_big_fish_stop_count: 0,
scene_kind_3_trace: [],
scene_kind_4_trace: [],
scene_kind_5_trace: [],
scene_PrettyFish_trace: [],
Config_scene_kind_6: [],
NConfigSceneFishCount: [],
arrayFishTrace: [],
bLoad: !1,
ThreadOpenFileLineStatic: function() {
if (!o.bLoad) {
o.bLoad = !0;
cc.loader.loadResDir("3002/AGameRes/fishtrace", function(e, t, i) {
if (!e) for (var n = 0; n < t.length; n++) {
var a = t[n], s = a.type, r = a.index, c = a.array;
null == o.arrayFishTrace[s] && (o.arrayFishTrace[s] = []);
o.arrayFishTrace[s][r] = c;
}
});
}
},
Scene1: {}
};
o.Scene1.bCreate = !1;
o.BuildSceneKind1 = function() {
if (o.Scene1.bCreate) return o.Scene1;
o.Scene1.bCreate = !0;
o.Scene1.fishCount = 200;
o.Scene1.trace = [];
o.Scene1.stopCount = [];
o.Scene1.traceType = [];
for (var e = 0, t = 0; t < 4; t++) {
for (var i = o.arrayFishTrace[n.TRACE_CIRCLE][0], a = 0; a < 50; a++) {
if (a % 2 == 0) {
o.Scene1.trace[e] = i[a];
o.Scene1.stopCount[e] = 100 * t;
o.Scene1.traceType[e] = n.TRACE_CIRCLE;
}
e++;
}
o.Scene1.trace[e] = i[10 * t];
o.Scene1.stopCount[e] = 100 * (t + .5);
o.Scene1.traceType[e] = n.TRACE_CIRCLE;
e++;
}
return o.Scene1;
}, o.Scene2 = {};
o.Scene2.bCreate = !1;
o.BuildSceneKind2 = function() {
if (o.Scene2.bCreate) return o.Scene2;
o.Scene2.bCreate = !0;
o.Scene2.fishCount = 50;
o.Scene2.trace = [];
o.Scene2.stopCount = [];
o.Scene2.traceType = [];
for (var e = 0, t = 0; t < 8; t++) for (var i = o.arrayFishTrace[n.TRACE_LINEAR], a = 0; a < 10; a++) {
o.Scene2.trace[e] = i[t];
o.Scene2.stopCount[e] = 150 * a;
o.Scene2.traceType[e] = n.TRACE_LINEAR;
e++;
}
return o.Scene2;
};
o.Scene3 = {};
o.Scene3.bCreate = !1;
o.BuildSceneKind3 = function(e) {
if (o.Scene3.bCreate) return o.Scene3;
o.Scene3.bCreate = !0;
o.Scene3.fishCount = 133;
o.Scene3.trace = [];
o.Scene3.stopCount = [];
o.Scene3.traceType = [];
o.Scene3.offsetx = [];
o.Scene3.offsety = [];
for (var t = 0, i = 0, a = [ 300, -300 ], s = o.arrayFishTrace[n.TRACE_LINEAR], r = 0, c = 0; c < 3; c++) {
for (var l = 0; l < 2; l++) for (var h = 0; h < 10; h++) {
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 24 * h + 24 * i + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
o.Scene3.offsetx[t] = 0;
o.Scene3.offsety[t] = a[l];
t++;
}
r += 20;
i += 10;
}
for (var u = 0, d = 0; d < 3; d++) {
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 10 * u * 24 + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
t++;
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 10 * u * 24 + 120 + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
u++;
t++;
}
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 10 * (u - 1) * 24 + 120 + 60 + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
t++;
for (var m = 0; m < 3; m++) {
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 10 * u * 24 + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
t++;
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 10 * u * 24 + 120 + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
u++;
t++;
}
for (var f = 0; f < 3; f++) {
for (var p = 0; p < 2; p++) for (var _ = 0; _ < 10; _++) {
o.Scene3.trace[t] = s[0];
o.Scene3.stopCount[t] = 24 * _ + 24 * i + r;
o.Scene3.traceType[t] = n.TRACE_LINEAR;
o.Scene3.offsetx[t] = 0;
o.Scene3.offsety[t] = a[p];
t++;
}
r += 20;
i += 10;
}
return o.Scene3;
};
o.Scene4 = {};
o.Scene4.bCreate = !1;
o.BuildSceneKind4 = function(e) {
if (o.Scene4.bCreate) return o.Scene4;
o.Scene4.bCreate = !0;
var t = o.arrayFishTrace[n.TRACE_SCENE][0];
o.Scene4.fishCount = t.length;
o.Scene4.trace = [];
o.Scene4.stopCount = [];
o.Scene4.traceType = [];
for (var i = 0; i < t.length; i++) {
var s = [ t[i][0] / 100 - n.ScreenWidth, n.ScreenWidth + 200 ], r = [ t[i][1] / 100, t[i][1] / 100 ], c = [];
a.BuildLinear100(s, r, 2, c, 2);
o.Scene4.trace[i] = c;
o.Scene4.stopCount[i] = 0;
o.Scene4.traceType[i] = n.TRACE_LINEAR;
}
return o.Scene4;
};
t.exports = o;
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a59457HK5xOKK8AyIB8dX7q", "SHLL_GameEngine");
var n = e("SHLL_CMD_Game"), a = e("SHLL_FishTrace"), o = e("SHLL_MathAide");
cc.Class({
extends: GameFrameEngine,
properties: {
nodeGameView: cc.Node,
nodeCannonManager: cc.Node,
nodeFishManager: cc.Node,
nodeBulletManager: cc.Node,
nodeLockManager: cc.Node,
nodeCoinManager: cc.Node,
nodeSceneImage: cc.Node,
sfSceneUrl: [ cc.SpriteFrame ]
},
OnFrameEngineDisable: function() {
cc.sys.isNative || (window.onresizecallback = null);
cc.audioEngine.setMaxAudioInstance(15);
},
OnFrameEngineLoad: function() {
a.ThreadOpenFileLineStatic();
this.jsGameView = this.nodeGameView.getComponent("SHLL_GameView");
this.jsCannonManager = this.nodeCannonManager.getComponent("SHLL_CannonManager");
this.jsFishManager = this.nodeFishManager.getComponent("SHLL_FishManager");
this.jsBulletManager = this.nodeBulletManager.getComponent("SHLL_BulletManager");
this.jsLockManager = this.nodeLockManager.getComponent("SHLL_LockManager");
this.jsCoinManager = this.nodeCoinManager.getComponent("SHLL_CoinManager");
this.jsGameView.init(this);
this.jsFishManager.init(this.jsGameView, this);
this.jsFishManager.OnLoadResources();
this.jsCannonManager.init(this.jsGameView, this);
this.jsLockManager.init(this.jsGameView, this);
this.jsBulletManager.init(this.jsGameView, this);
this.jsCoinManager.init(this.jsGameView, this);
if (cc.sys.platform == cc.sys.IPAD) {
n.ScreenWidth = 1920;
n.ScreenHeight = 1080;
n.ScreenWidth_2 = n.ScreenWidth / 2;
n.ScreenHeight_2 = n.ScreenHeight / 2;
} else {
var e = cc.view.getVisibleSize();
n.ScreenWidth = e.width;
n.ScreenHeight = e.height;
n.ScreenWidth_2 = n.ScreenWidth / 2;
n.ScreenHeight_2 = n.ScreenHeight / 2;
}
this.ResetGameEngine();
this.fUpdateTime = 0;
this.fGameTime = 0;
cc.director.getCollisionManager().enabled = !0;
this.bButtonExit = !1;
this.bForceTi = !1;
},
SwitchViewID: function(e) {
return e;
},
OnFrameEngineStart: function() {
PlayGameAudio("3002/Audio/bg", !0);
},
ResetGameEngine: function() {
this.pCmdActionArray = [];
this.fCmdDelayTime = 0;
this.bRunAction = !0;
n.LockScreen = !1;
this.bGameConfig = !1;
this.nFishMultiple = [];
this.nFishSpeed = [];
this.nBoundWidth = [];
this.nBoundHeight = [];
this.nNetRadius = [];
this.nFishRadius = [];
this.nBulletSpeed = [];
this.nMinBulletMut = 0;
this.nMaxBulletMut = 0;
this.nCurBulletMut = 0;
this.cbCurBulletKind = 0;
this.nBombWidth = 0;
this.nBombHeight = 0;
},
OnEventSceneMessage: function(e, t, i, o) {
switch (e) {
case GAME_STATUS_FREE:
case GAME_STATUS_PLAY:
var s = new n.CMD_S_GameStatus();
s.init(i);
for (var r = 0; r < n.GAME_PLAYER; r++) {
this.jsCannonManager.SetUserStartScore(r, s.lInitScore[r]);
this.jsCannonManager.SetFishChangeScore(r, s.lChangeScore[r]);
}
if (0 != s.nFishStatusCount) for (var c = 0; c < s.nFishStatusCount; c++) {
var l = s.fishStatusTrace[c], h = a.arrayFishTrace[l.cbTraceType];
if (!h) return !0;
var u = l.cbFishKind, d = this.nFishSpeed[u], m = this.jsFishManager.ActiveFish(u, l.nFishID, this.nFishMultiple[u], d, this.nBoundWidth[u], this.nBoundHeight[u], this.nFishRadius[u]);
if (null != m) {
m.SetFishStatus(n.FISH_ALIVE);
m.SetFishActive(!0);
m.SetFishStop(0, 0);
m.SetTraceType(l.cbTraceType, l.wFishTraceID);
var f = h[l.wFishTraceID];
m.SetFishTrace(f);
m.SetRandPos(l.nRandx, l.nRandy, l.cbRandType);
if (0 != l.dwMoveTime) {
var p = 60 / d, _ = parseInt(l.dwMoveTime / 1e3 * p);
if (f.length > _) m.SetFishPos(_, !0); else {
m.SetFishPos(0, !0);
m.SetFishStatus(n.FISH_INVALID);
}
} else m.SetFishPos(0, !0);
}
}
}
},
OnEventGameMessage: function(e, t, i) {
var a = this.GetControlEvent();
if (a && a.OnEventGameMessage(e, t, i)) return !0;
if (n.SUB_S_GAME_CONFIG == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_GameConfig, i, "CMD_S_GameConfig")) return !1;
var o = new n.CMD_S_GameConfig();
o.init(t);
var s = new n.ActionStruct();
s.init(e, o);
this.pCmdActionArray.push(s);
} else if (n.SUB_S_PLAY_REWARDS_INFO == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_PlayRewardsInfo, i, "CMD_S_PlayRewardsInfo")) return !1;
var r = new n.CMD_S_PlayRewardsInfo();
r.init(t);
var c = new n.ActionStruct();
c.init(e, r);
this.pCmdActionArray.push(c);
} else if (n.SUB_S_USER_FIRE == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_UserFire, i, "CMD_S_UserFire")) return !1;
var l = new n.CMD_S_UserFire();
l.init(t);
var h = new n.ActionStruct();
h.init(e, l);
this.pCmdActionArray.push(h);
} else if (n.SUB_S_FISH_TRACE == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_FishTrace, i, "CMD_S_FishTrace")) return !1;
var u = new n.CMD_S_FishTrace();
u.init(t);
var d = new n.ActionStruct();
d.init(e, u);
this.pCmdActionArray.push(d);
} else if (n.SUB_S_CATCH_FISH == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CatchFish, i, "CMD_S_CatchFish")) return !1;
var m = new n.CMD_S_CatchFish();
m.init(t);
var f = new n.ActionStruct();
f.init(e, m);
this.pCmdActionArray.push(f);
} else if (n.SUB_S_SWITCH_SCENE == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_SwitchScene, i, "CMD_S_CatchFish")) return !1;
var p = new n.CMD_S_SwitchScene();
p.init(t);
var _ = new n.ActionStruct();
_.init(e, p);
this.pCmdActionArray.push(_);
} else if (n.SUB_S_CATCH_SWEEP_FISH == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CatchSweepFish, i, "CMD_S_CatchSweepFish")) return !1;
var S = new n.CMD_S_CatchSweepFish();
S.init(t);
var g = new n.ActionStruct();
g.init(e, S);
this.pCmdActionArray.push(g);
} else if (n.SUB_S_CATCH_SWEEP_FISH_RESULT == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CatchSweepFishResult, i, "CMD_S_CatchSweepFishResult")) return !1;
var C = new n.CMD_S_CatchSweepFishResult();
C.init(t);
var w = new n.ActionStruct();
w.init(e, C);
this.pCmdActionArray.push(w);
} else if (n.SUB_S_CATCH_KUI == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CreateKui, i, "CMD_S_CreateKui")) return !1;
var b = new n.CMD_S_CreateKui();
b.init(t);
var A = new n.ActionStruct();
A.init(e, b);
this.pCmdActionArray.push(A);
} else if (n.SUB_S_CATCH_KUI27 == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CreateBullet, i, "CMD_S_CreateBullet")) return !1;
var v = new n.CMD_S_CreateBullet();
v.init(t);
var G = new n.ActionStruct();
G.init(e, v);
this.pCmdActionArray.push(G);
} else if (n.SUB_S_CATCH_PRO == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_CatchPro, i, "CMD_S_CatchPro")) return !1;
var I = new n.CMD_S_CatchPro();
I.init(t);
var D = new n.ActionStruct();
D.init(e, I);
this.pCmdActionArray.push(D);
} else if (n.SUB_S_CATCH_PRO_RESULT == e) {
if (YQYAssertAlertStructSizeByEqual(n.CMD_S_ProCatchFishResult, i, "CMD_S_ProCatchFishResult")) return !1;
var y = new n.CMD_S_ProCatchFishResult();
y.init(t);
var E = new n.ActionStruct();
E.init(e, y);
this.pCmdActionArray.push(E);
}
},
OnBeginAction: function(e) {
if (!this.bRunAction) return !0;
var t = this.pCmdActionArray.shift();
this.fCmdDelayTime = 0;
switch (t.wSubCmdID) {
case n.SUB_S_USERHISEQUI:
return this.OnActionUserHisequt(t.tStruct);

case n.SUB_S_GAME_CONFIG:
return this.OnActionGameConfig(t.tStruct);

case n.SUB_S_USER_FIRE:
return this.OnActionUserFire(t.tStruct);

case n.SUB_S_FISH_TRACE:
return this.OnActionFishTrace(t.tStruct);

case n.SUB_S_CATCH_FISH:
return this.OnActionCatchFish(t.tStruct);

case n.SUB_S_CATCH_KUI:
return this.OnActionCircle(t.tStruct);

case n.SUB_S_CATCH_KUI27:
return this.OnActionCircle27(t.tStruct);

case n.SUB_S_CATCH_PRO:
return this.OnActionCatchPro(t.tStruct);

case n.SUB_S_CATCH_PRO_RESULT:
return this.OnActionCatchProResult(t.tStruct);

case n.SUB_S_SWITCH_SCENE:
return this.OnActionSwitchScene(t.tStruct);

case n.SUB_S_CATCH_SWEEP_FISH:
return this.OnActionCatchSweepFish(t.tStruct);

case n.SUB_S_CATCH_SWEEP_FISH_RESULT:
return this.OnActionCatchSweepFishResult(t.tStruct);
}
},
OnActionGameConfig: function(e) {
var t = e;
this.lMaxUserScore = t.lMaxUserScore;
this.lMinUserScore = t.lMinUserScore;
this.nMinBulletMut = t.nMinBulletMut;
this.nMaxBulletMut = t.nMaxBulletMut;
this.nCurBulletMut = t.nMinBulletMut;
1 == this.nMinBulletMut ? n.SCORE_TAIL_COUNT = 3 : n.SCORE_TAIL_COUNT = 2;
this.cbShowBox = t.cbShowBox;
this.cbCurBulletKind = n.GetBulletKind(this.nCurBulletMut);
for (var i = 0; i < n.GAME_PLAYER; ++i) this.jsCannonManager.SetCannonStatus(i, this.cbCurBulletKind, this.nCurBulletMut);
this.nBombWidth = t.nBombWidth;
this.nBombHeight = t.nBombHeight;
for (var a = 0; a < n.FISH_COUNT; ++a) {
this.nFishMultiple[a] = t.nFishMut[a];
this.nFishSpeed[a] = t.nFishSpeed[a];
this.nBoundWidth[a] = t.nFishBoxWidth[a];
this.nBoundHeight[a] = t.nFishBoxHeight[a];
this.nFishRadius[a] = t.nFishHitRadius[a];
}
for (var o = 0; o < n.BULLET_KIND_COUNT; ++o) this.nNetRadius[o] = t.nNetRadius[o];
for (var s = 0; s < n.GAME_PLAYER; ++s) this.nBulletSpeed[s] = t.nBulletSpeed[s];
this.bGameConfig = !0;
return !0;
},
OnActionUserFire: function(e) {
var t = e;
if (t.wChairID != this.GetMeChairID()) this.jsBulletManager.AddBulletBufferForOther(t.wChairID, t); else if (this.jsBulletManager.GetBulletBufferCount(t.wChairID)) {
var i = this.jsBulletManager.BulletBufferShift(t.wChairID);
i.SetBulletID(t.nBulletID);
i.SetBulletKind(t.cbBulletKind);
if (i.GetCatchFishID() > 0) {
var n = this.jsFishManager.GetSweepFish(i.GetCatchKind());
this.SendCatchFish(i.GetCatchFishID(), i.GetFireChairID(), i.GetBulletID(), i.GetBulletKind(), i.GetBulletMut(), n);
}
}
return !0;
},
OnActionCatchFish: function(e) {
var t = e;
this.jsFishManager.CatchFish(t.wChairID, t.nFishID, t.lFishScore, t.nBulletMut, t.lFishMedal);
this.jsCannonManager.SetFishChangeScore(t.wChairID, t.lFishScore);
this.jsCannonManager.SetFishChangeAction(t.wChairID, t.lFishScore);
return !0;
},
OnActionFishTrace: function(e) {
var t = e, i = a.arrayFishTrace[t.cbTraceType];
if (!i) return !0;
for (var o = t.cbMaxKind, s = 0; s < t.nFishCount; s++) {
var r = t.cbFishKind[s], c = this.jsFishManager.ActiveFish(r, t.nFishID[s], this.nFishMultiple[r], this.nFishSpeed[o], this.nBoundWidth[r], this.nBoundHeight[r], this.nFishRadius[r]);
if (null != c) {
c.SetFishStatus(n.FISH_ALIVE);
c.SetFishActive(!0);
c.SetFishStop(0, s * t.wFishInterval);
c.SetTraceType(t.cbTraceType, t.wFishTraceID);
var l = i[t.wFishTraceID];
c.SetFishTrace(l);
c.SetRandPos(t.nRandx[s], t.nRandy[s], t.cbRandType);
c.SetFishPos(0, !0);
}
}
return !0;
},
OnActionCircle: function(e) {
var t = e, i = t.cbFishKind, o = this.jsFishManager.GetFish(t.nCatchFishID);
if (o) {
o.CatchFish(t.wChairID, 0, 0, !1);
for (var s = o.node.getPosition(), r = 0; r < t.nFishCount; r++) {
var c = this.jsFishManager.ActiveFish(i, t.nFishID[r], this.nFishMultiple[i], this.nFishSpeed[i], this.nBoundWidth[i], this.nBoundHeight[i], this.nFishRadius[i]);
if (null != c) {
c.SetFishStatus(n.FISH_ALIVE);
c.SetFishActive(!0);
c.SetFishStop(0, 50);
c.SetTraceType(n.TRACE_LINEAR, t.nRandTraceID[r]);
var l = a.arrayFishTrace[n.TRACE_LINEAR][t.nRandTraceID[r]];
c.SetFishTrace(l);
c.SetOffsetPos(s.x - l[0][0], s.y - l[0][1]);
c.SetFishPos(0);
}
}
return !0;
}
},
OnActionCircle27: function(e) {
var t = e, i = this.jsFishManager.GetFish(t.nCatchFishID);
if (i) {
i.CatchFish(t.wChairID, 0, 0, !1);
for (var a = i.node.getPosition(), s = t.cbBulletKind, r = t.wChairID, c = o.BuildCircle(a.x, a.y, 40, t.nBulletCount), l = 0; l < t.nBulletCount; l++) {
var h = c[l], u = o.CalcAngle(h.x, h.y, a.x, a.y);
if (n.InsideScreen(h.x, h.y)) this.jsBulletManager.OnFireBullet(h.x, h.y, u, s, t.nBulletID[l], t.nBulletMut, r, this.nBulletSpeed[r] + 5, this.nFishRadius[s], t.wAndroidChairID, 0); else this.SendFailureBullet(t.nBulletID[l]);
}
return !0;
}
},
OnActionCatchPro: function(e) {
var t = e;
if (t.cbProType == n.PRO_TYPE_NONE) this.jsFishManager.ChangeFishStatus(t.wChairID, t.nFishID, t.cbProStatus); else if (t.cbProType == n.PRO_TYPE_LASER && 1 == t.cbProStatus) this.jsCannonManager.SetProCannonReady(t.wChairID, t.nBulletMut, t.cbProType, !0); else if (t.cbProType != n.PRO_TYPE_NONE && 0 == t.cbProStatus) {
null == this.jsFishManager.CatchFish(t.wChairID, t.nFishID, 0, t.nBulletMut, 0) && this.jsFishManager.CatchEffect(t.wChairID, t.cbFishKind, this.jsCannonManager.GetCannonPos(t.wChairID), 0, 0);
}
},
OnActionCatchProResult: function(e) {
var t = e;
if (t.cbProType == n.PRO_TYPE_DONG) {
this.jsGameView.DoBingDongEffiect();
if (t.wChairID == this.wMeChairID) {
this.jsCannonManager.bBingDong[t.wChairID] = !1;
this.jsGameView.UpdateProStatus(!1, n.PRO_TYPE_DONG);
}
this.jsGameView.SetBingDongDelayTime(5);
} else if (t.cbProType == n.PRO_TYPE_LASER) {
this.jsFishManager.CatchProSweepFishResult(t.wChairID, t.lResultScore, t.nCatchBulletMul, t.nCatchFishID, t.nCatchFishCount);
this.jsCannonManager.SetFishChangeScore(t.wChairID, t.lResultScore);
this.jsCannonManager.SetFishChangeAction(t.wChairID, t.lResultScore);
}
},
OnActionSwitchScene: function(e) {
var t = e;
this.tSwitchScene = t;
this.jsFishManager.SetALiveTraceSpeed(2);
this.bSwitchScene = !0;
this.nodeSceneImage.jsGameEngine = this;
this.nodeSceneImage.cbSceneKind = t.cbSceneKind;
this.nodeSceneImage.runAction(cc.sequence(cc.fadeOut(2), cc.callFunc(function(e) {
var t = e.jsGameEngine;
if (t) {
e.getComponent(cc.Sprite).spriteFrame = t.sfSceneUrl[e.cbSceneKind];
var i = e.getComponent(cc.Widget);
i.enabled = !0;
i.left = 0;
i.right = 0;
i.top = 0;
i.bottom = 0;
}
}), cc.fadeIn(1), cc.callFunc(function(e) {
var t = e.jsGameEngine;
if (t) {
e.jsGameEngine = null;
t.bSwitchScene = !1;
}
})));
},
OnActionCatchSweepFish: function(e) {
var t = e;
this.jsFishManager.CatchSweepFish(t.wChairID, t.nFishID);
return !0;
},
OnActionCatchSweepFishResult: function(e) {
var t = e;
this.jsFishManager.CatchSweepFishResult(t.wChairID, t.nFishID, t.lFishScore, t.nBulletMut, t.nCatchFishID, t.nCatchFishCount);
this.jsCannonManager.SetFishChangeScore(t.wChairID, t.lFishScore);
this.jsCannonManager.SetFishChangeAction(t.wChairID, t.lFishScore);
return !0;
},
SendUserFire: function(e, t, i, a, o) {
if (!this.bButtonExit) {
var s = new n.CMD_C_UserFire();
s.cbBulletKind = e;
s.nAngle = parseInt(100 * t);
s.nBulletMut = i;
s.nLockFishID = a;
s.cbFireType = o;
this.SendGameStruct(n.SUB_C_USER_FIRE, s);
}
},
SendCatchFish: function(e, t, i, a, o, s) {
if (!this.bButtonExit) {
var r = new n.CMD_C_CatchFish();
r.wChairID = t;
r.nBulletID = i;
r.cbBulletKind = a;
r.nFishID = e;
r.nBulletMut = o;
s && IsArray(s) && s.length > 0 && (r.nSweepAarray = s.concat());
this.SendGameStruct(n.SUB_C_CATCH_FISH, r);
}
},
SendProCatchFish: function(e, t, i, a) {
if (!this.bButtonExit) {
var o = new n.CMD_C_ProCatchFish();
o.nCatchFishCount = i;
o.cbProType = e;
o.cbUseStatus = t;
a && IsArray(a) && (o.nCatchFishID = a.concat());
this.SendGameStruct(n.SUB_C_PRO_CATCH_FISH, o);
}
},
SendUseProStatus: function(e, t) {
if (!this.bButtonExit) {
var i = new n.CMD_S_CatchPro();
i.cbProType = e;
i.cbProStatus = t;
this.SendGameStruct(n.SUB_S_CATCH_PRO, i);
}
},
SendFailureBullet: function(e) {
if (!this.bButtonExit) {
var t = new n.CMD_C_CreateBulletFailure();
t.nFailureID = e;
this.SendGameStruct(n.SUB_C_FAILURE_BULLET, t);
}
},
SendCatchSweepFish: function(e) {
this.SendGameStruct(n.SUB_C_CATCH_SWEEP_FISH, e);
},
OnGameStandUp: function(e) {
this.bButtonExit = !0;
this.jsCannonManager.SetCannonFire(!1);
this.SendPacketStandUp(!1);
},
SendPacketStandUpTimeOut: function(e) {
var t = this;
ManagerHelp_SetSystemLabel("超过2分钟未发炮，10秒后您将被请离房间!");
this.node.runAction(cc.sequence(cc.delayTime(10), cc.callFunc(function(e) {
if (t.bForceTi) {
t.bButtonExit = !0;
t.jsCannonManager.SetCannonFire(!1);
t.SendPacketStandUp(null, !1);
}
}.bind(this))));
},
OnEngineUpdate: function(e) {
this.fGameTime += e;
this.fUpdateTime += e;
this.fUpdateTime > 1e9 && (this.fUpdateTime = 0);
if (this.fGameTime > 120 && !this.bForceTi) {
this.bForceTi = !0;
this.SendPacketStandUpTimeOut(null, !0);
}
this.fCmdDelayTime > 0 ? this.fCmdDelayTime -= e : this.pCmdActionArray.length > 0 && this.OnBeginAction(e);
if (this.bGameConfig) {
this.jsGameView.OnFrame(e, n.LockScreen);
this.jsFishManager.OnFrame(e, n.LockScreen);
this.jsCannonManager.OnFrame(e, n.LockScreen);
this.jsBulletManager.OnFrame(e, n.LockScreen);
this.jsLockManager.OnFrame(e);
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_FishTrace: "SHLL_FishTrace",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1745azMsyJMr7Y2VC0W0WUZ", "SHLL_GameView");
var n = e("SHLL_CMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
nodeGameContent: cc.Node,
nodeBingDong: cc.Node,
nodeGameMenu: cc.Node,
pfHelpKind: cc.Prefab
},
OnFrameViewLoad: function() {
this.jsGameMenu = this.nodeGameMenu.getComponent("SHLL_Menu");
this.nodeGameMenu.getComponent("jsButtonItem").OnButtonClick = this.OnMenuEvent.bind(this);
0 == window.mfConfig.fSound && 0 == window.mfConfig.fMusic ? this.jsGameMenu.nodeSound.getComponent(cc.Toggle).isChecked = !0 : this.jsGameMenu.nodeSound.getComponent(cc.Toggle).isChecked = !1;
},
OnFrameViewStart: function() {},
init: function(e) {
this.jsGameEngine = e;
this.bScreenShake = !1;
this.fShakeTime = 0;
this.fShakePosx = this.node.x;
this.fShakePosy = this.node.y;
},
SetGameViewShake: function(e, t, i) {
this.bScreenShake = e;
this.fShakeTime = t;
this.fShakeDelayTime = i;
this.node.getComponent(cc.Widget).enabled = !e;
},
OnEventUserEnter: function(e, t) {
var i = this.jsGameEngine.jsCannonManager;
i.SetEnableCannon(e, e.GetChairID(), !0);
var n = e.GetChairID();
if (e && i.jsUserInfo[n]) {
i.SetUserStartScore(n, e.GetUserScore());
i.jsUserInfo[n].OnInitInfo(e);
}
var a = this.jsGameEngine.GetMeChairID();
if (e.GetChairID() == a) {
this.jsGameEngine.jsFishManager.wMeChairID = a;
this.jsGameEngine.jsCannonManager.wMeChairID = a;
this.jsGameEngine.jsCoinManager.wMeChairID = a;
}
return !0;
},
OnEventUserLeave: function(e, t, i) {
var n = this.jsGameEngine.jsCannonManager;
n.SetEnableCannon(e, t, !1);
n.ResetFishChangeScore(t);
if (this.jsGameEngine.GetMeChairID() != t) {
n.CutoverProCannonFinish(t);
n.ResetProCannon(t);
}
return !0;
},
OnEventUserChatFast: function(e, t) {},
OnEventUserScore: function(e, t) {
return !0;
},
OnEventUserStatus: function(e, t, i) {
this.jsGameEngine.jsCannonManager.SetEnableCannon(e, e.GetChairID(), !0);
return !0;
},
SetMenuCheck: function(e, t) {
if (this.jsGameMenu && "lock" == e && !t) {
this.jsGameEngine.jsCannonManager;
var i = this.jsGameEngine.GetMeChairID();
this.jsGameEngine.jsLockManager.ClearLockTrace(i);
}
},
OnMenuEvent: function(e) {
var t = e.btnNode, i = this.jsGameEngine.GetMeChairID();
if (this.jsGameEngine.jsCannonManager.bLockSelfActive) {
this.jsGameEngine.jsCannonManager.nodeGreyBack.active = !1;
this.jsGameEngine.jsCannonManager.bLockSelfActive = !1;
}
if ("All_btnexit" == t.name) {
this.jsGameEngine.SendPacketStandUp(null, !0, null, "Are you sure you want to quit?");
}
if ("All_btnhelp" == t.name) {
var a = cc.instantiate(this.pfHelpKind);
a.getComponent("SHLL_HelpKind").OnInitFishItem(this.jsGameEngine.jsFishManager);
this.node.addChild(a);
SceneManager_AlertShow(a);
}
if ("All_btnon" == t.name) {
if (0 == window.mfConfig.fSound && 0 == window.mfConfig.fMusic) {
window.mfConfig.fSound = 1;
window.mfConfig.fMusic = .43;
} else {
window.mfConfig.fSound = 0;
window.mfConfig.fMusic = 0;
}
window.mfConfig.ChangeVolume();
}
if ("All_btnBingDong" == t.name) {
if (this.jsGameEngine.bSwitchScene) return;
this.jsGameEngine.jsCannonManager.bBingDong[i] && this.jsGameEngine.SendProCatchFish(n.PRO_TYPE_DONG, 0, 0, 0);
}
if ("All_btnLaser" == t.name) {
var o = this.jsGameEngine.jsCannonManager, s = this.jsGameEngine.jsLockManager;
if (o.bProCannon[i]) {
this.jsGameMenu.UpdateProStatus(!1, n.PRO_TYPE_LASER);
o.OnCutoverProCannon();
}
this.jsGameMenu.nodeAutoFire.getComponent(cc.Button).interactable = !1;
if (o.GetAutoFire()) {
o.SetAutoFire(!1);
o.SetCannonFire(!1);
s.ClearLockTrace(i);
this.jsGameMenu.nodeAutoFire.getComponent(cc.Toggle).isChecked && (this.jsGameMenu.nodeAutoFire.getComponent(cc.Toggle).isChecked = !1);
}
}
if ("All_btnauto" == t.name) {
var r = this.jsGameEngine.jsCannonManager;
if (r.GetProCannonStatus(i) > n.PRO_CANNON_FIRE_READY) return;
var c = this.jsGameEngine.jsFishManager, l = this.jsGameEngine.jsLockManager;
if (r.GetAutoFire()) {
r.SetAutoFire(!1);
r.SetCannonFire(!1);
l.ClearLockTrace(i);
} else {
r.SetAutoFire(!0);
r.SetCannonFire(!0);
this.jsGameMenu.UpdateAutoSelect();
var h = c.LockFish();
if (h) {
var u = h.node.getPosition();
l.SetLockFishID(i, h.GetFishID());
l.UpdateLockTrace(i, u.x, u.y);
}
}
}
},
DoBingDongEffiect: function() {
var e = this;
e.nodeBingDong.active = !0;
this.nodeBingDong.runAction(cc.sequence(cc.fadeIn(1), cc.callFunc(function() {
n.LockScreen = !0;
e.jsGameEngine.jsFishManager.OnPauseAllAnimatio();
}), cc.delayTime(3), cc.fadeOut(2), cc.callFunc(function() {
n.LockScreen = !1;
e.jsGameEngine.jsFishManager.OnResumeAllAnimatio();
e.nodeBingDong.active = !1;
})));
},
UpdateProStatus: function(e, t) {
this.jsGameMenu.UpdateProStatus(e, t);
},
SetBingDongDelayTime: function(e) {
this.jsGameMenu.SetBingDongDelayTime(e);
},
OnFrame: function(e) {
if (this.bScreenShake) if (this.fShakeDelayTime > 0) this.fShakeDelayTime -= e; else if (this.fShakeTime > 0) {
this.fShakeTime -= e;
this.node.x = this.fShakePosx + Rand(20, -20);
this.node.y = this.fShakePosy + Rand(20, -20);
} else this.SetGameViewShake(!1, 0, 0);
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_HelpKind: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1b1d0TL1OVLzYXV2mI3a0Dg", "SHLL_HelpKind");
var n = e("SHLL_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
sfItemBg: [ cc.SpriteFrame ],
pfItemFish: cc.Prefab,
nodeFish: cc.Node,
spTip: cc.Sprite,
labelTip: cc.Label
},
onLoad: function() {},
OnInitFishItem: function(e) {
for (var t = this.nodeContent.children, i = 0; i < t.length; i++) t[i].zIndex = -1e3;
for (var a = 0; a < n.FISH_COUNT; a++) {
var o = n.fish_mut[a], s = cc.instantiate(this.pfItemFish), r = s.getComponent("SHLL_HelpKind"), c = cc.instantiate(e.pfFishAll[a]);
r.nodeFish.addChild(c);
c.stopAllActions();
c.scale = 1;
c.getComponent("SHLL_FishItem").SetColliderEnable(!1);
a != n.FISH_KIND_15 && a != n.FISH_KIND_17 && a != n.FISH_KIND_18 || (c.scale = .7);
n.IsFishKing(a) && (c.scale = .75);
(isNaN(o) || o >= 100) && (s.getComponent(cc.Sprite).spriteFrame = this.sfItemBg[1]);
isNaN(o) ? this.nodeContent.addChild(s, 1e3 + a) : this.nodeContent.addChild(s, o);
isNaN(o) || (o += "multiple");
r.labelTip.string = o;
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_LockManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8edd0+IOqpBmII0uBHyC278", "SHLL_LockManager");
var n = e("SHLL_CMD_Game"), a = e("SHLL_MathAide");
n.M_PI, cc.Class({
extends: cc.Component,
properties: {
nodeFlag: cc.Node,
pfLockLine: cc.Prefab
},
onLoad: function() {
this.nodePoolLine = new cc.NodePool();
},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
this.nLockFishID = [];
this.cbLockFishKind = [];
this.arrayLockTrace = [];
this.arrayLine = [];
this.wMeChairID = this.jsGameEngine.GetMeChairID();
for (var i = 0; i < n.GAME_PLAYER; i++) {
this.arrayLine[i] = [];
this.nLockFishID[i] = 0;
this.cbLockFishKind[i] = 0;
this.arrayLockTrace[i] = [];
}
},
onEnable: function() {},
onDisable: function() {},
SetLockFishID: function(e, t) {
this.nLockFishID[e] = t;
},
GetLockFishID: function(e) {
return this.nLockFishID[e];
},
SetLockFishKind: function(e, t) {
this.cbLockFishKind[e] = t;
},
GetLockFishKind: function(e) {
return this.cbLockFishKind[e];
},
UpdateLockTrace: function(e, t, i) {
var o = this.jsGameEngine.jsCannonManager;
if (!(o.GetProCannonStatus(e) > n.PRO_CANNON_FIRE_READY)) {
this.arrayLockTrace[e].length = 0;
var s = o.GetCannonPos(e), r = [], c = [];
r[0] = s.x;
c[0] = s.y;
r[1] = t;
c[1] = i;
a.BuildLinear(r, c, 2, this.arrayLockTrace[e], 64);
for (var l = this.arrayLine[e].length - this.arrayLockTrace[e].length; l > 0; ) {
--l;
var h = this.arrayLine[e].shift();
this.nodePoolLine.put(h);
}
this.jsGameEngine.IsMeChairID(e) && o.SetTouchPoint(t, i);
}
},
ClearLockTrace: function(e) {
this.arrayLockTrace[e].length = 0;
this.nLockFishID[e] = 0;
this.cbLockFishKind[e] = 0;
for (var t = this.arrayLine[e].length; t > 0; ) {
--t;
var i = this.arrayLine[e].shift();
this.nodePoolLine.put(i);
}
},
LockPos: function(e) {
if (0 == this.arrayLockTrace[e].length) return cc.v2(0, 0);
var t = this.arrayLockTrace[e].length - 1;
return this.arrayLockTrace[e][t];
},
OnFrame: function(e) {
for (var t = this.jsGameEngine.jsCannonManager, i = 0; i < n.GAME_PLAYER; ++i) if (0 != this.nLockFishID[i]) {
var o = t.GetCannonPos(i), s = this.LockPos(i);
if (i == this.wMeChairID) {
this.nodeFlag.active = !0;
this.nodeFlag.x = s.x;
this.nodeFlag.y = s.y;
}
for (var r = this.arrayLockTrace[i].length, c = 0; c < r; ++c) {
var l = this.arrayLine[i][c];
if (!l) {
null == (l = this.nodePoolLine.get()) && (l = cc.instantiate(this.pfLockLine));
this.arrayLine[i].push(l);
this.node.addChild(l);
}
var h = this.arrayLockTrace[i][c];
l.x = h.x;
l.y = h.y;
}
this.jsGameEngine.IsMeChairID(i) && t.SetTouchPoint(i, s.x, s.y);
var u = a.CalcAngle(s.x, s.y, o.x, o.y);
t.SetCurrentAngle(i, u);
} else {
i == this.wMeChairID && (this.nodeFlag.active = !1);
for (var d = this.arrayLine[i].length, m = 0; m < d; ++m) this.nodePoolLine.put(this.arrayLine[i][m]);
this.arrayLine[i].length = 0;
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game",
SHLL_MathAide: "SHLL_MathAide"
} ],
SHLL_MathAide: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "762d1NZ+5BF14+yaL68bDRL", "SHLL_MathAide");
var n = e("SHLL_CMD_Game"), a = {
Factorial: function(e) {
for (var t = 1, i = e, n = 0; n < e; ++n) {
t *= i;
--i;
}
return t;
},
Combination: function(e, t) {
return a.Factorial(e) / (a.Factorial(t) * a.Factorial(e - t));
},
CalcDistance: function(e, t, i, n) {
return Math.sqrt((e - i) * (e - i) + (t - n) * (t - n));
},
CalcAngle: function(e, t, i, o) {
var s = a.CalcDistance(e, t, i, o);
if (0 == s) return 0;
var r = (e - i) / s, c = Math.acos(r);
t > o && (c = 2 * n.M_PI - c);
return c += n.M_PI_2;
},
kYYAngle: function(e, t, i, n) {
var o = (e - i) / a.CalcDistance(e, t, i, n);
return Math.acos(o);
},
angle_range: function(e) {
for (;e <= 2 * -n.M_PI; ) e += 2 * n.M_PI;
e < 0 && (e += 2 * n.M_PI);
for (;e >= 2 * n.M_PI; ) e -= 2 * n.M_PI;
return e;
},
GetDistanceTarget: function(e, t, i, n) {
init_x[init_count - 1] < init_x[0] ? point.x = init_x[0] - Math.sin(temp_angle) * (n * size) : point.x = init_x[0] + Math.sin(temp_angle) * (n * size);
init_y[init_count - 1] < init_y[0] ? point.y = init_y[0] - Math.cos(temp_angle) * (n * size) : point.y = init_y[0] + Math.cos(temp_angle) * (n * size);
return cc.v2(x2, y2);
},
GetTargetPoint: function(e, t, i) {
var a = n.ScreenWidth, o = n.ScreenHeight, s = 0, r = 0, c = 2 * n.M_PI + n.M_PI_2 - i;
if (c <= n.M_PI_2) {
var l = c;
if (l <= Math.atan((o - t) / (a - e))) {
s = a;
r = (a - e) * Math.tan(l) + t;
} else {
r = o;
s = (o - t) * Math.tan(n.M_PI_2 - l) + e;
}
} else if (c > n.M_PI_2 && c <= n.M_PI) {
var h = n.M_PI - c;
if (h <= Math.atan((o - t) / e)) {
s = 0;
r = e * Math.tan(h) + t;
} else {
r = o;
s = (o - t) * Math.tan(i) + e;
}
} else if (c > n.M_PI && c <= 3 * n.M_PI_2) {
var u = c - n.M_PI;
if (u <= Math.atan(t / e)) {
s = 0;
r = t - e * Math.tan(u);
} else {
r = 0;
s = e - t * Math.tan(n.M_PI_2 - u);
}
} else {
var d = 2 * n.M_PI - c;
if (d <= Math.atan(t / (a - e))) {
s = a;
r = t - (a - e) * Math.tan(d);
} else {
r = 0;
s = t * Math.tan(n.M_PI_2 - d) + e;
}
}
return cc.v2(s, r);
},
ReboundBullet: function(e) {
e.SetLockFishID(0);
var t = e.arrayTrace[e.arrayTrace.length - 1], i = e.arrayTrace[0], o = [ t.x, 0 ], s = [ t.y, 0 ], r = n.ScreenWidth, c = n.ScreenHeight, l = 0;
l = o[0] == r && s[0] > 0 && s[0] < c ? i.y > t.y ? a.CalcAngle(i.x, i.y - 2 * (i.y - t.y), t.x, t.y) : a.CalcAngle(i.x, i.y + 2 * (t.y - i.y), t.x, t.y) : s[0] == c ? i.x > t.x ? a.CalcAngle(i.x - 2 * (i.x - t.x), i.y, t.x, t.y) : a.CalcAngle(i.x + 2 * (t.x - i.x), i.y, t.x, t.y) : 0 == o[0] && s[0] > 0 && s[0] < c ? i.y > t.y ? a.CalcAngle(i.x, i.y - 2 * (i.y - t.y), t.x, t.y) : a.CalcAngle(i.x, i.y + 2 * (t.y - i.y), t.x, t.y) : i.x > t.x ? a.CalcAngle(i.x - 2 * (i.x - t.x), i.y, t.x, t.y) : a.CalcAngle(i.x + 2 * (t.x - i.x), i.y, t.x, t.y);
var h = a.GetTargetPoint(o[0], s[0], l);
o[1] = h.x;
s[1] = h.y;
a.BuildLinear(o, s, 2, e.arrayTrace, e.GetSpeed());
e.SetAngle(l);
e.SetTraceIndex(0, !1);
},
BuildLinear: function(e, t, i, n, o) {
n.length = 0;
if (!(i < 2)) {
if (o <= 0) return 0;
var s = a.CalcDistance(e[i - 1], t[i - 1], e[0], t[0]);
if (s <= 0) return 0;
for (var r = Math.abs(t[i - 1] - t[0]) / s, c = Math.acos(r), l = 0, h = {
x: 0,
y: 0,
angle: 0
}, u = 0; l < s; ) {
var d = {};
d.x = e[0];
d.y = t[0];
d.angle = 1;
u = n.length;
e[i - 1] < e[0] ? d.x = e[0] - Math.sin(c) * (o * u) : d.x = e[0] + Math.sin(c) * (o * u);
t[i - 1] < t[0] ? d.y = t[0] - Math.cos(c) * (o * u) : d.y = t[0] + Math.cos(c) * (o * u);
var m = a.CalcDistance(d.x, d.y, h.x, h.y);
if (0 != m) {
var f = (d.x - h.x) / m;
d.y - h.y >= 0 ? d.angle = Math.acos(f) : d.angle = -Math.acos(f);
} else d.angle = 1;
h.x = d.x;
h.y = d.y;
n.push(d);
l = a.CalcDistance(d.x, d.y, e[0], t[0]);
}
n[n.length - 1].x = e[i - 1];
n[n.length - 1].y = t[i - 1];
}
},
BuildLinear100: function(e, t, i, o, s) {
o.length = 0;
if (!(i < 2)) {
if (s <= 0) return 0;
var r = a.CalcDistance(e[i - 1], t[i - 1], e[0], t[0]);
if (r <= 0) return 0;
for (var c = Math.abs(t[i - 1] - t[0]) / r, l = Math.acos(c), h = 0, u = {
x: 0,
y: 0,
angle: 0
}, d = 0; h < r; ) {
var m = {};
m.x = e[0];
m.y = t[0];
m.angle = 1;
d = o.length;
e[i - 1] < e[0] ? m.x = e[0] - Math.sin(l) * (s * d) : m.x = e[0] + Math.sin(l) * (s * d);
t[i - 1] < t[0] ? m.y = t[0] - Math.cos(l) * (s * d) : m.y = t[0] + Math.cos(l) * (s * d);
var f = a.CalcDistance(m.x, m.y, u.x, u.y);
if (0 != f) {
var p = (m.x - u.x) / f;
m.y - u.y >= 0 ? m.angle = Math.acos(p) : m.angle = -Math.acos(p);
} else m.angle = 1;
u.x = m.x;
u.y = m.y;
var _ = [ 100 * u.x, 100 * u.y, 360 - 180 * u.angle / n.M_PI ];
o.push(_);
h = a.CalcDistance(m.x, m.y, e[0], t[0]);
}
o[o.length - 1].x = e[i - 1];
o[o.length - 1].y = t[i - 1];
}
},
BuildBezierFast: function(e, t, i, n, o) {
n.length = 0;
for (var s = 0, r = 0, c = i - 1, l = o, h = 0; r <= 1; ) {
var u = {
x: 0,
y: 0
};
s = 0;
for (;s <= c; ) {
h = Math.pow(r, s) * Math.pow(1 - r, c - s) * a.Combination(c, s);
u.x += e[s] * h;
u.y += t[s] * h;
++s;
}
var d = 0;
if (n.length > 0) {
var m = n[n.length - 1];
d = a.CalcDistance(m.x, m.y, u.x, u.y);
}
(d >= l || 0 == n.length) && n.push(u);
r += .01;
}
}
};
a.kRotateSpeed = 1.5 * n.M_PI / 180;
a.BuildCircle = function(e, t, i, o) {
for (var s = 2 * n.M_PI / o, r = [], c = {
x: 0,
y: 0,
angle: 0
}, l = 0; l < o; ++l) {
var h = {
x: 0,
y: 0,
angle: 0
};
c.x = e + i * Math.cos(l * s - a.kRotateSpeed);
c.y = t + i * Math.sin(l * s - a.kRotateSpeed);
h.x = e + i * Math.cos(l * s);
h.y = t + i * Math.sin(l * s);
var u = a.CalcDistance(h.x, h.y, c.x, c.y);
if (0 != u) {
var d = (h.x - c.x) / u;
h.y - c.y >= 0 ? h.angle = Math.acos(d) : h.angle = -Math.acos(d);
} else h.angle = n.M_PI_2;
r.push(h);
}
return r;
};
a.GetMidPoint = function(e, t, i, n) {
var a = {};
a.x = (e + i) / 2;
a.y = (t + n) / 2;
return a;
};
t.exports = a;
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_Menu: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7c5f7MD6XdG+bM1dcsJlpYV", "SHLL_Menu");
var n = e("SHLL_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
nodeBingDong: cc.Node,
nodeLaser: cc.Node,
nodeAutoFire: cc.Node,
nodeLeave: cc.Node,
nodeSound: cc.Node,
nodeHelp: cc.Node,
nodeSelect: cc.Node
},
onLoad: function() {
this.bUpdate = !1;
this.fBingDongDelayTime = 0;
},
UpdateProStatus: function(e, t) {
if (t == n.PRO_TYPE_LASER) {
this.nodeLaser.getComponent(cc.Button).interactable = e;
} else {
this.nodeBingDong.getComponent(cc.Button).interactable = e;
this.bUpdate = !1;
}
},
UpdateAutoSelect: function() {
PlaySkeletonAnimation(this.nodeSelect, !0, "animation");
},
SetBingDongDelayTime: function(e) {
this.bUpdate = !0;
this.fBingDongCount = e;
this.fBingDongDelayTime = e;
this.pgr = this.nodeBingDong.getComponent(cc.ProgressBar);
this.btn = this.nodeBingDong.getComponent(cc.Button);
this.btn.enabled = !1;
},
update: function(e) {
if (this.bUpdate) if (this.fBingDongDelayTime > 0) {
this.fBingDongDelayTime -= e;
this.pgr.progress = this.fBingDongDelayTime / this.fBingDongCount;
} else {
this.fBingDongDelayTime = 0;
this.pgr.progress = 0;
this.btn.enabled = !0;
this.bUpdate = !1;
this.pgr = void 0;
this.btn = void 0;
}
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SHLL_UserItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4e8b77lWC9An4/m5z3ctf0R", "SHLL_UserItem");
var n = e("SHLL_CMD_Game");
cc.Class({
extends: cc.Component,
properties: {
labelNickName: cc.Label,
labelGameScore: cc.Label,
labelGameZuan: cc.Label
},
start: function() {},
OnInitInfo: function(e) {
this.SetNickName(e.GetNickNameUtf8());
this.SetGameScore(e.GetUserScore());
},
SetGameScore: function(e, t) {
if (this.labelGameScore) {
if (t > 0) {
this.labelGameScore.node.stopAllActions();
this.labelGameScore.node.runAction(cc.sequence(cc.scaleTo(.1, 1.5, 1.5), cc.scaleTo(.1, 1, 1)));
}
this.labelGameScore.string = OnScoreToString(e, n.SCORE_TAIL_COUNT);
this.lClientScore = e;
}
},
SetUserZuan: function(e) {
this.labelGameZuan && (this.labelGameZuan.string = e);
},
SetNickName: function(e) {
this.labelNickName && (this.labelNickName.string = OnConverString(e, 12));
}
});
cc._RF.pop();
}, {
SHLL_CMD_Game: "SHLL_CMD_Game"
} ],
SceneManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f5291ub0/NNTqToxDbxmlLK", "SceneManager");
window.SceneType = {};
window.SceneType.Scene = "Scene";
window.SceneType.Prefab_Init = "Prefab_Init";
window.SceneType.Prefab_Path = "Prefab_Path";
window.SceneManager_RunScene = function(e, t) {
SceneManager_PushBack(window.SceneType.Scene, e);
};
window.SceneManager_PushBack = function(e, t, i) {
if (e == window.SceneType.Scene) cc.director.loadScene(t, function(e, t) {
if (!e && cc.sys.isNative) {
var n = t;
-1 != n.name.search("GameScene") && (n.autoReleaseAssets = !0);
}
i && null != i && i();
}); else if (e == window.SceneType.Prefab_Init) {
var n = cc.director.getScene().getChildByName("Canvas"), a = cc.instantiate(t);
n.addChild(a);
i && null != i && i(null, a, t);
} else e == window.SceneType.Prefab_Path && cc.loader.loadRes(t, cc.Prefab, function(e, n) {
if (n && !e) {
var a = cc.instantiate(n);
cc.director.getScene().getChildByName("Canvas").addChild(a);
i && null != i && i(e, a, t);
} else {
i && null != i && i(e, n, t);
cc.warn(t + "not found");
}
});
};
window.SceneManager_AddPrefab = function(e, t) {
window.SceneManager_PushBack(e, t, function(e, t) {
e || (t.zIndex = 3);
});
}, window.SceneManager_AddPersistPrefab = function(e, t) {
cc.loader.loadRes(e, cc.Prefab, function(i, n) {
if (n && !i) {
var a = cc.instantiate(n);
cc.game.addPersistRootNode(a);
t && null != t && t(i, a);
} else {
t && null != t && t(i, n);
cc.warn(e + "not found");
}
});
}, window.SceneManager_RemovePersistPrefab = function(e) {
if (e) {
cc.game.removePersistRootNode(e);
e.destroy();
}
}, window.SceneType.fSpeed = .2;
window.SceneType.nMaxOpacity = 255;
window.SceneType.nMinOpacity = 0;
window.SceneType.nMaxScale = 1;
window.SceneType.nMinScale = .5;
window.SceneManager_AlertShow = function(e, t, i) {
var n = e, a = 2 == arguments.length ? t : window.SceneType.fSpeed;
n._ShowCallback = 3 == arguments.length ? i : null;
var o = cc.sequence(cc.spawn(cc.fadeTo(a, window.SceneType.nMaxOpacity), cc.scaleTo(a, window.SceneType.nMaxScale)), cc.callFunc(function(e) {
e._ShowCallback && e._ShowCallback(e);
}));
n.setScale(.5);
n.opacity = 0;
n.runAction(o);
};
window.SceneManager_AlertClose = function(e, t, i) {
var n = e, a = 2 == arguments.length ? t : window.SceneType.fSpeed;
n._CloseCallback = 3 == arguments.length ? i : null;
var o = cc.sequence(cc.spawn(cc.fadeTo(a, window.SceneType.nMinOpacity), cc.scaleTo(a, window.SceneType.nMinScale)), cc.callFunc(function(e) {
e._CloseCallback && e._CloseCallback(e);
}));
n.runAction(o);
};
window.AddXmasPrefab = function(e) {
GetProject().isChristmasSkinOpen && cc.loader.loadRes("GameLobby/Xmas/Prefab/pfXmas", cc.Prefab, function(t, i) {
if (i && !t) {
var n = cc.instantiate(i);
e.addChild(n);
} else cc.warn(szSceneDesc + "not found");
});
};
cc._RF.pop();
}, {} ],
ServerRoom: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "06b65/mgf1BYJnUN/ux9fQu", "ServerRoom");
var n = e("Net"), a = (e("../../Developer/HotUpdate/CUpdateDef").default, e("../../Developer/HotUpdate/CUpdateManager").default);
e("GameDelegate");
e("GameFrameEngine");
window.ServerPingTime = 5;
window.ServerAgainCount = 5;
window.ServerRoom = cc.Class({
extends: window.CSocketDelegate,
statics: {
instance: null
},
ctor: function() {
ServerRoom.instance = this;
this.jsEventDelegate = null;
this.jsGameFrameEngine = null;
this.nLinkAgainCount = 0;
this.fLinkAgainTime = .3;
this.bLinkAgainConnect = !1;
this.cbGameClient = GC_NONE;
this.cbGameStatus = GAME_STATUS_FREE;
this.pGameBufferData = [];
this.stGameServer = null;
this.stServerAttribute = new tagServerAttribute();
this.stUserAttribute = new tagUserAttribute();
this.stPrivateTableInfo = null;
this.stPrivateTableStatusInfo = null;
this.strOperateName = "";
this.wOperateMainCmdID = 0;
this.wOperateSubCmdID = 0;
this.bQuickLogon = 0;
this.wReqTableID = 0;
this.wReqChairID = 0;
this.bCutoverDesk = !1;
this.bTuoGuan = !1;
this.nAddScore = 0;
this.stMapTableStatus = [];
this.stMapPrivateTableInfo = [];
this.nCreateGameCount = 0;
this.tCreateData = null;
this.dwEnterPrivateTableId = 0;
this.wRCKindID = 0;
this.strShareTitle = "";
this.strShareContent = "";
this.dwGroupID = 0;
this.cbUseAgent = 0;
this.dwAgentId = 0;
this.wUserCount = 0;
this.fDelayDataTime = 0;
this.fRecvDataTime = 0;
this.fSendDataTime = 0;
this.bSendDataCheck = !1;
this.fPingDelayTime = window.ServerPingTime;
this.bTouchField = !1;
},
SetKindID: function(e) {
this.stServerAttribute.wKindID = e;
},
GetKindID: function() {
return this.stServerAttribute.wKindID;
},
SetEventDelegate: function(e) {
this.jsEventDelegate = e;
},
SetTouchField: function(e) {
this.bTouchField = e;
},
PerformCreate: function(e, t) {
OnServerRoomLog("-----------------------------ServerRoom.Server.Event.PerformCreate");
this.OnMissionInitSocket(e, t, "ServerRoom", this);
},
PerformClosed: function() {
OnServerRoomLog("-----------------------------ServerRoom.Server.Event.PerformClosed");
this.OnDonedEvent(!0);
return !0;
},
OnMissionClosed: function(e, t) {
this._super(e, t);
this.bLinkAgainConnect = !1;
},
OnMissionOpen: function(e) {
OnServerRoomLog("OnMissionOpen:" + this.name + " result:" + e);
var t = this.GetKindID();
if (GCF_IsGameNew(t)) {
var i = t + "/game";
window.net = new n(i, "game");
window.net.start();
}
var a = "GameScene" + t;
cc.director.preloadScene(a);
this.jsGameFrameEngine = null;
this.SetGameClient(GC_NONE);
this.bLinkAgainConnect = !1;
},
OnMissionRelease: function(e, t) {
if (window.mfConfig.NetworkState != window.YQ_SUB_NETSTATE_NONE) {
ManagerHelp_SetLinkAgainLayer(WAIT_CLOSED);
PlayerManager.DeleteUserItemByAll();
this.bLinkAgainConnect = !1;
if (e != window.GST_NORMAL) if (this.nLinkAgainCount < window.ServerAgainCount && 0 != this.stServerAttribute.port) {
ManagerHelp_SetLinkAgainLayer(WAIT_OPENED);
this.scheduleOnce(this.OnLinkAgainConnect, this.fLinkAgainTime);
} else this.OnLinkAgainFailure(0);
}
},
OnLinkAgainConnect: function() {
OnServerRoomLog("---OnLinkAgainConnect---:" + this.nLinkAgainCount);
if (this.bLinkAgainConnect) return !1;
this.nLinkAgainCount++;
this.bLinkAgainConnect = !0;
this.jsGameFrameEngine && this.jsGameFrameEngine.OnLinkAgainConnect();
var e = ServerData_QueryGameLocalVersion(this.stServerAttribute.wKindID);
this.SendPacketLogonRev(this.szLogin_IP, this.stServerAttribute.port, !0, e);
this.unschedule(this.OnLinkAgainConnect);
},
OnLinkAgainFailure: function(e) {
this.nLinkAgainCount = 0;
this.CloseGameClient();
},
OnMissionSendData: function(e, t, i, n) {
this.OnUpdateDelayDataTime(!0);
this._super(e, t, i, n);
},
SendData: function(e, t, i, n) {
this.OnUpdateDelayDataTime(!0);
this._super(e, t, i, n);
},
SendStruct: function(e, t, i) {
this.OnUpdateDelayDataTime(!0);
this._super(e, t, i);
},
OnSocketRead: function(e, t, i, n) {
this.jsEventDelegate && this.jsEventDelegate.OnReadEventBegan(e, t, i, n);
this.OnMissionRead(e, t, i, n);
this.jsEventDelegate && this.jsEventDelegate.OnReadEventEnded(e, t, i, n);
},
OnMissionRead: function(e, t, i, n) {
OnServerRoomLog("ServerRoom.Read:wMainCmdID:" + e + ",wSubCmdID:" + t + ",wDataSize:" + n);
this.OnUpdateDelayDataTime(!1);
switch (e) {
case MDM_GR_LOGON:
this.OnSocketMainLogon(t, i, n);
break;

case MDM_GR_CONFIG:
this.OnSocketMainConfig(t, i, n);
break;

case MDM_GR_USER:
this.OnSocketMainUser(t, i, n);
break;

case MDM_GR_STATUS:
this.OnSocketMainStatus(t, i, n);
break;

case MDM_GR_INSURE:
this.OnSocketMainInsure(t, i, n);
break;

case MDM_GR_MANAGE:
this.OnSocketMainManager(t, i, n);
break;

case MDM_GR_MATCH:
this.OnSocketMainMatch(t, i, n);
break;

case MDM_GF_FRAME:
this.OnSocketMainFrame(e, t, i, n);
break;

case MDM_GF_GAME:
this.OnSocketMainGame(e, t, i, n);
break;

case MDM_GAMETABLE_TASK:
this.OnSocketMainGameTableTask(e, t, i, n);
break;

case MDM_YQMATCH:
this.OnSocketMainYQGameMatch(e, t, i, n);
break;

case MDM_CONTINUE_WIN_TASK:
this.OnSocketMainContinueWinTask(e, t, i, n);
break;

case MDM_USER_PACK:
this.OnSocketMainUserPack(e, t, i, n);
break;

case MDM_GENERIC_MATCH_FRAMEWORK:
this.OnSocketMainYQGameCompete(e, t, i, n);
break;

case MDM_CM_SYSTEM:
this.OnSocketMainSystem(t, i, n);
}
return !0;
},
OnMissionUpdate: function(e) {
if (this.pGameBufferData.length > 0 && this.IsGameClient() && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame) {
var t = this.pGameBufferData.shift(), i = t.wMainCmdID, n = t.wSubCmdID, a = t.pData, o = t.wDataSize, s = PlayerManager.GetMeUserItem();
if (i == MDM_GR_USER) {
var r = a, c = PlayerManager.GetUserItemByUserID(r);
n == SUB_GR_USER_ENTER && this.jsGameFrameEngine.OnEventUserEnter(c, c.GetUserStatus() == US_LOOKON);
n == SUB_GR_USER_STATUS && c && this.jsGameFrameEngine.OnEventUserStatus(c, c.GetUserStatus(), c.GetUserStatus() == US_LOOKON);
} else if (i == MDM_GF_FRAME && n == SUB_GF_GAME_SCENE) {
this.jsGameFrameEngine.OnEventGameServerMessage(i, n, a, o);
this.jsGameFrameEngine.OnEventSceneMessage(this.cbGameStatus, s.GetUserStatus() == US_LOOKON, a, o);
} else if (i == MDM_GF_FRAME && n == SUB_GF_DEFINE_CUSTOM_GAME_RULE) this.jsGameFrameEngine.OnEventGameServerMessage(i, n, a, o); else if (i == MDM_GF_FRAME && n == SUB_GF_PRIVATE_TABLE_STATUS) this.jsGameFrameEngine.OnEventGameServerMessage(i, n, a, o); else if (i == MDM_GF_FRAME && n == SUB_GF_PRIVATE_TABLE_STATUS_DATA) this.jsGameFrameEngine.OnEventGameServerMessage(i, n, a, o); else if (i == MDM_GF_FRAME && n == SUB_GF_TOP_USER) this.jsGameFrameEngine.OnEventGameServerMessage(i, n, a, o); else if (i == MDM_GF_GAME) this.jsGameFrameEngine.OnEventGameMessage(n, a, o); else if (i == MDM_GR_STATUS) if (n == SUB_GR_TABLE_STATUS) {
var l = a;
this.jsGameFrameEngine.OnUpdateTableStatus(l);
} else if (n == SUB_GR_PRIVATE_TABLE_INFO) {
var h = a;
this.jsGameFrameEngine.OnFramePrivateTableInfo(h);
} else if (n == SUB_GR_PRIVATE_TABLE_STATUS_INFO) {
var u = a;
this.jsGameFrameEngine.OnFramePrivateTableInfo(u.privateTableInfo);
this.jsGameFrameEngine.OnFramePrivateTableSceneStatus(u);
}
this.jsEventDelegate && this.jsEventDelegate.OnReadEventEnded(i, n, a, o);
}
if (this.fPingDelayTime > 0) this.fPingDelayTime -= e; else {
this.fPingDelayTime = window.ServerPingTime;
this.SendPacketGFSocketPing();
}
},
OnSocketMainLogon: function(e, t, i) {
switch (e) {
case SUB_GR_LOGON_SUCCESS:
return this.OnSocketSubLogonSuccess(t, i);

case SUB_GR_LOGON_FINISH:
return this.OnSocketSubLogonFinish(t, i);

case SUB_GR_LOGON_FAILURE_NEW:
return this.OnSocketSubLogonFailureNew(t, i);

case SUB_GR_UPDATE_NOTIFY:
return this.OnSocketSubUpdateNotify(t, i);
}
return !0;
},
OnSocketSubLogonFinish: function(e, t) {
cc.log("zzzzz 登录完成 OnSocketSubLogonFinish begin");
this.nLinkAgainCount = 0;
ManagerHelp_SetLinkAgainLayer(WAIT_CLOSED);
var i = PlayerManager.GetMeUserItem();
this.IsGameClient();
if (ServerRule.IsAllowAvertCheatMode(this.stServerAttribute.dwServerRule) && !this.IsGameClient()) {
cc.log("zzzzz 登录完成 OnSocketSubLogonFinish begin 222 ");
i.SetTableID(0);
i.SetChairID(0);
this.StartGameClient();
this.SetGameClient(GC_WAIT);
return !0;
}
if (i.GetTableID() != INVALID_TABLE) {
if (i.GetTableID() != INVALID_CHAIR && !this.IsGameClient()) {
cc.log("zzzzz 登录完成 OnSocketSubLogonFinish 启动游戏 begin");
this.StartGameClient();
return !0;
}
if (i.GetTableID() != INVALID_TABLE) return !0;
cc.warn("ServerRoom.TableID.is.INVALID_TABLE & AndClosed Socket ComeBack Lobby");
this.CloseGameClient(!0);
} else cc.log("zzzzz 登录完成 OnSocketSubLogonFinish begin 333 ");
},
OnSocketSubLogonSuccess: function(e, t) {
1 == this.bTouchField && this.SetTouchField(!1);
YQYAssertAlertStructSizeByLocalMultiple(CMD_GR_LogonSuccess, t, "CMD_GR_LogonSuccess");
var i = new CMD_GR_LogonSuccess();
i.init(e);
var n = PlayerManager.GetMeUserItem();
this.stUserAttribute.dwUserRight = i.dwUserRight;
this.stUserAttribute.dwMasterRight = i.dwMasterRight;
this.stUserAttribute.dwUserID = n.GetUserID();
n.SetMasterRight(i.dwMasterRight);
n.SetUserRight(i.dwUserRight);
return !0;
},
OnSocketSubUpdateNotify: function(e, t) {
var i = new CMD_MB_UpdateNotify();
i.init(e);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
i.cbUpdateType == UPDATE_GAME || i.cbUpdateType == UPDATE_PLAZA ? ManagerHelp_SetSystemAlert("The current version is too low, please return to the login screen to update to the latest version！", function() {
ManagerHelp_SetLayerEvent("ClearAccounts");
}) : i.cbUpdateType == UPDATE_PACKAGE && ManagerHelp_SetSystemAlert("The current version is too low, You need to download the latest version！", function() {
a.getInstance().resetCachePath(0);
var e = GetProject().szDownloadUrl;
cc.sys.openURL(e);
});
this.OnMissionClosed(window.GST_NORMAL);
return !0;
},
OnSocketSubLogonFailureNew: function(e, t) {
var i = new CMD_GR_LogonFailureNew();
i.init(e);
if (i.nErrorCode == LEAVE_SERVER_FULL || LEAVE_SYSTEM == i.nErrorCode) {
OnServerRoomLog("---登录失败，进入下一个房间");
var n = ServerData_GetGameServer(i.wServerID);
n.dwOnLineCount = n.dwFullCount;
var a = ServerData_GetGameServerMaxOnFieldID(n.wKindID, n.wFieldID);
if (null === a) {
ManagerHelp_SetSystemAlert("No game server is available, please try logging in again.");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else {
var o = PlayerManager.GetMeUserItem();
if (a.lMinEnterScore > o.GetUserScore()) {
ManagerHelp_SetSystemAlert("Not enough gold, at least " + OnIntScore(a.lMinEnterScore) + " gold to join the game");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else {
GetServerRoom().SetOperateName("QuickGame");
GetServerRoom().SetGameServer(a);
GetServerRoom().OnLogonGameEvent(a);
}
}
} else {
this.OnMissionClosed(window.GST_NORMAL);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
if (0 != i.wKindID && 0 != i.wServerID) {
var s = this;
ManagerHelp_SetSystemAlert("You have an ongoing game, whether to return to that game？", function(e, t) {
if (t == window.YQ_SYS_OK) {
var n = ServerData_QueryGameServer(i.wServerID);
if (n) {
s.SetOperateName("");
s.SetGameServer(n);
GetServerRoom().OnLogonGameEvent(n);
s.SetTouchField(!1);
OnServerRoomLog("sr.强制重连游戏======:");
}
}
}, !0);
return;
}
ManagerHelp_SetSystemAlert(ToUtf8(i.szDescribeString), function() {
GetServerRoom().bTouchField = !0;
GetServerRoom().CloseGameClient();
});
}
return !0;
},
OnSocketMainConfig: function(e, t, i) {
switch (e) {
case SUB_GR_CONFIG_COLUMN:
return !0;

case SUB_GR_CONFIG_SERVER:
YQYAssertAlertStructSizeByEqual(CMD_GR_ConfigServer, i, "CMD_GR_ConfigServer");
var n = new CMD_GR_ConfigServer();
n.init(t);
this.stServerAttribute.wTableCount = n.wTableCount;
this.stServerAttribute.wChairCount = n.wChairCount;
this.stServerAttribute.dwServerRule = n.dwServerRule;
return !0;

case SUB_GR_CONFIG_PROPERTY:
case SUB_GR_CONFIG_FINISH:
case SUB_GR_CONFIG_USER_RIGHT:
case SUB_GR_CONFIG_TABLE:
return !0;
}
return !0;
},
OnSocketMainUser: function(e, t, i) {
if (this.jsGameFrameEngine && 1 == this.jsGameFrameEngine.OnEventGameServerMessage(MDM_GR_USER, e, t, i)) return !0;
switch (e) {
case SUB_GR_USER_ENTER:
return this.OnSocketSubUserEnter(t, i);

case SUB_GR_USER_SCORE:
return this.OnSocketSubUserScore(t, i);

case SUB_GR_USER_STATUS:
return this.OnSocketSubUserStatus(t, i);

case SUB_GR_REQUEST_FAILURE:
return this.OnSocketSubRequestFailure(t, i);

case SUB_GR_USER_CHAT:
return this.OnSocketSubGRUserChat(t, i);

case SUB_GR_USER_EXPRESSION:
return this.OnSocketSubGRExpression(t, i);

case SUB_GR_WISPER_CHAT:
return this.OnSocketSubWisperUserChat(t, i);

case SUB_GR_WISPER_EXPRESSION:
return this.OnSocketSubWisperExpression(t, i);

case SUB_GR_PROPERTY_SUCCESS:
return this.OnSocketSubPropertySuccess(t, i);

case SUB_GR_PROPERTY_FAILURE:
return this.OnSocketSubPropertyFailure(t, i);

case SUB_GR_PROPERTY_MESSAGE:
return this.OnSocketPropertyMessage(t, i);

case SUB_GR_PROPERTY_EFFECT:
return this.OnSocketSubPropertyEffect(t, i);

case SUB_GR_PROPERTY_TRUMPET:
return this.OnSocketPropertyTrumpet(t, i);

case SUB_GR_USER_INVITE:
return this.OnSocketSubUserInvite(t, i);

case SUB_GR_USER_WAIT_DISTRIBUTE:
return this.OnSocketSubWaitDistribute(t, i);

case SUB_GR_USER_AWARD:
return this.OnSocketSubUserAward(t, i);

case SUB_GR_USER_GOLD:
return this.OnSocketSubGoldChange(t, i);

case SUB_GR_GIVE_PROMPT:
return this.OnSocketSubGivePrompt(t, i);

case SUB_GR_GAME_CUSTOM_DATA:
return this.OnSocketSubGameCustomData(t, i);

case SUB_GR_USER_CREATE_PRIVATE_TABLE:
return this.OnSocketSubCreatePrivateTable(t, i);

case SUB_GR_USER_ENTER_PRIVATE_TABLE:
return this.OnSocketSubEnterPrivateTable(t, i);

case SUB_GR_USER_DISMISS_PRIVATE_TABLE:
return this.OnSocketSubDissmissPrivateTable(t, i);
}
return !0;
},
OnSocketSubUserEnter: function(e, t) {
var i = sizeof(_UserInfoHead);
YQYAssertAlertStructSizeByLocalMin(_UserInfoHead, t, "ErrorSize.ServerRoom.OnSocketSubUserEnter");
var n = new _UserInfoHead();
n.init(e);
if (n.cbUserStatus == US_LOOKON) return !0;
var a = PlayerManager.GetUserItemByUserID(n.dwUserID), o = PlayerManager.GetMeUserItem(), s = this.stGameServer, r = ServerData_GetGameField(s.wFieldID);
if (GAME_JOINID_LIANXI == r.wJoinID && !window.mfConfig.bBackupScore) {
window.mfConfig.bBackupScore = !0;
o.pGlobalData.lUserScore_Backup = o.pGlobalData.lUserScore;
}
a || (a = PlayerManager.SetUserItemByUserID(n.dwUserID));
a.pGlobalData.cbUserStatus = n.cbUserStatus;
a.pGlobalData.cbFaceID = n.cbFaceID;
a.pGlobalData.cbFrameID = n.cbFrameID;
a.pGlobalData.cbGender = n.cbGender;
a.pGlobalData.lUserScore = n.lScore;
a.pGlobalData.dwUserID = n.dwUserID;
a.pGlobalData.wChairID = n.wChairID;
a.pGlobalData.wTableID = n.wTableID;
a.pGlobalData.dwGameID = n.dwGameID;
a.pGlobalData.dwExperience = n.dwExperience;
var c = 255 & n.dwIp, l = n.dwIp >> 8 & 255, h = n.dwIp >> 16 & 255, u = n.dwIp >> 24 & 255;
a.pGlobalData.ip = c + "." + l + "." + h + "." + u;
a.pGlobalData.cbMemberOrder = n.cbMemberOrder;
a.pGlobalData.dwMemberExp = n.dwMemberExp;
a.pGlobalData.cbDeviceType = n.cbDeviceType;
var d = a.GetUserID() == o.GetUserID();
if (d) {
this.stUserAttribute.dwUserID = a.GetUserID();
this.stUserAttribute.wTableID = a.GetTableID();
this.stUserAttribute.wChairID = a.GetChairID();
}
for (var m = i, f = sizeof(tagDataDescribe); m < t; ) {
var p = RecvPacketHelper_GetPacket(e, t, m);
m += f + p.wDataSize;
if (p.wDataDescribe == DTP_NULL) break;
switch (p.wDataDescribe) {
case DTP_GR_NICK_NAME:
if (d || GCF_IsGameKind100(this.GetKindID())) {
var _ = Value_GetArrayData(p.cbDataBuffer, "szNickName", LEN_NICKNAME, 0);
SetArray(a.pGlobalData.szNickName, _);
a.pGlobalData.strUtf8NickName = ToUtf8(_);
} else a.pGlobalData.strUtf8NickName = "Player";
break;

case DTP_GR_USER_MEDAL:
a.pGlobalData.lUserMedal = Value_GetNumber(p.cbDataBuffer, "lUserMedal", 0);
break;

case DTP_GR_USER_LOVELINESS:
a.pGlobalData.dwLoveLiness = Value_GetNumber(p.cbDataBuffer, "dwLoveLiness", 0);
}
}
if (n.wTableID == o.GetTableID() && n.wTableID != INVALID_TABLE) {
0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame ? this.jsGameFrameEngine.OnEventUserEnter(a, !1) : this.pGameBufferData.push(GameBufferData(MDM_GR_USER, SUB_GR_USER_ENTER, n.dwUserID, t, "pValue"));
this.IsGameClient() || this.StartGameClient();
}
OnServerRoomLog("ServerRoom.UserEnter:UserID:" + a.GetUserID() + ",TableID:" + a.GetTableID() + ",ChairID:" + a.GetChairID() + ",UserStatus:" + n.cbUserStatus + ",NickName:" + ToUtf8(a.GetNickName()) + ",UserScore:" + a.GetUserScore());
return !0;
},
OnSocketSubUserScore: function(e, t) {
sizeof(CMD_GR_MobileUserScore);
YQYAssertAlertStructSizeByEqual(CMD_GR_MobileUserScore, t, "CMD_GR_MobileUserScore");
var i = new CMD_GR_MobileUserScore();
i.init(e);
var n = PlayerManager.GetUserItemByUserID(i.dwUserID), a = PlayerManager.GetMeUserItem();
if (n) {
n.pGlobalData.lUserScore = i.UserScore.lScore;
n.pGlobalData.dwWinCount = i.UserScore.dwWinCount;
n.pGlobalData.dwLostCount = i.UserScore.dwLostCount;
n.pGlobalData.dwDrawCount = i.UserScore.dwDrawCount;
n.pGlobalData.dwFleeCount = i.UserScore.dwFleeCount;
n.pGlobalData.dwExperience = i.UserScore.dwExperience;
if (this.jsGameFrameEngine && a.GetTableID() == n.GetTableID() && n.GetChairID() != INVALID_CHAIR) {
var o = this.jsGameFrameEngine.GetClientUserItem(n.GetChairID());
if (o && o.GetUserID() == n.GetUserID()) {
-1 == this.jsGameFrameEngine.OnEventUserScore(n, n.GetUserStatus() == US_LOOKON) && cc.warn("WarningOverLoaded.GameEngine.OnEventUserScore");
}
OnServerRoomLog("ServerRoom.UserScore,TableID:" + n.GetTableID() + ",ChairID:" + n.GetChairID() + ",UserID:" + n.GetUserID() + ",NickName:" + ToUtf8(n.GetUserScore()));
}
}
return !0;
},
OnSocketSubUserStatus: function(e, t) {
sizeof(CMD_GR_UserStatus);
YQYAssertAlertStructSizeByEqual(CMD_GR_UserStatus, t, "CMD_GR_UserStatus");
var i = new CMD_GR_UserStatus();
i.init(e);
var n = i.dwUserID, a = i.UserStatus.cbUserStatus, o = i.UserStatus.wChairID, s = i.UserStatus.wTableID, r = PlayerManager.GetUserItemByUserID(n);
if (!r) return s == INVALID_WORD || this.SendPacketRequestUserInfo(n, s);
var c = PlayerManager.GetMeUserItem();
if (n == c.GetUserID()) {
this.stUserAttribute.dwUserID = c.GetUserID();
this.stUserAttribute.wTableID = c.GetTableID();
this.stUserAttribute.wChairID = c.GetChairID();
}
cc.log("zzzzz 更新用户状态 wTableID =" + s);
r.SetTableID(s);
r.SetChairID(o);
r.SetUserStatus(a);
OnServerRoomLog("ServerRoom.UserStatus:" + a + ".Name:" + ToUtf8(r.GetNickName()) + ".TableID:" + s + ".ChairID:" + o);
if (!this.bCutoverDesk || s != INVALID_TABLE) {
if (0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame) {
-1 == this.jsGameFrameEngine.OnEventUserStatus(r, a, a == US_LOOKON) && cc.warn(!1, "WarningOverLoaded.GameEngine.OnEventUserStatus");
} else this.pGameBufferData.push(GameBufferData(MDM_GR_USER, SUB_GR_USER_STATUS, n, t, "pValue"));
if (n == c.GetUserID()) {
!this.IsGameClient() || s != INVALID_TABLE && a != US_OFFLINE || this.CloseGameClient();
this.IsGameClient() || s == INVALID_TABLE || a == US_OFFLINE || this.StartGameClient();
}
return !0;
}
this.bCutoverDesk = !1;
PlayerManager.DeleteUserItemByAll();
this.jsGameFrameEngine.ResetFrameEngine();
},
OnSocketSubRequestFailure: function(e, t) {
var i = new CMD_GR_RequestFailure();
i.init(e);
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert(ToUtf8(i.szDescribeString));
this.OnMissionClosed(window.GST_NORMAL);
},
OnSocketSubWaitDistribute: function(e, t) {
OnServerRoomLog("OnSocketSubWaitDistribute");
var i = new CMD_GR_WaitDistribute_Req();
i.init(e);
if (i.dwErrorCode == EM_ErrorCode.EC_LACK_OF_SCORE) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("Gold is insufficient, please recharge first and then play the game.", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwErrorCode == EM_ErrorCode.EC_TOO_MUCH_SCORE) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("Gold has exceeded the maximum limit for this game. Please choose a higher game to play.", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
}
return !0;
},
OnSocketSubGameCustomData: function(e, t) {
return !0;
},
OnSocketSubCreatePrivateTable: function(e, t) {
var i = new CMD_GR_UserCreatePrivateTable_Res();
i.init(e);
var n = this;
i.dwResult != UCPT_RET_OK && ManagerHelp_RemoveAllAlert();
this.IsOperateName("ReplaceCreateRoom") && this.SetOperateName("");
if (i.dwResult != UCPT_RET_OK) if (i.dwResult == UCPT_RET_AGENT_OPEN_OK) {
this.dwEnterPrivateTableId = i.dwPrivateTableId;
this.PerformClosed();
var a = PlayerManager.GetMeUserItem();
if (!a) return;
var o = a.GetGameID(), s = this.dwGroupID, r = "1;" + this.strShareTitle + ";" + this.dwEnterPrivateTableId + ";来不及解释了,快上车!  " + this.strShareContent + ";共" + this.tCreateData.dwPlayCount + "局;" + this.wRCKindID, c = [];
memset(c, 0, LEN_CHAT_MESSAGE);
SetArrayFormUtf8(c, r);
GetMissionService().OnSendChatMessageReq(o, s, c);
ManagerHelp_SetSystemLabel("开房成功!");
n.wRCKindID = 0;
n.strShareTitle = "";
n.strShareContent = "";
n.dwGroupID = 0;
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else if (i.dwResult == UCPT_RET_OWNER_INFO_ERROR) {
ManagerHelp_SetSystemAlert("房主信息不匹配!", this.CloseGameClient.bind(this));
this.IsGameClient() || this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_NEED_MORE_ROOM_CARD) {
this.OnMissionClosed(window.GST_NORMAL);
1 != this.cbUseAgent ? ManagerHelp_SetSystemAlert("房卡不足，请前往商城购买! 或每日首次分享朋友圈可获得10房卡，立刻前往分享？", function(e, t) {
if (0 == t) {
var i = PlayerManager.GetMeUserItem(), a = i.GetGameID(), o = i.GetNickNameUtf8() + "(ID:" + a + "),";
window.mfConfig.SendWXShare(window.YQ_SUB_WXSHARE_SHAREWEBSPACE, o, "(每日首次分享即可免费获得30房卡)");
}
n.CloseGameClient();
}, !0) : 1 == this.cbUseAgent && ManagerHelp_SetSystemAlert("代理房卡不足，请联系代理补充房卡！", this.CloseGameClient.bind(this));
} else if (i.dwResult == UCPT_RET_NOT_ENABLE_PRIVATE_TABLE) {
ManagerHelp_SetSystemAlert("当前房间不允许创建私有桌子！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_ROOM_NOT_FIND) {
ManagerHelp_SetSystemAlert("找不到该房间，请检查房间号是否正确！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_ROOM_FULL) {
ManagerHelp_SetSystemAlert("房间已满，请稍后再试！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_NOT_MORE_TABLE) {
ManagerHelp_SetSystemAlert("当前服务器人数已满，请稍后再试！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_AGENT_ERROR) {
ManagerHelp_SetSystemAlert("代理号不存在！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_AGENT_UNAUTHORIZED) {
ManagerHelp_SetSystemAlert("代理未授权，请联系代理获取授权！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_ENABLE_CREATE) {
ManagerHelp_SetSystemAlert("游戏维护中，禁止创建房间！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_SCORE_NO_ENOUGH) {
ManagerHelp_SetSystemAlert("金币过低，不允许开房，请补充金币！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_ERROR_ROOM) {
ManagerHelp_SetSystemAlert("参数错误，请检查创建参数!", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_CREATER_NEED_MORE_ROOM_CARD) {
ManagerHelp_SetSystemAlert("无法加入，房主房卡不足!", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_AGENT_OPEN_ERROR) {
ManagerHelp_SetSystemAlert("代开错误不存在的群id!", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_AGENT_OPEN_ENABLE) {
ManagerHelp_SetSystemAlert("非群主禁止创房!");
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_AGENT_NEED_MORE_ROOM_CARD) {
ManagerHelp_SetSystemAlert("代理房卡不足!");
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwResult == UCPT_RET_GROUP_OWNER_NEED_MORE_ROOM_CARD) {
ManagerHelp_SetSystemAlert("群主房卡不足!");
this.OnMissionClosed(window.GST_NORMAL);
} else {
ManagerHelp_SetSystemAlert("创建异常，请联系客服，错误代码:" + i.dwResult, this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (this.SendPacketReCreatePrivateTable(!0)) {
for (var l = this.tCreateData.aryTargetUserId, h = 0; h < l.length; h++) GetMissionService().OnGameInviteFriendReq(l[h], this.stServerAttribute.wKindID, i.dwPrivateTableId);
this.tCreateData.aryTargetUserId.length = 0;
}
},
SendEnterPrivateTable: function(e) {
MS_OnSetLocalData({}, 0, "CreateData");
this.tCreateData = null;
var t = new CMD_GR_UserEnterPrivateTable_Req();
t.dwPrivateTableId = e;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_ENTER_PRIVATE_TABLE, t.GetDataBytes(), t.GetDataSize());
return !0;
},
OnSocketSubEnterPrivateTable: function(e, t) {
var i = new CMD_GR_UserEnterPrivateTable_Res();
i.init(e);
if (i.dwRet == UCPT_RET_ROOM_NOT_FIND) {
if (!this.IsGameClient()) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("找不到该房间，请检查房间号是否正确！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
}
} else if (i.dwRet == UCPT_RET_GAME_STARTED) {
if (!this.IsGameClient()) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("该房间已开始，无法加入！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
}
} else if (i.dwRet == UCPT_RET_ROOM_FULL) {
if (!this.IsGameClient()) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("房间人数已满，请稍后再试！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
}
} else if (i.dwRet == UCPT_RET_SCORE_NO_ENOUGH) {
ManagerHelp_RemoveAllAlert();
ManagerHelp_SetSystemAlert("金币不足，请先充值金币", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
} else if (i.dwRet == UCPT_RET_GROUP_ENABLE_OTHER_JOIN) {
ManagerHelp_SetSystemAlert("该房间只允许俱乐部成员加入！", this.CloseGameClient.bind(this));
this.OnMissionClosed(window.GST_NORMAL);
}
return !0;
},
OnSocketSubDissmissPrivateTable: function(e, t) {
var i = new CMD_GR_UserDismissPrivateTable_Res();
i.GetDataSize();
YQYAssertAlertStructSizeByEqual(CMD_GR_UserDismissPrivateTable_Res, t, "CMD_GR_UserDismissPrivateTable_Res");
i.init(e);
this.IsGameClient() && this.jsGameFrameEngine && this.jsGameFrameEngine.OnFramePrivateTableDismissRoteStatus(i);
},
OnSocketMainStatus: function(e, t, i) {
switch (e) {
case SUB_GR_TABLE_INFO:
var n = new CMD_GR_TableInfo();
n.init(t);
for (var a = 0; a < n.wTableCount; ++a) {
var o = new _TableStatus();
o.cbTableLock = n.TableStatusArray[a].cbTableLock;
o.cbPlayStatus = n.TableStatusArray[a].cbPlayStatus;
AH_SetItemByKey(this.stMapTableStatus, a, o);
}
return !0;

case SUB_GR_TABLE_STATUS:
var s = new CMD_GR_TableStatus();
s.init(t);
var r = AH_GetItemByKey(this.stMapTableStatus, s.wTableID);
if (r) {
r.cbTableLock = s.TableStatus.cbTableLock;
r.cbPlayStatus = s.TableStatus.cbPlayStatus;
}
this.stUserAttribute.wTableID == s.wTableID && (0 == this.pGameBufferData.length && this.IsGameClient() && this.jsGameFrameEngine ? this.jsGameFrameEngine.OnUpdateTableStatus(s.TableStatus) : this.pGameBufferData.push(GameBufferData(MDM_GR_STATUS, SUB_GR_TABLE_STATUS, s, i, "pObject")));
return !0;

case SUB_GR_PRIVATE_TABLE_INFO:
var c = new tagPrivateTableInfo();
c.init(t);
AH_GetItemByKey(this.stMapPrivateTableInfo, c.wTableId);
AH_SetItemByKey(this.stMapPrivateTableInfo, c.wTableId, c);
this.stPrivateTableInfo = c;
this.stUserAttribute.wTableID == c.wTableId && (0 == this.pGameBufferData.length && this.IsGameClient() && this.jsGameFrameEngine ? this.jsGameFrameEngine.OnFramePrivateTableInfo(c) : this.pGameBufferData.push(GameBufferData(MDM_GR_STATUS, SUB_GR_PRIVATE_TABLE_INFO, c, i, "pObject")));
return !0;

case SUB_GR_PRIVATE_TABLE_STATUS_INFO:
var l = new CMD_GR_PrivateTableStatusInfo();
l.init(t);
this.stPrivateTableStatusInfo = l;
this.stPrivateTableInfo = l.privateTableInfo;
if (this.stUserAttribute.wTableID == l.privateTableInfo.wTableId) if (0 == this.pGameBufferData.length && this.IsGameClient() && this.jsGameFrameEngine) {
this.jsGameFrameEngine.OnFramePrivateTableInfo(this.stPrivateTableInfo);
this.jsGameFrameEngine.OnFramePrivateTableSceneStatus(this.stPrivateTableStatusInfo);
} else this.pGameBufferData.push(GameBufferData(MDM_GR_STATUS, SUB_GR_PRIVATE_TABLE_STATUS_INFO, l, i, "pObject"));
return !0;
}
return !0;
},
OnSocketMainInsure: function(e, t, i) {
return !0;
},
OnSocketMainManager: function(e, t, i) {
return !0;
},
OnSocketMainMatch: function(e, t, i) {
return !0;
},
OnSocketMainFrame: function(e, t, i, n) {
if (this.jsGameFrameEngine && 1 == this.jsGameFrameEngine.OnEventGameServerMessage(e, t, i, n)) return !0;
switch (t) {
case SUB_GF_TABLE_OWNER_CHANGE:
return !0;

case SUB_GF_PRIVATE_TABLE_STATUS:
this.IsGameClient() && (0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame ? this.jsGameFrameEngine.OnEventGameServerMessage(e, t, i, n) : this.pGameBufferData.push(GameBufferData(MDM_GF_FRAME, SUB_GF_PRIVATE_TABLE_STATUS, i, n, "pObject")));
return !0;

case SUB_GF_PRIVATE_TABLE_STATUS_DATA:
this.IsGameClient() && (0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame ? this.jsGameFrameEngine.OnEventGameServerMessage(e, t, i, n) : this.pGameBufferData.push(GameBufferData(MDM_GF_FRAME, SUB_GF_PRIVATE_TABLE_STATUS_DATA, i, n, "pData")));
return !0;

case SUB_GF_PRIVATE_TABLE_END:
return !0;

case SUB_GF_USER_CHAT:
return this.OnSocketSubGFUserChat(i, n);

case SUB_GF_USER_EXPRESSION:
return this.OnSocketSubGFExpression(i, n);

case SUB_GF_BUY_PROP_FAILED:
return this.OnSocketSubGFPropertyFailure(i, n);

case SUB_GF_BUY_PRESENT_SUCCESS:
return this.OnSocketSubGFPropertySuccess(i, n);

case SUB_GF_GAME_STATUS:
return this.OnSocketSubGFGameStatus(i, n);

case SUB_GF_GAME_SCENE:
return this.OnSocketSubGFGameScene(i, n);

case SUB_GF_LOOKON_STATUS:
return this.OnSocketSubGFLookonStatus(i, n);

case SUB_GF_TOP_USER:
0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame ? this.jsGameFrameEngine.OnEventGameServerMessage(e, t, i, n) : this.pGameBufferData.push(GameBufferData(MDM_GF_FRAME, SUB_GF_TOP_USER, i, n, "pObject"));
return !0;

case SUB_GF_SYSTEM_MESSAGE:
return this.OnSocketSubGFSystemMessage(i, n);

case SUB_GF_ACTION_MESSAGE:
return this.OnSocketSubGFActionMessage(i, n);

case SUB_GF_USER_READY:
return !0;

case SUB_GF_SOCKET_PING:
this.OnUpdateDelayDataTime(!1);
return !0;

case SUB_GF_DEFINE_CUSTOM_GAME_RULE:
0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame ? this.jsGameFrameEngine.OnEventGameServerMessage(e, t, i, n) : this.pGameBufferData.push(GameBufferData(MDM_GF_FRAME, SUB_GF_DEFINE_CUSTOM_GAME_RULE, i, n, "pObject"));
return !0;
}
},
OnUpdateDelayDataTime: function(e) {
if (1 == e) {
this.fSendDataTime = Date.now();
this.bSendDataCheck = !0;
this.fPingDelayTime = window.ServerPingTime;
} else {
this.fRecvDataTime = Date.now();
this.fDelayDataTime = this.fRecvDataTime - this.fSendDataTime;
this.fSendDataTime = this.fRecvDataTime;
this.fPingDelayTime = window.ServerPingTime;
if (this.bSendDataCheck) {
this.bSendDataCheck = !1;
this.jsGameFrameEngine && this.jsGameFrameEngine.OnEngineMsUpdate(this.fDelayDataTime);
}
}
},
OnSocketSubGFUserChat: function(e, t) {
this.jsGameFrameEngine && this.jsGameFrameEngine.OnEventUserChat(e, t);
},
OnSocketSubGFExpression: function(e, t) {
this.jsGameFrameEngine && this.jsGameFrameEngine.OnEventUserImage(e, t);
},
OnSocketSubGFGameStatus: function(e, t) {
sizeof(CMD_GF_GameStatus);
YQYAssertAlertStructSizeByEqual(CMD_GF_GameStatus, t, "CMD_GF_GameStatus");
var i = new CMD_GF_GameStatus();
i.init(e);
this.cbGameStatus = i.cbGameStatus;
OnServerRoomLog("CServerRoom.OnSocketSubGFGameStatus:100.100." + this.cbGameStatus);
return !0;
},
OnSocketSubGFGameScene: function(e, t) {
OnServerRoomLog("CServerRoom.OnSocketSubGFGameScene:100.101." + this.cbGameStatus);
if (0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame) {
var i = PlayerManager.GetMeUserItem();
this.jsGameFrameEngine.OnEventSceneMessage(this.cbGameStatus, i.GetUserStatus() == US_LOOKON, e, t);
} else this.pGameBufferData.push(GameBufferData(MDM_GF_FRAME, SUB_GF_GAME_SCENE, e, t, "pData"));
},
OnSocketSubGFLookonStatus: function(e, t) {
return !0;
},
OnSocketSubGFSystemMessage: function(e, t) {
var i = new CMD_CM_SystemMessage();
i.init(e);
if (i.wType & SMT_CLOSE_ROOM || i.wType & SMT_CLOSE_GAME || i.wType & SMT_CLOSE_LINK) {
this.OnMissionClosed(window.GST_NORMAL);
i.wLength > 2 && (GetMissionService().OnGetLogonStatus() || ManagerHelp_SetSystemAlert(ToUtf8(i.szString), function(e) {
GetServerRoom().CloseGameClient();
}));
return !0;
}
if (i.wType & SMT_EJECT) {
ManagerHelp_SetSystemAlert(ToUtf8(i.szString));
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return !0;
}
if (i.wType & SMT_CHAT) {
ManagerHelp_SetSystemLabel(ToUtf8(i.szString));
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return !0;
}
return i.wType, SMT_TABLE_ROLL, !0;
},
OnSocketSubGFActionMessage: function(e, t) {
return !0;
},
OnSocketMainGame: function(e, t, i, n) {
if (0 == this.pGameBufferData.length && this.jsGameFrameEngine && this.jsGameFrameEngine.bReadyGame) {
var a = this.jsGameFrameEngine.OnEventGameMessage(t, i, n);
cc.assert(-1 != a, "ErrorOverLoad.GameEngine.OnEventGameMessage");
return a;
}
this.pGameBufferData.push(GameBufferData(e, t, i, n, "pData"));
return !0;
},
OnSocketMainGameTableTask: function(e, t, i, n) {
return !0;
},
OnSocketMainYQGameMatch: function(e, t, i, n) {
return !0;
},
OnSocketMainContinueWinTask: function(e, t, i, n) {
return !0;
},
OnSocketMainUserPack: function(e, t, i, n) {
t == SUB_QUERY_USER_PACK || SUB_OP_USERPACK_ITEM;
return !0;
},
OnSocketMainYQGameCompete: function(e, t, i, n) {
return !0;
},
OnSocketMainSystem: function(e, t, i) {
switch (e) {
case SUB_CM_SYSTEM_MESSAGE:
var n = new CMD_CM_SystemMessage();
n.init(t);
if (n.wType & SMT_CLOSE_ROOM || n.wType & SMT_CLOSE_GAME || n.wType & SMT_CLOSE_LINK) {
GetServerRoom().OnMissionClosed(window.GST_NORMAL);
n.wLength > 2 && (GetMissionService().OnGetLogonStatus() || ManagerHelp_SetSystemAlert(ToUtf8(n.szString), function(e) {
GetServerRoom().CloseGameClient();
}));
return !0;
}
if (n.wType & SMT_EJECT) {
ManagerHelp_SetSystemAlert(ToUtf8(n.szString));
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
OnServerRoomLog("CServerRoom::OnSocketMainSystem");
return !0;
}
if (n.wType & SMT_CHAT) return !0;
n.wType, SMT_TABLE_ROLL;
return !0;

case SUB_CM_DOWN_LOAD_MODULE:
return !0;

default:
OnServerRoomLog("CServerRoom::OnSocketMainSystem");
return !0;
}
},
OnLogonGameEvent: function(e) {
this.stServerAttribute.wServerID = e.wServerID;
this.stServerAttribute.wAreaID = e.wAreaID;
this.stServerAttribute.wFieldID = e.wFieldID;
this.stServerAttribute.wKindID = e.wKindID;
this.stServerAttribute.wNodeID = e.wNodeID;
this.stServerAttribute.wSortID = e.wSortID;
this.stServerAttribute.wServerPort = e.wServerPort;
this.stServerAttribute.wServerType = e.wServerType;
this.stServerAttribute.dwOnLineCount = e.dwOnLineCount;
this.stServerAttribute.dwFullCount = e.dwFullCount;
this.stServerAttribute.szServerAddr = CopyArray(e.szServerAddr);
this.stServerAttribute.szServerName = CopyArray(e.szServerName);
var t = GetProject().GetColorNodeSef(!1);
this.szLogin_IP = t.color;
this.stServerAttribute.port = e.wServerPort;
this.stServerAttribute.lCellScore = e.lCellScore;
this.stServerAttribute.lMinEnterScore = e.lMinEnterScore;
this.stServerAttribute.lMaxEnterScore = e.lMaxEnterScore;
this.stServerAttribute.lMaxSingleExp = e.lMaxSingleExp;
this.SetGameServer(this.stGameServer);
var i = ServerData_QueryGameLocalVersion(this.stServerAttribute.wKindID);
this.IsOperateName("ReplaceCreateRoom") && (i = "0.0.0");
this.stServerAttribute.wKindID == GetProject().checkGameId && (i = "0.0.0");
cc.log("zzzzzzzzz 登陆游戏 szVersion = " + i);
cc.log("zzzzzzzzz 登陆游戏 this.szLogin_IP = " + this.szLogin_IP + " port = " + this.stServerAttribute.port);
this.SendPacketLogonRev(this.szLogin_IP, this.stServerAttribute.port, !0, i);
},
OnSendReCreate: function() {
this.jsGameFrameEngine = null;
this.SetGameClient(GC_NONE);
PlayerManager.DeleteUserItemByAll();
this.OnLogonGameEvent(this.stGameServer);
this.SetOperateName("CreatePrivateTable");
},
SendPacketLogon: function(e, t, i, n) {
var a = n.split("."), o = PROCESS_VERSION(parseInt(a[0]), parseInt(a[1]), parseInt(a[2])), s = PlayerManager.GetMeUserItem(), r = BEHAVIOR_LOGON_NORMAL | VIEW_MODE_PART;
this.stServerAttribute.wServerType != GAME_GENRE_YQMATCH && this.stServerAttribute.wServerType != GAME_GENRE_TIMING || (r = BEHAVIOR_LOGON_NORMAL | VIEW_MODE_PART);
var c = new CMD_GR_LogonMobile();
c.wGameID = this.stServerAttribute.wKindID;
c.dwGameVersion = o;
c.cbDeviceType = GetProject().GetDeviceType();
c.nConfigValue = 0;
c.wBehaviorFlags = r;
c.wPageTableCount = 0;
c.dwChannelID = GetProject().GetChannelId();
c.dwUserID = s.GetUserID();
c.szPassword = GetProject().szPassword.concat();
c.szMachineID = GetProject().szMachineID.concat();
c.szOpenID = GetProject().szOpenID.concat();
this.PerformCreate(e, t);
this.OnMissionSendData(MDM_GR_LOGON, SUB_GR_LOGON_MOBILE, c.GetDataBytes(), c.GetDataSize());
this.wOperateMainCmdID = MDM_GR_LOGON;
this.wOperateSubCmdID = SUB_GR_LOGON_MOBILE;
this.bQuickLogon = i;
if (r & BEHAVIOR_LOGON_IMMEDIATELY) {
this.wReqTableID = INVALID_TABLE;
this.wReqChairID = INVALID_CHAIR;
}
return !0;
},
SendPacketLogonRev: function(e, t, i, n) {
var a = n.split("."), o = PlayerManager.GetMeUserItem(), s = PROCESS_VERSION(parseInt(a[0]), parseInt(a[1]), parseInt(a[2])), r = (i ? BEHAVIOR_LOGON_IMMEDIATELY : BEHAVIOR_LOGON_NORMAL) | VIEW_MODE_PART;
this.stServerAttribute.wServerType != GAME_GENRE_YQMATCH && this.stServerAttribute.wServerType != GAME_GENRE_TIMING || (r = BEHAVIOR_LOGON_NORMAL | VIEW_MODE_PART);
var c = new CMD_GR_LogonMobileWithResV();
c.wGameID = this.stServerAttribute.wKindID;
c.dwPlazaVersion = GetProject().dwPlazaVersion;
c.dwGameVersion = s;
c.wBehaviorFlags = r;
c.wPageTableCount = 0;
c.dwConfigValue = 0;
c.dwChannelID = GetProject().GetChannelId();
c.dwUserID = o.GetUserID();
c.cbDeviceType = GetProject().GetDeviceType();
c.szMachineID = CopyArray(GetProject().szMachineID);
c.szOpenID = CopyArray(GetProject().szOpenID);
GetProject().GetAccountType() == ACCOUNT_NORMAL ? c.szPassword = CopyArray(GetProject().szPassword) : c.szPassword = CopyArray(GetProject().szOpenID);
this.PerformCreate(e, t);
this.OnMissionSendData(MDM_GR_LOGON, SUB_GR_LOGON_MOBILE_WITH_RES_V, c.GetDataBytes(), c.GetDataSize());
this.wOperateMainCmdID = MDM_GR_LOGON;
this.wOperateSubCmdID = SUB_GR_LOGON_MOBILE;
this.bQuickLogon = i;
if (r & BEHAVIOR_LOGON_IMMEDIATELY) {
this.wReqTableID = INVALID_TABLE;
this.wReqChairID = INVALID_CHAIR;
}
return !0;
},
SendPacketUserRule: function() {
var e = new CMD_GR_UserRule();
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_RULE, e.GetDataBytes(), e.GetDataSize());
return !0;
},
SendPacketLookon: function(e, t) {
return !0;
},
SetCreateData: function(e, t, i, n, a) {
var o = PlayerManager.GetMeUserItem();
this.tCreateData = {};
this.tCreateData.dwPlayCount = e;
this.tCreateData.dwCustomLen = t.GetDataSize();
this.tCreateData.cbCustomData = t.GetDataBytes();
this.tCreateData.cbUseAgent = i;
this.tCreateData.dwAgentId = n;
this.tCreateData.wUserCount = a;
this.tCreateData.dwOwnerUserId = o.GetUserID();
this.tCreateData.bCreateSign = 1;
this.tCreateData.aryTargetUserId = [];
this.tCreateData.dwGroupID = this.dwGroupID;
},
SetReCreateInviteReqUser: function(e) {
this.SendPacketReCreatePrivateTable(!0);
var t = PlayerManager.GetMeUserItem();
if (this.tCreateData) {
if (t.GetUserID() != this.tCreateData.dwOwnerUserId) {
this.tCreateData = {};
MS_OnSetLocalData(this.tCreateData, 0, "CreateData");
return;
}
IsFindArrayValue(this.tCreateData.aryTargetUserId, e) || this.tCreateData.aryTargetUserId.push(e);
MS_OnSetLocalData(this.tCreateData, 0, "CreateData");
}
},
SendPacketCreatePrivateTable: function(e) {
var t = new CMD_GR_UserCreatePrivateTable_Req();
t.tableCfg.dwOwnerUserId = e.dwOwnerUserId;
t.tableCfg.dwPlayCount = e.dwPlayCount;
t.tableCfg.dwCustomRuleDataBufLen = e.dwCustomLen;
t.cbUseAgent = e.cbUseAgent;
t.dwAgentId = e.dwAgentId;
t.wUserCount = e.wUserCount;
t.dwGroupID = e.dwGroupID;
CopyArrayValue(t.tableCfg.cbCustomRuleDataBuf, e.cbCustomData);
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CREATE_PRIVATE_TABLE, t.GetDataBytes(), t.GetDataSize());
MS_OnSetLocalData(e, 0, "CreateData");
},
SendPacketReCreatePrivateTable: function(e) {
if (this.tCreateData && e) return !0;
if (!this.tCreateData) {
var t = MS_OnQueryAllLocalData(0, "CreateData");
if (t && 1 == t.bCreateSign) {
this.tCreateData = t;
var i = PlayerManager.GetMeUserItem();
this.tCreateData.dwPlayCount % 4 == 0 && i.GetUserID() == this.tCreateData.dwOwnerUserId || (this.tCreateData = null);
}
}
if (this.tCreateData && e) return !0;
if (!this.tCreateData && e) return !1;
var n = this.tCreateData, a = new CMD_GR_UserCreatePrivateTable_Req();
a.tableCfg.dwOwnerUserId = n.dwOwnerUserId;
a.tableCfg.dwPlayCount = n.dwPlayCount;
a.tableCfg.dwCustomRuleDataBufLen = n.dwCustomLen;
a.cbUseAgent = n.cbUseAgent;
a.dwAgentId = n.dwAgentId;
a.wUserCount = n.wUserCount;
CopyArrayValue(a.tableCfg.cbCustomRuleDataBuf, n.cbCustomData);
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CREATE_PRIVATE_TABLE, a.GetDataBytes(), a.GetDataSize());
return !0;
},
SendPacketSitDown: function(e, t, i) {
var n = arguments.length > 1 ? e : INVALID_TABLE, a = arguments.length > 2 ? t : INVALID_CHAIR, o = new CMD_GR_UserSitDown();
o.wChairID = a;
o.wTableID = n;
if (3 == arguments.length) {
var s = hex_md5(i).toUpperCase();
SetArray(o.szPassWord, s);
}
this.wReqChairID = a;
this.wReqTableID = n;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_SITDOWN, o.GetDataBytes(), o.GetDataSize());
return !0;
},
SendPacketSitDownAuto: function() {
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CHAIR_REQ, 0, 0);
return !0;
},
SendPacketCutoverTable: function() {
this.bCutoverDesk = !0;
this.cbGameClient = GC_NONE;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CHAIR_REQ, 0, 0);
return !0;
},
SendPacketStandUp: function(e, t, i) {
var n = 3 == arguments.length && i, a = new CMD_GR_UserStandUp();
a.wTableID = e;
a.wChairID = t;
a.cbForceLeave = n;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_STANDUP, a.GetDataBytes(), a.GetDataSize());
return !0;
},
SendPacketUserChat: function(e, t, i) {
return !0;
},
SendPacketRequestUserInfo: function(e, t) {
var i = new CMD_GR_UserInfoReq();
i.dwUserIDReq = e;
i.wTablePos = t;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_INFO_REQ, i.GetDataBytes(), i.GetDataSize());
return !0;
},
SendPacketRequestChairUserInfo: function(e, t) {
var i = new CMD_GR_ChairUserInfoReq();
i.wChairID = t;
i.wTableID = e;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CHAIR_INFO_REQ, i.GetDataBytes(), i.GetDataSize());
return !0;
},
SendPacketRequestUpdateViewWnd: function(e, t) {
var i = new CMD_GR_UpdateViewWnd();
i.wStartTableID = e;
i.wTableCount = t;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_UPDATE_VIEW_WND, i.GetDataBytes(), i.GetDataSize());
return !0;
},
IsGameClient: function() {
return this.cbGameClient == GC_GAME;
},
GetGameClient: function() {
return this.cbGameClient;
},
SetGameClient: function(e) {
this.cbGameClient = e;
},
SetOperateName: function(e) {
this.strOperateName = e;
},
IsOperateName: function(e) {
return this.strOperateName == e;
},
GetOperateName: function() {
return this.strOperateName;
},
GetUserTuoGuanStatus: function() {
return this.bTuoGuan;
},
GetUserTuoGuanScore: function() {
return this.nAddScore;
},
SetUserTuoGuanStatus: function(e, t) {
this.bTuoGuan = e;
this.nAddScore = t;
},
SetGameServer: function(e) {
this.stGameServer = e;
},
GetGameServer: function() {
return this.stGameServer;
},
SetEnterPrivateID: function(e) {
this.dwEnterPrivateTableId = e;
},
StartGameClient: function() {
OnServerRoomLog("StartGameClient");
this.bCutoverDesk = !1;
this.cbGameStatus = GAME_STATUS_FREE;
var e = new CMD_GF_GameOption();
e.cbAllowLookon = !1;
e.dwFrameVersion = INVALID_DWORD;
e.dwClientVersion = INVALID_DWORD;
this.OnMissionSendData(MDM_GF_FRAME, SUB_GF_GAME_OPTION, e.GetDataBytes(), e.GetDataSize());
this.SetGameClient(GC_GAME);
ManagerHelp_SetLayerEvent("StartGameClient", this.stServerAttribute.wKindID, "启动游戏");
return !0;
},
EnterEvent: function(e) {
this.SetOperateName("EnterPrivateTable");
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
this.OnMissionClosed(window.GST_NORMAL);
GetMissionLogon().SendQueryPrivateTableInfo(parseInt(e));
},
CloseGameClient: function(e) {
var t = !0;
this.SetUserTuoGuanStatus(!1, 0);
if (this.jsGameFrameEngine) {
t = this.jsGameFrameEngine.OnCloseGameEngine();
this.SetGameClient(GC_NONE);
this.jsGameFrameEngine = null;
}
this.OnMissionClosed(window.GST_NORMAL);
if (1 != this.bTouchField) {
cc.audioEngine.stopAll();
if (t || 1 == e) {
PlayerManager.DeleteUserItemByAll();
0 == GetProject().cbCheckAccounts || 0 == GetProject().checkGameId ? ManagerHelp_SetLayerEvent("CloseGameClient", this.stServerAttribute.wKindID, "返回大厅") : ManagerHelp_SetLayerEvent("ClearAccounts");
} else cc.warn("this.jsGameFrameEngine.bFrameClose:false");
} else this.SetTouchField(!1);
},
SendPacketGFUserExpression: function(e, t) {
var i = new CMD_GR_C_UserExpression();
i.dwTargetUserID = e;
i.wItemIndex = t;
this.OnMissionSendData(MDM_GF_FRAME, SUB_GF_USER_EXPRESSION, i.GetDataBytes(), i.GetDataSize());
return !0;
},
SendPacketGFUserChat: function(e, t, i) {
var n = new CMD_GR_C_UserChat();
n.wChatLength = i;
n.dwTargetUserID = e;
n.dwChatColor = 0;
SetArrayFormUtf8(n.szChatString, t);
return !0;
},
SendPacketGFUserStatus: function(e) {
var t = new CMD_GR_UserStatus(), i = PlayerManager.GetMeUserItem();
t.dwUserID = i.GetUserID();
t.UserStatus.wChairID = i.GetChairID();
t.UserStatus.wTableID = i.GetTableID();
t.UserStatus.cbUserStatus = e;
this.OnMissionSendData(MDM_GF_FRAME, SUB_GF_USER_READY, t.GetDataBytes(), t.GetDataSize());
return !0;
},
SendPacketGFSocketPing: function() {
var e = new CMD_GF_SOCKET_PING();
this.OnMissionSendData(MDM_GF_FRAME, SUB_GF_SOCKET_PING, e.GetDataBytes(), e.GetDataSize());
},
SendPakcetQuitMatch: function() {
this.OnMissionSendData(MDM_YQMATCH, SUB_YQM_MATCH_USER_QUIT_JOIN, 0, 0);
return !0;
},
SendPacketWaitDistribute: function() {
this.SetGameClient(GC_WAIT);
this.SendData(MDM_GR_USER, SUB_GR_USER_WAIT_DISTRIBUTE, 0, 0);
},
SendPrivateTable: function(e, t, i, n) {
var a = PlayerManager.GetMeUserItem(), o = new tagUserPrivateTableCfg();
o.dwOwnerUserId = a.GetUserID();
SetArray(o.szOwnerUserNickName, a.GetNickName());
SetArray(o.szTableName, e);
if (t.length > 0) {
YYConverUtf8ToMD5Unicode(privateTable, LEN_PASSWORD, t);
var s = hex_md5(szPassword).toUpperCase();
SetArray(o.szPassWord, s);
}
o.lCellScore = i;
o.lMinEnterScore = n;
this.OnMissionSendData(MDM_GR_USER, SUB_GR_USER_CREATE_PRIVATE_TABLE, o.GetDataBytes(), o.GetDataSize());
return !0;
}
});
window.GetServerRoom = function() {
ServerRoom.instance || (ServerRoom.instance = new ServerRoom());
cc.assert(ServerRoom.instance, "ErrorNull.ServerRoom.instance");
return ServerRoom.instance;
};
window.OnServerRoomLog = function(e) {
null != window.logConsole.ServerRoomOnMissionRead && cc.log(e);
};
cc._RF.pop();
}, {
"../../Developer/HotUpdate/CUpdateDef": "CUpdateDef",
"../../Developer/HotUpdate/CUpdateManager": "CUpdateManager",
GameDelegate: "GameDelegate",
GameFrameEngine: "GameFrameEngine",
Net: "Net"
} ],
ServerRule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "02dbagseBtA351ikQuS4otr", "ServerRule");
window.SR_FORFEND_GAME_CHAT = 1;
window.SR_FORFEND_ROOM_CHAT = 2;
window.SR_FORFEND_WISPER_CHAT = 4;
window.SR_FORFEND_WISPER_ON_GAME = 8;
window.SR_ALLOW_DYNAMIC_JOIN = 16;
window.SR_ALLOW_OFFLINE_TRUSTEE = 32;
window.SR_ALLOW_AVERT_CHEAT_MODE = 64;
window.SR_RECORD_GAME_SCORE = 256;
window.SR_RECORD_GAME_TRACK = 512;
window.SR_DYNAMIC_CELL_SCORE = 1024;
window.SR_IMMEDIATE_WRITE_SCORE = 2048;
window.SR_FORFEND_ROOM_ENTER = 4096;
window.SR_FORFEND_GAME_ENTER = 8192;
window.SR_FORFEND_GAME_LOOKON = 16384;
window.SR_FORFEND_TAKE_IN_ROOM = 65536;
window.SR_FORFEND_TAKE_IN_GAME = 131072;
window.SR_FORFEND_SAVE_IN_ROOM = 262144;
window.SR_FORFEND_SAVE_IN_GAME = 524288;
window.SR_FORFEND_GAME_RULE = 1048576;
window.SR_FORFEND_LOCK_TABLE = 2097152;
window.SR_ALLOW_ANDROID_ATTEND = 4194304;
window.SR_ALLOW_ANDROID_SIMULATE = 8388608;
window.SR_ALLOW_LOAD_TASK = 16777216;
window.SR_ENABLE_PRIVATE_TABLE = 268435456;
window.ServerRule = cc.Class({});
ServerRule.IsForfendGameChat = function(e) {
return 0 != (e & SR_FORFEND_GAME_CHAT);
};
ServerRule.IsForfendRoomChat = function(e) {
return 0 != (e & SR_FORFEND_ROOM_CHAT);
};
ServerRule.IsForfendWisperChat = function(e) {
return 0 != (e & SR_FORFEND_WISPER_CHAT);
};
ServerRule.IsForfendWisperOnGame = function(e) {
return 0 != (e & SR_FORFEND_WISPER_ON_GAME);
};
ServerRule.IsAllowDynamicJoin = function(e) {
return 0 != (e & SR_ALLOW_DYNAMIC_JOIN);
};
ServerRule.IsAllowOffLineTrustee = function(e) {
return 0 != (e & SR_ALLOW_OFFLINE_TRUSTEE);
};
ServerRule.IsAllowAvertCheatMode = function(e) {
return 0 != (e & SR_ALLOW_AVERT_CHEAT_MODE);
};
ServerRule.IsRecordGameScore = function(e) {
return 0 != (e & SR_RECORD_GAME_SCORE);
};
ServerRule.IsRecordGameTrack = function(e) {
return 0 != (e & SR_RECORD_GAME_TRACK);
};
ServerRule.IsDynamicCellScore = function(e) {
return 0 != (e & SR_DYNAMIC_CELL_SCORE);
};
ServerRule.IsImmediateWriteScore = function(e) {
return 0 != (e & SR_IMMEDIATE_WRITE_SCORE);
};
ServerRule.IsForfendRoomEnter = function(e) {
return 0 != (e & SR_FORFEND_ROOM_ENTER);
};
ServerRule.IsForfendGameEnter = function(e) {
return 0 != (e & SR_FORFEND_GAME_ENTER);
};
ServerRule.IsForfendGameLookon = function(e) {
return 0 != (e & SR_FORFEND_GAME_LOOKON);
};
ServerRule.IsForfendTakeInRoom = function(e) {
return 0 != (e & SR_FORFEND_TAKE_IN_ROOM);
};
ServerRule.IsForfendTakeInGame = function(e) {
return 0 != (e & SR_FORFEND_TAKE_IN_GAME);
};
ServerRule.IsForfendSaveInRoom = function(e) {
return 0 != (e & SR_FORFEND_SAVE_IN_ROOM);
};
ServerRule.IsForfendSaveInGame = function(e) {
return 0 != (e & SR_FORFEND_SAVE_IN_GAME);
};
ServerRule.IsForfendGameRule = function(e) {
return 0 != (e & SR_FORFEND_GAME_RULE);
};
ServerRule.IsForfendLockTable = function(e) {
return 0 != (e & SR_FORFEND_LOCK_TABLE);
};
ServerRule.IsAllowAndroidAttend = function(e) {
return 0 != (e & SR_ALLOW_ANDROID_ATTEND);
};
ServerRule.IsAllowAndroidSimulate = function(e) {
return 0 != (e & SR_ALLOW_ANDROID_SIMULATE);
};
ServerRule.IsAllowLoadTask = function(e) {
return 0 != (e & SR_ALLOW_LOAD_TASK);
};
ServerRule.IsAllowPrivateTable = function(e) {
return 0 != (e & SR_ENABLE_PRIVATE_TABLE);
};
ServerRule.SetForfendGameChat = function(e, t) {
t ? SR_FORFEND_GAME_CHAT : ~SR_FORFEND_GAME_CHAT;
};
ServerRule.SetForfendRoomChat = function(e, t) {
t ? SR_FORFEND_ROOM_CHAT : ~SR_FORFEND_ROOM_CHAT;
};
ServerRule.SetForfendWisperChat = function(e, t) {
t ? SR_FORFEND_WISPER_CHAT : ~SR_FORFEND_WISPER_CHAT;
};
ServerRule.SetForfendWisperOnGame = function(e, t) {
t ? SR_FORFEND_WISPER_ON_GAME : ~SR_FORFEND_WISPER_ON_GAME;
};
ServerRule.SetAllowDynamicJoin = function(e, t) {
t ? SR_ALLOW_DYNAMIC_JOIN : ~SR_ALLOW_DYNAMIC_JOIN;
};
ServerRule.SetAllowOffLineTrustee = function(e, t) {
t ? SR_ALLOW_OFFLINE_TRUSTEE : ~SR_ALLOW_OFFLINE_TRUSTEE;
};
ServerRule.SetAllowAvertCheatMode = function(e, t) {
t ? SR_ALLOW_AVERT_CHEAT_MODE : ~SR_ALLOW_AVERT_CHEAT_MODE;
};
ServerRule.SetRecordGameScore = function(e, t) {
t ? SR_RECORD_GAME_SCORE : ~SR_RECORD_GAME_SCORE;
};
ServerRule.SetRecordGameTrack = function(e, t) {
t ? SR_RECORD_GAME_TRACK : ~SR_RECORD_GAME_TRACK;
};
ServerRule.SetDynamicCellScore = function(e, t) {
t ? SR_DYNAMIC_CELL_SCORE : ~SR_DYNAMIC_CELL_SCORE;
};
ServerRule.SetImmediateWriteScore = function(e, t) {
t ? SR_IMMEDIATE_WRITE_SCORE : ~SR_IMMEDIATE_WRITE_SCORE;
};
ServerRule.SetForfendRoomEnter = function(e, t) {
t ? SR_FORFEND_ROOM_ENTER : ~SR_FORFEND_ROOM_ENTER;
};
ServerRule.SetForfendGameEnter = function(e, t) {
t ? SR_FORFEND_GAME_ENTER : ~SR_FORFEND_GAME_ENTER;
};
ServerRule.SetForfendGameLookon = function(e, t) {
t ? SR_FORFEND_GAME_LOOKON : ~SR_FORFEND_GAME_LOOKON;
};
ServerRule.SetForfendTakeInRoom = function(e, t) {
t ? SR_FORFEND_TAKE_IN_ROOM : ~SR_FORFEND_TAKE_IN_ROOM;
};
ServerRule.SetForfendTakeInGame = function(e, t) {
t ? SR_FORFEND_TAKE_IN_GAME : ~SR_FORFEND_TAKE_IN_GAME;
};
ServerRule.SetForfendSaveInRoom = function(e, t) {
t ? SR_FORFEND_SAVE_IN_ROOM : ~SR_FORFEND_SAVE_IN_ROOM;
};
ServerRule.SetForfendSaveInGame = function(e, t) {
t ? SR_FORFEND_SAVE_IN_GAME : ~SR_FORFEND_SAVE_IN_GAME;
};
ServerRule.SetForfendGameRule = function(e, t) {
t ? SR_FORFEND_GAME_RULE : ~SR_FORFEND_GAME_RULE;
};
ServerRule.SetForfendLockTable = function(e, t) {
t ? SR_FORFEND_LOCK_TABLE : ~SR_FORFEND_LOCK_TABLE;
};
ServerRule.SetAllowAndroidAttend = function(e, t) {
t ? SR_ALLOW_ANDROID_ATTEND : ~SR_ALLOW_ANDROID_ATTEND;
};
ServerRule.SetAllowAndroidSimulate = function(e, t) {
t ? SR_ALLOW_ANDROID_SIMULATE : ~SR_ALLOW_ANDROID_SIMULATE;
};
ServerRule.SetAllowLoadTask = function(e, t) {
t ? SR_ALLOW_LOAD_TASK : ~SR_ALLOW_LOAD_TASK;
};
ServerRule.SetAllowPrivateTable = function(e, t) {
t ? SR_ENABLE_PRIVATE_TABLE : ~SR_ENABLE_PRIVATE_TABLE;
};
cc._RF.pop();
}, {} ],
Slot777_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9cday09VBFDJ7yLIU/fH4x", "Slot777_CMD_Game");
t.exports.SUB_S_USERRUN_RET = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_USERRUN_REQ = 1;
cc._RF.pop();
}, {} ],
Slot777_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "54a94MuKOdDh4MKfVy/fi9+", "Slot777_GameEngine");
var n = e("Slot777_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Slot777_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.rollResult = [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ];
this.winResult = [ 0, 0, 0, 0 ];
this.isWinReslut = !1;
this.winScore = 0;
this.winTypeID = 0;
this.addMul = 0;
this.extraIconMap = {};
this.extraIconMap[1] = 5;
this.extraIconMap[10] = 6;
this.extraIconMap[2] = 7;
this.extraIconMap[5] = 8;
this.extraIconMap[100] = 9;
this.extraIconMap[0] = 10;
this.extraIconArr = [ 0, 5, 6, 7, 8, 9, 10 ];
this.extraRandConfig = [];
this.ResetGameEngine();
},
ResetGameEngine: function() {},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("505/Audio/bgm", !0);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = this, o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.extraRandConfig = [];
o.ExtraRand.forEach(function(e, t, i) {
for (var n = 0; n < e; n++) a.extraRandConfig.push(a.extraIconArr[t]);
});
this.pGameViewJs.OnEventScene(o);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_USERRUN_RET:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = this;
this.pGameViewJs.StopCheckGameStartDelay();
var n = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
this.rollResult = [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ];
this.winResult = [ 0, 0, 0, 0 ];
var a = 0, o = n.WinRespin;
this.addMul = n.AddMul;
this.doubleMul = n.DoubleMul;
this.winTypeID = n.ItemID;
var s, r = [];
if (n.WinArry.length > 0) r = n.WinArry; else if (o.WinArry.length > 0) {
r = o.WinArry;
this.winTypeID = o.ItemID;
} else r = n.ItemsArry;
s = r;
r.forEach(function(e, t, n) {
if (e > 0) {
i.winResult[t] = e;
a++;
}
});
this.rollResult.forEach(function(e, t, n) {
t > 2 || e.forEach(function(e, n, a) {
var o = Math.floor(5 * Math.random());
1 == n && 0 != s[t] ? i.rollResult[t][n] = s[t] - 1 : i.rollResult[t][n] = o;
});
});
this.isWinReslut = a >= 3;
if (n.AddMul > 0) {
this.rollResult[3][1] = this.extraIconMap[n.AddMul];
this.winResult[3] = this.extraIconMap[n.AddMul];
} else if (n.DoubleMul > 0) {
var c = n.DoubleMul;
10 == n.DoubleMul && (c = 100);
this.rollResult[3][1] = this.extraIconMap[c];
this.winResult[3] = this.extraIconMap[c];
} else if (n.AddFreeCount > 0) {
this.rollResult[3][1] = this.extraIconMap[0];
this.winResult[3] = this.extraIconMap[0];
}
if (!this.isWinReslut) {
var l = Math.floor(Math.random() * this.extraRandConfig.length), h = this.extraRandConfig[l];
this.rollResult[3][1] = h;
this.winResult[3] = h;
}
for (var u = 0; u < 3; u++) if (1 != u || 0 == this.rollResult[3][1]) {
var d = Math.floor(5 + 6 * Math.random());
this.rollResult[3][u] = d;
}
var m = 0;
null == n.TotalWinScore.high && null == n.TotalWinScore.low && (m = n.TotalWinScore);
this.winScore = m;
this.AddFreeCount = n.AddFreeCount;
var f = 0;
null == n.FreeTotalWin.high && null == n.FreeTotalWin.low && (f = n.FreeTotalWin);
this.FreeTotalWin = f;
this.pGameViewJs.OnRollStart(n);
},
OnJackpotUpdate: function(e, t) {
window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
},
SendGameStart: function(e) {
var t = window.net.netSerializer.packMsg("CMD_C_UserRunReq", e);
this.SendGameData(n.SUB_C_USERRUN_REQ, t, t.length);
this.pGameViewJs.CheckGameStartDelay();
}
});
cc._RF.pop();
}, {
Slot777_CMD_Game: "Slot777_CMD_Game"
} ],
Slot777_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "82e80QeYFdD2Lm7GoOrXZJM", "Slot777_GameView");
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_stop: cc.Button,
btn_autoStop: cc.Button,
btn_betSub: cc.Button,
btn_betAdd: cc.Button,
btn_betBg: cc.Button,
bg_freetime: cc.Node,
lbl_freetimes: cc.Label,
nodeFreeStart: cc.Node,
freeStartSpine: cc.Node,
nodeFreeover: cc.Node,
freeOverSpine: cc.Node,
endLine: cc.Node,
nodeBig: cc.Node,
nodeBigSpine: cc.Node,
nodeBigScoreWin: cc.Node,
nodeScoreWin: cc.Node,
lblBigScoreWin: cc.Label,
lblScoreWin: cc.Node,
nodeGold: cc.Node,
bgNormal: cc.Node,
freeNormal: cc.Node,
rollBgNormal: cc.Node,
rollBgFree: cc.Node,
lightNormal: cc.Node,
lightFree: cc.Node,
normalMask: cc.Node,
freeMask: cc.Node,
roll_pans2: [ cc.Node ],
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurScore: cc.Label,
lblAotuTimes: cc.Label,
lblsTypeMul: [ cc.Label ],
spinesTypeMul: [ cc.Node ],
doubleMulNodes: [ cc.Node ],
pfAutoPlay: cc.Prefab,
pfGameEndScore: cc.Prefab,
prefab_gold: cc.Prefab,
nodeAutoPop: cc.Node,
autoPlayNode: cc.Node,
nodeBetPop: cc.Node,
nodeMenu: cc.Node,
helpPop: cc.Node
},
OnFrameViewLoad: function() {
var e = this;
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.i_totalBetIndex = 0;
this.lineCount = 3;
this.inFreeGame = !1;
this.m_ExitTime = 120;
this.fastModel = !1;
this.i_freegameTimes = 0;
this.sendTime = 0;
this.reqStartTime = 0;
this.goldPool = new cc.NodePool();
for (var t = 0; t < 200; t++) {
var i = cc.instantiate(this.prefab_gold);
this.goldPool.put(i);
}
this.SyncUserScore();
this.startTouchTime = null;
this.startTouchFlag = null;
this.btn_start.node.on(cc.Node.EventType.TOUCH_START, this.OnTouchStartBtn, this);
this.btn_start.node.on(cc.Node.EventType.TOUCH_END, this.OnTouchEndBtn, this);
this.schedule(this.ExitTime, 1);
this.percent = 0;
this.nodeLoading.getComponent(cc.Sprite).schedule(function() {
e.percent += 1;
if (e.percent <= 100) {
e.updateBar.progress = e.percent / 100;
e.updatePrecent.string = e.percent + "%";
} else e.percent >= 151 && (e.nodeLoading.active = !1);
}, .005, 150, 0);
},
OnViewUpdate: function(e) {
this.sendTime <= 0 || (this.sendTime -= e);
},
initRoll: function(e) {
for (var t = this, i = 0; i < 3; i++) if (1 == i) if (e) this.defaultResult[3][i] = this.pGameEngineJs.extraIconMap[0]; else {
var n = Math.floor(Math.random() * this.pGameEngineJs.extraRandConfig.length), a = this.pGameEngineJs.extraRandConfig[n];
this.defaultResult[3][1] = a;
} else this.defaultResult[3][i] = Math.floor(5 + 6 * Math.random());
this.defaultResult.forEach(function(e, i, n) {
e.forEach(function(e, n, a) {
1 == n && (t.defaultWinResult[i] = e);
});
});
this.defaultResult.forEach(function(e, i, n) {
i > 2 || e.forEach(function(e, n, a) {
var o = Math.floor(5 * Math.random());
t.defaultResult[i][n] = 0 != e ? e - 1 : o;
});
});
this.roll_pans2.forEach(function(i, n, a) {
i.getComponent("Slot777_pan2_control").initIcons(t.defaultResult[n], 0 != t.defaultWinResult[n], e);
});
},
OnEventScene: function(e) {
var t = this;
this.lBetChip = e.LineBets;
this.lBetMultips = e.LineMuls;
this.winLvArray = e.WinLvArry;
this.lineCount = e.LineCount;
this.defaultResult = [ [], [], [], [ 0, 0, 0 ] ];
this.defaultWinResult = [ 0, 0, 0, 0 ];
var i = 0;
e.Defaultshow.forEach(function(e, n, a) {
i = n < 3 ? 0 : n >= 3 && n < 6 ? 1 : 2;
t.defaultResult[i].push(e);
});
this.i_totalBet = [];
var n = {};
this.lBetChip.forEach(function(e, i, a) {
t.lBetMultips.forEach(function(t, i, a) {
var o = {};
o.bet = e;
o.mul = t;
n[e * t] = o;
});
});
for (var a in n) if (n.hasOwnProperty(a)) {
var o = n[a];
o.val = a;
this.i_totalBet.push(o);
}
this.i_totalBet.sort(function(e, t) {
return e.val - t.val;
});
this.ScenesMuls = {};
e.ScenesMuls.forEach(function(e, i, n) {
t.ScenesMuls[e.TypeID - 1] = e.Mul;
});
this.ScenesMuls[8] = 10;
this.ScenesMuls[9] = 1;
this.LineBetNodeJs = this.nodeBetPop.getComponent("Slot777_LineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNodeJs.setConfig(this.lBetChip, this.lBetMultips);
this.initRoll(e.FreeCount > 0);
this.initAutoPlayMenu(e.AutoRun);
if (e.FreeCount > 0) {
this.LineBetNodeJs.updateLineScore(e.LineScore, e.LineMul);
this.OnFreeGameScene(e);
}
},
initAutoPlayMenu: function(e) {
var t = cc.instantiate(this.pfAutoPlay);
t.getComponent("jsAutoPlay").initAutoPlayMenu(e, this.autoPleyItemCallBack.bind(this));
this.autoPlayNode.addChild(t);
},
autoPleyItemCallBack: function(e, t) {
this.nodeAutoPop.active = !1;
this.i_autoPlayTimes = e.target.autoRun;
this.updateAutoPlayTimes();
this.isAuto = !0;
this.setBtnDisable();
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.lblCurScore.string = OnScoreToString(0, 2);
this.OnGameStart();
},
OnStakeUpdate: function() {
var e = this, t = this.LineBetNodeJs.i_betIndex, i = this.LineBetNodeJs.i_lineIndex, n = this.lBetChip[t] * this.lBetMultips[i];
this.i_totalBet.forEach(function(t, i, a) {
Number(t.val) != n || (e.i_totalBetIndex = i);
});
this.curBet = this.i_totalBet[this.i_totalBetIndex].bet * this.i_totalBet[this.i_totalBetIndex].mul * this.lineCount;
this.lblBetScore.string = OnFloatScore(this.curBet);
this.lblsTypeMul.forEach(function(t, i, a) {
t.string = 8 == i || 9 == i ? OnFloatScore(e.curBet * e.ScenesMuls[i]) : OnFloatScore(n * e.ScenesMuls[i]);
});
},
OnUpdateBetChip: function(e) {
this.i_totalBetIndex += e;
this.i_totalBetIndex < 0 ? this.i_totalBetIndex = this.i_totalBet.length - 1 : this.i_totalBetIndex > this.i_totalBet.length - 1 && (this.i_totalBetIndex = 0);
var t = this.i_totalBet[this.i_totalBetIndex];
this.LineBetNodeJs.updateLineScore(t.bet, t.mul);
},
changGameBg: function() {
this.bgNormal.active = !this.bg_freetime.active;
this.freeNormal.active = this.bg_freetime.active;
this.rollBgNormal.active = !this.bg_freetime.active;
this.rollBgFree.active = this.bg_freetime.active;
this.lightNormal.active = !this.bg_freetime.active;
this.lightFree.active = this.bg_freetime.active;
this.normalMask.active = !this.bg_freetime.active;
this.freeMask.active = this.bg_freetime.active;
},
updateAutoPlayTimes: function() {
this.lblAotuTimes.string = -1 == this.i_autoPlayTimes ? "∞" : this.i_autoPlayTimes;
},
updateFreeGameTime: function() {
this.lbl_freetimes.string = this.i_freegameTimes;
},
OnTouchStartBtn: function() {
if (!this.btn_start.interactable) return !1;
this.startTouchTime = new Date();
this.startTouchFlag = 1;
this.btn_start.schedule(function() {
this.updateLongStart();
}.bind(this), .1);
window.mfConfig.PlayAudio("GameLobby/Audio/click", !1);
return !0;
},
OnTouchEndBtn: function() {
if (!this.btn_start.interactable) return !1;
if (1 == this.startTouchFlag) {
this.lblCurScore.string = OnScoreToString(0, 2);
this.setBtnDisable();
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.OnGameStart();
}
this.startTouchFlag = null;
this.startTouchTime = null;
this.btn_start.unscheduleAllCallbacks();
},
updateLongStart: function() {
if (1 == this.startTouchFlag && this.startTouchTime && new Date() - this.startTouchTime >= 600) {
this.startTouchFlag = 2;
this.nodeAutoPop.active = !0;
}
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnBtnStartClick: function(e) {
var t = e.target.name;
if ("Dis_btnBetSub" == t) this.OnUpdateBetChip(-1); else if ("Dis_btnBetAdd" == t) this.OnUpdateBetChip(1); else if ("Dis_btnStop" == t) {
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btn_stop.node.active = !1;
this.OnGameStop();
} else if ("Dis_btnBetPop" == t) this.nodeBetPop.active = !1; else if ("Dis_btnBetBg" == t) this.nodeBetPop.active = !this.nodeBetPop.active; else if ("Dis_AutoPlayLayer" == t) this.nodeAutoPop.active = !1; else if ("Dis_btnfast" == t) {
this.fastModel = !1;
this.updateRollMode();
} else if ("Dis_btnslow" == t) {
this.fastModel = !0;
this.updateRollMode();
} else if ("Dis_btnAutoStop" == t) {
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btn_autoStop.node.active = !1;
this.OnGameStop();
} else "Dis_bigMask" == t ? this.closeBigWin() : "BtnGameRule" == t && (this.helpPop.active = !0);
},
OnFreeGameScene: function(e) {
this.i_freegameTimes = e.FreeCount;
this.updateFreeGameTime();
this.onGotoFreeGame();
},
OnGameStart: function() {
if (this.CheckCanBet()) {
if (!(this.sendTime > 0)) {
this.lastSubScore = 0;
this.sendTime = .1;
this.gameOver = null;
this.hideSpinesTypeMul();
this.changGameBg();
this.nodeBig.active = !1;
var e = this.endLine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "keep");
if (this.i_freegameTimes > 0) {
this.setBtnDisable();
this.bg_freetime.active = !0;
this.inFreeGame = !0;
this.i_freegameTimes--;
this.updateFreeGameTime();
} else if (this.i_autoPlayTimes > 0) {
this.i_autoPlayTimes--;
this.updateAutoPlayTimes();
this.lastSubScore = this.curBet;
this.UpdateUserScore(-this.curBet);
} else {
this.lastSubScore = this.curBet;
this.UpdateUserScore(-this.curBet);
}
var t = this.i_totalBet[this.i_totalBetIndex], i = {};
i.LineScore = t.bet;
i.LineMul = t.mul;
this.pGameEngineJs.SendGameStart(i);
this.StartRollDirect();
}
} else {
this.initBtnState();
this.GoldNotEnoughTip();
}
},
OnGameStop: function() {
if (!this.gameOver) {
for (var e = 0; e < 4; e++) this.roll_pans2[e].getComponent("Slot777_pan2_control").stopRoll();
this.scheduleOnce(function() {
this.gameOverState();
}.bind(this), .5);
}
},
OnRollStart: function(e) {
var t = this;
if (0 == e.RetCode) {
if (this.isStopDelay) {
this.isStopDelay = null;
this.SyncUserScore();
}
this.b_gofreeGame = null;
if (this.pGameEngineJs.AddFreeCount > 0) {
if (this.i_freegameTimes > 0) this.i_freegameTimes += this.pGameEngineJs.AddFreeCount; else {
this.b_gofreeGame = !0;
this.i_freegameTimes = this.pGameEngineJs.AddFreeCount;
}
this.updateFreeGameTime();
}
-1 != this.i_autoPlayTimes && this.isAuto && this.i_autoPlayTimes <= 0 && (this.isAuto = !1);
this.btn_stop.node.active = !this.isAuto;
this.btn_autoStop.node.active = this.isAuto;
this.btn_start.node.active = !1;
window.mfConfig.PlayAudio("505/Audio/roll_start", !1);
this.roll_pans2.forEach(function(e, i, n) {
e.getComponent("Slot777_pan2_control").initData(t.pGameEngineJs.rollResult[i], 0 != t.pGameEngineJs.winResult[i], t.bg_freetime.active);
});
var i = .5, n = .25, a = 0;
if (this.fastModel) {
i = 0;
n = .12;
}
this.pGameEngineJs.isWinReslut && !this.inFreeGame && (a = 1);
var o = .5;
this.isAuto && (o = 1);
for (var s = [ 0 * n, 1 * n, 2 * n, 3 * n + a ], r = i + 3 * n + a + o, c = 0; c < s.length; c++) this.scheduleOnce(function(e) {
this.roll_pans2[e].getComponent("Slot777_pan2_control").stopRoll();
2 == e && this.pGameEngineJs.isWinReslut && this.roll_pans2[3].getComponent("Slot777_pan2_control").playAllWinRoll4Spine();
}.bind(this, c), i + s[c]);
this.scheduleOnce(function() {
this.gameOverState();
}.bind(this), r);
} else this.StopRollDirect();
},
playResultAnim: function() {
this.roll_pans2.forEach(function(e, t, i) {
e.getComponent("Slot777_pan2_control").playAnim();
});
},
playDoubleMulAnim: function() {
var e = this.pGameEngineJs.doubleMul, t = null;
10 == e ? t = this.doubleMulNodes[0] : 5 == e ? t = this.doubleMulNodes[1] : 2 == e && (t = this.doubleMulNodes[2]);
t && t.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, .45), cc.scaleTo(.5, .36))));
},
gameOverState: function() {
if (!this.gameOver) {
this.gameOver = !0;
this.unscheduleAllCallbacks();
var e = this.endLine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, this.pGameEngineJs.isWinReslut ? "Shanshuo" : "keep");
if (this.i_freegameTimes > 0 || this.inFreeGame) {
this.setBtnDisable();
this.bg_freetime.active = !0;
} else if (!this.isAuto) {
this.btn_start.node.active = !0;
this.btn_start.interactable = !1;
this.btn_autoStop.node.active = !1;
this.btn_stop.node.active = !1;
}
if (this.pGameEngineJs.isWinReslut) {
this.playResultAnim();
var t = this.pGameEngineJs.winTypeID - 1;
this.spinesTypeMul[t] && (this.spinesTypeMul[t].active = !0);
var i = this.pGameEngineJs.addMul;
10 == i ? this.spinesTypeMul[8].active = !0 : 1 == i && (this.spinesTypeMul[9].active = !0);
this.pGameEngineJs.doubleMul > 0 && this.playDoubleMulAnim();
}
this.jsGameEngine.winScore >= this.winLvArray[0] * this.curBet ? this.onPlayBigWin(function() {
this.onPlayScoreCallBack();
}.bind(this)) : this.jsGameEngine.winScore > 0 ? this.FlyGold(function() {
this.onPlayScoreCallBack();
}.bind(this)) : this.onPlayScoreCallBack();
}
},
onPlayBigWin: function(e) {
var t = this.jsGameEngine.winScore, i = this.winLvArray[0] * this.curBet, n = this.winLvArray[1] * this.curBet, a = this.winLvArray[2] * this.curBet, o = "", s = "";
if (t >= i && t < n) {
o = "bigwin";
s = "505/Audio/bigwin";
this.schedule(this.EruptGold, .03, 50);
1.5;
this.nodeBigSpine.winType = 1;
} else if (t >= n && t < a) {
o = "megawin";
s = "505/Audio/megawin";
this.schedule(this.EruptGold, .02, 225);
4.5;
this.nodeBigSpine.winType = 2;
} else if (t >= a) {
o = "superwin";
s = "505/Audio/superwin";
this.schedule(this.EruptGold, .02, 450);
9;
this.nodeBigSpine.winType = 3;
}
this.bigTime = 0;
this.canCloseBig = null;
this.bigFlyOver = null;
this.schedule(this.updateBigTime, .02);
this.FlyBigGold(o);
this.nodeBig.active = !0;
var r = this.nodeBigSpine.getComponent(sp.Skeleton);
cc.loader.loadRes("505/AGameSpine/win", sp.SkeletonData, function(t, i) {
r.skeletonData = i;
r.animation = o;
PlaySkeletonAnimation(r, !1, o).setCompleteListener(function() {
this.nodeBig.active = !1;
e && e();
}.bind(this));
}.bind(this));
"" != s && cc.loader.loadRes(s, cc.AudioClip, function(e, t) {
e || (this.winBigAudioID = cc.audioEngine.play(t, !1, window.mfConfig.fSound));
}.bind(this));
},
EruptGold: function() {
var e = this.goldPool.get();
e.setPosition(cc.v2(Value_GetRandomInt(0, 100) - 50, -800 + Value_GetRandomInt(0, 100) - 50));
var t = .1 * Value_GetRandomInt(8, 12), i = Value_GetRandomInt(0, 360), n = Value_GetRandomInt(0, 360);
e.setScale(t, t);
e.angle = i;
e.rotation = n;
var a = Value_GetRandomInt(0, 1500) - 750, o = (a + e.x) / 2, s = [ e.getPosition(), cc.v2(o, 500 + Value_GetRandomInt(0, 1e3)), cc.v2(a, -750) ];
e.runAction(cc.sequence(cc.bezierTo(1.5, s), cc.callFunc(function(e) {
e.stopAllActions();
this.goldPool.put(e);
}.bind(this))));
this.nodeGold.addChild(e);
},
FlyBigGold: function(e) {
var t = this, i = this.jsGameEngine.winScore;
this.lblBigScoreWin.string = OnScoreToString(i, 2);
var n = this.nodeBigScoreWin.getComponent("Slot777_text_control"), a = null;
if ("bigwin" == e) {
n.setNum(i / 1e3, .5);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(1), cc.fadeOut(.1), cc.callFunc(function(e) {
t.FlyBigGoldDesc();
}));
} else if ("megawin" == e) {
n.setNum(i / 1e3, 3.5);
a = cc.sequence(cc.scaleTo(.3, 1), cc.delayTime(1.85), cc.moveTo(.05, cc.p(0, -30)), cc.moveTo(.05, cc.p(0, -15)), cc.moveTo(.05, cc.p(0, 0)), cc.moveTo(.05, cc.p(0, -15)), cc.delayTime(1.95), cc.fadeOut(.2), cc.callFunc(function(e) {
t.FlyBigGoldDesc();
}));
} else if ("superwin" == e) {
n.setNum(i / 1e3, 8);
a = cc.sequence(cc.scaleTo(.25, 1), cc.delayTime(3), cc.moveTo(.1, 0, -30), cc.moveTo(.03, 0, -15), cc.moveTo(.03, 0, 0), cc.moveTo(.1, 0, -15), cc.delayTime(3), cc.moveTo(.1, 0, -30), cc.moveTo(.03, 0, -15), cc.moveTo(.03, 0, 0), cc.moveTo(.1, 0, -15), cc.delayTime(2.03), cc.scaleTo(.2, .5), cc.callFunc(function(e) {
t.FlyBigGoldDesc();
}));
}
a && this.nodeBigScoreWin.runAction(a);
},
FlyBigGoldDesc: function(e) {
e && this.winBigAudioID && cc.audioEngine.stop(this.winBigAudioID);
this.nodeBig.active = !1;
this.lblBigScoreWin.string = "";
this.nodeBigScoreWin.setScale(0);
this.nodeBigScoreWin.opacity = 255;
this.nodeBigScoreWin.setPosition(0, -15);
this.nodeBigScoreWin.getComponent("Slot777_text_control").stopText();
this.nodeBigScoreWin.stopAllActions();
this.unschedule(this.EruptGold, this);
var t = 0;
t = this.inFreeGame ? this.jsGameEngine.FreeTotalWin : this.jsGameEngine.winScore;
var i = this.jsGameEngine.winScore;
this.lblCurScore.string = OnScoreToString(t, 2);
if (this.bigFlyOver) e && e(); else {
this.bigFlyOver = !0;
var n = cc.instantiate(this.pfGameEndScore);
this.nodeViewUser[0].addChild(n);
n.getComponent("jsGameEndScore").InitGameScore(i, .3, function() {
e && e();
n.removeFromParent();
});
this.UpdateUserScore(i);
}
},
FlyGold: function(e) {
this.schedule(this.EruptGold, .02, 40);
setTimeout(function() {
window.mfConfig.PlayAudio("505/Audio/spray_gold_coins", !1);
}, 100);
var t = this, i = this.jsGameEngine.winScore;
window.mfConfig.PlayAudio("505/Audio/win", !1);
this.nodeScoreWin.active = !0;
this.lblScoreWin.stopAllActions();
this.lblScoreWin.setScale(1);
this.lblScoreWin.setPosition(0, -200);
this.lblScoreWin.getComponent(cc.Label).string = OnScoreToString(i, 2);
this.nodeScoreWin.getComponent("Slot777_text_control").setNum(i / 1e3, 1);
this.lblScoreWin.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(1.2), cc.spawn(cc.moveTo(.4, 0, -500), cc.scaleTo(.4, 0, 0)), cc.callFunc(function(i) {
t.unschedule(t.EruptGold, t);
t.FlyGoldDesc(e);
t.nodeScoreWin.active = !1;
})));
},
FlyGoldDesc: function(e) {
var t = 0;
t = this.inFreeGame ? this.jsGameEngine.FreeTotalWin : this.jsGameEngine.winScore;
this.lblCurScore.string = OnScoreToString(t, 2);
var i = this.jsGameEngine.winScore;
if (i > 0) {
var n = cc.instantiate(this.pfGameEndScore);
this.nodeViewUser[0].addChild(n);
n.getComponent("jsGameEndScore").InitGameScore(i, .3, function() {
n.removeFromParent();
e && e();
});
this.UpdateUserScore(i);
}
},
onPlayScoreCallBack: function() {
if (this.i_freegameTimes > 0) {
this.setBtnDisable();
this.bg_freetime.active = !0;
this.b_gofreeGame ? this.onGotoFreeGame() : this.OnGameStart();
} else if (this.isAuto) {
this.i_freegameTimes = 0;
this.updateFreeGameTime();
if (this.inFreeGame) {
this.inFreeGame = !1;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("505/Audio/totalwin", !1);
this.nodeFreeover.getComponent("Slot777_text_control").setNum(this.pGameEngineJs.FreeTotalWin / 1e3, 2);
var e = this.freeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "animation").setCompleteListener(function() {
this.nodeFreeover.active = !1;
this.setBtnDisable();
this.btn_autoStop.node.active = !0;
this.lblCurScore.getComponent(cc.Label).string = OnScoreToString(0, 2);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("505/Audio/bgm", !0);
this.OnGameStart();
}.bind(this));
} else {
this.setBtnDisable();
this.btn_autoStop.node.active = !0;
this.lblCurScore.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.OnGameStart();
}
} else {
this.i_freegameTimes = 0;
this.updateFreeGameTime();
if (this.inFreeGame) {
this.inFreeGame = !1;
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("505/Audio/totalwin", !1);
this.nodeFreeover.getComponent("Slot777_text_control").setNum(this.pGameEngineJs.FreeTotalWin / 1e3, 2);
var t = this.freeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
this.nodeFreeover.active = !1;
this.initBtnState();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("505/Audio/bgm", !0);
}.bind(this));
} else this.initBtnState();
}
},
onGotoFreeGame: function() {
window.mfConfig.PlayAudio("505/Audio/free_into", !1);
var e = this;
this.inFreeGame = !0;
this.lblCurScore.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.setBtnDisable();
this.bg_freetime.active = !0;
this.nodeFreeStart.active = !0;
var t = this.freeStartSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
e.nodeFreeStart.active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("505/Audio/bgm_free", !0);
e.OnGameStart();
});
},
updateBigTime: function(e) {
this.bigTime += e;
if (this.bigTime >= .5) {
this.unschedule(this.updateBigTime, this);
this.canCloseBig = !0;
}
},
closeBigWin: function() {
if (this.canCloseBig) {
this.canCloseBig = null;
this.nodeBigScoreWin.getComponent("Slot777_text_control").stopText();
var e = this.nodeBigSpine.winType;
if (1 != e) {
var t = this.nodeBigSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, 2 == e ? "megawinend" : "superwinend");
}
var i = 0;
this.schedule(function e() {
var t = this;
if (++i >= 35) {
this.unschedule(e, this);
var n = this.nodeBigSpine.getComponent(sp.Skeleton);
n.skeletonData = null;
n.animation = null;
this.FlyBigGoldDesc(function() {
t.onPlayScoreCallBack();
});
}
}, .02);
}
},
initBtnState: function() {
this.bg_freetime.active = !1;
this.btn_betSub.interactable = !0;
this.btn_betAdd.interactable = !0;
this.btn_betBg.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.node.active = !1;
this.btn_autoStop.node.active = !1;
this.btn_start.interactable = !0;
this.changGameBg();
},
setBtnDisable: function() {
this.bg_freetime.active = !1;
this.btn_betSub.interactable = !1;
this.btn_betAdd.interactable = !1;
this.btn_betBg.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.node.active = !1;
this.btn_autoStop.node.active = !1;
},
hideSpinesTypeMul: function() {
this.spinesTypeMul.forEach(function(e, t, i) {
e.active = !1;
});
this.doubleMulNodes.forEach(function(e, t, i) {
e.stopAllActions();
e.setScale(.36);
});
},
updateRollMode: function() {
var e = this;
this.btn_slow.node.active = !this.fastModel;
this.btn_fast.node.active = this.fastModel;
this.roll_pans2.forEach(function(t, i, n) {
t.getComponent("Slot777_pan2_control").setSpeed(e.fastModel);
});
},
UpdateUserScore: function(e) {
this.lMeScore += e;
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
SyncUserScore: function() {
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
},
ExitTime: function() {
var e = this;
e.m_ExitTime--;
if (e.m_ExitTime <= 0) {
e.unschedule(e.ExitTime, e);
ManagerHelp_SetSystemAlert("You have not played the game for a long time, please have a rest!", function() {
if (0 == GetServerRoom().GetEventCount()) {
e.jsGameEngine.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
} else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(e.jsGameEngine.GetMeTableID(), e.jsGameEngine.GetMeChairID(), !0);
e.scheduleOnce(e.jsGameEngine.OnFrameButtonBackGame.bind(e.jsGameEngine), .01);
}
});
}
},
UpdateReqStartTime: function(e) {
this.reqStartTime += e;
if (this.reqStartTime >= 5) {
ManagerHelp_SetSystemLabel("Network Anomaly");
this.StopCheckGameStartDelay();
this.StopRollDirect(!0);
} else ;
},
CheckGameStartDelay: function() {
this.isStopDelay = null;
this.reqStartTime = 0;
this.schedule(this.UpdateReqStartTime, .02);
},
StopCheckGameStartDelay: function() {
this.unschedule(this.UpdateReqStartTime, this);
},
StartRollDirect: function() {
for (var e = this, t = [ [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ], [ 0, 0, 0 ] ], i = 0; i < 3; i++) for (var n = 0; n < 3; n++) t[i][n] = Math.floor(5 * Math.random());
for (var a = 0; a < 3; a++) this.bg_freetime.active && 1 == a ? t[3][a] = this.pGameEngineJs.extraIconMap[0] : t[3][a] = Math.floor(5 + 6 * Math.random());
this.roll_pans2.forEach(function(i, n, a) {
i.getComponent("Slot777_pan2_control").initData(t[n], !1, e.bg_freetime.active);
i.getComponent("Slot777_pan2_control").roll();
});
},
StopRollDirect: function(e) {
for (var t = [ 0, .25, .5, .75 ], i = 0; i < t.length; i++) this.scheduleOnce(function(e) {
this.roll_pans2[e].getComponent("Slot777_pan2_control").stopRoll();
}.bind(this, i), 0 + t[i]);
this.scheduleOnce(function() {
this.UpdateUserScore(this.lastSubScore);
e && (this.isStopDelay = !0);
this.isAuto = !1;
this.i_autoPlayTimes = 0;
this.initBtnState();
}.bind(this), 1.25);
},
CheckCanBet: function() {
return this.i_freegameTimes > 0 || this.lMeScore >= this.curBet;
},
GoldNotEnoughTip: function() {
ManagerHelp_SetSystemLabel("The current gold coin is not enough to bet!");
},
OnFrameUpdateUserScore: function(e) {},
OnFrameViewDestroy: function() {
this.unscheduleAllCallbacks();
}
});
cc._RF.pop();
}, {} ],
Slot777_LineBet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23d4917cN9OeKLiYtrAlOyU", "Slot777_LineBet");
cc.Class({
extends: cc.Component,
properties: {
titleLbl: cc.Label,
lineNoteLbl: cc.Label,
multipleLbl: cc.Label,
subBtn_multiple: cc.Button,
addBtn_multiple: cc.Button,
subBtn_lineBtn: cc.Button,
addBtn_lineBtn: cc.Button
},
initData: function(e) {
this.father = e;
this.i_lineIndex = 0;
this.i_betIndex = 0;
this.i_lineMul = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];
this.i_betNum = [ 1e3, 2e3, 1e4 ];
this.titleLbl.string = "BETING ON " + this.father.lineCount + " RATIO";
this.OnStakeUpdate();
},
setBtnEnabled: function(e) {
this.subBtn_multiple.interactable = e;
this.addBtn_multiple.interactable = e;
this.subBtn_lineBtn.interactable = e;
this.addBtn_lineBtn.interactable = e;
},
setConfig: function(e, t) {
this.i_lineMul = t;
this.i_betNum = e;
this.OnStakeUpdate();
},
OnStakeUpdate: function(e, t) {
null != e && (this.i_betIndex = e);
null != t && (this.i_lineIndex = t);
this.lineNoteLbl.string = OnFloatScore(this.i_betNum[this.i_betIndex]);
this.multipleLbl.string = this.i_lineMul[this.i_lineIndex];
this.father.OnStakeUpdate();
},
updateLineScore: function(e, t) {
for (var i = 0; i < this.i_betNum.length; i++) if (e == this.i_betNum[i]) {
this.i_betIndex = i;
break;
}
for (var n = 0; n < this.i_lineMul.length; n++) if (t == this.i_lineMul[n]) {
this.i_lineIndex = n;
break;
}
this.OnStakeUpdate();
},
OnBtnEvent: function(e, t) {
if ("Dis_subBtn_multiple" == e.target.name) {
this.i_lineIndex--;
this.i_lineIndex < 0 && (this.i_lineIndex = this.i_lineMul.length - 1);
} else if ("Dis_addBtn_multiple" == e.target.name) {
this.i_lineIndex++;
this.i_lineIndex >= this.i_lineMul.length && (this.i_lineIndex = 0);
} else if ("Dis_subBtn_lineBtn" == e.target.name) {
this.i_betIndex--;
this.i_betIndex < 0 && (this.i_betIndex = this.i_betNum.length - 1);
} else if ("Dis_addBtn_lineBtn" == e.target.name) {
this.i_betIndex++;
this.i_betIndex >= this.i_betNum.length && (this.i_betIndex = 0);
}
this.OnStakeUpdate();
}
});
cc._RF.pop();
}, {} ],
Slot777_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9d975S3mPlO555H6Fncncu4", "Slot777_pan2_control");
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
sp_anim: {
default: null,
type: cc.Node
},
nodeRoll4Spine: cc.Node,
iconsVague: {
default: [],
type: cc.SpriteFrame
},
iconsNormal: {
default: [],
type: cc.SpriteFrame
},
b_stop: !1,
b_stoped: !1,
i_reslut: {
default: []
},
i_rollHeight: 735,
isWin: !1
},
onLoad: function() {
this.isFree = !1;
this.isRoll4 = "prefab_fff_roll4" == this.node.name;
this.time4speed = .15;
this.IconSpineList = [];
this.IconSpineList[0] = "777";
this.IconSpineList[1] = "777";
this.IconSpineList[2] = "777";
this.IconSpineList[3] = "bar";
this.IconSpineList[4] = "bar";
this.IconSpineList[5] = "ss";
this.IconSpineList[6] = "ss";
this.IconSpineList[7] = "double";
this.IconSpineList[8] = "double";
this.IconSpineList[9] = "double";
this.IconSpineList[10] = "respin";
this.SpineAnimNames = [];
this.SpineAnimNames[0] = "d777";
this.SpineAnimNames[1] = "d77";
this.SpineAnimNames[2] = "d7";
this.SpineAnimNames[3] = "barjs";
this.SpineAnimNames[4] = "barys";
this.SpineAnimNames[5] = "s1";
this.SpineAnimNames[6] = "s2";
this.SpineAnimNames[7] = "2X";
this.SpineAnimNames[8] = "5X";
this.SpineAnimNames[9] = "10X";
this.SpineAnimNames[10] = "baoshi";
},
initIcons: function(e, t, i) {
this.i_reslut = e;
this.isWin = t;
this.setIcons();
if (i && this.isRoll4) {
var n = this.node.getChildByName("skeletonNode1");
this.sp_top.getChildByName("i1").opacity = 0;
this.sp_mid.getChildByName("i1").opacity = 0;
var a = n.getComponent(sp.Skeleton), o = "505/AGameSpine/" + this.IconSpineList[this.i_reslut[1]];
cc.loader.loadRes(o, sp.SkeletonData, function(e, t) {
a.skeletonData = t;
a.animation = this.SpineAnimNames[this.i_reslut[1]];
}.bind(this));
}
},
playAllWinRoll4Spine: function() {
if (this.isRoll4 && !this.isFree) {
cc.loader.loadRes("505/Audio/anticipationl", cc.AudioClip, function(e, t) {
e || (this.fireAudioID = cc.audioEngine.play(t, !0, window.mfConfig.fSound));
}.bind(this));
this.nodeRoll4Spine.active = !0;
var e = this.nodeRoll4Spine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "keep");
}
},
stopAllWinRoll4Spine: function() {
this.nodeRoll4Spine && (this.nodeRoll4Spine.active = !1);
this.fireAudioID && cc.audioEngine.stop(this.fireAudioID);
},
playAnim: function() {
if (!(this.isRoll4 && this.isFree || !this.isWin)) {
var e = this.node.getChildByName("skeletonNode1");
this.sp_top.getChildByName("i1").opacity = 0;
this.sp_mid.getChildByName("i1").opacity = 0;
var t = e.getComponent(sp.Skeleton), i = "505/AGameSpine/" + this.IconSpineList[this.i_reslut[1]];
cc.loader.loadRes(i, sp.SkeletonData, function(e, i) {
t.skeletonData = i;
t.animation = this.SpineAnimNames[this.i_reslut[1]];
}.bind(this));
}
},
stopAnim: function() {
if (!this.isRoll4 || !this.isFree) {
this.sp_top.getChildByName("i1").opacity = 255;
this.sp_mid.getChildByName("i1").opacity = 255;
var e = this.node.getChildByName("skeletonNode1").getComponent(sp.Skeleton);
e.skeletonData = null;
e.animation = null;
}
},
setIcons: function() {
0 == this.sp_top.position.y ? this.setIcons2node(this.sp_top, this.i_reslut[0], this.i_reslut[1], this.i_reslut[2]) : this.setIcons2node(this.sp_mid, this.i_reslut[0], this.i_reslut[1], this.i_reslut[2]);
},
setIcons2node: function(e, t, i, n) {
var a = e.getChildByName("lost");
if (this.isWin) {
e.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[t];
e.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[i];
e.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[n];
} else {
a.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[t];
a.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[i];
a.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.iconsNormal[n];
}
a.active = !this.isWin;
e.getChildByName("i0").active = this.isWin;
e.getChildByName("i1").active = this.isWin;
e.getChildByName("i2").active = this.isWin;
},
randomIcons: function(e) {
var t = void 0, i = void 0, n = 0;
if (this.isRoll4) {
t = Math.floor(5 + 6 * Math.random());
i = Math.floor(5 + 6 * Math.random());
n = Math.floor(5 + 6 * Math.random());
} else {
t = Math.floor(5 * Math.random());
i = Math.floor(5 * Math.random());
n = Math.floor(5 * Math.random());
}
e.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.iconsVague[t];
e.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.iconsVague[i];
e.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.iconsVague[n];
},
initData: function(e, t, i) {
this.isFree = i;
this.isWin = t;
this.i_reslut = e;
},
roll: function() {
this.resetRoll();
if (!this.isFree || !this.isRoll4) {
var e = this;
this.b_stop = !1;
this.b_stoped = !1;
if (0 == this.sp_top.position.y) {
var t = this.sp_top;
this.sp_top = this.sp_mid;
this.sp_mid = t;
}
this.n_act1 = 1;
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act1++;
if (e.n_act1 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t, e.i_reslut[0], e.i_reslut[1], e.i_reslut[2]);
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(e) {
window.mfConfig.PlayAudio("505/Audio/stop", !1);
}), cc.moveBy(.05, cc.v2(0, -10)), cc.moveBy(.05, cc.v2(0, 15)), cc.moveBy(.05, cc.v2(0, -8)), cc.moveTo(.1, cc.v2(0, 0)), cc.callFunc(function(t) {
e.sp_mid.setPosition(0, e.i_rollHeight);
e.stopAllWinRoll4Spine();
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.n_act2 = 0;
var n = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act2++;
if (e.n_act2 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t, e.i_reslut[0], e.i_reslut[1], e.i_reslut[2]);
var i = cc.sequence(cc.moveBy(e.time4speed, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(e) {
window.mfConfig.PlayAudio("505/Audio/stop", !1);
}), cc.moveBy(.05, cc.v2(0, -10)), cc.moveBy(.05, cc.v2(0, 15)), cc.moveBy(.05, cc.v2(0, -8)), cc.moveTo(.1, cc.v2(0, 0)), cc.callFunc(function(t) {
e.sp_top.setPosition(0, e.i_rollHeight);
e.stopAllWinRoll4Spine();
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.sp_top.runAction(cc.repeatForever(i));
this.sp_mid.runAction(cc.repeatForever(n));
}
},
stopRoll: function() {
this.b_stop = !0;
},
setSpeed: function(e) {
this.time4speed = e ? .1 : .15;
},
resetRoll: function() {
this.sp_top.getChildByName("lost").active = !1;
this.sp_mid.getChildByName("lost").active = !1;
this.sp_top.getChildByName("i0").active = !0;
this.sp_top.getChildByName("i1").active = !0;
this.sp_top.getChildByName("i2").active = !0;
this.sp_mid.getChildByName("i0").active = !0;
this.sp_mid.getChildByName("i1").active = !0;
this.sp_mid.getChildByName("i2").active = !0;
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.stopAnim();
this.stopAllWinRoll4Spine();
}
});
cc._RF.pop();
}, {} ],
Slot777_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "52143FxZJJKR4texb24ZyVe", "Slot777_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {
this.isStop = !1;
},
setNum: function(e, t) {
this.isStop = !1;
this.i_num = parseFloat(e);
this.i_cur_num = 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.isStop) this.text.string = "" + this.i_num.toFixed(2); else if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
}
},
stopText: function() {
this.isStop = !0;
}
});
cc._RF.pop();
}, {} ],
Slot_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6a845iYFUJNgqUMfs8cN+WQ", "Slot_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_SCENE_START = 1;
cc._RF.pop();
}, {} ],
Slot_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "043c67pBCJEEbIhJDdbCokT", "Slot_GameEngine");
var n = e("Slot_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("Slot_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("Slot_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("500/Audio/bgmuzic", !0, window.mfConfig.fSound);
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.objSceneData = a;
this.jsGameView.OnLineConfig(a.LineBets, a.LineMuls);
this.jsGameView.updateJackpot(a.JackpotScore);
this.jsGameView.initIcons(a.Defaultshow);
a.FreeCount > 0 && this.jsGameView.updateLineScore(a.LineScore, a.LineMul);
a.FreeCount > 0 && this.jsGameView.OnFreeGameScene(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRunRet", e);
this.objResultData = i;
this.pGameViewJs.OnRollEnd(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e, t, i, a, o) {
var s = {};
s.LineScore = i;
s.LineMul = o;
if (20 == this.pGameViewJs.customData.length) {
s.TestItems = this.pGameViewJs.customData;
cc.error(s.TestItems);
}
var r = window.net.netSerializer.packMsg("CMD_C_UserRunReq", s);
this.SendGameData(n.SUB_C_SCENE_START, r, r.length);
this.pGameViewJs.customData.length = 0;
}
});
cc._RF.pop();
}, {
Slot_CMD_Game: "Slot_CMD_Game"
} ],
Slot_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9a1eeXExMREq5KvKh5SUA2x", "Slot_GameView");
var n = e("Slot_logic"), a = "Slot_pan2_control";
cc.Class({
extends: GameFrameView,
properties: {
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
nodeSpineBg: cc.Node,
nodeUserScore: cc.Node,
nodeUserStake: cc.Node,
nodeUserWin: cc.Node,
nodeJackpot: cc.Node,
btn_sub: cc.Button,
btn_add: cc.Button,
btn_bet: cc.Button,
btn_slow: cc.Button,
btn_fast: cc.Button,
btn_start: cc.Button,
btn_stop: cc.Button,
nodeLongPress: cc.Node,
roll_pans2: [ cc.Node ],
nodeFree: cc.Node,
nodeFreeGame: cc.Node,
noreFreeCount: cc.Node,
nodeFreeover: cc.Node,
nodeFreeOverSpine: cc.Node,
nodeFreeTimeBg: cc.Node,
node_dialogLayer: cc.Node,
nodeBig: cc.Node,
nodeBigSpine: cc.Node,
nodeGold: cc.Node,
nodeWinScore: cc.Node,
node_textwin: cc.Label,
nodeScatter4: cc.Node,
nodeScatter5: cc.Node,
nodeCustom: cc.Node,
lblJackpot: cc.Label,
pfRuleNode: cc.Prefab,
prefab_gold: cc.Prefab,
LineBetBigbg: cc.Node,
LineBetNode: cc.Node,
lineBetPrefab: cc.Prefab,
clickNode: cc.Node,
nodeJackPotTurn: cc.Node,
nodeLineAnim: cc.Node,
pfNodeLine: cc.Prefab,
nodeMenu: cc.Node,
bg_win: cc.Node
},
OnFrameViewLoad: function() {
this.b_auto = !1;
this.canStart = !0;
this.b_roll = !1;
this.percent = 0;
this.arryGodPool = new cc.NodePool();
for (var e = 0; e < 200; e++) {
var t = cc.instantiate(this.prefab_gold);
this.arryGodPool.put(t);
}
this.btn_start.node.on("touchstart", function(e) {
if (this.i_freegameTimes <= 0) {
this.btn_start.scheduleOnce(function() {
t.canStart && (t.nodeLongPress.active = !0);
}, .1);
var t = this;
this.btn_start.scheduleOnce(function() {
t.b_auto = !0;
t.updateBanCyclePlay();
if (t.canStart) {
var e = {};
e.target = t.btn_start.node;
t.OnBtnStartClick(e);
t.nodeLongPress.active = !1;
}
}, 1.2);
}
}, this);
this.btn_start.node.on("touchend", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.btn_start.node.on("touchcancel", function(e) {
this.btn_start.unscheduleAllCallbacks();
this.nodeLongPress.active = !1;
}, this);
this.initData();
this.m_ExitTime = 120;
this.schedule(this.ExitTime, 1);
this.i_freegameTimes = 0;
this.inFreeGame = !1;
this.lineCount = 0;
this.lineIndex = 0;
var i = cc.find("No_nodeContent/New Sprite/CustomEditBox", this.nodeCustom);
this.CustomEditbox = i.getComponent(cc.EditBox);
this.customData = [];
this.fastModel = !1;
this.bgSpineIndex = 0;
this.bgSpineSwitchTimes = 0;
this.WinJackpotScore = 0;
this.WinJackpotPercent = 0;
this.curJackpotScore = 0;
var n = cc.instantiate(this.pfNodeLine);
this.nodeLineAnim.addChild(n);
this.slot_line_control = n.getComponent("slot_line_control");
this.jsGoodLuck = this.bg_win.getComponent("jsGoodLuck");
this.jsGoodLuck.playEnterAni();
},
OnButtonMenuEvent: function(e, t) {
this.nodeMenu.active = !this.nodeMenu.active;
},
initData: function() {
this.m_ExitTime = 0;
this.i_totalBetIndex = 0;
this.i_totalBet = [];
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
var t = PlayerManager.GetMeUserItem();
if (null == t) return !1;
var i = t.GetUserScore();
this.nodeUserScore.getComponent(cc.Label).string = OnScoreToString(i, 2);
},
ExitTime: function() {
var e = this;
e.m_ExitTime--;
if (e.m_ExitTime <= 0) {
e.unschedule(e.ExitTime);
ManagerHelp_SetSystemAlert("You have not played the game for a long time, please have a rest!", function() {
if (0 == GetServerRoom().GetEventCount()) {
e.jsGameEngine.bFrameClose = !0;
GetServerRoom().CloseGameClient(!0);
} else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(e.jsGameEngine.GetMeTableID(), e.jsGameEngine.GetMeChairID(), !0);
e.scheduleOnce(e.jsGameEngine.OnFrameButtonBackGame.bind(e.jsGameEngine), .01);
}
});
}
},
OnEventUserEnter: function(e, t) {
cc.log("GameView.OnEventUserEnter.wChairID:", e.GetChairID(), "NickName:", e.GetNickNameUtf8());
var i = e.GetChairID();
this.SetUserActive(i, !0);
this.GetJsFrameUser(i).SetUserDataItem(e);
this.OnFrameUpdateUserScore(i);
this.OnFrameEventUserStatus(e, e.GetUserStatus(), t);
return !0;
},
ResetGameView: function() {
cc.log("GameView.ResetGameView");
this.ResetFrameData();
},
OnEventUserLeave: function(e, t, i) {
cc.log("GameView.OnEventUserLeave");
this.SetUserActive(t, !0);
if (0 != this.jsGameEngine.SwitchViewID(t)) {
this.GetJsFrameUser(t).labelNickName.string = "";
return !0;
}
},
OnLineConfig: function(e, t) {
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, 50);
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
OnFreeGameTimeUpdate: function() {
this.nodeFreeTimeBg.getChildByName("text_freegame").getComponent(cc.Label).string = "" + this.i_freegameTimes;
},
onGotoFreeGame: function() {
var e = this;
this.onPlayBigWin(!1, 0);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("500/Audio/FreeGame_OK_2", !1, window.mfConfig.fSound);
this.nodeFreeTimeBg.active = !0;
this.OnFreeGameTimeUpdate();
this.nodeFree.active = !0;
this.noreFreeCount.getComponent(cc.Label).string = this.i_freegameTimes;
this.noreFreeCount.setScale(0);
this.noreFreeCount.runAction(cc.sequence(cc.scaleTo(.5, 1, 1), cc.delayTime(2), cc.moveTo(.2, -1500, 0)));
var t = this.nodeFreeGame.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "animation").setCompleteListener(function() {
e.noreFreeCount.x = -250;
cc.audioEngine.stopAll();
e.nodeFree.active = !0;
window.mfConfig.PlayAudio("500/Audio/free game", !0, window.mfConfig.fSound);
var t = {};
t.target = e.btn_start.node;
e.OnBtnStartClick(t);
});
},
stopAllAnim: function() {
for (var e = 0; e < 5; e++) {
this.roll_pans2[e].getComponent(a).stopAnim(0);
this.roll_pans2[e].getComponent(a).stopAnim(1);
this.roll_pans2[e].getComponent(a).stopAnim(2);
this.roll_pans2[e].getComponent(a).stopAnim(3);
}
for (var t = 0; t < 5; t++) {
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 0);
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 1);
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 2);
this.roll_pans2[t].getComponent(a).setGray(!1, !1, 3);
}
},
OnCheckScore: function() {
var e = PlayerManager.GetMeUserItem();
if (null == e) return !1;
if (this.inFreeGame) return !0;
var t = e.GetUserScore(), i = this.TotalScore;
if (t < i) {
if (0 == GetProject().cbCheckAccounts) var n = "The current gold coin is below " + i / 1e3 + ", please recharge first"; else n = "Not enough diamonds";
ManagerHelp_SetSystemAlert(n, function(e, t) {
window.YQ_SYS_OK == t && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}, !0, window.BTN_CLOSE);
return !1;
}
return !0;
},
OnBtnStartClick: function(e) {
this.onPlayBigWin(!1, 0);
if ("Dis_btnsub" === e.target.getName()) {
this.i_totalBetIndex--;
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnadd" === e.target.getName()) {
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnfast" === e.target.getName()) {
this.fastModel = !1;
this.updateRollMode();
} else if ("Dis_btnslow" === e.target.getName()) {
this.fastModel = !0;
this.updateRollMode();
} else if ("btn_start" === e.target.getName()) {
if (!this.OnCheckScore()) return;
if (!this.canStart) return;
this.canStart = !1;
window.mfConfig.PlayAudio("500/Audio/spin", !1, window.mfConfig.fSound);
this.stopAllAnim();
this.slot_line_control.resetLineInfo();
this.unschedule(this.playIconAnim);
this.nodeFree.active = !1;
this.i_freegameTimes >= 0 && this.inFreeGame ? this.bgSpineSwitchTimes = 0 : this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.lineCount = 0;
this.lineIndex = 0;
this.jsGameEngine.OnSendEventGameStart(50, this.TotalScore, this.LineBetNodeJs.i_betNum[this.LineBetNodeJs.i_betIndex], !1, this.LineBetNodeJs.i_lineMul[this.LineBetNodeJs.i_lineIndex]);
this.m_ExitTime = 120;
this.b_roll = !0;
if (this.i_freegameTimes > 0) {
this.i_freegameTimes--;
this.OnFreeGameTimeUpdate();
} else this.OnSubStake(-this.TotalScore);
if (this.i_freegameTimes >= 0 && this.inFreeGame) ; else {
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !0;
}
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else if ("btn_quickstop" === e.target.getName()) {
window.mfConfig.PlayAudio("500/Audio/reel_stop_01", !1, window.mfConfig.fSound);
this.b_auto = !1;
this.updateBanCyclePlay();
for (var t = 0; t < 5; t++) {
var i = n.tab_data[t];
this.roll_pans2[t].getComponent(a).quickstop(i);
}
if (this.i_freegameTimes > 0) for (var o = 0; o < 5; o++) this.roll_pans2[o].getComponent(a).unscheduleAllCallbacks();
this.btn_stop.unscheduleAllCallbacks();
this.scheduleOnce(function() {
this._onRollStop();
}, .1);
this.btn_stop.interactable = !1;
}
},
OnSubStake: function(e) {
var t = this.nodeUserScore.getComponent(cc.Label), i = 1e3 * t.string + e;
t.string = OnScoreToString(i, 2);
},
OnStakeUpdate: function() {
this.nodeUserWin.getComponent(cc.Label).string = "0.00";
for (var e = 0; e < this.i_totalBet.length; e++) if (this.i_totalBet[e].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = e;
break;
}
this.TotalScore = 50 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * 1e3 * parseFloat(this.LineBetNodeJs.multipleLbl.string);
this.nodeUserStake.getComponent(cc.Label).string = OnScoreToString(this.TotalScore, 2);
},
updateLineScore: function(e, t) {
this.LineBetNodeJs.updateLineScore(e, t);
},
updateRollMode: function() {
if (this.fastModel) {
this.btn_slow.node.active = !1;
this.btn_fast.node.active = !0;
} else {
this.btn_slow.node.active = !0;
this.btn_fast.node.active = !1;
}
this.updateBanCyclePlay();
},
updateBanCyclePlay: function() {
!this.b_auto || this.b_auto && !this.fastModel ? this.banCyclePlay = !1 : this.banCyclePlay = !0;
},
OnRollEnd: function(e) {
this.jsGoodLuck.stopAllAni();
this.jsGoodLuck.showWinNode();
for (var t = 0; t < 5; t++) this.roll_pans2[t].getComponent(a).roll();
if (null == e.WinJackpotScore.high && null == e.WinJackpotScore.low) {
this.WinJackpotScore = e.WinJackpotScore;
this.WinJackpotPercent = e.WinJackpotPercent;
}
for (var i = [], o = 0; o < 5; o++) {
i[o] = [];
for (var s = 0; s < 4; s++) i[o][s] = e.ItemsArry[4 * o + s] - 1;
}
var r = 0;
null == e.WinScore.high && null == e.WinScore.low && (r = e.WinScore);
n.setData(i, r);
this.b_roll = !1;
this.btn_stop.interactable = !0;
this.i_freegameTimes > 0 && (this.btn_stop.interactable = !1);
var c = .6, l = .25;
if (this.fastModel) {
c = 0;
l = .25;
}
for (var h = [ 0 * l, 1 * l, 2 * l, 3 * l + 0, 4 * l + 0 ], u = 0; u < 5; u++) this.btn_stop.scheduleOnce(function(e) {
this.roll_pans2[e].getComponent(a).stopRoll(n.getValues(e));
}.bind(this, u), c + h[u]);
0;
this.btn_stop.scheduleOnce(function() {
this.btn_stop.interactable = !1;
this.nodeScatter5.active = !1;
this._onRollStop();
}.bind(this), c + 4 * l + 0 + .5);
},
_onRollStop: function() {
this._onFiveWin();
},
_onFiveWin: function() {
this._onIsWin();
},
_onIsWin: function() {
var e = this.jsGameEngine.objResultData, t = e.WinLines.length;
t > 0 ? this.playLineAnim(e.WinLines) : 0 == t && e.WinScatter.WinScore > 0 ? this.playEffect() : this.WinJackpotScore > 0 ? this.playJackpotAnim() : this._onRestBtn();
},
OnViewUpdate: function(e) {
this.bgSpineSwitchTimes += e;
if (this.bgSpineSwitchTimes >= 60) {
this.bgSpineSwitchTimes = 0;
this.bgSpineIndex++;
this.bgSpineIndex > 2 && (this.bgSpineIndex = 0);
var t = this.nodeSpineBg.getComponent(sp.Skeleton);
0 == this.bgSpineIndex ? PlaySkeletonAnimation(t, !0, "zi1") : 1 == this.bgSpineIndex ? PlaySkeletonAnimation(t, !0, "zi2") : 2 == this.bgSpineIndex && PlaySkeletonAnimation(t, !0, "zi3");
}
this.jsGoodLuck && !this.jsGoodLuck.bPlaySpinAni && parseFloat(this.nodeUserWin.getComponent(cc.Label).string) > 0 && this.jsGoodLuck.playSpinAni();
},
_onRestBtn: function() {
var e = this.jsGameEngine.objResultData, t = e.AddFreeCount, i = !1;
if (t > 0) if (this.i_freegameTimes > 0) {
cc.log("已经在免费游戏");
this.i_freegameTimes += t;
} else {
i = !0;
cc.log("开始进入免费游戏");
this.i_freegameTimes += t;
this.inFreeGame = !0;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(0, 2);
this.scheduleOnce(function() {
this.bgSpineSwitchTimes = 0;
var e = this.nodeSpineBg.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !0, "mianfei");
this.onGotoFreeGame();
this.btn_start.interactable = !1;
this.btn_start.node.active = !1;
this.btn_stop.interactable = !1;
this.btn_stop.node.active = !1;
}.bind(this), 2);
}
if (0 == this.i_freegameTimes && this.inFreeGame) {
this.inFreeGame = !1;
this.bgSpineSwitchTimes = 60;
this.onPlayBigWin(!1, 0);
this.nodeFreeover.active = !0;
window.mfConfig.PlayAudio("500/Audio/main/Score", !1, window.mfConfig.fSound);
var n = this.nodeFreeOverSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "mfjs");
var a = this.nodeUserWin.getComponent(cc.Label).string, o = this.nodeFreeover.getComponent("Slot_text_control");
o.setNum(a);
o.scheduleOnce(function() {
this.nodeFreeover.active = !1;
this.nodeFreeTimeBg.active = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("500/Audio/bgmuzic", !0, window.mfConfig.fSound);
}.bind(this), 3);
this.scheduleOnce(function() {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
this.canStart = !0;
if (this.b_auto) {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}
}.bind(this), 3);
} else if (i) this.canStart = !0; else {
if (!this.inFreeGame) {
this.btn_start.interactable = !0;
this.btn_start.node.active = !0;
this.btn_stop.interactable = !0;
this.btn_stop.node.active = !1;
}
this.canStart = !0;
}
if (this.i_freegameTimes > 0) {
this.btn_sub.interactable = !1;
this.btn_add.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
} else {
this.btn_sub.interactable = !0;
this.btn_add.interactable = !0;
this.btn_bet.interactable = !0;
this.LineBetNodeJs.setBtnEnabled(!0);
}
var s = 0, r = e.WinLines.length;
r > 0 && !this.banCyclePlay && (s = 1 * r);
(this.b_auto && 0 == this.i_freegameTimes || this.i_freegameTimes > 0 && !i) && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), s);
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("Slot_jackpot_control").setNumNew(e, t);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
initIcons: function(e) {
for (var t = [], i = 0, n = 0; n < 5; n++) {
t[n] = [];
for (var o = 0; o < 4; o++) {
t[n].push(e[i]);
i++;
}
}
for (var s = 0; s < 5; s++) this.roll_pans2[s].getComponent(a).setIcons(t[s]);
var r = this;
this.schedule(function() {
r.percent += 1;
if (r.percent <= 100) {
r.updateBar.progress = r.percent / 100;
r.updatePrecent.string = r.percent + "%";
} else if (r.percent >= 151) {
r.nodeLoading.active = !1;
if (!cc.sys.localStorage.getItem("firstEnterJP")) {
this.clickNode.active = !0;
cc.sys.localStorage.setItem("firstEnterJP", !0);
this.scheduleOnce(function() {
this.clickNode.active = !1;
}, 3);
}
}
}, .005, 150, 0);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnGM" == i ? this.nodeCustom.active = !0 : "btnClose" == i ? this.nodeCustom.active = !1 : "btnOK" == i ? this.check() : "BtnJackpotRank" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore, this) : "btnHelp" == i ? this.showHelpPanel() : "Dis_BetNode" == i ? this.LineBetBigbg.active = !this.LineBetBigbg.active : "Dis_LineBetBigbg" == i ? this.LineBetBigbg.active = !1 : "clickNode" == i && (this.clickNode.active = !1);
},
showHelpPanel: function() {
var e = cc.instantiate(this.pfRuleNode);
this.node_dialogLayer.addChild(e);
},
check: function() {
this.customData.length = 0;
var e = this.CustomEditbox.string.split(",");
if (20 != e.length) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var t = 0; t < 20; t++) if (e[t] < 1 || e[t] > 13) {
ManagerHelp_SetSystemLabel("配置错误，请重新配置！");
return !1;
}
for (var i = 0; i < 20; i++) {
var n = parseInt(e[i]);
this.customData.push(n);
}
cc.error(this.customData);
this.nodeCustom.active = !1;
var a = {};
a.target = this.btn_start.node;
this.OnBtnStartClick(a);
},
OnFreeGameScene: function(e) {
cc.log("免费游戏场景恢复");
this.nodeFreeTimeBg.active = !0;
this.btn_add.interactable = !1;
this.btn_sub.interactable = !1;
this.btn_bet.interactable = !1;
this.LineBetNodeJs.setBtnEnabled(!1);
this.i_freegameTimes = e.FreeCount;
this.inFreeGame = !0;
this.btn_start.node.active = !1;
this.btn_stop.node.active = !1;
this.OnFreeGameTimeUpdate();
this.bgSpineSwitchTimes = 0;
var t = this.nodeSpineBg.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "mianfei");
var i = 0;
i = null != e.FreeTotalWin.high && null != e.FreeTotalWin.low ? 0 : e.FreeTotalWin;
this.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(i, 2);
this.OnStakeUpdate();
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("500/Audio/free game", !0, window.mfConfig.fSound);
this.i_freegameTimes > 0 && this.scheduleOnce(function() {
var e = {};
e.target = this.btn_start.node;
this.OnBtnStartClick(e);
}.bind(this), 2);
},
playLineAnim: function(e) {
var t = this;
this.lineCount = e.length;
this.lineID = [];
for (var i = 0; i < this.lineCount; i++) this.lineID[i] = e[i].LineID;
for (var n = 0; n < this.lineCount; n++) {
var a = e[n];
this.showLinePoint(a);
}
this.slot_line_control.initLineData(this, this.lineID, this.lineCount);
this.slot_line_control.playAllLines(function() {
t.playEffect();
});
},
playIconAnim: function() {
for (var e = 0; e < 5; e++) {
this.roll_pans2[e].getComponent(a).stopAnim(0);
this.roll_pans2[e].getComponent(a).stopAnim(1);
this.roll_pans2[e].getComponent(a).stopAnim(2);
this.roll_pans2[e].getComponent(a).stopAnim(3);
}
var t = this.jsGameEngine.objResultData.WinLines[this.lineIndex];
this.showLinePoint(t);
this.nodeWinScore.setScale(0);
this.node_textwin.string = OnScoreToString(t.WinScore, 2);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.3, .8), cc.scaleTo(.3, .6), cc.delayTime(.3), cc.callFunc(function(e) {
e.setScale(0);
})));
this.lineIndex++;
this.lineIndex >= this.lineCount && (this.lineIndex = 0);
},
showLinePoint: function(e) {
for (var t = e.LineID, i = this.jsGameEngine.objSceneData.LinesArry[t - 1], n = 0; n < 5; n++) {
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 0);
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 1);
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 2);
this.roll_pans2[n].getComponent(a).setGray(!0, !1, 3);
}
for (var o = 0; o < e.LeftWinItems.length; o++) {
var s = parseInt((i.PosArry[o] - 1) % 4);
this.roll_pans2[o].getComponent(a).setGray(!1, !0, s);
this.roll_pans2[o].getComponent(a).playAnim(s);
}
},
playEffect: function() {
var e = 0;
if (this.jsGameEngine.objResultData.WinScatter.WinScore > 0) {
e = 2;
for (var t = 0; t < 5; t++) for (var i = this.roll_pans2[t].getComponent(a), o = 0; o < 4; o++) 11 == i.i_icons[o] && i.playAnim(o);
}
var s = this.jsGameEngine.objSceneData.WinLvArry, r = s[0] * this.TotalScore, c = s[1] * this.TotalScore, l = s[2] * this.TotalScore, h = .04, u = 30;
if (n.i_win >= r && n.i_win < c) {
h = .03;
u = 60;
} else if (n.i_win >= c && n.i_win < l) {
h = .02;
u = 90;
} else if (n.i_win >= l) {
h = .01;
u = 120;
}
0 == GetProject().cbCheckAccounts && this.schedule(this.EruptGold, h, u, e);
this.scheduleOnce(function() {
this.onPlayBigWin(!0, n.i_win);
this.FlyGold(!1);
}, e);
},
onPlayBigWin: function(e, t) {
var i = this;
if (e) {
var n = this.jsGameEngine.objSceneData.WinLvArry, a = n[0] * this.TotalScore, o = n[1] * this.TotalScore, s = n[2] * this.TotalScore, r = "", c = "";
if (t >= a && t < o) {
this.nodeBig.active = !0;
r = "bigwin";
c = "GameFrame/Audio/Win/Music_TotalBigWin";
} else if (t >= o && t < s) {
this.nodeBig.active = !0;
r = "megawin";
c = "GameFrame/Audio/Win/Music_TotalMegaWin";
} else if (t >= s) {
this.nodeBig.active = !0;
r = "superwin";
c = "GameFrame/Audio/Win/Music_TotalUltraWin";
} else window.mfConfig.PlayAudio("500/Audio/showmoney", !1, window.mfConfig.fSound);
var l = this.nodeBigSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(l, !1, r).setCompleteListener(function() {
i.nodeBig.active = !1;
});
"" != c && cc.loader.loadRes(c, cc.AudioClip, function(e, t) {
e || cc.audioEngine.play(t, !1, window.mfConfig.fSound);
}.bind(i));
} else this.nodeBig.active = !1;
},
EruptGold: function() {
var e = this, t = this.arryGodPool.get();
t.setPosition(cc.v2(Value_GetRandomInt(0, 100) - 50, -800 + Value_GetRandomInt(0, 100) - 50));
var i = .1 * Value_GetRandomInt(10, 13), n = Value_GetRandomInt(0, 360), a = Value_GetRandomInt(0, 360);
t.setScale(i, i);
t.angle = n;
t.rotation = a;
var o = Value_GetRandomInt(0, 1500) - 750, s = (o + t.x) / 2, r = [ t.getPosition(), cc.v2(s, 1e3 + Value_GetRandomInt(0, 1e3) + 100), cc.v2(o, -750) ];
t.runAction(cc.sequence(cc.bezierTo(1.5, r), cc.callFunc(function(t) {
t.removeFromParent();
e.arryGodPool.put(t);
}.bind(this))));
e.nodeGold.addChild(t);
},
FlyGold: function(e) {
var t = this;
this.node_textwin.string = OnScoreToString(n.i_win, 2);
this.nodeWinScore.getComponent("Slot_text_control").setNum(n.i_win / 1e3);
this.nodeWinScore.setScale(0);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 1.5, 1.5), cc.scaleTo(.2, 1, 1), cc.delayTime(3.2), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(i) {
t.node_textwin.string = "";
i.setPosition(0, -200);
if (t.i_freegameTimes >= 0 && t.inFreeGame) {
var o = 1e3 * t.nodeUserWin.getComponent(cc.Label).string + n.i_win;
t.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(o, 2);
} else {
var s = 1e3 * t.nodeUserWin.getComponent(cc.Label).string + n.i_win;
t.nodeUserWin.getComponent(cc.Label).string = OnScoreToString(s, 2);
}
if (t.WinJackpotScore > 0) {
t.OnSubStake(n.i_win);
t.playJackpotAnim();
} else {
e || t.OnSubStake(n.i_win);
t._onRestBtn();
if (t.jsGameEngine.objResultData.WinLines.length > 0) {
t.slot_line_control.stopAllLine();
t.slot_line_control.playLineAnim();
for (var r = 0; r < 5; r++) {
t.roll_pans2[r].getComponent(a).stopAnim(0);
t.roll_pans2[r].getComponent(a).stopAnim(1);
t.roll_pans2[r].getComponent(a).stopAnim(2);
t.roll_pans2[r].getComponent(a).stopAnim(3);
}
if (!t.b_auto || t.b_auto && !t.fastModel) {
t.playIconAnim();
t.schedule(t.playIconAnim, 1);
t.banCyclePlay = !1;
} else t.banCyclePlay = !0;
}
}
})));
},
playJackpotAnim: function() {
var e = this;
this.jsGameEngine.OnFrameButtonJackPotDraw(e.nodeJackPotTurn, e.WinJackpotPercent / 100, parseInt(e.WinJackpotScore / e.WinJackpotPercent * 10), function() {
n.i_win = e.WinJackpotScore;
e.WinJackpotScore = 0;
e.WinJackpotPercent = 0;
e.FlyGold(!0);
});
}
});
cc._RF.pop();
}, {
Slot_logic: "Slot_logic"
} ],
Slot_bigwin_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f6a02/GkjRPn6YvcJFISMm6", "Slot_bigwin_control");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {}
});
cc._RF.pop();
}, {} ],
Slot_jackpot_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "db855yM91ZL0KiuVc0z5G2F", "Slot_jackpot_control");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
cc.Class({
extends: cc.Component,
properties: {
nodeRollNum: [ cc.Node ],
nodeRolltest: cc.Label,
isFirst: !0
},
setNumNew: function(e, t, i) {
this.num = "" + e;
this.numLength = this.num.length;
this.nodeRolltest.string = OnScoreToString(this.num, 3);
null == i && (i = 5);
null == this.originNum && (this.originNum = e - 60);
e - this.originNum <= 0 && (this.originNum = e - 60);
t = e - this.originNum;
this.arr = [];
this.arr.push(parseInt(.22 * t));
this.arr.push(parseInt(.19 * t));
this.arr.push(parseInt(.21 * t));
this.arr.push(parseInt(.18 * t));
this.arr.push(parseInt(.2 * t));
for (var n = 11; n > 11 - this.numLength; n--) {
var a = this.nodeRollNum[n].getComponent("Slot_rollNum"), o = this.originNum + "";
a.setData(o[n - (11 - this.numLength) - 1]);
}
this.count = 0;
this.unschedule(this.setNumNewFun);
this.schedule(this.setNumNewFun, 1, i);
},
setNumNewFun: function(e) {
var t = this;
if (!(this.count > 4)) {
this.originNum += this.arr[this.count];
for (var i = 0, a = function(e) {
t.scheduleOnce(function(t, i) {
var n = this.nodeRollNum[e].getComponent("Slot_rollNum"), a = this.originNum + "";
n.startRoll(t, 0, a[this.numLength - i - 1]);
}.bind(t, e, i), .1 * (11 - e));
if (++i >= t.numLength) return {
v: void 0
};
}, o = 11; o >= 0; o--) {
var s = a(o);
if ("object" === ("undefined" == typeof s ? "undefined" : n(s))) return s.v;
}
this.count++;
}
}
});
cc._RF.pop();
}, {} ],
Slot_jackpot_rank: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9190bQD7mlGSYrN2MGDnaCo", "Slot_jackpot_rank");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
nodeRankPng: [ cc.SpriteFrame ],
nodeMe: cc.Node,
pfJackpotRankItem: cc.Prefab
},
onLoad: function() {
this.rankInfo = null;
this.requestJackpotRank();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" == i && this.node.destroy();
},
requestJackpotRank: function() {
var e = this, t = GetProject().szGameJackpotUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(a, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
e.rankInfo = n;
e.showJackpotRankInfo(n.data);
e.showMyRankings(n.myrankings);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotRankInfo: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfJackpotRankItem);
this.nodeContent.addChild(n);
var a = e[i], o = cc.find("imRank", n), s = cc.find("lblRank", n);
if (i < 3) {
o.active = !0;
s.active = !1;
o.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[i];
} else {
o.active = !1;
s.active = !0;
s.getComponent(cc.Label).string = i + 1;
}
cc.find("lblNickName", n).getComponent(cc.Label).string = a.NickName;
cc.find("lblReward", n).getComponent(cc.Label).string = (a.WinJackpot / 1e3).toFixed(3);
}
},
showMyRankings: function(e) {
var t = cc.find("imRank", this.nodeMe), i = cc.find("lblRank", this.nodeMe), n = cc.find("imNoOnList", this.nodeMe), a = this.isInTop10();
if (-1 != a) if (a < 3) {
t.active = !0;
i.active = !1;
t.getComponent(cc.Sprite).spriteFrame = this.nodeRankPng[a];
} else {
t.active = !1;
i.active = !0;
i.getComponent(cc.Label).string = a + 1;
} else {
t.active = !1;
i.active = !1;
n.active = !0;
}
var o = PlayerManager.GetMeUserItem();
cc.find("lblNickName", this.nodeMe).getComponent(cc.Label).string = o.GetNickNameUtf8();
cc.find("lblReward", this.nodeMe).getComponent(cc.Label).string = (e.WinJackpot / 1e3).toFixed(3);
},
isInTop10: function() {
for (var e = this.rankInfo.data, t = this.rankInfo.myrankings, i = e.length, n = 0; n < i; n++) {
if (e[n].GameID == t.GameID) return n;
}
return -1;
}
});
cc._RF.pop();
}, {} ],
Slot_lines_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c5c695F9FVGUpQBZd9gmssW", "Slot_lines_control");
cc.Class({
extends: cc.Component,
properties: {
lines: {
default: [],
type: cc.Node
},
lefts: {
default: [],
type: cc.Node
},
rights: {
default: [],
type: cc.Node
},
i_nums: {
default: []
}
},
lightNum: function() {
for (var e = 0; e < this.nums.length; e++) this.nums[e];
},
playLineNum: function(e) {
this.nums = e;
this.schedule(this.lightNum, 1);
},
stop: function() {
this.unschedule(this.lightNum);
for (var e = 0; e < 9; e++) ;
},
showLine: function(e, t) {
this.lines[e].active = !0;
this.lines[e].getChildByName("text").getComponent(cc.Label).string = t + "";
this.scheduleOnce(function() {
this.lines[e].active = !1;
}, .3);
},
start: function() {
this.node.getChildByName("left"), this.node.getChildByName("right");
for (var e = 0; e < 9; e++) this.lines[e] = this.node.getChildByName("line" + (e + 1));
}
});
cc._RF.pop();
}, {} ],
Slot_logic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2cf02hMjURJvJcm3FbRyV5+", "Slot_logic");
t.exports = {
tab_data: null,
i_win: 0,
setData: function(e, t) {
this.tab_data = e;
this.i_win = t;
},
getValues: function(e) {
return this.tab_data[e];
}
};
cc._RF.pop();
}, {} ],
Slot_pan2_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fc21acBZZRP4aigPk55+Ttw", "Slot_pan2_control");
var n = [];
n[0] = "0";
n[1] = "1";
n[2] = "2";
n[3] = "3";
n[4] = "4";
n[5] = "5";
n[6] = "6";
n[7] = "7";
n[8] = "8";
n[9] = "9";
n[10] = "10";
n[11] = "11";
n[12] = "12";
cc.Class({
extends: cc.Component,
properties: {
sp_top: {
default: null,
type: cc.Node
},
sp_mid: {
default: null,
type: cc.Node
},
sp_anim: {
default: null,
type: cc.Node
},
iconsVague: {
default: [],
type: cc.SpriteFrame
},
icons: {
default: [],
type: cc.SpriteFrame
},
icons_mofu: {
default: [],
type: cc.SpriteFrame
},
b_stop: {
default: !1
},
b_stoped: {
default: !1
},
i_icons: {
default: []
},
i_rollHeight: 153
},
onLoad: function() {},
playAnim: function(e) {
var t = this.node.getChildByName("anim" + e);
if (255 != t.opacity) {
t.getComponent(cc.Sprite).spriteFrame = null;
t.opacity = 255;
this.sp_top.getChildByName("i" + e).opacity = 0;
this.sp_mid.getChildByName("i" + e).opacity = 0;
var i = t.getChildByName("skeletonNode").getComponent(sp.Skeleton), a = "500/AGameSpine/" + n[this.i_icons[e]];
cc.loader.loadRes(a, sp.SkeletonData, function(e, t) {
i.skeletonData = t;
i.animation = "animation";
});
}
},
stopAnim: function(e) {
var t = this.node.getChildByName("anim" + e);
t.opacity = 0;
this.sp_top.getChildByName("i" + e).opacity = 255;
this.sp_mid.getChildByName("i" + e).opacity = 255;
var i = t.getChildByName("skeletonNode").getComponent(sp.Skeleton);
i.skeletonData = null;
i.animation = null;
},
setIcons: function(e) {
this.i_icons = e;
0 == this.sp_top.position.y ? this.setIcons2node(this.sp_top, this.i_icons[0], this.i_icons[1], this.i_icons[2], this.i_icons[3]) : this.setIcons2node(this.sp_mid, this.i_icons[0], this.i_icons[1], this.i_icons[2], this.i_icons[3]);
},
setGray: function(e, t, i) {
if (e) {
this.sp_top.getChildByName("i" + i).color = new cc.Color(128, 128, 128);
this.sp_mid.getChildByName("i" + i).color = new cc.Color(128, 128, 128);
} else {
this.sp_top.getChildByName("i" + i).color = new cc.Color(255, 255, 255);
this.sp_mid.getChildByName("i" + i).color = new cc.Color(255, 255, 255);
}
},
randomIcons: function(e) {
var t = Math.floor(13 * Math.random()), i = Math.floor(13 * Math.random()), n = Math.floor(13 * Math.random()), a = Math.floor(13 * Math.random());
e.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.iconsVague[t];
e.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.iconsVague[i];
e.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.iconsVague[n];
e.getChildByName("i3").getComponent(cc.Sprite).spriteFrame = this.iconsVague[a];
},
setIcons2node: function(e, t, i, n, a) {
e.getChildByName("i0").getComponent(cc.Sprite).spriteFrame = this.icons[t];
e.getChildByName("i1").getComponent(cc.Sprite).spriteFrame = this.icons[i];
e.getChildByName("i2").getComponent(cc.Sprite).spriteFrame = this.icons[n];
e.getChildByName("i3").getComponent(cc.Sprite).spriteFrame = this.icons[a];
},
roll: function() {
var e = this;
this.b_stop = !1;
this.b_stoped = !1;
if (0 == this.sp_top.position.y) {
var t = this.sp_top;
this.sp_top = this.sp_mid;
this.sp_mid = t;
}
this.n_act1 = 1;
this.randomIcons(this.sp_top);
var i = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act1++;
if (e.n_act1 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t, e.i_icons[0], e.i_icons[1], e.i_icons[2], e.i_icons[3]);
var i = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(e) {
window.mfConfig.PlayAudio("500/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_mid.setPosition(0, e.i_rollHeight);
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.n_act2 = 0;
var n = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(t) {
e.n_act2++;
if (e.n_act2 % 2 == 1) {
t.setPosition(0, e.i_rollHeight);
if (e.b_stop) {
t.stopAllActions();
if (e.b_stoped) ; else {
e.setIcons2node(t, e.i_icons[0], e.i_icons[1], e.i_icons[2], e.i_icons[3]);
var i = cc.sequence(cc.moveBy(.15, cc.v2(0, -e.i_rollHeight)), cc.callFunc(function(e) {
window.mfConfig.PlayAudio("500/Audio/reel_stop_01", !1, window.mfConfig.fSound);
}), cc.moveBy(.1, cc.v2(0, -100)), cc.moveBy(.1, cc.v2(0, 100)), cc.callFunc(function(t) {
t.setPosition(0, 0);
e.sp_top.setPosition(0, e.i_rollHeight);
}));
t.runAction(i);
e.b_stoped = !0;
}
} else e.randomIcons(t);
} else t.setPosition(0, 0);
}));
this.sp_top.runAction(cc.repeatForever(i));
this.sp_mid.runAction(cc.repeatForever(n));
},
quickstop: function(e) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.setIcons(e);
},
quickstopItem: function(e, t) {
this.sp_top.stopAllActions();
this.sp_mid.stopAllActions();
this.sp_top.setPosition(0, this.i_rollHeight);
this.sp_mid.setPosition(0, 0);
this.i_icons[e] = t;
this.sp_mid.getChildByName("i" + e).getComponent(cc.Sprite).spriteFrame = this.icons[t];
},
stopRoll: function(e) {
this.i_icons = e;
this.b_stop = !0;
},
getPos: function(e) {
for (var t = [], i = 0; i < 4; i++) {
var n = this.sp_mid.getChildByName("i" + i).convertToWorldSpaceAR(cc.v2(0, 0)), a = e.convertToNodeSpaceAR(n);
t.push(a);
}
return t;
}
});
cc._RF.pop();
}, {} ],
Slot_rollNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d3f01bocTVAIIndM7yb0MHh", "Slot_rollNum");
cc.Class({
extends: cc.Component,
properties: {
nodeNum0: cc.Node,
nodeNum1: cc.Node
},
onLoad: function() {
this.startNum = 0;
},
setData: function(e) {
this.node.active = !0;
this.nodeNum0.getComponent(cc.Label).string = e;
this.nodeNum1.getComponent(cc.Label).string = e;
},
startRoll: function(e, t, i) {
var n = this;
this.nodeNum0.getComponent(cc.Label).string, this.nodeNum1.getComponent(cc.Label).string;
if (i != this.nodeNum0.getComponent(cc.Label).string && i != this.nodeNum1.getComponent(cc.Label).string) {
this.index = e;
this.startNum = t;
this.endNum = i;
this.stop = !1;
this.b_stoped = !1;
this.nodeNum0.getComponent(cc.Label).string = this.startNum++;
this.nodeNum1.getComponent(cc.Label).string = this.startNum++;
this.n_act1 = 1;
var a = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act1++;
if (n.n_act1 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.n_act2 = 0;
var o = cc.sequence(cc.moveBy(.1, cc.v2(0, 60)), cc.callFunc(function(e) {
n.n_act2++;
if (n.n_act2 % 2 == 1) ; else {
var t = 0;
t = n.endNum < 9 ? parseInt(n.endNum) + 1 : 0;
if (n.startNum == t) {
n.nodeNum0.stopAllActions();
n.nodeNum1.stopAllActions();
n.nodeNum0.y = 0;
n.nodeNum1.y = 0;
}
e.setPosition(0, -60);
e.getComponent(cc.Label).string = n.startNum++;
10 == n.startNum && (n.startNum = 0);
}
}));
this.nodeNum0.runAction(cc.repeatForever(a));
this.nodeNum1.runAction(cc.repeatForever(o));
}
}
});
cc._RF.pop();
}, {} ],
Slot_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5066bv4x11HVJfSSKaOgrm5", "Slot_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e) {
this.i_num = parseFloat(e);
this.i_cur_num = 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
this.i_step = this.i_num / 100;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
}
}
});
cc._RF.pop();
}, {} ],
Struct: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aca4dyGfSlA7o/MXZUHqKVF", "Struct");
e("ACMD_AStruct");
window.YQ_FIELD_MATCH_FLAG_JOID = 1e3;
window.YQ_FIELD_MATCH_FLAG_JOIN_SHOW_IN_QUICK = 2e3;
window.YQ_FIELD_PRIVATE_FLAG_JOIN = 3e3;
window.YQ_KIND_HOT_FLAG_JOID = 1;
window.YQ_KIND_COMING_SOON_FLAG_JOID = 2;
window.YQ_KIND_POP_FLAG_JOID = 4;
window.YQ_KIND_HORRON_FLAGE_JOID = 8;
window.YQ_KIND_NEW_FLASGE_JOID = 16;
window.YQ_KIND_BETA_FLASGE_JOID = 32;
window.YQ_KIND_NO_PC_FLAG_JOID = 64;
window.YQ_KIND_NO_MB_FLAG_JOID = 128;
window.MAX_ITEM_DESC_LEN = 256;
window.KIND_ITEM_HOT_MOVE_MIXED = 5;
window.tagUserAttribute = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szAccounts = [];
ZeroArray(this.szAccounts, LEN_ACCOUNTS);
this.szPassword = [];
ZeroArray(this.szPassword, LEN_PASSWORD);
this.dwUserID = 0;
this.wTableID = 0;
this.wChairID = 0;
this.dwUserRight = 0;
this.dwMasterRight = 0;
}
});
window.tagGameAttribute = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wChairCount = 0;
this.dwClientVersion = 0;
this.szGameName = [];
ZeroArray(this.szGameName, LEN_KIND);
}
});
window.tagServerAttribute = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wServerID = 0;
this.wAreaID = 0;
this.wFieldID = 0;
this.wKindID = 0;
this.wNodeID = 0;
this.wSortID = 0;
this.wServerPort = 0;
this.wServerType = 0;
this.dwOnLineCount = 0;
this.dwFullCount = 0;
this.szServerAddr = [];
this.szServerName = [];
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.lMaxEnterScore = 0;
this.lMaxSingleExp = 0;
this.wTableCount = 0;
this.wChairCount = 0;
this.dwServerRule = 0;
ZeroArray(this.szServerAddr, LEN_SERVER);
ZeroArray(this.szServerName, LEN_SERVER);
}
});
window._GameType = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTypeID = 0;
this.wJoinID = 0;
this.wSortID = 0;
this.szTypeName = [];
ZeroArray(this.szTypeName, LEN_TYPE);
}
});
window._GameKind = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wTypeID = 0;
this.wJoinID = 0;
this.wSortID = 0;
this.wGameID = 0;
this.dwOnLineCount = 0;
this.dwFullCount = 0;
this.szKindName = [];
this.dwGameVersion = 0;
memset(this.szKindName, 0, LEN_KIND);
}
});
window._UpdateConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.szUpdateAddress = [];
this.szPackageAddress = [];
memset(this.szUpdateAddress, 0, LEN_MB_DOWNLOAD_URL);
memset(this.szPackageAddress, 0, LEN_MB_DOWNLOAD_URL);
}
});
window._GameArea = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wAreaID = 0;
this.wJoinID = 0;
this.wSortID = 0;
this.wKindID = 0;
this.szAreaName = [];
ZeroArray(this.szAreaName, LEN_TYPE);
}
});
window._GameField = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wFieldID = 0;
this.wJoinID = 0;
this.wSortID = 0;
this.wAreaID = 0;
this.szFieldName = [];
memset(this.szFieldName, 0, LEN_TYPE);
this.szDescribe = [];
memset(this.szDescribe, 0, LEN_DESCRIBE);
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.lMaxEnterScore = 0;
this.dwOnlineNum = 0;
}
});
window._GameNode = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wJoinID = 0;
this.wSortID = 0;
this.wNodeID = 0;
this.szNodeName = [];
ZeroArray(this.szNodeName, LEN_NODE);
}
});
window._GamePage = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wPageID = 0;
this.wKindID = 0;
this.wNodeID = 0;
this.wSortID = 0;
this.wOperateType = 0;
this.szDisplayName = [];
ZeroArray(this.szDisplayName, LEN_PAGE);
}
});
window._GameServer = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wServerID = 0;
this.wAreaID = 0;
this.wFieldID = 0;
this.wKindID = 0;
this.wNodeID = 0;
this.wSortID = 0;
this.wServerPort = 0;
this.wServerType = 0;
this.dwOnLineCount = 0;
this.dwFullCount = 0;
this.szServerAddr = [];
this.szServerName = [];
this.lCellScore = 0;
this.lMinEnterScore = 0;
this.lMaxEnterScore = 0;
this.lMaxSingleExp = 0;
ZeroArray(this.szServerAddr, LEN_SERVER);
ZeroArray(this.szServerName, LEN_SERVER);
}
});
window._MBTableConfig = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wServerID = 0;
this.cbConfigType = 0;
this.cbValueCont = 0;
this.lConfigValue = [];
ZeroArray(this.lConfigValue, 16);
}
});
window._GameRoomAttrib = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wChairCount = 0;
this.wSupporType = 0;
this.szGameName = [];
this.wGameFuncFlag = 0;
this.dwServerVersion = 0;
this.dwClientVersion = 0;
this.szDataBaseName = [];
this.szServerDLLName = [];
this.szClientEXEName = [];
ZeroArray(this.szGameName, LEN_KIND);
ZeroArray(this.szDataBaseName, 32);
ZeroArray(this.szServerDLLName, LEN_PROCESS);
ZeroArray(this.szClientEXEName, LEN_PROCESS);
}
});
window._GameRoomOption = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wAreaID = 0;
this.wFieldID = 0;
this.wKindID = 0;
this.wNodeID = 0;
this.wSortID = 0;
this.wServerID = 0;
this.lCellScore = 0;
this.wRevenueRatio = 0;
this.lServiceScore = 0;
this.lRestrictScore = 0;
this.lMinTableScore = 0;
this.lMinEnterScore = 0;
this.lMaxEnterScore = 0;
this.lStockScore = 0;
this.wStockDeduct = 0;
this.cbMinEnterMember = 0;
this.cbMaxEnterMember = 0;
this.dwServerRule = 0;
this.dwAttachUserRight = 0;
this.wMaxPlayer = 0;
this.wTableCount = 0;
this.wServerPort = 0;
this.wServerType = 0;
this.szServerName = [];
this.lMaxSingleExp = 0;
this.cbDistributeRule = 0;
this.wMinDistributeUser = 0;
this.wMaxDistributeUser = 0;
this.wDistributeTimeSpace = 0;
this.wDistributeDrawCount = 0;
this.wDistributeStartDelay = 0;
this.szDataBaseAddr = [];
this.szDataBaseName = [];
this.cbCustomRule = [];
ZeroArray(this.szServerName, LEN_SERVER);
ZeroArray(this.szDataBaseName, 32);
ZeroArray(this.szDataBaseAddr, 16);
ZeroArray(this.cbCustomRule, 1024);
}
});
window._ServerOptionInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wKindID = 0;
this.wNodeID = 0;
this.wSortID = 0;
this.wRevenueRatio = 0;
this.lServiceScore = 0;
this.lRestrictScore = 0;
this.lMinTableScore = 0;
this.lMinEnterScore = 0;
this.lMaxEnterScore = 0;
this.lMaxSingleExp = 0;
this.cbMinEnterMember = 0;
this.cbMaxEnterMember = 0;
this.dwServerRule = 0;
this.szServerName = [];
ZeroArray(this.szServerName, LEN_SERVER);
}
});
window._TimeInfo = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwEnterTableTimer = 0;
this.dwLeaveTableTimer = 0;
this.dwStartGameTimer = 0;
this.dwEndGameTimer = 0;
}
});
window._UserInfoHead = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.dwGameID = 0;
this.dwUserID = 0;
this.cbDeviceType = 0;
this.cbFaceID = 0;
this.cbFrameID = 0;
this.cbGender = 0;
this.cbMemberOrder = 0;
this.cbMasterOrder = 0;
this.dwMemberExp = 0;
this.wTableID = 0;
this.wChairID = 0;
this.cbUserStatus = 0;
this.lScore = 0;
this.lInsure = 0;
this.dwWinCount = 0;
this.dwLostCount = 0;
this.dwDrawCount = 0;
this.dwFleeCount = 0;
this.dwExperience = 0;
this.dwIp = 0;
}
});
window._TableStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbTableLock = 0;
this.cbPlayStatus = 0;
}
});
window._UserStatus = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.wTableID = 0;
this.wChairID = 0;
this.cbUserStatus = 0;
}
});
window._UserAttrib = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.cbCompanion = 0;
}
});
window._MobileUserScore = cc.Class({
extends: CMD_Struct,
ctor: function() {
this.lScore = 0;
this.dwWinCount = 0;
this.dwLostCount = 0;
this.dwDrawCount = 0;
this.dwFleeCount = 0;
this.dwExperience = 0;
}
});
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct"
} ],
TG_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5fa63o0ui5Oi4Cw3lp9pad7", "TG_CMD_Game");
t.exports.GAME_PLAYER = 3;
t.exports.GAME_NAME = "tongits";
t.exports.MAX_COUNT = 20;
t.exports.MASK_COLOR = 240;
t.exports.MASK_VALUE = 15;
t.exports.MASK_LAIZI = 80;
t.exports.GAME_SCENE_FREE = 0;
t.exports.GAME_SCENE_PLAY = 100;
t.exports.GAME_SCENE_FIGHT = 101;
t.exports.MY_STATUS_FREE = 0;
t.exports.MY_STATUS_GAME_PLAY = 613;
t.exports.MY_STATUS_CONCLUDE = 614;
t.exports.GAME_PLAYER = 3;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_MAKE_GROUP = 102;
t.exports.SUB_S_GET_DISCARD = 103;
t.exports.SUB_S_SEND_CARD = 104;
t.exports.SUB_S_DUMP_CARD = 105;
t.exports.SUB_S_USER_FIGHT = 106;
t.exports.SUB_S_ANSWER_FIGHT = 107;
t.exports.SUB_S_NOTIFY_USER = 108;
t.exports.SUB_S_GAME_END = 109;
t.exports.SUB_S_USER_TRUSTEE = 110;
t.exports.SUB_S_KICK_USER = 111;
t.exports.SUB_S_GAME_DELAY = 200;
var n = cc.Class({
extends: CMD_Struct,
properties: {
cbSearchCount: 0,
cbCardCount: [],
cbResultCard: []
},
ctor: function() {
this.initData();
},
initData: function() {
this.cbSearchCount = 0;
ZeroArray(this.cbCardCount, 20);
ZeroArray2(this.cbResultCard, 20, 20);
}
});
t.exports.CMD_SearchCardResult = n;
t.exports.SUB_C_MAKE_GROUP = 1;
t.exports.SUB_C_GET_DISCARD = 2;
t.exports.SUB_C_SEND_CARD = 3;
t.exports.SUB_C_DUMP_CARD = 4;
t.exports.SUB_C_USER_FIGHT = 5;
t.exports.SUB_C_ANSWER_FIGHT = 6;
t.exports.SUB_C_USER_TRUSTEE = 7;
t.exports.ACTION_NONE = 0;
t.exports.ACTION_FIGHT = 1;
t.exports.ACTION_CHALLENGE = 2;
t.exports.ACTION_FOLD = 4;
t.exports.ACTION_CHOW = 8;
t.exports.ACTION_DUMP = 16;
t.exports.ACTION_MELD = 32;
t.exports.ACTION_SAPOW = 64;
t.exports.ACTION_GETCARD = 128;
t.exports.GAME_END_NONE = 0;
t.exports.GAME_END_TONGITS = 1;
t.exports.GAME_END_FIGHT = 2;
t.exports.GAME_END_NO_CARD = 4;
cc._RF.pop();
}, {} ],
TG_CardCount: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d7dd67kU5tD9KngaRX3reLY", "TG_CardCount");
cc.Class({
extends: cc.Component,
properties: {
CountLabel: cc.Label
},
onLoad: function() {},
OnUpdateCount: function() {
var e = this.node.parent.getChildren().length - 1;
this.node.active = !0;
0 == e && (this.node.active = !1);
this.CountLabel.string = e;
return e;
}
});
cc._RF.pop();
}, {} ],
TG_CardGroup: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a9139e4kftDXK0ul6BUZltP", "TG_CardGroup");
cc.Class({
extends: cc.Component,
properties: {
nodeArrow: cc.Node,
nodeCard: cc.Node,
nodeBg: cc.Node,
nodeBtnDumpCards: cc.Node,
nodeFire: cc.Node,
pfCardMin: cc.Prefab
},
onLoad: function() {
this.cbGroupIdx = 0;
this.groupCards = [];
},
InitData: function(e, t) {
var i = this;
this.jsGameView = e;
this.wChairID = t.ChairID;
this.cbGroupIdx = t.GroupIdx;
this.cbOperateCard = t.OperatorCard;
this.groupCards = this.groupCards.concat(t.GroupCards);
this.OnUpdateGroup();
for (var n = this.groupCards.length, a = 0; a < n; a++) if (this.groupCards[a] == this.cbOperateCard) {
this.nodeFire.active = !0;
var o = this.nodeFire.getComponent(sp.Skeleton);
PlaySkeletonAnimation(o, !0, "animation");
this.scheduleOnce(function() {
i.nodeFire.active = !1;
}, 2.5);
window.mfConfig.PlayAudio("400/Audio/Tongits_eat_card", !1, window.mfConfig.fSound);
return;
}
},
UpdateGroup: function(e, t) {
this.nodeCard.removeAllChildren();
for (var i = 0; i < t; i++) this.groupCards.push(e[i]);
this.OnUpdateGroup(e);
},
OnUpdateGroup: function(e) {
this.groupCards.sort(function(e, t) {
return e - t;
});
for (var t = this.groupCards.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfCardMin);
this.nodeCard.addChild(n);
var a = n.getComponent("TG_Card");
a.SetCardDataNew(!0, this.groupCards[i], i, 1);
this.groupCards[i] == this.cbOperateCard && a.OpenOptFlag();
a.node.width = 1 * a.node.width;
a.node.height = 1 * a.node.height;
this.nodeCard.height = a.node.height;
}
if (null != e) for (var o = function(t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) return !0;
return !1;
}, s = this.nodeCard.children, r = this.nodeCard.childrenCount, c = 0; c < r; c++) {
var l = s[c].getComponent("TG_Card");
o(l.GetCardData()) && l.OpenPutFlag();
}
this.nodeCard.getComponent(cc.Layout).updateLayout();
this.node.width = this.nodeCard.width;
this.node.height = this.nodeCard.height;
this.nodeBg.width = this.nodeCard.width;
this.nodeBtnDumpCards.width = this.nodeCard.width - 20;
this.nodeBtnDumpCards.height = this.nodeCard.height - 20;
this.nodeBg.active = !1;
this.nodeBtnDumpCards.active = !1;
},
ActiveGroupOperate: function(e) {
this.nodeBtnDumpCards.active = e;
this.nodeArrow.active = e;
},
RemovePutFlag: function() {
for (var e = this.nodeCard.children, t = this.nodeCard.childrenCount, i = 0; i < t; i++) {
e[i].getComponent("TG_Card").ClosePutFlag();
}
},
OnButtonEvent: function(e, t) {
"btnDumpCards" == e.target.name && this.OnBtnDumpCards();
},
OnBtnDumpCards: function() {
var e = this.jsGameView.cbOutCardData.concat();
this.jsGameView.jsGameEngine.OnSendEventDumpCard(e, this.cbGroupIdx);
}
});
cc._RF.pop();
}, {} ],
TG_CardRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9016Hs6Y5GCaZHRkInUn5A", "TG_CardRecord");
cc.Class({
extends: cc.Component,
properties: {
nodeCard: [ cc.Node ],
pfCard: cc.Prefab
},
OnUpdateCardRecord: function(e) {
for (var t = 0; t < 4; t++) this.nodeCard[t].removeAllChildren();
for (var i = e.length, n = 0; n < i; n++) {
var a = (240 & e[n]) >> 4, o = cc.instantiate(this.pfCard);
this.nodeCard[a].addChild(o);
o.getComponent("TG_Card").SetCardData(.28, n, e[n]);
}
}
});
cc._RF.pop();
}, {} ],
TG_Card: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "90f98e81qhBIokBLHPZwPbN", "TG_Card");
var n = e("TG_HandCard"), a = cc.color(255, 255, 255), o = cc.color(165, 201, 255), s = cc.color(218, 167, 207), r = 0, c = 1, l = 2;
cc.Class({
extends: cc.Component,
properties: {
nodeCard: cc.Node,
nodeSpecial: cc.Node,
nodePutFlag: cc.Node,
nCard_Width: 0,
nCard_Height: 0,
cbCard_Data: 0,
cbCard_DataIndex: 0,
cbCard_Value: 0,
cbCard_Color: 0,
szCard_Name: "",
mCard_ViewID: 0,
mCard_ChairID: 0,
cbCard_Status: 0,
cbCard_Mark: 0,
pCard_BankerSign: null,
bCard_EnableSelect: !1,
bCard_Select: !1,
bCard_Move: !1,
bCard_Touch: !1,
bCard_Swallows: !1
},
onLoad: function() {
this.initData();
},
initData: function() {
this.cbCard_Data = 0;
this.cbCard_DataIndex = 0;
this.cbCard_Value = 0;
this.cbCard_Color = 0;
this.szCard_Name = "";
this.mCard_ViewID = 0;
this.mCard_ChairID = null;
this.cbCard_Status = 0;
this.cbCard_Mark = 0;
this.pCard_BankerSign = 0;
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return 240 & e;
},
SetStatus: function(e) {
this.cbCard_Status = e;
},
GetStatus: function() {
return this.cbCard_Status;
},
OpenDisableStatus: function() {
this.bCard_EnableSelect = !0;
this.node.color = cc.color(170, 170, 170);
},
CloseDisableStatus: function() {
this.bCard_EnableSelect = !1;
this.node.color = cc.color(255, 255, 255);
},
SetSelect: function(e) {
this.bCard_Select = e;
},
GetSelect: function() {
return this.bCard_Select;
},
SetSwallows: function(e) {
this.bCard_Swallows = e;
},
GetSwallows: function() {
return this.bCard_Swallows;
},
SetCardData: function(e, t, i) {
var n = this.GetCardColor(i) >> 4, a = 78 == i || 79 == i ? this.GetCardValue(i) % 14 : this.GetCardValue(i) - 1, o = this.nodeCard.getComponent(cc.Sprite);
o.spriteFrame = o.spriteFrame.clone();
o.spriteFrame.setRect(cc.rect(this.nCard_Width * a, this.nCard_Height * n, this.nCard_Width, this.nCard_Height));
this.cbCard_Data = i;
this.cbCard_Value = a;
this.cbCard_Color = n;
this.cbCard_DataIndex = t;
0 != a && 12 != a || (this.nodeSpecial.active = !0);
this.node.setScale(e, e);
},
SetCardDataNew: function(e, t, i, a) {
var o = this.GetCardColor(t) >> 4, s = 78 == t || 79 == t ? this.GetCardValue(t) % 14 : this.GetCardValue(t) - 1;
this.nodeCard.getComponent(cc.Sprite).spriteFrame = n.GetPkFrame(e, t);
this.cbCard_Data = t;
this.cbCard_Value = s;
this.cbCard_Color = o;
this.cbCard_DataIndex = i;
4 == arguments.length && this.node.setScale(a, a);
},
GetCardData: function() {
return this.cbCard_Data;
},
ActionMove: function(e, t) {
var i = this.node.getPosition();
this.node.setPosition(e, t);
this.node.setScale(.5);
var n = cc.spawn(cc.moveTo(2, i), cc.scaleBy(2, .58));
this.node.runAction(n);
},
ResetData: function() {
this.SetStatus(r);
this.cbCard_Mark = !1;
this.SetSelect(!1);
this.node.color = new cc.Color(255, 255, 255);
this.bCard_EnableSelect = !1;
this.bCard_Select = !1;
this.bCard_Move = !1;
this.bCard_Touch = !1;
this.bCard_Swallows = !1;
},
SetFrontCardTexture: function(e) {
var t = this.nodeCard.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(this.nCard_Width * cbValue, this.nCard_Height * cbColor, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetBackCardTexture: function(e) {
var t = this.nodeCard.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
t.spriteFrame.setRect(cc.rect(2 * this.nCard_Width, 4 * this.nCard_Height, this.nCard_Width, this.nCard_Height));
this.node.setScale(e, e);
},
SetEndCardTexture: function(e) {
this.node.setScale(e, e);
this.node.setPositionY(this.node.getPositionY() - 25);
this.SetSelect(!1);
},
SetOntouch: function(e) {
this.SetSelect(e);
},
SetpromptCardTexture: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 25);
this.SetSelect(!1);
}
},
OnCardClickBegin: null,
OnCardClickEnded: null,
OnCardButtonEvent: function() {
if (!this.OnCardClickBegin || !this.OnCardClickBegin(this)) {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 25);
this.SetSelect(!1);
} else {
this.node.setPositionY(this.node.getPositionY() + 25);
this.SetSelect(!0);
}
this.OnCardClickEnded && this.OnCardClickEnded(this);
}
},
OnCardUpspringEvent: function() {
if (!this.bCard_EnableSelect && !this.bCard_Select) {
this.SetStatus(c);
this.node.setPositionY(this.node.getPositionY() + 25);
this.cbCard_Mark = !0;
this.SetSwallows(!0);
this.SetSelect(!0);
}
},
OnCardDownEvent: function() {
if (!this.bCard_EnableSelect && this.bCard_Select) {
this.SetStatus(l);
this.node.setPositionY(this.node.getPositionY() - 25);
this.cbCard_Mark = !1;
this.SetSwallows(!0);
this.SetSelect(!1);
}
},
TurnhandLayout: function() {
this.SetSelect(!1);
},
SubAlign: function() {
if (this.GetSelect()) {
this.node.setPositionY(this.node.getPositionY() - 25);
this.SetSelect(!1);
}
},
OpenOptFlag: function() {
this.nodeCard.color = o;
},
CloseOptFlag: function() {
this.nodeCard.color = a;
},
OpenPutFlag: function() {
this.nodeCard.color = s;
this.nodePutFlag.active = !0;
},
ClosePutFlag: function() {
if (this.nodePutFlag.active) {
this.nodeCard.color = a;
this.nodePutFlag.active = !1;
}
}
});
cc._RF.pop();
}, {
TG_HandCard: "TG_HandCard"
} ],
TG_GameEffect: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c9d13w8fgJEvZ9EcvnGZyxY", "TG_GameEffect");
cc.Class({
extends: cc.Component,
properties: {
nodeGameSPEffect: [ cc.Node ]
},
onLoad: function() {},
OnPlayEffect: function(e, t) {
var i = this;
null != t && null != t && (this.callBackFinish = t);
var n = this.nodeGameSPEffect[e];
n.active = !0;
var a = n.getComponent(sp.Skeleton), o = PlaySkeletonAnimation(a, !1, "animation");
this.OnEffecAudio(e);
4 == e && this.scheduleOnce(function() {
i.nodeGameSPEffect[4].active = !1;
i.OnPlayEffect(5);
}, .5);
o.setCompleteListener(function() {
n.active = !1;
null != t && null != t && i.callBackFinish();
});
},
OnEffecAudio: function(e) {
switch (e) {
case 2:
window.mfConfig.PlayAudio("400/Audio/fly", !1, window.mfConfig.fSound);
break;

case 3:
window.mfConfig.PlayAudio("400/Audio/bomb", !1, window.mfConfig.fSound);
break;

case 5:
window.mfConfig.PlayAudio("400/Audio/Bigbomb", !1, window.mfConfig.fSound);
}
}
});
cc._RF.pop();
}, {} ],
TG_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08dcdwREZVFsZHcmRSiysKQ", "TG_GameEngine");
var n = e("TG_CMD_Game"), a = e("TG_GameLogic").GameLogic, o = cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node,
pGameLogic: cc.Node,
cbPlayUser: []
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("TG_GameView");
this.pGameViewJs.jsGameEngine = this;
this.pGameLogic = new a();
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("400/Audio/tongits_bgn", !0, window.mfConfig.fMusic);
},
ResetGameEngine: function() {},
OnButtonGameChat: function() {
var e = this;
cc.loader.loadRes("400/APrefab/ChatLayout200", cc.Prefad, function(t, i) {
if (i) {
var n = cc.instantiate(i);
e.nodeRootCanvas.addChild(n, 100);
n.setPosition(cc.v2(960, 540));
window.H5_Evnet.OnRotationNode(n);
}
});
},
OnEventSceneMessage: function(e, t, i, a) {
var o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnPotInfo(o);
return e == n.GAME_SCENE_FREE ? this.OnSceneFree(i) : e != n.GAME_SCENE_PLAY && e != n.GAME_SCENE_FIGHT || this.OnScenePlay(i);
},
OnSceneFree: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.pGameViewJs.nTimeDown = t.TimeLeave;
this.pGameViewJs.cbFightTime = t.FightTime;
this.pGameViewJs.cbGameStatus = n.MY_STATUS_FREE;
},
OnScenePlay: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameScene", e);
this.cbPlayUser = t.PlayerStatus.concat();
this.pGameViewJs.nTimeDown = t.TimeLeave;
this.pGameViewJs.cbFightTime = t.FightTime;
this.pGameViewJs.onSceneGamePlay(t);
this.pGameViewJs.cbGameStatus = n.MY_STATUS_GAME_PLAY;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnEventSubGameFree(t);

case n.SUB_S_GAME_START:
return this.OnEventSubGameStart(t);

case n.SUB_S_MAKE_GROUP:
return this.OnEventSubMakeGroup(t);

case n.SUB_S_GET_DISCARD:
return this.OnEventSubGetDiscard(t);

case n.SUB_S_SEND_CARD:
return this.OnEventSubSendCard(t);

case n.SUB_S_DUMP_CARD:
return this.OnEventSubDumpCard(t);

case n.SUB_S_USER_FIGHT:
return this.OnEventSubUserFight(t);

case n.SUB_S_ANSWER_FIGHT:
return this.OnEventSubAnswerFight(t);

case n.SUB_S_NOTIFY_USER:
return this.OnEventSubNotifyUser(t);

case n.SUB_S_GAME_END:
return this.OnEventSubGameEnd(t, i);

case n.SUB_S_USER_TRUSTEE:
return this.OnEventSubTrustee(t, i);

case n.SUB_S_KICK_USER:
return this.OnEventKickUser(t, i);
}
},
OnEventSubGameFree: function(e) {
window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
},
OnEventSubGameStart: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.OnFrameGameStart();
this.cbPlayUser = t.PlayerStatus.concat();
this.pGameViewJs.cbGameStatus = n.MY_STATUS_GAME_PLAY;
this.pGameViewJs.ResetGameView();
this.pGameViewJs.OnGameStart(t);
this.pGameViewJs.OnSetLeftCardNum(t.LeftCardNum);
this.pGameViewJs.OnSetUserOperateButton(t.UserAction);
},
OnEventSubMakeGroup: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_MakeGroup", e);
this.pGameViewJs.OnEventMakeGroup(t);
},
OnEventSubGetDiscard: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GetDisCard", e);
this.pGameViewJs.OnEventGetDisCard(t);
},
OnEventSubSendCard: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_SendCard", e);
this.pGameViewJs.OnEventSendOneCard(t);
},
OnEventSubDumpCard: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_DumpCard", e);
this.pGameViewJs.OnEventDumpCard(t);
},
OnEventSubUserFight: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_UserFight", e);
this.pGameViewJs.OnEventUserFight(t);
},
OnEventSubAnswerFight: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_AnswerFight", e);
this.pGameViewJs.OnEventAnswerFight(t);
},
OnEventSubNotifyUser: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_NotifyUserTurn", e);
this.pGameViewJs.OnEventNotifyUser(t);
},
OnEventSubGameEnd: function(e) {
var t = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.pGameViewJs.OnEventGameEnded(t);
this.OnFrameGameEnded(t.lGameScore);
},
OnEventSubTrustee: function(e) {
window.net.netSerializer.unpackMsg("CMD_S_UserTrustee", e);
},
OnEventKickUser: function(e) {
window.net.netSerializer.unpackMsg("CMD_S_KickUser", e);
},
OnSendEventMakeGroup: function(e) {
var t = {};
t.Cards = e;
var i = window.net.netSerializer.packMsg("CMD_C_MakeGroup", t);
this.SendGameData(n.SUB_C_MAKE_GROUP, i, i.length);
},
OnSendEventGetDiscard: function(e) {
var t = {};
t.Cards = e;
var i = window.net.netSerializer.packMsg("CMD_C_GetDisCard", t);
this.SendGameData(n.SUB_C_GET_DISCARD, i, i.length);
},
OnSendEventSendCard: function() {
var e = window.net.netSerializer.packMsg("CMD_C_SendCard", {});
this.SendGameData(n.SUB_C_SEND_CARD, e, e.length);
},
OnSendEventDumpCard: function(e, t) {
var i = {};
i.DumpCards = e;
i.GroupIdx = t;
var a = window.net.netSerializer.packMsg("CMD_C_DumpCard", i);
this.SendGameData(n.SUB_C_DUMP_CARD, a, a.length);
},
OnSendEventUserFight: function() {
var e = window.net.netSerializer.packMsg("CMD_C_UserFight", {});
this.SendGameData(n.SUB_C_USER_FIGHT, e, e.length);
},
OnSendEventAnswerFight: function(e) {
var t = {};
t.OpCode = e;
var i = window.net.netSerializer.packMsg("CMD_C_AnswerFight", t);
this.SendGameData(n.SUB_C_ANSWER_FIGHT, i, i.length);
},
OnSendEventUserTrustee: function() {
var e = window.net.netSerializer.packMsg("CMD_C_UserTrustee", {});
this.SendGameData(n.SUB_C_USER_TRUSTEE, e, e.length);
},
OnGameStandUp: function() {
this.cbPlayUser[this.wMeChairID] ? this.SendPacketStandUp(null, !0) : this.SendPacketStandUp(null, !1);
}
});
t.exports.GameEngineJs = o;
cc._RF.pop();
}, {
TG_CMD_Game: "TG_CMD_Game",
TG_GameLogic: "TG_GameLogic"
} ],
TG_GameLogic: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "491d3ys7zhIbJbNMkD9vzhv", "TG_GameLogic");
t.exports.m_cbCardData = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 ];
var n = cc.Class({
statics: {
instance: null
},
ctor: function() {
n.instance = this;
},
GetCardValue: function(e) {
return 15 & e;
},
GetCardColor: function(e) {
return (240 & e) >> 4;
},
GetCardPoint: function(e) {
var t = 15 & e;
t > 10 && (t = 10);
return t;
},
GetCardLogicValue: function(e) {
var t = this.GetCardColor(e), i = this.GetCardValue(e);
if (i <= 0 || i > 15) return 0;
cc.assert(i > 0 && i <= 15);
return 64 == t ? i + 2 : 80 == t ? i + 17 : i <= 2 ? i + 13 : i;
},
IsKindOfSame: function(e, t) {
if (t < 3 || t > 4) return !1;
for (var i = this.GetCardValue(e[0]), n = 1; n < t; n++) if (this.GetCardValue(e[n]) != i) return !1;
return !0;
},
IsKindOfLine: function(e) {
var t = e.concat();
this.SortCardList(t);
for (var i = 1; i < t.length; i++) if (t[i] - t[0] != i - 0) return !1;
return !0;
},
IsKindOfBoom: function(e, t) {
if (4 != t) return !1;
for (var i = this.GetCardValue(e[0]), n = 1; n < t; n++) if (this.GetCardValue(e[n]) != i) return !1;
return !0;
},
IsHaveBoom: function(e, t) {
var i = [];
ZeroArray(i, 14);
for (var n = 0; n < t; n++) {
i[this.GetCardValue(e[n])]++;
}
for (var a = 0; a < i.length; a++) if (4 == i[a]) return !0;
return !1;
},
GetOptimalGroups: function(e) {
if (e.length < 3) return {
Point: this.CalcCardsPoint(e),
Groups: [],
LeftCards: e
};
for (var t = e.concat(), i = this.EnumAllGroups(t), n = [], a = 0; a < i.length; a++) for (var o = 0; o < i[a].length; o++) {
var s = i[a][o];
n[s] || (n[s] = {
Count: 0,
UsedIndex: []
});
n[s].Count = n[s].Count + 1;
n[s].UsedIndex.push(a);
this.removebyvalue(t, i[a][o]);
}
for (var r = t.concat(), c = [], l = this.CheckGroups(i, n), h = l.length - 1; h >= 0; h--) {
var u = l[h];
if (!this.VerifySet(u)) {
if (u.length > 3) {
var d = this.GetOptimalGroups(u), m = d.Groups, f = d.LeftCards;
if (m.length > 0) {
for (var p = 0; p < f.length; p++) r.push(f[p]);
for (var _ = 0; _ < m.length; _++) c.push(m[_]);
l.splice(h, 1);
continue;
}
}
for (var S = 0; S < u.length; S++) r.push(u[S]);
l.splice(h, 1);
}
}
for (var g = 0; g < c.length; g++) l.push(c[g]);
return {
Point: this.CalcCardsPoint(r),
Groups: l,
LeftCards: r
};
},
CheckGroups: function(e, t) {
var i = [], n = [], a = [];
for (var o in t) {
var s = t[o];
if (s.Count > 1) {
o = parseInt(o);
a.push({
CardData: o,
UsedIndex: s.UsedIndex,
NeedIndex: 0
});
s.Count;
i.push(o);
n.push(s.UsedIndex);
}
}
if (0 == a.length) return e;
for (var r = [], c = 0; c < a.length; c++) {
for (var l = a[c].CardData, h = 0; h < e.length; h++) this.removebyvalue(e[h], l);
r.push(a[c].UsedIndex);
}
for (var u = this.EnumGroups(r), d = -1, m = [], f = 0; f < u.length; f++) {
for (var p = CopyArray2(e), _ = 0; _ < u[f].length; _++) {
var S = i[_];
p[u[f][_]].push(S);
}
var g = this.GetGroupPoint(p);
if (-1 == d || d > g) {
f;
d = g;
m = p;
}
}
return m;
},
EnumGroups: function(e) {
if (null == e || 0 == e.length) return [];
var t = function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) i.push([ e[n], t[a] ]);
return i;
}, i = function(e, t) {
for (var i = [], n = 0; n < t.length; n++) for (var a = 0; a < e.length; a++) {
var o = e[a].concat();
o.push(t[n]);
i.push(o);
}
return i;
}, n = [];
if (1 == e.length) {
for (var a = 0; a < e[0].length; a++) n.push([ e[0][a] ]);
return n;
}
if (2 == e.length) n = t(e[0], e[1]); else {
n = t(e[0], e[1]);
for (var o = 2; o < e.length; o++) n = i(n, e[o]);
}
return n;
},
GetGroupPoint: function(e) {
for (var t = 0, i = 0; i < e.length; i++) {
t += this.GetOptimalGroups(e[i]).Point;
}
return t;
},
VerifySet: function(e) {
if (e.length < 3) return !1;
var t = e.concat();
this.SortCardList(t);
for (var i = !0, n = !0, a = this.GetCardValue(t[0]), o = 1; o < t.length; o++) {
this.GetCardValue(t[o]) != a && (i = !1);
t[o] - t[0] != o - 0 && (n = !1);
if (!i && !n) return !1;
}
return i || n;
},
removebyvalue: function(e, t) {
for (var i = 0; i < e.length; i++) if (e[i] == t) {
e.splice(i, 1);
break;
}
},
EnumAllGroups: function(e) {
this.SortCardList(e);
for (var t = [], i = [], n = e.length - 1; n >= 0; n--) {
var a = e[n], o = this.GetCardColor(a);
t[o] || (t[o] = []);
t[o].push(a);
var s = this.GetCardValue(a);
i[s] || (i[s] = []);
i[s].push(a);
}
var r = [];
for (var c in t) {
var l = t[c], h = l.length;
if (h >= 3) {
for (var u = l[0], d = 1, m = [ u ], f = 1; f < h; f++) if (l[f] == u - 1) {
d += 1;
m.push(l[f]);
u = l[f];
} else {
d >= 3 && r.push(m);
d = 1;
m = [ u = l[f] ];
}
d >= 3 && r.push(m);
}
}
for (var p in i) {
var _ = i[p];
_.length >= 3 && r.push(_.concat());
}
return r;
},
SortCardList: function(e, t) {
var i = this;
t && 2 == t ? e.sort(function(e, t) {
return e - t;
}) : e.sort(function(e, t) {
var n = i.GetCardValue(e), a = i.GetCardValue(t);
return n == a ? e - t : n - a;
});
return e;
},
CalcCardsPoint: function(e) {
for (var t = 0, i = 0; i < e.length; i++) t += this.GetCardPoint(e[i]);
return t;
}
});
t.exports.GameLogic = n;
cc._RF.pop();
}, {} ],
TG_GameResult: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "020e7bDxrtJyJjPTPK/8TL1", "TG_GameResult");
var n = cc.color(181, 69, 14), a = cc.color(245, 247, 255);
cc.Class({
extends: cc.Component,
properties: {
nodeWin: cc.Node,
nodeLose: cc.Node,
nodeWinBar: [ cc.Node ],
nodeLoseBar: [ cc.Node ],
nodeUserInfo: [ cc.Node ],
nodeTimeDown: cc.Node,
nTime: 0,
pfPayoutDetails: cc.Prefab
},
onLoad: function() {
SceneManager_AlertShow(this.node);
this.endInfoAry = [];
},
init: function(e, t, i) {
this.jsGameView = e;
this.jsGameEngine = t;
this.objGameResult = i;
var o = i.UsersEndInfo, s = i.szUserName, r = o.length, c = PlayerManager.GetMeUserItem().GetChairID();
this.endInfoAry.length = 0;
for (var l = 0; l < r; l++) {
var h = o[l];
h.ChairID == c ? this.endInfoAry.unshift(h) : this.endInfoAry.push(h);
h.NickName = s[h.ChairID];
}
if (i.WinUser == c) {
this.nodeWin.active = !0;
this.nodeLose.active = !1;
for (var u = 0; u < r; u++) this.nodeWinBar[u].active = !0;
} else {
this.nodeWin.active = !1;
this.nodeLose.active = !0;
for (var d = 0; d < r; d++) this.nodeLoseBar[d].active = !0;
}
for (var m = 0; m < 3; m++) {
var f = cc.find("lblNickName", this.nodeUserInfo[m]);
this.nodeWin.active ? f.color = n : f.color = a;
}
for (var p = 0; p < r; p++) {
this.nodeUserInfo[p].active = !0;
var _ = this.endInfoAry[p];
cc.find("lblNickName", this.nodeUserInfo[p]).getComponent(cc.Label).string = s[_.ChairID];
cc.find("lblScore", this.nodeUserInfo[p]).getComponent(cc.Label).string = OnScoreToString(_.ProfitScore);
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("btnContinue" == i) {
this.jsGameEngine.ResetGameEngine();
this.jsGameView.ResetGameView();
this.jsGameEngine.OnFrameButtonGameStart();
this.node.removeFromParent();
} else "btnDetails" == i ? this.showPayoutDetails() : "btnExit" == i && this.jsGameEngine.SendPacketStandUp();
},
showPayoutDetails: function() {
var e = cc.instantiate(this.pfPayoutDetails);
this.node.addChild(e);
e.getComponent("TG_PayoutDetails").InitData(this.endInfoAry);
},
update: function(e) {
if (this.nTime >= 0) {
this.nodeTimeDown.active = !0;
this.nTime -= e;
this.nodeTimeDown.getComponent(cc.Label).string = parseInt(Math.round(this.nTime));
} else {
this.nodeTimeDown.active = !1;
this.jsGameEngine.ResetGameEngine();
this.jsGameView.ResetGameView();
this.jsGameEngine.OnFrameButtonGameStart();
this.node.removeFromParent();
}
}
});
cc._RF.pop();
}, {} ],
TG_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4a67OSGgxOMolvOpzjuYcA", "TG_GameView");
var n = e("TG_CMD_Game"), a = e("TG_GameLogic").GameLogic, o = n.GAME_PLAYER;
cc.Class({
extends: GameFrameView,
properties: {
pGameEngine: cc.Node,
pGameLogic: cc.Node,
nodeMenuLayer: cc.Node,
nodeHelp: cc.Node,
nodeWaitStatus: cc.Node,
nodeCardBox: cc.Node,
nodeMePoint: cc.Node,
nodeGameStart: cc.Node,
nodeCardSort: cc.Node,
nodeGetDisCard: cc.Node,
nodeBtnOperate: [ cc.Node ],
nodeCardStart: cc.Node,
nodeCardBack: cc.Node,
nodeOutCard: cc.Node,
nodeCardHandLayer: [ cc.Node ],
nodeCardGroup: [ cc.Node ],
nodeCardOutLayer: [ cc.Node ],
nodeCardOperateTips: [ cc.Node ],
nodeCardNum: [ cc.Node ],
nodeClock: [ cc.Node ],
nodeSpineGold: [ cc.Node ],
nodeSpineGoldEnd: [ cc.Node ],
nTimeDown: 0,
cbFightTime: 0,
lblLeftCardNum: cc.Label,
nodeDumpCard: cc.Node,
nodeSpineGetCard: cc.Node,
nodeSpineOperateCard: cc.Node,
lblPot: cc.Label,
lblPoint: cc.Label,
nodeCardRecord: cc.Node,
FightNode: cc.Node,
nodeEndCardLayer: [ cc.Node ],
lblEndPoint: [ cc.Label ],
nodeEndCards: [ cc.Node ],
nodeUserCrown: [ cc.Node ],
lblUserCrown: [ cc.Label ],
nodeCrown: [ cc.Node ],
lblCrown: [ cc.Label ],
nodeSpineTopCrown: cc.Node,
nodeSpineTopCrown2: cc.Node,
nodeSpinePot: cc.Node,
nodeSpineLizi: [ cc.Node ],
nodeTongits: cc.Node,
nodeSpineTongits: cc.Node,
pfCardNormal: cc.Prefab,
pfCardMin: cc.Prefab,
pfCardMax: cc.Prefab,
pfGroup: cc.Prefab,
pfMyGroup: cc.Prefab,
pfGameEnd: cc.Prefab,
pfGameEndScore: cc.Prefab
},
OnFrameViewLoad: function() {
this.pGameLogic = a.instance;
this.wMeChairID = this.jsGameEngine.wMeChairID;
var e = this.nodeCardBack.getComponent("TG_Card");
e.SetCardDataNew(!1, 67, 0, 1);
e.node.scaleX = 1.2;
e.node.scaleY = 1.1;
this.jsCardRecord = this.nodeCardRecord.getComponent("TG_CardRecord");
this.FightNodeJS = this.FightNode.getComponent("TG_GitsFightCard");
this.FightNodeJS.init(this, this.jsGameEngine);
this.cbCountIndex = 0;
this.wLastWinChairID = 65535;
this.initData();
},
initData: function() {
this.cbLeftCardNum = 52;
this.OnSetLeftCardNum(this.cbLeftCardNum);
this.cbUserHandCards = [];
this.cbUserHandCardNum = [];
for (var e = 0; e < o; e++) {
this.cbUserHandCards[e] = [];
this.cbUserHandCardNum[e] = 0;
}
this.jsGroups = [];
this.bCanOut = !1;
this.bCanOperate = !1;
this.bOperateCard = 0;
this.discardCards = [];
this.actionSendCard = [];
this.actionGameEnd = [];
this.cbOutCardData = [];
this.aryUserCardNum = [];
ZeroArray(this.aryUserCardNum, o);
this.cbGameStatus = 0;
this.wCurUser = 0;
this.bTouchMove = !1;
this.bCanSort = !1;
this.bSortType = 1;
this.bShowGroups = !1;
this.objMeGroups = null;
this.cbEndPosX = 0;
},
OnEventUserEnter: function(e, t) {
return !0;
},
OnEventUserLeave: function(e, t, i) {
var n = this.SwitchViewID(t);
this.nodeUserCrown[n].active = !1;
this.lblUserCrown[n].string = "";
return !0;
},
OnEventUserStatus: function(e, t, i) {
var n = this.SwitchViewID(e.GetChairID());
cc.assert(n < o, "Error.GameView.OnEventUserStatus.wViewID:" + n);
0 == n && t == US_READY && (this.nodeWaitStatus.active = !0);
return !0;
},
OnGameStart: function(e) {
this.nodeWaitStatus.active = !1;
var t = [];
t[0] = "Action_FlyPot";
t[1] = e;
this.actionSendCard.push(t);
this.wCurUser = e.BankerUser;
for (var i = e.UserCards, n = 0; n < o; n++) if (0 != this.jsGameEngine.cbPlayUser[n]) {
this.cbUserHandCards[n] = i[n].Cards.concat();
this.cbUserHandCardNum[n] = i[n].Cards.length;
}
for (var a = 0; a < o; a++) if (0 != this.jsGameEngine.cbPlayUser[a]) {
var s = this.SwitchViewID(a);
if (0 == s) {
for (var r = this.cbUserHandCardNum[a], c = 0; c < this.cbUserHandCardNum[a]; c++) {
var l = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[0].addChild(l);
l.x = -80 * r / 2 + 50 + 80 * c;
l.opacity = 0;
l.getComponent("TG_Card").SetCardData(.8, a, this.cbUserHandCards[a][c]);
}
this.cbEndPosX = -80 * r / 2 + 50 + 80 * r;
for (var h = 0; h < this.nodeCardHandLayer[0].children.length; h++) {
var u = this.nodeCardHandLayer[0].children[h], d = u.getPosition();
u.setPosition(d.x, d.y + 200);
u.setScale(.4);
var m = cc.spawn(cc.fadeTo(.2, 255), cc.moveTo(.2, d.x, d.y), cc.scaleTo(.2, .8, .8)), f = [];
f[0] = u;
f[1] = m;
f[2] = "Action_Remove";
this.actionSendCard.push(f);
var p = [];
p[0] = u;
p[1] = .05;
p[2] = "Action_DelayTime";
this.actionSendCard.push(p);
}
} else {
var _ = cc.instantiate(this.pfCardMin);
this.nodeCardHandLayer[s].addChild(_);
_.getComponent("TG_Card").SetCardDataNew(!0, 67, 0, 1);
}
}
var S = [];
S[1] = this.wCurUser;
S[2] = "Action_SendCardEnd";
S[3] = e;
this.actionSendCard.push(S);
this.OnActionSendCard();
this.addTouchEvent();
},
OnActionSendCard: function() {
var e = this, t = this;
if (this.actionSendCard.length > 0) {
var i = this.actionSendCard.shift();
if ("Action_FlyPot" == i[0]) {
for (var n = i[1], a = function(i) {
if (0 == e.jsGameEngine.cbPlayUser[i]) return "continue";
var n = e.SwitchViewID(i), a = e.nodeSpineGold[n];
a.active = !0;
window.mfConfig.PlayAudio("400/Audio/coin", !1, window.mfConfig.fSound);
var o = a.getComponent(sp.Skeleton);
PlaySkeletonAnimation(o, !1, "animation").setCompleteListener(function() {
a.active = !1;
t.nodeSpinePot.active = !0;
var e = t.nodeSpinePot.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "xuanzhong_guangxiao").setCompleteListener(function() {
t.nodeSpinePot.active = !1;
});
});
}, s = 0; s < o; s++) a(s);
var r = cc.sequence(cc.delayTime(1.2), cc.callFunc(function() {
t.lblPot.string = OnScoreToString(n.PotScore);
t.OnActionSendCard();
}));
this.node.runAction(r);
}
if ("Action_Remove" == i[2]) {
for (s = 0; s < o; s++) if (s != this.wMeChairID && 0 != this.jsGameEngine.cbPlayUser[s]) {
this.aryUserCardNum[s]++;
this.OnSetCardCount(s, this.aryUserCardNum[s]);
this.cbLeftCardNum--;
this.OnSetLeftCardNum(this.cbLeftCardNum);
}
window.mfConfig.PlayAudio("400/Audio/faPai", !1, window.mfConfig.fSound);
i[0].runAction(i[1]);
this.OnActionSendCard();
}
if ("Action_DelayTime" == i[2]) {
var c = cc.sequence(cc.delayTime(i[1]), cc.callFunc(function() {
t.cbLeftCardNum--;
t.OnSetLeftCardNum(t.cbLeftCardNum);
t.OnActionSendCard();
}));
i[0].runAction(c);
}
if ("Action_SendCardEnd" == i[2]) {
var l = i[1], h = i[3];
this.OnSetTimeDown(l, !1, h.LeaveTime);
l == this.wMeChairID && (this.bCanOut = !0);
for (var u = 51, d = 0; d < o; d++) if (0 != this.jsGameEngine.cbPlayUser[d]) {
d == l ? this.OnSetCardCount(d, 13) : this.OnSetCardCount(d, 12);
u -= 12;
}
this.OnSetLeftCardNum(u);
this.OnSetHandCardPoint();
this.bCanSort = !0;
this.nodeCardBox.active = !0;
this.nodeMePoint.active = !0;
this.nodeCardSort.active = !0;
this.nodeOutCard.active = !0;
}
}
},
OnPotInfo: function(e) {
if (e.GameStatus == n.GAME_SCENE_FREE) {
if (null == e.PotScore.high && null == e.PotScore.low) {
this.cbCountIndex = e.RoundCount;
if (this.cbCountIndex > 0) {
this.nodeCrown[0].active = !0;
this.lblCrown[0].string = this.cbCountIndex;
}
if (65535 != e.LastWinChairID) {
var t = this.SwitchViewID(e.LastWinChairID);
this.nodeUserCrown[t].active = !0;
this.lblUserCrown[t].string = this.cbCountIndex;
}
this.lblPot.string = OnScoreToString(e.PotScore);
}
} else if (null == e.PotScore.high && null == e.PotScore.low) {
this.cbCountIndex = e.RoundCount > 0 ? e.RoundCount - 1 : e.RoundCount;
if (this.cbCountIndex > 0) {
this.nodeCrown[0].active = !0;
this.lblCrown[0].string = this.cbCountIndex;
}
if (65535 != e.LastWinChairID) {
var i = this.SwitchViewID(e.LastWinChairID);
this.nodeUserCrown[i].active = !0;
this.lblUserCrown[i].string = this.cbCountIndex;
}
this.lblPot.string = OnScoreToString(e.PotScore);
}
},
onSceneGamePlay: function(e) {
this.wCurUser = e.CurrentUser;
this.OnSetTimeDown(this.wCurUser, !1, e.TimeLeave);
this.jsGameEngine.OnLockGameClientUser();
for (var t = e.UserCards, i = 0; i < o; i++) if (0 != this.jsGameEngine.cbPlayUser[i]) {
this.cbUserHandCards[i] = t[i].Cards.concat();
this.cbUserHandCardNum[i] = t[i].Cards.length;
}
for (var a = 0; a < o; a++) if (0 != this.jsGameEngine.cbPlayUser[a]) {
var s = this.SwitchViewID(a);
if (0 == s) {
for (var r = this.cbUserHandCardNum[a], c = 0; c < this.cbUserHandCardNum[a]; c++) {
var l = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[0].addChild(l);
l.x = -80 * r / 2 + 50 + 80 * c;
l.getComponent("TG_Card").SetCardData(.8, c, this.cbUserHandCards[a][c]);
}
this.cbEndPosX = -80 * r / 2 + 50 + 80 * r;
} else {
var h = cc.instantiate(this.pfCardMin);
this.nodeCardHandLayer[s].addChild(h);
h.getComponent("TG_Card").SetCardDataNew(!0, 67, 0, 1);
this.OnSetCardCount(a, this.cbUserHandCardNum[a]);
}
}
for (var u = e.TableGroups, d = 0; d < u.length; d++) {
var m = u[d];
this.addUserGroup(m);
}
this.discardCards = e.DiscardCards.concat();
for (var f = this.discardCards.length <= 2 ? 0 : this.discardCards.length - 2; f < this.discardCards.length; f++) {
var p = cc.instantiate(this.pfCardMax);
this.nodeDumpCard.addChild(p);
var _ = p.getComponent("TG_Card");
_.SetCardDataNew(!1, this.discardCards[f], 0, 1);
_.node.scaleX = 1.2;
_.node.scaleY = 1.1;
}
this.OnSetLeftCardNum(e.LeftCardNum);
this.OnSetHandCardPoint();
(e.UserAction & n.ACTION_GETCARD) > 0 || (e.UserAction & n.ACTION_CHOW) > 0 ? this.bCanOut = !1 : this.bCanOut = !0;
if ((e.UserAction & n.ACTION_CHOW) > 0) {
this.bCanOperate = !0;
this.bOperateCard = e.DiscardCards[e.DiscardCards.length - 1];
}
this.OnSetUserOperateButton(e.UserAction);
if (e.GameStatus == n.GAME_SCENE_FREE) this.nodeGameStart.active = !0; else {
this.nodeCardBox.active = !0;
if (this.jsGameEngine.cbPlayUser[this.wMeChairID]) {
this.nodeMePoint.active = !0;
this.nodeCardSort.active = !0;
}
this.nodeGameStart.active = !1;
this.bCanSort = !0;
}
if (e.GameStatus == n.GAME_SCENE_FIGHT) {
this.FightNodeJS.node.active = !0;
for (var S = 0; S < o; S++) {
var g = e.PlayerStatus, C = e.FightOperate;
if (0 != g[S]) {
var w = this.SwitchViewID(S);
C[S] > 0 ? this.FightNodeJS.setItemState(w, C[S]) : 0 == w && this.FightNodeJS.showFightActionBtn();
}
}
} else this.wMeChairID == this.wCurUser && (this.nTimeDown = 60);
this.jsGameEngine.cbPlayUser[this.jsGameEngine.wMeChairID] && (this.nodeOutCard.active = !0);
this.addTouchEvent();
},
addTouchEvent: function() {
this.nodeRootCanvas.on(cc.Node.EventType.TOUCH_START, this.TouchBeganCardScope, this);
this.nodeRootCanvas.on(cc.Node.EventType.TOUCH_MOVE, this.TouchMovedCardScope, this);
this.nodeRootCanvas.on(cc.Node.EventType.TOUCH_END, this.TouchEndedCardScope, this);
this.nodeRootCanvas.on(cc.Node.EventType.MOUSE_DOWN, this.MouseUp, this);
},
OnDeletTouchEvent: function() {
this.nodeRootCanvas.off(cc.Node.EventType.TOUCH_START, this.TouchBeganCardScope, this);
this.nodeRootCanvas.off(cc.Node.EventType.TOUCH_MOVE, this.TouchMovedCardScope, this);
this.nodeRootCanvas.off(cc.Node.EventType.TOUCH_END, this.TouchEndedCardScope, this);
this.nodeRootCanvas.off(cc.Node.EventType.MOUSE_DOWN, this.MouseUp, this);
},
MouseUp: function(e) {
var t = e.getButton(), i = e.target.name, n = e.getLocation(), a = this.GetSelectCardIndex(n);
if (t == cc.Event.EventMouse.BUTTON_LEFT) {
if (null == a && "Canvas" == i) {
if (this.nodeSpineOperateCard.active && this.cbOutCardData.length > 0) return;
this.RestCardPosition();
}
} else t == cc.Event.EventMouse.BUTTON_RIGHT && this.bCanOut;
},
GetSelectCardIndex: function(e) {
for (var t = [], i = this.nodeCardHandLayer[0].convertToNodeSpaceAR(e), n = this.nodeCardHandLayer[0].getChildren(), a = 0; a < n.length; a++) {
n[a].getBoundingBox().contains(i) && t.push(a);
}
var o = t.length - 1;
if (o >= 0) {
return t[o];
}
return null;
},
TouchBeganCardScope: function(e) {
var t = e.getLocation(), i = this.nodeCardHandLayer[0].getChildren(), n = this.GetSelectCardIndex(t);
if (null != n) {
this.ResetCardSwallows(n);
var a = i[n].getComponent("TG_Card"), o = a.GetCardData();
if (a.GetSelect()) {
a.OnCardDownEvent();
for (var s = 0; s < this.cbOutCardData.length; s++) this.cbOutCardData[s] == o && this.cbOutCardData.splice(s, 1);
} else if (this.IsTouchInGroup(o)) this.OnGroupCardUp(a, o); else {
a.OnCardUpspringEvent();
this.cbOutCardData.push(o);
}
} else {
if (this.nodeSpineOperateCard.active && this.cbOutCardData.length > 0) return;
this.RestCardPosition();
}
},
TouchMovedCardScope: function(e) {
var t = e.getLocation(), i = this.nodeCardHandLayer[0].getChildren(), n = this.GetSelectCardIndex(t);
if (null != n) {
this.ResetCardSwallows(n);
var a = i[n].getComponent("TG_Card"), o = a.GetSelect(), s = a.GetSwallows(), r = a.GetCardData();
if (o && !s) {
a.OnCardDownEvent();
a.SetSwallows(!0);
for (var c = 0; c < this.cbOutCardData.length; c++) this.cbOutCardData[c] == r && this.cbOutCardData.splice(c, 1);
} else if (!o && !s) if (this.IsTouchInGroup(r)) this.OnGroupCardUp(a, r); else {
a.OnCardUpspringEvent();
a.SetSwallows(!0);
this.cbOutCardData.push(r);
}
this.bTouchMove = !0;
}
},
TouchEndedCardScope: function(e) {
var t = e.getLocation(), i = this.nodeCardHandLayer[0].getChildren(), n = this.GetSelectCardIndex(t);
if (null != n) {
i[n].getComponent("TG_Card").SetSwallows(!1);
}
this.bTouchMove && (this.bTouchMove = !1);
this.bCanOut && (1 == this.cbOutCardData.length ? this.nodeBtnOperate[4].getComponent(cc.Button).interactable = !0 : this.nodeBtnOperate[4].getComponent(cc.Button).interactable = !1);
var a = CopyArray(this.cbOutCardData);
if (this.bCanOperate) {
if (a.length >= 2) {
a.push(this.bOperateCard);
this.pGameLogic.IsKindOfSame(a, a.length) || this.pGameLogic.IsKindOfLine(a, a.length);
}
} else a.length >= 3 && (this.pGameLogic.IsKindOfSame(a, a.length) || this.pGameLogic.IsKindOfLine(a, a.length)) ? this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !0 : this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !1;
a.length > 0 ? this.IsCanAddGroup() : this.resetUserGroup();
},
IsTouchInGroup: function(e) {
if (this.bShowGroups) {
for (var t = this.objMeGroups.Groups, i = 0; i < t.length; i++) for (var n = t[i], a = 0; a < n.length; a++) if (n[a] == e) return !0;
return !1;
}
},
OnGroupCardUp: function(e, t) {
if (this.bShowGroups) {
for (var i = null, n = this.objMeGroups.Groups, a = 0; a < n.length; a++) for (var o = n[a], s = 0; s < o.length; s++) o[s] == t && (i = o);
if (i) {
for (var r = 0, c = this.nodeCardHandLayer[0], l = c.children, h = c.childrenCount, u = 0; u < i.length; u++) for (var d = 0; d < h; d++) {
var m = l[d].getComponent("TG_Card");
if (m.GetCardData() == i[u]) {
m.GetSelect() && r++;
}
}
if (0 == r) {
for (var f = 0; f < i.length; f++) {
for (var p = 0; p < h; p++) {
var _ = l[p].getComponent("TG_Card");
_.GetCardData() == i[f] && _.OnCardUpspringEvent();
}
this.cbOutCardData.push(i[f]);
}
this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !0;
} else {
e.OnCardUpspringEvent();
this.cbOutCardData.push(t);
}
}
}
},
IsCanAddGroup: function() {
for (var e = this.jsGroups.length, t = 0; t < e; t++) {
var i = CopyArray(this.cbOutCardData), n = this.jsGroups[t];
i = i.concat(n.groupCards);
this.pGameLogic.IsKindOfSame(i, i.length) || this.pGameLogic.IsKindOfLine(i, i.length) ? n.ActiveGroupOperate(!0) : n.ActiveGroupOperate(!1);
}
},
ResetCardSwallows: function(e) {
var t = this.nodeCardHandLayer[0].getChildren(), i = e - 1;
if (i >= 0 && i < t.length) {
var n = t[i].getComponent("TG_Card");
n.GetSwallows() && n.SetSwallows(!1);
}
var a = e + 1;
if (a >= 0 && a < t.length) {
var o = t[a].getComponent("TG_Card");
o.GetSwallows() && o.SetSwallows(!1);
}
},
RestCardPosition: function() {
for (var e = this.nodeCardHandLayer[0].getChildren(), t = 0; t < e.length; t++) {
var i = e[t].getComponent("TG_Card");
i.GetSelect() && i.OnCardDownEvent();
}
this.cbOutCardData.splice(0, this.cbOutCardData.length);
},
OnGameSendReady: function() {
this.jsGameEngine.ResetGameEngine();
this.ResetGameView();
this.jsGameEngine.SendUserReady();
this.nodeGameStart.active = !1;
},
OnEventGameEnded: function(e) {
this.bCanSort = !1;
for (var t = [], i = 0; i < o; i++) {
var a = this.jsGameEngine.GetLockGameClientUser(i);
t[i] = a ? a.GetNickNameUtf8() : null;
}
e.szUserName = t;
var s = [];
s[0] = "Action_DelayTime";
s[1] = this.nodeCardOutLayer[0];
s[2] = 2;
this.actionGameEnd.push(s);
var r = [];
r[0] = "Action_Remove";
r[1] = e;
this.actionGameEnd.push(r);
var c = [];
c[0] = "Action_DelayTime";
c[1] = this.nodeCardOutLayer[0];
c[2] = 1;
this.actionGameEnd.push(c);
if (e.EndType == n.GAME_END_TONGITS) {
var l = [];
l[0] = "Action_Tongits";
this.actionGameEnd.push(l);
}
var h = [];
h[0] = "Action_EndLayer";
h[1] = e;
this.actionGameEnd.push(h);
this.OnActionGameEnd();
},
OnActionGameEnd: function() {
var e = this, t = this;
if (this.actionGameEnd.length > 0) {
var i = this.actionGameEnd.shift();
if ("Action_Remove" == i[0]) {
for (var n = i[1], a = 0; a < o; a++) if (0 != this.jsGameEngine.cbPlayUser[a]) {
this.OnSetTimeDown(a, !0);
var s = this.SwitchViewID(a);
this.nodeCardHandLayer[s].removeAllChildren();
if (0 != s) {
this.nodeCardNum[s].active = !1;
this.aryUserCardNum[a] = 0;
}
}
for (var r = 0; r < o; r++) if (0 != this.jsGameEngine.cbPlayUser[r]) {
var c = this.GetEndHandCards(r, n), l = this.SwitchViewID(r);
0 == l ? this.OnUpdateUserHandGroupCard(l, c, !0) : this.OnAddCardToNode(l, c);
}
this.FightNodeJS.resetThisLayout();
this.OnActionGameEnd();
}
if ("Action_DelayTime" == i[0]) {
var h = cc.sequence(cc.delayTime(i[2]), cc.callFunc(function() {
t.OnActionGameEnd();
}));
i[1].runAction(h);
}
if ("Action_Tongits" == i[0]) {
window.mfConfig.PlayAudio("400/Audio/Tongits_bigwin", !1, window.mfConfig.fSound);
this.nodeTongits.active = !0;
var u = this.nodeSpineTongits.getComponent(sp.Skeleton);
PlaySkeletonAnimation(u, !1, "tongtis").setCompleteListener(function() {
t.nodeTongits.active = !1;
t.OnActionGameEnd();
});
}
if ("Action_EndLayer" == i[0]) {
for (var d = i[1], m = 0; m < o; m++) if (0 != this.jsGameEngine.cbPlayUser[m]) {
var f = this.SwitchViewID(m);
this.jsFrameUser[f].UpdateUserGold();
}
for (var p = 0; p < o; p++) if (0 != this.jsGameEngine.cbPlayUser[p]) {
var _ = this.SwitchViewID(p);
this.nodeUserCrown[_].active = !1;
this.lblUserCrown[_].string = "";
}
for (var S = !1, g = d.UsersEndInfo, C = 0; C < g.length; C++) {
var w = g[C];
if (null == w.WinPotScore.high && null == w.WinPotScore.low) {
S = !0;
break;
}
}
if (S) {
this.cbCountIndex++;
var b = this.SwitchViewID(d.WinUser);
this.nodeUserCrown[b].active = !0;
this.lblUserCrown[b].string = this.cbCountIndex;
var A = this.nodeSpineLizi[b];
A.active = !0;
var v = "";
0 == b ? v = "V2_3" : 1 == b ? v = "V2_2" : 2 == b && (v = "V2_1");
var G = A.getComponent(sp.Skeleton);
PlaySkeletonAnimation(G, !1, v).setCompleteListener(function() {
A.active = !1;
t.nodeCrown[1].active = !0;
t.lblCrown[1].string = t.cbCountIndex;
t.lblCrown[0].string = t.cbCountIndex;
t.wLastWinChairID = d.WinUser;
t.nodeSpineTopCrown.active = !0;
var e = t.nodeSpineTopCrown.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "hg").setCompleteListener(function() {
t.nodeSpineTopCrown.active = !1;
});
t.nodeSpineTopCrown2.active = !0;
var i = t.nodeSpineTopCrown2.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "hg").setCompleteListener(function() {
t.nodeSpineTopCrown2.active = !1;
var e = t.nodeSpineGoldEnd[b];
e.active = !0;
window.mfConfig.PlayAudio("400/Audio/coin", !1, window.mfConfig.fSound);
var i = e.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "animation").setCompleteListener(function() {
t.OnShowGameScore(d.UsersEndInfo);
});
});
});
this.scheduleOnce(function() {
e.nodeCrown[0].active = !1;
e.nodeCrown[1].active = !1;
e.lblCrown[0].string = 0;
e.lblCrown[1].string = 0;
e.cbCountIndex = 0;
e.wLastWinChairID = 65535;
e.lblPot.string = "0.00";
e.nodeUserCrown[b].active = !1;
e.lblUserCrown[b].string = 0;
var t = cc.instantiate(e.pfGameEnd);
e.nodeRootCanvas.addChild(t);
var i = t.getComponent("TG_GameResult");
i.nTime = 10;
i.init(e, e.jsGameEngine, d);
}, 4.2);
} else {
this.cbCountIndex++;
var I = this.SwitchViewID(d.WinUser);
this.nodeUserCrown[I].active = !0;
this.lblUserCrown[I].string = this.cbCountIndex;
var D = this.nodeSpineLizi[I];
D.active = !0;
var y = "";
0 == I ? y = "V1_3" : 1 == I ? y = "V1_2" : 2 == I && (y = "V1_1");
var E = D.getComponent(sp.Skeleton);
PlaySkeletonAnimation(E, !1, y).setCompleteListener(function() {
D.active = !1;
t.nodeCrown[0].active = !0;
t.lblCrown[0].string = t.cbCountIndex;
t.wLastWinChairID = d.WinUser;
t.nodeSpineTopCrown.active = !0;
var e = t.nodeSpineTopCrown.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "hg").setCompleteListener(function() {
t.nodeSpineTopCrown.active = !1;
});
t.OnShowGameScore(d.UsersEndInfo);
});
this.scheduleOnce(function() {
var e = cc.instantiate(t.pfGameEnd);
t.nodeRootCanvas.addChild(e);
var i = e.getComponent("TG_GameResult");
i.nTime = 10;
i.init(t, t.jsGameEngine, d);
}, 3.5);
}
this.ResetGameStatus();
}
}
},
OnShowGameScore: function(e) {
for (var t = e.length, i = 0; i < t; i++) {
var n = e[i].ChairID, a = this.SwitchViewID(n);
this.OnShowGameScoreDes(this.nodeViewUser[a], e[i].ProfitScore);
}
},
OnShowGameScoreDes: function(e, t) {
var i = this, n = cc.instantiate(this.pfGameEndScore), a = n.getComponent("jsGameEndScore");
e.addChild(n);
a.InitGameScore(t, 1, function() {
i.scheduleOnce(function(e) {
n.removeFromParent();
}, .5);
});
},
GetEndHandCards: function(e, t) {
for (var i = t.UsersEndInfo, n = 0; n < i.length; n++) {
var a = i[n];
if (e == a.ChairID) {
var o = {
Groups: []
};
if (a.HandGroups.length > 0) for (var s = 0; s < a.HandGroups.length; s++) o.Groups.push(a.HandGroups[s].Cards);
o.LeftCards = a.Cards;
o.Point = a.Point;
return o;
}
}
},
ResetGameStatus: function() {
for (var e = 0; e < o; e++) this.jsGameEngine.cbPlayUser[e] = !1;
this.nodeOutCard.active = !1;
this.nodeCardSort.getComponent(cc.Button).interactable = !0;
},
ResetGameView: function() {
this.jsGameEngine.ResetGameEngine();
for (var e = 0; e < o; e++) {
this.nodeCardHandLayer[e].removeAllChildren();
this.nodeCardGroup[e].removeAllChildren();
this.nodeCardOutLayer[e].removeAllChildren();
this.nodeCardOperateTips[e].active = !1;
this.OnSetTimeDown(e, !0);
this.nodeEndCardLayer[e].active = !1;
this.lblEndPoint[e].string = 0;
this.nodeEndCards[e].removeAllChildren();
0 != e && (this.nodeCardNum[e].active = !1);
this.aryUserCardNum[e] = 0;
}
this.nodeDumpCard.removeAllChildren();
this.RestCardPosition();
this.FightNodeJS.resetThisLayout();
this.nodeSpineGetCard.active = !1;
this.nodeSpineOperateCard.active = !1;
this.nodeGetDisCard.active = !1;
this.initData();
this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !1;
this.nodeBtnOperate[1].getComponent(cc.Button).interactable = !1;
this.nodeBtnOperate[4].getComponent(cc.Button).interactable = !1;
},
OnMenuLayerShow: function() {
this.nodeMenuLayer.active = !this.nodeMenuLayer.active;
},
OnHelpLayerShow: function() {
this.nodeHelp.active = !this.nodeHelp.active;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnCardBox" == i ? this.OnGetOneCard() : "Dis_btnDrop" == i ? this.OnBtnDrop() : "btnGetDisCard" == i ? this.OnBtnGetDisCard() : "Dis_btnFight" == i ? this.OnBtnFight() : "Dis_btnGroup" == i || "Dis_btnUngroup" == i || ("Dis_btnDump" == i ? this.OnBtnDump() : "Dis_btnCardRecord" == i && this.OnActiveCardRecord());
},
OnActiveCardRecord: function() {
this.nodeCardRecord.active = !this.nodeCardRecord.active;
this.nodeCardRecord.active && this.jsCardRecord.OnUpdateCardRecord(this.discardCards);
},
OnGetOneCard: function() {
this.jsGameEngine.OnSendEventSendCard();
},
OnEventSendOneCard: function(e) {
var t = this;
if (0 == e.RetCode) {
this.OnSetLeftCardNum(e.LeftCardNum);
var i = e.ChairID, n = e.CardData;
this.cbUserHandCards[i].push(n);
this.cbUserHandCardNum[i]++;
var a = this.SwitchViewID(i);
if (0 == a) {
this.RestCardPosition();
this.OnActionGetCard(a, function() {
var o = cc.instantiate(t.pfCardNormal);
t.nodeCardHandLayer[a].addChild(o);
o.x = t.cbEndPosX;
o.getComponent("TG_Card").SetCardData(.8, 0, n);
t.objMeGroups && t.objMeGroups.LeftCards.push(n);
t.OnSetHandCardPoint();
t.bCanOut = !0;
t.bCanOperate = !1;
t.bOperateCard = 0;
t.nodeSpineGetCard.active = !1;
t.nodeSpineOperateCard.active = !1;
t.nodeBtnOperate[1].getComponent(cc.Button).interactable = !1;
t.nodeGetDisCard.active = !1;
t.nodeCardSort.getComponent(cc.Button).interactable = !0;
t.OnSetTimeDown(i, !0);
t.OnSetTimeDown(i, !1, e.TimeLeave);
});
} else this.OnActionGetCard(a, function() {
t.OnUpdateUserCards(i);
t.OnSetTimeDown(i, !0);
t.OnSetTimeDown(i, !1, e.TimeLeave);
});
}
},
OnBtnDrop: function() {
this.jsGameEngine.OnSendEventMakeGroup(this.cbOutCardData);
},
OnEventMakeGroup: function(e) {
if (0 == e.RetCode) {
window.mfConfig.PlayAudio("400/Audio/Tongits_draw", !1, window.mfConfig.fSound);
var t = e.ChairID, i = e.Group, n = i.GroupCards, a = i.GroupCards.length;
this.addUserGroup(i);
this.RemoveUserHandCard(t, n, a);
this.cbUserHandCardNum[t] -= a;
if (0 == this.SwitchViewID(t)) {
this.bCanOut = !0;
this.resetUserGroup();
this.OnUpdateMeHandLayer(n, a);
this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !1;
} else this.OnUpdateUserCards(t);
this.OnSetTimeDown(t, !0);
this.OnSetTimeDown(t, !1, e.TimeLeave);
}
},
OnBtnGetDisCard: function() {
this.jsGameEngine.OnSendEventGetDiscard(this.cbOutCardData);
},
OnEventGetDisCard: function(e) {
if (0 == e.RetCode) {
var t = e.ChairID, i = e.Group, n = i.GroupCards, a = i.GroupCards.length;
this.addUserGroup(i);
this.RemoveUserHandCard(t, n, a);
this.cbUserHandCardNum[t] -= a - 1;
var o = this.nodeDumpCard.getChildren();
o[o.length - 1].removeFromParent();
this.discardCards.pop();
if (0 == this.SwitchViewID(t)) {
this.bCanOut = !0;
this.bCanOperate = !1;
this.bOperateCard = 0;
this.nodeSpineGetCard.active = !1;
this.nodeSpineOperateCard.active = !1;
this.OnUpdateMeHandLayer(n, a);
this.nodeBtnOperate[0].getComponent(cc.Button).interactable = !1;
this.nodeBtnOperate[1].getComponent(cc.Button).interactable = !1;
this.nodeGetDisCard.active = !1;
this.nodeCardSort.getComponent(cc.Button).interactable = !0;
} else this.OnUpdateUserCards(t);
this.OnSetTimeDown(t, !0);
this.OnSetTimeDown(t, !1, e.TimeLeave);
}
},
OnBtnDump: function() {
1 == this.cbOutCardData.length ? this.jsGameEngine.OnSendEventDumpCard(this.cbOutCardData, 0) : this.cbOutCardData.length;
},
OnEventDumpCard: function(e) {
var t = this;
if (0 == e.RetCode) {
var i = e.ChairID, n = e.DumpCards, a = e.GroupIdx, o = e.LeftCardNum, s = this.SwitchViewID(i);
0 == a && (this.bOperateCard = n[0]);
if (a > 0) {
0 == s ? this.OnActionDumpCardNew(s, a, n, function() {
for (var e = 0; e < t.jsGroups.length; e++) if (t.jsGroups[e].cbGroupIdx == a) {
t.jsGroups[e].UpdateGroup(n, n.length);
break;
}
t.RemoveUserHandCard(i, n, n.length);
t.cbUserHandCardNum[i] -= n.length;
t.resetUserGroup();
t.OnUpdateMeHandLayer(n, n.length);
t.bCanOut = !0;
t.bCanOperate = !1;
t.bOperateCard = 0;
t.nodeBtnOperate[4].getComponent(cc.Button).interactable = !1;
}) : this.OnActionDumpCardNew(s, a, n, function() {
for (var e = 0; e < t.jsGroups.length; e++) if (t.jsGroups[e].cbGroupIdx == a) {
t.jsGroups[e].UpdateGroup(n, n.length);
break;
}
t.RemoveUserHandCard(i, n, n.length);
t.cbUserHandCardNum[i] -= n.length;
t.OnUpdateUserCards(i);
});
this.OnSetTimeDown(i, !0);
this.OnSetTimeDown(i, !1, e.TimeLeave);
} else {
this.RemovePutFlag(i);
0 == s ? this.OnActionDumpCard(s, n[0], function() {
var e = t.nodeDumpCard.children, o = t.nodeDumpCard.childrenCount;
if (o >= 2) for (var s = 0; s < o - 1; s++) {
e[s].removeFromParent();
}
var r = t.nodeDumpCard.childrenCount, c = cc.instantiate(t.pfCardMax);
t.nodeDumpCard.addChild(c);
c.zIndex = r;
var l = c.getComponent("TG_Card");
l.SetCardDataNew(!1, n[0], 0, 1);
l.node.scaleX = 1.2;
l.node.scaleY = 1.1;
t.discardCards.push(n[0]);
t.RemoveUserHandCard(i, n, n.length);
t.cbUserHandCardNum[i] -= n.length;
t.resetUserGroup();
t.OnUpdateMeHandLayer(n, n.length);
t.bCanOut = 0 != a;
t.bCanOperate = !1;
t.bOperateCard = 0;
t.nodeBtnOperate[4].getComponent(cc.Button).interactable = !1;
}) : this.OnActionDumpCard(s, n[0], function() {
var e = t.nodeDumpCard.children, a = t.nodeDumpCard.childrenCount;
if (a >= 2) for (var o = 0; o < a - 1; o++) {
e[o].removeFromParent();
}
var s = t.nodeDumpCard.childrenCount, r = cc.instantiate(t.pfCardMax);
t.nodeDumpCard.addChild(r);
r.zIndex = s;
var c = r.getComponent("TG_Card");
c.SetCardDataNew(!1, n[0], 0, 1);
c.node.scaleX = 1.2;
c.node.scaleY = 1.1;
t.discardCards.push(n[0]);
t.RemoveUserHandCard(i, n, n.length);
t.cbUserHandCardNum[i] -= n.length;
t.OnUpdateUserCards(i);
});
this.OnSetTimeDown(i, !0);
}
this.OnSetLeftCardNum(o);
}
},
CheckCanOperate: function() {
var e = this.cbUserHandCards[this.wMeChairID].concat().concat();
e.push(this.bOperateCard);
var t = [], i = this.pGameLogic.EnumAllGroups(e);
if (i.length > 0) for (var n = 0; n < i.length; n++) {
for (var a = i[n], o = !1, s = 0; s < a.length; s++) if (a[s] == this.bOperateCard) {
o = !0;
break;
}
if (o) for (var r = 0; r < a.length; r++) a[r] != this.bOperateCard && t.push(a[r]);
}
var c = t.length;
if (0 != c) {
this.RestCardPosition();
for (var l = this.nodeCardHandLayer[0], h = l.children, u = l.childrenCount, d = 0; d < c; d++) for (var m = 0; m < u; m++) {
var f = h[m].getComponent("TG_Card"), p = f.GetCardData();
if (p == t[d]) {
f.OnCardUpspringEvent();
this.cbOutCardData.push(p);
}
}
}
},
RemoveUserHandCard: function(e, t, i) {
var n = this.SwitchViewID(e);
if (0 == n) {
for (var a = this.nodeCardHandLayer[n].getChildren(), o = 0; o < i; o++) for (var s = 0; s < a.length; s++) {
var r = a[s];
if (r.getComponent("TG_Card").GetCardData() == t[o]) {
r.removeFromParent();
break;
}
}
for (var c = 0; c < i; c++) for (var l = 0; l < this.cbUserHandCardNum[e]; l++) if (t[c] == this.cbUserHandCards[e][l]) {
this.cbUserHandCards[e].splice(l, 1);
break;
}
this.cbOutCardData.length = 0;
}
},
OnEventNotifyUser: function(e) {
var t = e.ChairID, i = e.TimeLeave;
if (0 == this.SwitchViewID(t)) {
if ((e.UserAction & n.ACTION_CHOW) > 0) {
this.bCanOperate = !0;
this.CheckCanOperate();
}
this.OnSetUserOperateButton(e.UserAction);
}
this.OnSetTimeDown(t, !1, i);
},
OnBtnFight: function() {
this.jsGameEngine.OnSendEventUserFight();
},
OnEventUserFight: function(e) {
if (0 == e.RetCode) {
var t = e.ChairID, i = this.SwitchViewID(t);
this.FightNodeJS.checkFightActionTime(i, this.cbFightTime);
window.mfConfig.PlayAudio("400/Audio/Tongits_fight", !1, window.mfConfig.fSound);
this.OnSetTimeDown(t, !0);
this.OnSetTimeDown(t, !1, this.cbFightTime);
this.nodeOutCard.active = !1;
}
},
OnEventAnswerFight: function(e) {
if (0 == e.RetCode) {
var t = e.ChairID, i = this.SwitchViewID(t), n = e.OpType;
this.FightNodeJS.OnUserAnswerFight(i, n);
2 == n ? window.mfConfig.PlayAudio("400/Audio/Tongits_fight_challenge", !1, window.mfConfig.fSound) : 3 == n ? window.mfConfig.PlayAudio("400/Audio/Tongits_fight_fold", !1, window.mfConfig.fSound) : 4 == n && window.mfConfig.PlayAudio("400/Audio/Tongits_fold", !1, window.mfConfig.fSound);
}
},
OnSetLeftCardNum: function(e) {
this.lblLeftCardNum.string = e;
},
OnSetHandCardPoint: function() {
if (this.bShowGroups) {
var e = this.objMeGroups.LeftCards;
this.lblPoint.string = this.pGameLogic.CalcCardsPoint(e);
} else this.lblPoint.string = this.pGameLogic.CalcCardsPoint(this.cbUserHandCards[this.wMeChairID]);
},
OnSetCardCount: function(e, t) {
var i = this.SwitchViewID(e);
if (0 == i) return !0;
this.aryUserCardNum[e] = t;
this.nodeCardNum[i].active = 0 != t;
this.nodeCardNum[i].getChildByName("New Label").getComponent(cc.Label).string = t;
},
OnSetTimeDown: function(e, t, i) {
var n = this.SwitchViewID(e);
if (t) this.nodeClock[n].active = !1; else {
this.nodeClock[n].active = !0;
this.nodeClock[n].getComponent("TG_TimeCircular").StartTimeDown(i);
for (var a = 0; a < o; a++) this.nodeCardOperateTips[a].active = !1;
this.nodeCardOperateTips[n].active = !0;
}
},
OnBtnSortCardList: function() {
if (this.bCanSort) {
var e = this.cbUserHandCards[this.wMeChairID].concat(), t = this.pGameLogic.GetOptimalGroups(e);
if (t.Groups.length > 0) if (this.bShowGroups) {
this.bShowGroups = !1;
this.objMeGroups = null;
this.nodeCardGroup[0].removeAllChildren();
this.OnUpdateUserCards(this.wMeChairID);
} else {
this.bShowGroups = !0;
this.objMeGroups = t;
this.OnUpdateUserHandGroupCard(0, t, !0);
} else {
this.bShowGroups = !1;
this.objMeGroups = null;
2 == this.bSortType ? this.bSortType = 1 : this.bSortType = 2;
2 == this.bSortType ? this.pGameLogic.SortCardList(this.cbUserHandCards[this.wMeChairID], 2) : 1 == this.bSortType && this.pGameLogic.SortCardList(this.cbUserHandCards[this.wMeChairID]);
this.OnUpdateUserCards(this.wMeChairID);
}
}
},
OnUpdateMeHandLayer: function(e, t) {
if (this.bShowGroups) {
var i = this.cbUserHandCards[this.wMeChairID].concat();
if (this.pGameLogic.GetOptimalGroups(i).Groups.length > 0) this.OnUpdateMeHandCardWithGroup(e, t); else {
this.bShowGroups = !1;
this.objMeGroups = null;
this.pGameLogic.SortCardList(this.cbUserHandCards[this.wMeChairID]);
this.OnUpdateMeHandCard();
}
} else this.OnUpdateMeHandCard();
},
OnUpdateMeHandCard: function() {
this.nodeCardHandLayer[0].removeAllChildren();
this.nodeCardGroup[0].removeAllChildren();
for (var e = this.cbUserHandCards[this.wMeChairID].concat(), t = this.cbUserHandCardNum[this.wMeChairID], i = 0; i < t; i++) {
var n = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[0].addChild(n);
n.x = -80 * t / 2 + 50 + 80 * i;
n.getComponent("TG_Card").SetCardData(.8, i, e[i]);
}
this.cbEndPosX = -80 * t / 2 + 50 + 80 * t;
this.OnSetHandCardPoint();
},
OnUpdateMeHandCardWithGroup: function(e, t) {
for (var i = this.objMeGroups, n = i.Groups, a = i.LeftCards, o = 0; o < n.length; o++) for (var s = n[o], r = 0; r < t; r++) for (var c = 0; c < s.length; c++) if (e[r] == s[c]) {
s.splice(c, 1);
break;
}
for (var l = 0; l < n.length; l++) {
0 == n[l].length && n.splice(l, 1);
}
for (var h = 0; h < t; h++) for (var u = 0; u < a.length; u++) if (e[h] == a[u]) {
a.splice(u, 1);
break;
}
i.Point = this.pGameLogic.CalcCardsPoint(a);
this.OnUpdateUserHandGroupCard(0, i, !1);
},
OnUpdateUserHandGroupCard: function(e, t, i) {
var n = t.Groups, a = t.LeftCards, o = t.Point;
this.nodeCardHandLayer[e].removeAllChildren();
this.nodeCardGroup[e].removeAllChildren();
for (var s = 0, r = [], c = 0; c < n.length; c++) {
r = r.concat(n[c]);
s += 172 + 58 * (n[c].length - 1);
s += 20;
}
r = r.concat(a);
var l = -(s += 80 * a.length) / 2, h = 0, u = 80, d = 70, m = .8;
if (0 != e) {
l = 35;
u = 35;
d = 45;
m = .42;
}
1 == e && (l = -s / 2 - 35);
for (var f = 0; f < n.length; f++) {
var p = n[f];
i && this.pGameLogic.SortCardList(p);
for (var _ = p.length, S = 0; S < _; S++) {
var g = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[e].addChild(g);
h += u;
g.x = l + h;
g.getComponent("TG_Card").SetCardData(m, S, p[S]);
if (0 == e && S == _ - 1) {
var C = cc.instantiate(this.pfMyGroup);
this.nodeCardGroup[e].addChild(C);
C.x = g.x + 82;
C.width = 164 + (_ - 1) * u;
if (p.length > 4 && this.pGameLogic.IsKindOfLine(p, p.length) || 4 == p.length && this.pGameLogic.IsKindOfBoom(p, p.length)) {
var w = cc.find("special", C);
w.active = !0;
w.x = -C.width / 2;
}
}
}
h += d;
}
i && this.pGameLogic.SortCardList(a);
for (var b = 0; b < a.length; b++) {
var A = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[e].addChild(A);
h += u;
A.x = l + h;
A.getComponent("TG_Card").SetCardData(m, b, a[b]);
}
h += u;
this.cbEndPosX = l + h;
this.lblPoint.string = o;
},
OnSetUserOperateButton: function(e) {
(e & n.ACTION_FIGHT) > 0 && (this.nodeBtnOperate[1].getComponent(cc.Button).interactable = !0);
if ((e & n.ACTION_CHOW) > 0) {
this.nodeSpineOperateCard.active = !0;
var t = this.nodeSpineOperateCard.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !0, "animation");
this.nodeGetDisCard.active = !0;
this.nodeCardSort.getComponent(cc.Button).interactable = !1;
}
if ((e & n.ACTION_GETCARD) > 0) {
this.nodeSpineGetCard.active = !0;
var i = this.nodeSpineGetCard.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !0, "animation");
}
},
addUserGroup: function(e) {
var t = e.ChairID, i = this.SwitchViewID(t);
if (0 == i) {
var n = this.nodeCardOutLayer[0], a = cc.instantiate(this.pfGroup);
n.addChild(a);
var o = a.getComponent("TG_CardGroup");
o.InitData(this, e);
this.jsGroups.push(o);
} else {
var s = this.nodeCardOutLayer[i], r = cc.instantiate(this.pfGroup);
s.addChild(r);
var c = r.getComponent("TG_CardGroup");
c.InitData(this, e);
this.jsGroups.push(c);
}
},
resetUserGroup: function() {
for (var e = this.jsGroups.length, t = 0; t < e; t++) {
this.jsGroups[t].ActiveGroupOperate(!1);
}
},
GetGroupCount: function() {
for (var e = 0, t = this.jsGroups.length, i = 0; i < t; i++) {
this.jsGroups[i].wChairID == this.wMeChairID && e++;
}
return e;
},
HaveSpecialCards: function() {
var e = this.cbUserHandCards[this.wMeChairID].concat();
return this.pGameLogic.IsHaveBoom(e, e.length);
},
RemovePutFlag: function(e) {
for (var t = this.jsGroups.length, i = 0; i < t; i++) {
var n = this.jsGroups[i];
n.wChairID == e && n.RemovePutFlag();
}
},
OnAddCardToNode: function(e, t) {
this.nodeEndCardLayer[e].active = !0;
this.lblEndPoint[e].string = t.Point;
var i = t.Groups, n = t.LeftCards;
i.length > 0 || n.length > 0 ? this.nodeEndCards[e].active = !0 : this.nodeEndCards[e].active = !1;
for (var a = 0; a < i.length; a++) {
var o = i[a];
this.pGameLogic.SortCardList(o);
for (var s = o.length, r = 0; r < s; r++) {
var c = cc.instantiate(this.pfCardMin);
this.nodeEndCards[e].addChild(c);
var l = c.getComponent("TG_Card");
l.SetCardDataNew(!0, o[r], r, .7);
l.node.y = -3;
}
var h = cc.instantiate(this.pfCardMin);
this.nodeEndCards[e].addChild(h);
var u = h.getComponent("TG_Card");
u.SetCardDataNew(!0, 68, 0, .7);
u.node.y = -3;
}
this.pGameLogic.SortCardList(n);
for (var d = 0; d < n.length; d++) {
var m = cc.instantiate(this.pfCardMin);
this.nodeEndCards[e].addChild(m);
var f = m.getComponent("TG_Card");
f.SetCardDataNew(!0, n[d], d, .7);
f.node.y = -3;
}
},
OnUpdateUserCards: function(e) {
var t = this.SwitchViewID(e), i = this.nodeCardHandLayer[t], n = this.cbUserHandCards[e].concat(), a = this.cbUserHandCardNum[e];
if (0 == t) {
i.removeAllChildren();
for (var o = 0; o < a; o++) {
var s = cc.instantiate(this.pfCardNormal);
i.addChild(s);
s.x = -80 * a / 2 + 50 + 80 * o;
s.getComponent("TG_Card").SetCardData(.8, o, n[o]);
}
this.cbEndPosX = -80 * a / 2 + 50 + 80 * a;
this.OnSetHandCardPoint();
} else {
this.OnSetCardCount(e, a);
}
},
OnUpdateUserCardsWithGroup: function(e) {},
testCards: function() {
for (var e = 0; e < 3; e++) if (0 == e) for (var t = [ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ], i = t.length, n = 0; n < i; n++) {
var a = cc.instantiate(this.pfCardNormal);
this.nodeCardHandLayer[e].addChild(a);
a.x = -80 * i / 2 + 50 + 80 * n;
a.getComponent("TG_Card").SetCardData(.8, n, t[n]);
}
for (var o = 1, s = 0; s < 3; s++) if (0 == s) {
var r = {};
r.ChairID = s;
r.GroupIdx = o++;
r.GroupCards = [ 1, 2, 3 ];
this.addUserGroup(r);
(r = {}).ChairID = s;
r.GroupIdx = o++;
r.GroupCards = [ 4, 5, 6, 7 ];
this.addUserGroup(r);
(r = {}).ChairID = s;
r.GroupIdx = o++;
r.GroupCards = [ 8, 9, 10, 11, 12 ];
this.addUserGroup(r);
} else if (1 == s) {
var c = {};
c.ChairID = s;
c.GroupIdx = o++;
c.GroupCards = [ 17, 18, 19 ];
this.addUserGroup(c);
(c = {}).ChairID = s;
c.GroupIdx = o++;
c.GroupCards = [ 20, 21, 22, 23 ];
this.addUserGroup(c);
(c = {}).ChairID = s;
c.GroupIdx = o++;
c.GroupCards = [ 24, 25, 26, 27, 28 ];
this.addUserGroup(c);
} else {
var l = {};
l.ChairID = s;
l.GroupIdx = o++;
l.GroupCards = [ 33, 34, 35 ];
this.addUserGroup(l);
(l = {}).ChairID = s;
l.GroupIdx = o++;
l.GroupCards = [ 36, 37, 38, 39 ];
this.addUserGroup(l);
(l = {}).ChairID = s;
l.GroupIdx = o++;
l.GroupCards = [ 40, 41, 42, 43, 44 ];
this.addUserGroup(l);
}
},
OnActionGetCard: function(e, t) {
var i = null;
if (0 == e) {
i = cc.instantiate(this.pfCardNormal);
this.nodeCardStart.addChild(i);
i.getComponent("TG_Card").SetCardData(.6, 0, 67);
var n = this.nodeCardHandLayer[e].getChildren(), a = n[n.length - 1].convertToWorldSpaceAR(cc.v2(0, 0)), o = this.nodeCardStart.convertToNodeSpaceAR(a);
i.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.v2(o.x + 80, o.y)), cc.scaleTo(.2, .8, .8)), cc.removeSelf(), cc.callFunc(function() {
t && t();
})));
} else {
i = cc.instantiate(this.pfCardMin);
this.nodeCardStart.addChild(i);
i.getComponent("TG_Card").SetCardDataNew(!0, 67, 0, 1.4);
var s = this.nodeCardHandLayer[e].parent.convertToWorldSpaceAR(this.nodeCardHandLayer[e].getPosition()), r = i.parent.convertToNodeSpaceAR(s);
i.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.v2(r.x + 80, r.y)), cc.scaleTo(.2, 1, 1)), cc.removeSelf(), cc.callFunc(function() {
t && t();
})));
}
},
OnActionDumpCard: function(e, t, i) {
var n = null;
if (0 == e) {
for (var a = this.nodeCardHandLayer[0], o = a.children, s = a.childrenCount, r = 0; r < s; r++) {
var c = o[r];
c.getComponent("TG_Card").GetCardData() == t && (n = c);
}
var l = this.nodeDumpCard.parent.convertToWorldSpaceAR(this.nodeDumpCard.getPosition()), h = n.parent.convertToNodeSpaceAR(l);
n.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.v2(h.x, h.y)), cc.scaleTo(.2, .7, .7)), cc.removeSelf(), cc.callFunc(function() {
i && i();
})));
} else {
n = cc.instantiate(this.pfCardMin);
this.nodeCardHandLayer[e].addChild(n);
n.getComponent("TG_Card").SetCardDataNew(!0, 67, 0, 1);
var u = this.nodeDumpCard.parent.convertToWorldSpaceAR(this.nodeDumpCard.getPosition()), d = n.parent.convertToNodeSpaceAR(u);
n.runAction(cc.sequence(cc.spawn(cc.moveTo(.2, cc.v2(d.x, d.y)), cc.scaleTo(.2, 1.4, 1.4)), cc.removeSelf(), cc.callFunc(function() {
i && i();
})));
}
},
OnActionDumpCardNew: function(e, t, i, n) {
if (0 == e) for (var a = 0; a < i.length; a++) {
for (var o = null, s = i[a], r = this.nodeCardHandLayer[0], c = r.children, l = r.childrenCount, h = 0; h < l; h++) {
var u = c[h];
if (u.getComponent("TG_Card").GetCardData() == s) {
o = u;
break;
}
}
for (var d = null, m = 0; m < this.jsGroups.length; m++) if (this.jsGroups[m].cbGroupIdx == t) {
d = this.jsGroups[m];
break;
}
var f = d.node.parent.convertToWorldSpaceAR(d.node.getPosition()), p = o.parent.convertToNodeSpaceAR(f);
o.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, cc.v2(p.x, p.y)), cc.scaleTo(.3, .4, .4)), cc.removeSelf(), cc.callFunc(function() {
n && n();
})));
} else {
var _ = cc.instantiate(this.pfCardMin);
this.nodeCardHandLayer[e].addChild(_);
_.getComponent("TG_Card").SetCardDataNew(!0, 67, 0, 1);
for (var S = null, g = 0; g < this.jsGroups.length; g++) if (this.jsGroups[g].cbGroupIdx == t) {
S = this.jsGroups[g];
break;
}
var C = S.node.parent.convertToWorldSpaceAR(S.node.getPosition()), w = _.parent.convertToNodeSpaceAR(C);
_.runAction(cc.sequence(cc.spawn(cc.moveTo(.3, cc.v2(w.x, w.y)), cc.scaleTo(.3, .7, .7)), cc.removeSelf(), cc.callFunc(function() {
n && n();
})));
}
}
});
cc._RF.pop();
}, {
TG_CMD_Game: "TG_CMD_Game",
TG_GameLogic: "TG_GameLogic"
} ],
TG_GitsFightCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "30cbfOLDZ5M6L6KH/X6gN9U", "TG_GitsFightCard");
cc.Class({
extends: cc.Component,
properties: {
item: [ cc.Node ],
btnNode: cc.Node,
progressBar: cc.Sprite,
fontTime: cc.Label,
textIconSprite: [ cc.SpriteFrame ],
otherFightSprite: [ cc.SpriteFrame ],
meFightSprite: [ cc.SpriteFrame ],
FightSkeleton: [ sp.SkeletonData ]
},
onLoad: function() {},
init: function(e, t) {
this.jsGameView = e;
this.jsGameEngine = t;
},
showFightActionBtn: function() {
this._isMySendFight || (this.btnNode.active = !0);
},
hideCountdownTime: function() {
this.btnNode.active = !1;
},
setItemState: function(e, t) {
var i = this.item[e];
if (i) {
i.active = !0;
var n = !0, a = !1, o = void 0;
try {
for (var s, r = i.children[Symbol.iterator](); !(n = (s = r.next()).done); n = !0) {
s.value.active = !1;
}
} catch (e) {
a = !0;
o = e;
} finally {
try {
!n && r.return && r.return();
} finally {
if (a) throw o;
}
}
var c = (t > 3 ? 3 : t) - 1;
if (0 == e) {
var l = i.getChildByName("bg0");
l.active = !0;
l.getComponent(cc.Sprite).spriteFrame = this.meFightSprite[c];
var h = i.getChildByName("bg1");
h.active = !0;
h.getComponent(cc.Sprite).spriteFrame = this.meFightSprite[c];
} else i.getComponent(cc.Sprite).spriteFrame = this.otherFightSprite[c];
var u = i.getChildByName("skeleton");
if (1 == t || 2 == t) {
u.active = !0;
u.getComponent(sp.Skeleton).skeletonData = this.FightSkeleton[c];
} else {
var d = i.getChildByName("lableIcon");
d.active = !0;
d.getComponent(cc.Sprite).spriteFrame = this.textIconSprite[t - 1];
}
this.showAction(e, i);
}
},
showAction: function(e, t) {
var i = null;
if (0 === e) {
t.y = -t.height;
i = cc.v2(t.x, 0);
} else if (1 === e) {
t.x = cc.winSize.width / 2;
i = cc.v2(0, t.y);
} else if (2 === e) {
t.x = -cc.winSize.width / 2;
i = cc.v2(0, t.y);
}
t._oldPos = t.position;
t.runAction(cc.moveTo(.3, i));
},
hideAction: function() {},
resetThisLayout: function() {
this.node.active = !1;
this._isMySendFight = !1;
for (var e = 0; e < 3; e++) this.item[e].active = !1;
},
checkFightActionTime: function(e, t) {
var i = this;
this.node.active = !0;
this.nTime = t;
this.setItemState(e, 1);
if (0 == e) {
this._isMySendFight = !0;
this.hideCountdownTime();
} else {
if (this.jsGameEngine.cbPlayUser[this.jsGameEngine.wMeChairID]) {
var n = this.jsGameView.GetGroupCount(), a = this.jsGameView.HaveSpecialCards();
n > 0 || a ? this.showFightActionBtn() : this.scheduleOnce(function() {
i.jsGameEngine.OnSendEventAnswerFight(3);
}, 1);
}
}
},
playCloseAction: function() {},
onCloseEffectFinish: function() {},
onBtnChallenge: function() {
this.jsGameEngine.OnSendEventAnswerFight(2);
},
onBtnFold: function() {
this.jsGameEngine.OnSendEventAnswerFight(3);
},
OnUserAnswerFight: function(e, t) {
this.setItemState(e, t);
0 == e && this.hideCountdownTime();
},
update: function(e) {
if (this.btnNode.active) if (this.nTime >= 0) {
this.nTime -= e;
this.fontTime.getComponent(cc.Label).string = parseInt(Math.round(this.nTime));
} else {
this.jsGameEngine.OnSendEventAnswerFight(3);
this.btnNode.active = !1;
}
}
});
cc._RF.pop();
}, {} ],
TG_HandCard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ade207YjidBzJfTIdokseLh", "TG_HandCard");
var n = cc.Class({
extends: cc.Component,
statics: {
instance: null
},
properties: {
handcardAtlasMin: cc.SpriteAtlas,
handcardAtlasMax: cc.SpriteAtlas
},
onLoad: function() {
n.instance = this;
},
GetPkFrame: function(e, t) {
var i = "pk_" + parseInt(t / 10) + t % 10, n = n = this.handcardAtlasMin.getSpriteFrame(i);
e || (n = this.handcardAtlasMax.getSpriteFrame(i));
return n;
}
});
n.GetPkFrame = function() {
var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 81;
if (n.instance) return n.instance.GetPkFrame(e, t);
};
t.exports = n;
cc._RF.pop();
}, {} ],
TG_PayoutDetails: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41df6lI5CpFnbq33hDqR8Fr", "TG_PayoutDetails");
cc.Class({
extends: cc.Component,
properties: {
nodeDetails: [ cc.Node ]
},
OnButtonEvent: function(e, t) {
"btnClose" == e.target.name && this.node.destroy();
},
InitData: function(e) {
for (var t = 0; t < e.length; t++) {
this.nodeDetails[t].active = !0;
var i = cc.find("detailLayout", this.nodeDetails[t]), n = cc.find("lblNickName", this.nodeDetails[t]), a = cc.find("lblScore", i), o = cc.find("lblProfit", i), s = cc.find("lblNormalWin", i), r = cc.find("lblTongits", i), c = cc.find("lblSecretMelds", i), l = cc.find("lblBonusCards", i), h = cc.find("lblBurned", i), u = cc.find("lblChallengers", i), d = cc.find("lblHitpot", i), m = cc.find("lblVariable", i), f = e[t];
n.getComponent(cc.Label).string = f.NickName;
a.getComponent(cc.Label).string = f.Point;
o.getComponent(cc.Label).string = OnScoreToString(f.ProfitScore);
s.getComponent(cc.Label).string = 0 == f.NormalScore ? "-" : OnScoreToString(f.NormalScore);
r.getComponent(cc.Label).string = 0 == f.TongitsScore ? "-" : OnScoreToString(f.TongitsScore);
c.getComponent(cc.Label).string = 0 == f.SpecialGroupScore ? "-" : OnScoreToString(f.SpecialGroupScore);
l.getComponent(cc.Label).string = 0 == f.BonusCardsScore ? "-" : OnScoreToString(f.BonusCardsScore);
h.getComponent(cc.Label).string = 0 == f.BurnedScore ? "-" : OnScoreToString(f.BurnedScore);
u.getComponent(cc.Label).string = 0 == f.ChallengersScore ? "-" : OnScoreToString(f.ChallengersScore);
d.getComponent(cc.Label).string = OnScoreToString(f.HitpotScore);
null == f.WinPotScore.high && null == f.WinPotScore.low ? m.getComponent(cc.Label).string = OnScoreToString(f.WinPotScore) : m.getComponent(cc.Label).string = "-";
}
}
});
cc._RF.pop();
}, {} ],
TG_TimeCircular: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "681a6/93nVKXqgCuxBNq+Gi", "TG_TimeCircular");
cc.Class({
extends: cc.Component,
properties: {
progressBar: cc.ProgressBar,
lbllefttime: cc.Label
},
StartTimeDown: function(e) {
this.totalTime = e;
this.leftTime = e;
},
update: function(e) {
if (!(this.leftTime < 0)) {
this.leftTime = this.leftTime - e;
this.lbllefttime.string = Math.ceil(this.leftTime) >= 0 ? Math.ceil(this.leftTime) : 0;
var t = this.leftTime >= 0 ? this.leftTime / this.totalTime : 0;
this.progressBar.progress = t;
}
}
});
cc._RF.pop();
}, {} ],
XHJ_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ae0c2dqrBFFhLruAiFr+kYe", "XHJ_CMD_Game");
var n = MAX_CHAIR;
t.exports.GAME_NAME = "Aircraft";
t.exports.KIND_ID = 130;
t.exports.GAME_PLAYER = n;
var a = GAME_STATUS_FREE, o = GAME_STATUS_PLAY, s = GAME_STATUS_PLAY + 1, r = GAME_STATUS_PLAY + 2;
t.exports.GS_GAME_FREE = a;
t.exports.GS_USER_BET = o;
t.exports.GS_FLYING = s;
t.exports.GS_GAME_END = r;
t.exports.SUB_S_GAME_FREE = 100;
t.exports.SUB_S_GAME_START = 101;
t.exports.SUB_S_USER_BET = 102;
t.exports.SUB_S_CANCEL_BET = 103;
t.exports.SUB_S_START_FLY = 104;
t.exports.SUB_S_FLY_STATUS = 105;
t.exports.SUB_S_USER_CASHOUT = 106;
t.exports.SUB_S_GAME_END = 107;
t.exports.SUB_S_SET_AUTO_BET = 108;
t.exports.SUB_S_SET_AUTO_CASHOUT = 109;
t.exports.SUB_S_PREVIOUS_ROUND = 110;
t.exports.SUB_S_USER_RANK_LIST = 111;
t.exports.SUB_S_FLY_DISTANCE_RANK = 112;
t.exports.SUB_C_USER_BET = 1;
t.exports.SUB_C_CANCEL_BET = 2;
t.exports.SUB_C_USER_CASHOUT = 3;
t.exports.SUB_C_SET_AUTO_BET = 4;
t.exports.SUB_C_SET_AUTO_CASHOUT = 5;
t.exports.SUB_C_QUERY_USER_RANK = 6;
t.exports.SUB_C_QUERY_DISTANCE_RANK = 7;
cc._RF.pop();
}, {} ],
XHJ_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8a5381NeOZJ/5ykloJTV9Sl", "XHJ_GameEngine");
var n = e("XHJ_CMD_Game"), a = cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("XHJ_GameView");
this.pGameViewJs.pGameEngineJs = this;
this.bAutoCashOutMult = 101;
},
OnFrameEngineStart: function() {},
OnEventSceneMessage: function(e, t, i, a) {
var o = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
this.pGameViewJs.OnEventScene(o);
this.pGameViewJs.jsGameRecord.OnEventScene(o);
this.pGameViewJs.jsGameLuDan.OnEventScene(o);
return e == n.GS_GAME_FREE ? this.OnSceneFree(i, a) : e == n.GS_USER_BET ? this.OnSceneBet(i, a) : e == n.GS_FLYING ? this.OnSceneFlying(i, a) : e != n.GS_GAME_END || this.OnSceneEnd(i, a);
},
OnSceneFree: function(e, t) {
return !0;
},
OnSceneBet: function(e, t) {
return !0;
},
OnSceneFlying: function(e, t) {
return !0;
},
OnSceneEnd: function(e, t) {
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_GAME_FREE:
return this.OnGameFree(t, i);

case n.SUB_S_GAME_START:
return this.OnGameStart(t, i);

case n.SUB_S_USER_BET:
return this.OnGameUserBet(t, i);

case n.SUB_S_CANCEL_BET:
return this.OnGameUserCancelBet(t, i);

case n.SUB_S_START_FLY:
return this.OnGameStartFly(t, i);

case n.SUB_S_FLY_STATUS:
return this.OnGameFlyStatus(t, i);

case n.SUB_S_USER_CASHOUT:
return this.OnGameUserCashout(t, i);

case n.SUB_S_GAME_END:
return this.OnGameEnd(t, i);

case n.SUB_S_SET_AUTO_BET:
return this.OnGameSetAutoBet(t, i);

case n.SUB_S_SET_AUTO_CASHOUT:
return this.OnGameSetAutoCashout(t, i);

case n.SUB_S_PREVIOUS_ROUND:
return this.OnGamePreviousRound(t, i);

case n.SUB_S_USER_RANK_LIST:
return this.OnGameUserRankList(t, i);

case n.SUB_S_FLY_DISTANCE_RANK:
return this.OnGameFlyDistanceRank(t, i);
}
return !0;
},
OnGameFree: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameFree", e);
this.pGameViewJs.OnFree(i);
this.pGameViewJs.jsGameRecord.OnFree(i);
return !0;
},
OnGameStart: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameStart", e);
this.pGameViewJs.OnStart(i);
return !0;
},
OnGameUserBet: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserBet", e);
this.pGameViewJs.OnUserBet(i);
this.pGameViewJs.jsGameRecord.OnUserBet(i);
return !0;
},
OnGameUserCancelBet: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserCancelBet", e);
this.pGameViewJs.OnUserCancelBet(i);
this.pGameViewJs.jsGameRecord.OnUserCancelBet(i);
return !0;
},
OnGameStartFly: function(e, t) {
window.net.netSerializer.unpackMsg("CMD_S_StartFly", e);
this.pGameViewJs.OnStartFly();
return !0;
},
OnGameFlyStatus: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_FlyStatus", e);
this.pGameViewJs.OnUpdateCurWinWcore(i.FlyDistance);
return !0;
},
OnGameUserCashout: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserCashOut", e);
this.pGameViewJs.OnUserCashOut(i);
this.pGameViewJs.jsGameRecord.OnUserCashOut(i);
return !0;
},
OnGameEnd: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_GameEnd", e);
this.pGameViewJs.OnEnd(i);
this.pGameViewJs.jsGameRecord.OnEnd(i);
this.pGameViewJs.jsGameLuDan.OnEnd(i);
return !0;
},
OnGameSetAutoBet: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_SetAutoBet", e);
this.pGameViewJs.OnSetAutoBet(i);
return !0;
},
OnGameSetAutoCashout: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_SetAutoCashOut", e);
this.pGameViewJs.OnSetAutoCashout(i);
return !0;
},
OnGamePreviousRound: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_PreviousRound", e);
this.pGameViewJs.jsGameRecord.OnPreviousRound(i);
return !0;
},
OnGameUserRankList: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_UserRankList", e);
this.pGameViewJs.jsGameRecord.OnUserRankList(i);
return !0;
},
OnGameFlyDistanceRank: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_FlyDistanceRank", e);
this.pGameViewJs.jsGameRecord.OnFlyDistanceRank(i);
return !0;
},
SendPackageUserBet: function() {
var e = {};
e.BetScore = this.pGameViewJs.lChipNum;
var t = window.net.netSerializer.packMsg("CMD_C_UserBet", e);
this.SendGameData(n.SUB_C_USER_BET, t, t.length);
},
SendPackageUserCancelBet: function() {
var e = window.net.netSerializer.packMsg("CMD_C_CancelBet", {});
this.SendGameData(n.SUB_C_CANCEL_BET, e, e.length);
},
SendPackageUserCashOut: function() {
var e = window.net.netSerializer.packMsg("CMD_C_UserCashOut", {});
this.SendGameData(n.SUB_C_USER_CASHOUT, e, e.length);
},
SendPackageUserAutoBet: function(e) {
var t = {};
t.Enable = e;
t.BetScore = this.pGameViewJs.lChipNum;
var i = window.net.netSerializer.packMsg("CMD_C_SetAutoBet", t);
this.SendGameData(n.SUB_C_SET_AUTO_BET, i, i.length);
},
SendPackageUserAutoCashOut: function(e) {
var t = {};
t.Enable = e;
t.CashOutMultiple = this.bAutoCashOutMult;
var i = window.net.netSerializer.packMsg("CMD_C_SetAutoCashOut", t);
this.SendGameData(n.SUB_C_SET_AUTO_CASHOUT, i, i.length);
},
SendPackageUserRank: function(e) {
var t = {};
t.RankType = e;
var i = window.net.netSerializer.packMsg("CMD_C_QueryUserRank", t);
this.SendGameData(n.SUB_C_QUERY_USER_RANK, i, i.length);
},
SendPackageDistanceRank: function() {
var e = window.net.netSerializer.packMsg("CMD_C_QueryDistanceRank", {});
this.SendGameData(n.SUB_C_QUERY_DISTANCE_RANK, e, e.length);
},
SendPacketStandUpXHJ: function() {
var e = this;
if (0 == GetServerRoom().GetEventCount()) this.OnFrameButtonBackGame(); else if (this.pGameViewJs.hasBet) ManagerHelp_SetSystemAlert("After exiting will be trusteeship, does not affect the normal settlement, sure need to exit?", function(t, i) {
if (i == window.YQ_SYS_OK) {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(e.GetMeTableID(), e.GetMeChairID(), !0);
e.scheduleOnce(e.OnFrameButtonBackGame.bind(this), .01);
}
}, !0); else {
cc.director.preloadScene("LobbyScene");
GetServerRoom().SendPacketStandUp(this.GetMeTableID(), this.GetMeChairID(), !0);
e.scheduleOnce(e.OnFrameButtonBackGame.bind(this), .01);
}
}
});
t.exports.GameEngineJs = a;
cc._RF.pop();
}, {
XHJ_CMD_Game: "XHJ_CMD_Game"
} ],
XHJ_GameLuDan: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "08f8bI6XJVP66+H7aW2qU+3", "XHJ_GameLuDan");
cc.Class({
extends: cc.Component,
properties: {
scorllViewLuDan: cc.Node,
contentLuDan: cc.Node,
scorllViewLuDanBig: cc.Node,
contentLuDanBig: cc.Node,
nodeLuDanBig: cc.Node,
pfItemLuDan: cc.Prefab
},
InitRecordData: function(e) {
this.jsGameEngine = e;
this.arrayLuDan = [];
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"Dis_btnLuDan" == i ? this.OnUpdateLuDan() : "Dis_LuDanBig" == i && this.OnUpdateLuDan();
},
OnUpdateLuDan: function() {
this.nodeLuDanBig.active = !this.nodeLuDanBig.active;
if (this.nodeLuDanBig.active) {
this.scorllViewLuDanBig.active = !0;
this.nodeLuDanBig.active = !0;
this.OnShowLuDan();
} else {
this.scorllViewLuDanBig.active = !1;
this.nodeLuDanBig.active = !1;
this.OnShowLuDan();
}
},
OnEventScene: function(e) {
this.arrayLuDan = CopyArray(e.GameRecord);
this.OnShowLuDan();
},
OnEnd: function(e) {
this.arrayLuDan.length >= 60 && this.arrayLuDan.splice(0, 1);
this.arrayLuDan.push(e.FlyDistance);
this.OnShowLuDan();
},
OnShowLuDan: function() {
var e = this.contentLuDan;
this.nodeLuDanBig.active && (e = this.contentLuDanBig);
e.removeAllChildren();
for (var t = this.arrayLuDan.length - 1; t >= 0; t--) {
var i = cc.instantiate(this.pfItemLuDan);
e.addChild(i);
var n = this.arrayLuDan[t], a = cc.find("imSmall", i), o = cc.find("imMiddle", i), s = cc.find("imBig", i);
if (n <= 200) {
a.active = !0;
o.active = !1;
s.active = !1;
} else if (n > 200 && n <= 1e3) {
a.active = !1;
o.active = !0;
s.active = !1;
} else {
a.active = !1;
o.active = !1;
s.active = !0;
}
cc.find("lblMult", i).getComponent(cc.Label).string = (n / 100).toFixed(2) + "x";
}
}
});
cc._RF.pop();
}, {} ],
XHJ_GameRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85dd6l74ERGL4HT3tSS5fm2", "XHJ_GameRecord");
var n = cc.color(131, 131, 131), a = cc.color(255, 255, 255);
cc.Class({
extends: cc.Component,
properties: {
nodeMainNormal: [ cc.Node ],
nodeMainSelect: [ cc.Node ],
nodeOther: cc.Node,
nodeMyBets: cc.Node,
nodeBtnMain: cc.Node,
nodeBtnChild: cc.Node,
nodeChildSelect: cc.Node,
nodeChildBtn: [ cc.Node ],
nodeChildLabel: [ cc.Node ],
nodeTitleAllBets: cc.Node,
nodeTitleWinRanking: cc.Node,
nodeTitleWinMultRanking: cc.Node,
nodeTitleMult: cc.Node,
lblTotalBets: cc.Label,
lblPreviousRound: cc.Label,
contentMyBets: cc.Node,
pfItemMyBets: cc.Prefab,
contentRecord: cc.Node,
pfItemAllBets: cc.Prefab,
pfItemWinRanking: cc.Prefab,
pfItemWinMultRanking: cc.Prefab,
pfItemMult: cc.Prefab
},
InitRecordData: function(e) {
this.jsGameEngine = e;
this.bMeUserID = PlayerManager.GetMeUserItem().GetUserID();
this.mainIndex = 0;
this.childIndex = 1;
this.arrayUserBet = [];
this.totalBets = 0;
this.arrayPreviousUserBet = [];
this.isPreviousRound = !1;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnAllBets" == i) {
this.OnUpdateButtonStatus(0);
this.OnBtnAllBets();
} else if ("Dis_btnMyBet" == i) {
this.OnUpdateButtonStatus(1);
this.OnBtnMyBet();
} else if ("Dis_btnWinner" == i) {
this.OnUpdateButtonStatus(2);
this.OnBtnWinner();
} else "Dis_btnPreviousRound" == i ? this.ShowPreviousRound() : "Dis_btnWinRanking" == i ? this.OnBtnRecordChild(1) : "Dis_btnWinMultRanking" == i ? this.OnBtnRecordChild(2) : "Dis_btnMult" == i && this.OnBtnRecordChild(3);
},
OnUpdateButtonStatus: function(e) {
for (var t = 0; t < 3; t++) if (t == e) {
this.nodeMainNormal[t].active = !1;
this.nodeMainSelect[t].active = !0;
} else {
this.nodeMainNormal[t].active = !0;
this.nodeMainSelect[t].active = !1;
}
},
OnBtnAllBets: function() {
if (0 != this.mainIndex) {
this.mainIndex = 0;
this.nodeOther.active = !0;
this.nodeMyBets.active = !1;
this.contentMyBets.removeAllChildren();
this.nodeBtnMain.active = !0;
this.nodeBtnChild.active = !1;
this.nodeTitleAllBets.active = !0;
this.nodeTitleWinRanking.active = !1;
this.nodeTitleWinMultRanking.active = !1;
this.nodeTitleMult.active = !1;
this.UpdateUserBet();
}
},
OnBtnMyBet: function() {
var e = this;
if (1 != this.mainIndex) {
this.mainIndex = 1;
this.nodeOther.active = !1;
this.nodeMyBets.active = !0;
var t = GetProject().szGameMyBetUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(a, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
200 == n.statusCode ? e.OnShowMyBets(n.data) : ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
},
OnShowMyBets: function(e) {
this.contentRecord.removeAllChildren();
for (var t = e.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfItemMyBets);
this.contentMyBets.addChild(n);
var a = e[i];
cc.find("lblData", n).getComponent(cc.Label).string = a.InsertTime;
cc.find("lblBet", n).getComponent(cc.Label).string = OnScoreToString(a.BetScore, 0);
var o = cc.find("lblMult", n), s = cc.find("lblWin", n), r = cc.find("imWinMultBg", n);
if (a.WinMultiple > 0) {
r.active = !0;
o.getComponent(cc.Label).string = keepTwoDecimalFull(a.WinMultiple / 100) + "x";
s.getComponent(cc.Label).string = OnScoreToString(a.WinScore, 2);
s.color = cc.color(255, 229, 56);
} else {
o.getComponent(cc.Label).string = "-";
s.getComponent(cc.Label).string = "-";
}
}
},
OnBtnWinner: function() {
if (2 != this.mainIndex) {
this.mainIndex = 2;
this.nodeOther.active = !0;
this.nodeMyBets.active = !1;
this.contentMyBets.removeAllChildren();
this.nodeBtnMain.active = !1;
this.nodeBtnChild.active = !0;
this.nodeTitleAllBets.active = !1;
this.OnBtnRecordChild(1);
}
},
OnBtnRecordChild: function(e) {
this.childIndex = e;
this.nodeChildSelect.x = this.nodeChildBtn[e - 1].x;
for (var t = 0; t < 3; t++) this.nodeChildLabel[t].color = n;
this.nodeChildLabel[e - 1].color = a;
1 == e ? this.jsGameEngine.SendPackageUserRank(1) : 2 == e ? this.jsGameEngine.SendPackageUserRank(2) : 3 == e && this.jsGameEngine.SendPackageDistanceRank();
},
ShowPreviousRound: function() {
var e = this.arrayPreviousUserBet.length;
if (!(e <= 0)) {
this.isPreviousRound = !this.isPreviousRound;
if (this.isPreviousRound) {
this.contentRecord.removeAllChildren();
this.lblPreviousRound.string = "This Round";
for (var t = 0, i = 0; i < e; i++) {
var n = this.arrayPreviousUserBet[i], a = {};
a.BetInfo = n;
this.InsertUserBetItem(a);
t += n.BetScore;
}
this.lblTotalBets.string = OnScoreToString(t, 0);
} else {
this.OnUpdateTotalBets();
this.lblPreviousRound.string = "Previous Round";
this.UpdateUserBet();
}
}
},
OnEventScene: function(e) {
var t = e.BetList.length;
if (t > 0) {
this.totalBets += e.TotalBet;
this.OnUpdateTotalBets();
for (var i = 0; i < t; i++) {
var n = {};
n.BetInfo = e.BetList[i];
this.arrayUserBet.push(n.BetInfo);
}
this.SortUserBets();
this.UpdateUserBet();
}
},
OnPreviousRound: function(e) {
var t = e.BetList.length;
if (t > 0) for (var i = 0; i < t; i++) {
var n = {};
n.BetInfo = e.BetList[i];
this.arrayPreviousUserBet.push(n.BetInfo);
}
},
OnUserRankList: function(e) {
this.contentRecord.removeAllChildren();
if (1 == this.childIndex) {
this.nodeTitleWinRanking.active = !0;
this.nodeTitleWinMultRanking.active = !1;
this.nodeTitleMult.active = !1;
this.OnWinRanking(e);
} else if (2 == this.childIndex) {
this.nodeTitleWinRanking.active = !1;
this.nodeTitleWinMultRanking.active = !0;
this.nodeTitleMult.active = !1;
this.OnWinMultRanking(e);
}
},
OnWinRanking: function(e) {
for (var t = e.RankList.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfItemWinRanking);
this.contentRecord.addChild(n);
var a = e.RankList[i];
cc.find("lblRank", n).getComponent(cc.Label).string = i + 1;
cc.find("lblData", n).getComponent(cc.Label).string = new Date(1e3 * a.CashOutTime).format("yyyy-MM-dd hh:mm:ss");
var o = cc.find("lblPlayer", n);
a.NickName.length > 0 ? o.getComponent(cc.Label).string = OnConverString(a.NickName) : o.getComponent(cc.Label).string = a.GameID;
cc.find("lblWin", n).getComponent(cc.Label).string = OnScoreToString(a.WinScore, 2);
cc.find("lblMult", n).getComponent(cc.Label).string = keepTwoDecimalFull(a.WinMultiple / 100) + "x";
}
},
OnWinMultRanking: function(e) {
for (var t = e.RankList.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfItemWinMultRanking);
this.contentRecord.addChild(n);
var a = e.RankList[i];
cc.find("lblRank", n).getComponent(cc.Label).string = i + 1;
cc.find("lblData", n).getComponent(cc.Label).string = new Date(1e3 * a.CashOutTime).format("yyyy-MM-dd hh:mm:ss");
var o = cc.find("lblPlayer", n);
a.NickName.length > 0 ? o.getComponent(cc.Label).string = OnConverString(a.NickName) : o.getComponent(cc.Label).string = a.GameID;
cc.find("lblMult", n).getComponent(cc.Label).string = keepTwoDecimalFull(a.WinMultiple / 100) + "x";
cc.find("lblWin", n).getComponent(cc.Label).string = OnScoreToString(a.WinScore, 2);
}
},
OnFlyDistanceRank: function(e) {
this.contentRecord.removeAllChildren();
this.nodeTitleWinRanking.active = !1;
this.nodeTitleWinMultRanking.active = !1;
this.nodeTitleMult.active = !0;
for (var t = e.RankList.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfItemMult);
this.contentRecord.addChild(n);
var a = e.RankList[i];
cc.find("lblRank", n).getComponent(cc.Label).string = i + 1;
cc.find("lblData", n).getComponent(cc.Label).string = new Date(1e3 * a.RecordTime).format("yyyy-MM-dd hh:mm:ss");
cc.find("lblMult", n).getComponent(cc.Label).string = keepTwoDecimalFull(a.FlyDistance / 100) + "x";
}
},
OnUserBet: function(e) {
if (0 == e.RetCode) {
this.totalBets += e.BetInfo.BetScore;
for (var t = -1, i = this.arrayUserBet.length, n = 0; n < i; n++) {
var a = this.arrayUserBet[n];
if (e.BetInfo.BetScore >= a.BetScore) {
t = n;
break;
}
}
0 == i ? this.arrayUserBet.push(e.BetInfo) : -1 == t ? this.arrayUserBet.push(e.BetInfo) : this.arrayUserBet.splice(t, 0, e.BetInfo);
if (0 == this.mainIndex && !this.isPreviousRound) {
this.OnUpdateTotalBets();
this.InsertUserBetItem(e);
for (var o = this.contentRecord.children, s = this.contentRecord.childrenCount, r = 0; r < s; r++) {
var c = o[r];
c.userID == this.bMeUserID ? c.zIndex = 0 : c.zIndex = this.GetZIndex(c.userID);
}
}
}
},
OnUserCancelBet: function(e) {
if (0 == e.RetCode) {
for (var t = this.arrayUserBet.length, i = 0; i < t; i++) {
var n = this.arrayUserBet[i];
if (e.UserID == n.UserID) {
i;
this.totalBets -= n.BetScore;
this.arrayUserBet.splice(i, 1);
break;
}
}
if (0 == this.mainIndex && !this.isPreviousRound) {
this.OnUpdateTotalBets();
for (var a = this.contentRecord.children, o = this.contentRecord.childrenCount, s = 0; s < o; s++) {
if (a[s].userID == e.UserID) {
a[s].destroy();
}
}
}
}
},
OnUserCashOut: function(e) {
if (0 == e.RetCode) {
var t = this.arrayUserBet.length;
if (0 != t) {
for (var i = 0; i < t; i++) {
var n = this.arrayUserBet[i];
if (e.UserID == n.UserID) {
i;
n.WinMultiple = e.WinMultiple;
n.WinScore = e.WinScore;
break;
}
}
if (0 == this.mainIndex && !this.isPreviousRound) {
for (var a = this.contentRecord.children, o = this.contentRecord.childrenCount, s = null, r = 0; r < o; r++) {
if (a[r].userID == e.UserID) {
s = a[r];
break;
}
}
var c = cc.find("imOtherBg", s), l = cc.find("imCashOutBg", s), h = cc.find("imMultBg", s), u = cc.find("lblMult", s), d = cc.find("lblWin", s);
if (e.UserID == this.bMeUserID) {
h.active = !0;
u.getComponent(cc.Label).string = keepTwoDecimalFull(e.WinMultiple / 100) + "x";
d.getComponent(cc.Label).string = OnScoreToString(e.WinScore, 2);
d.color = cc.color(255, 229, 56);
} else {
c.active = !1;
l.active = !0;
h.active = !0;
u.getComponent(cc.Label).string = keepTwoDecimalFull(e.WinMultiple / 100) + "x";
d.getComponent(cc.Label).string = OnScoreToString(e.WinScore, 2);
d.color = cc.color(255, 229, 56);
}
}
}
}
},
OnEnd: function(e) {
this.arrayPreviousUserBet = CopyArray(this.arrayUserBet);
},
OnFree: function(e) {
this.arrayUserBet.length = 0;
this.totalBets = 0;
this.lblTotalBets.string = 0;
0 != this.mainIndex || this.isPreviousRound || this.contentRecord.removeAllChildren();
},
UpdateUserBet: function() {
this.contentRecord.removeAllChildren();
for (var e = this.arrayUserBet.length, t = 0; t < e; t++) {
var i = this.arrayUserBet[t], n = {};
n.BetInfo = i;
this.InsertUserBetItem(n);
}
},
OnUpdateTotalBets: function() {
this.lblTotalBets.string = OnScoreToString(this.totalBets, 0);
},
InsertUserBetItem: function(e) {
var t = cc.instantiate(this.pfItemAllBets);
this.contentRecord.addChild(t);
t.userID = e.BetInfo.UserID;
var i = cc.find("lblPlayer", t);
e.BetInfo.NickName.length > 0 ? i.getComponent(cc.Label).string = OnConverString(e.BetInfo.NickName) : i.getComponent(cc.Label).string = e.BetInfo.GameID;
cc.find("lblBet", t).getComponent(cc.Label).string = OnScoreToString(e.BetInfo.BetScore, 0);
var n = cc.find("imOtherBg", t), a = cc.find("imMeBg", t), o = cc.find("imCashOutBg", t), s = cc.find("imMultBg", t), r = cc.find("lblMult", t), c = cc.find("lblWin", t);
if (e.BetInfo.UserID == this.bMeUserID) {
n.active = !1;
a.active = !0;
if (e.BetInfo.WinMultiple > 0) {
s.active = !0;
r.getComponent(cc.Label).string = keepTwoDecimalFull(e.BetInfo.WinMultiple / 100) + "x";
c.getComponent(cc.Label).string = OnScoreToString(e.BetInfo.WinScore, 2);
c.color = cc.color(255, 229, 56);
} else {
r.getComponent(cc.Label).string = "-";
c.getComponent(cc.Label).string = "-";
}
} else if (e.BetInfo.WinMultiple > 0) {
n.active = !1;
o.active = !0;
s.active = !0;
r.getComponent(cc.Label).string = keepTwoDecimalFull(e.BetInfo.WinMultiple / 100) + "x";
c.getComponent(cc.Label).string = OnScoreToString(e.BetInfo.WinScore, 2);
c.color = cc.color(255, 229, 56);
} else {
r.getComponent(cc.Label).string = "-";
c.getComponent(cc.Label).string = "-";
}
},
SortUserBets: function() {
this.arrayUserBet.sort(function(e, t) {
if (e.BetScore && t.BetScore) return t.BetScore - e.BetScore;
});
},
GetZIndex: function(e) {
for (var t = -1, i = this.arrayUserBet.length, n = 0; n < i; n++) {
if (e == this.arrayUserBet[n].UserID) {
t = n;
break;
}
}
return t + 1;
}
});
cc._RF.pop();
}, {} ],
XHJ_GameTimeDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "86e64u+1T5AI4/dZS4NoRze", "XHJ_GameTimeDown");
cc.Class({
extends: cc.Component,
properties: {
lblTime: cc.Label,
fGameCount: 0
},
StartCountTime: function(e) {
this.node.active = !0;
this.fGameCount = e;
},
StopCountTime: function() {
this.node.active = !1;
this.fGameCount = 0;
},
update: function(e) {
this.fGameCount > 0 ? this.fGameCount -= e : this.fGameCount = 0;
var t = parseInt(Math.ceil(this.fGameCount));
this.lblTime.string = t;
}
});
cc._RF.pop();
}, {} ],
XHJ_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ab638p3daRGG4kg4sxPJumS", "XHJ_GameView");
var n = e("XHJ_CMD_Game");
cc.Class({
extends: GameFrameView,
properties: {
nodeMenu: cc.Node,
nodeHelp: cc.Node,
nodeTime: cc.Node,
nodeRecord: cc.Node,
nodeLuDan: cc.Node,
nodeFlyBoard: cc.Node,
nodeStart: cc.Node,
nodeMask: cc.Node,
imFlyLine: cc.Node,
spriteSwitch: [ cc.SpriteFrame ],
nodeAutoBetSwitch: cc.Node,
nodeAutoCashOutSwitch: cc.Node,
nodeAutoBetBar: cc.Node,
nodeAutoCashOutBar: cc.Node,
nodeAutoCashOut: cc.Node,
nodeEditDisable: cc.Node,
nodeJetton: [ cc.Node ],
spriteJetton: [ cc.SpriteFrame ],
btnBetSub: cc.Button,
btnBetAdd: cc.Button,
btnBet: cc.Node,
btnCancel: cc.Node,
btnCashOut: cc.Node,
btnNextRound: cc.Node,
nodeBtnDisable: cc.Node,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
lblGameStatus: cc.Label,
lblCurMulti: cc.Label,
lblStatus: cc.Label,
keyBoardNode: cc.Node,
keyBoardBigNode: cc.Node,
keyBoardMultLab: cc.Node,
keyBoardBtn: cc.Button,
nodeEndLayer: cc.Node,
pfRocket: cc.Prefab,
keyBoardItem: cc.Prefab,
pfGameEndScore: cc.Prefab,
lblAutoCashOut: cc.Label
},
OnFrameViewLoad: function() {
0 == GetProject().cbCheckAccounts ? this.lblAutoCashOut.string = "Auto Cash Out" : this.lblAutoCashOut.string = "Auto Jump Out";
this.jsGameTimeDown = this.nodeTime.getComponent("XHJ_GameTimeDown");
this.jsGameRecord = this.nodeRecord.getComponent("XHJ_GameRecord");
this.jsGameRecord.InitRecordData(this.pGameEngineJs);
this.jsGameLuDan = this.nodeLuDan.getComponent("XHJ_GameLuDan");
this.jsGameLuDan.InitRecordData(this.pGameEngineJs);
this.jsInputBox = this.nodeAutoCashOut.getComponent("XHJ_InputBox");
this.jsInputBox.InitEditingData(this.pGameEngineJs);
var e = PlayerManager.GetMeUserItem();
this.lMeScore = e.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.lBetChip = null;
this.lBetLimit = 0;
this.bGameStatus = n.GS_GAME_FREE;
this.autoBet = !1;
this.autoCashOut = !1;
this.lChipIndex = 0;
this.lCurrentJetton = 1e3;
this.lChipNum = 1e3;
this.flyRocket = null;
this.isFlying = !1;
this.flyCount = 0;
this.flySpeed = 1;
this.betClicked = !1;
this.hasBet = !1;
this.hasCashOut = !1;
window.mfConfig.PlayAudio("130/Audio/BG", !0, window.mfConfig.fMusic);
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
},
OnEventScene: function(e) {
this.lBetChip = e.BetChips;
this.lBetLimit = e.BetLimit;
this.ShowBetChip();
this.OnUpdateBetChipStatus(!0);
this.bGameStatus = e.GameStatus;
if (e.EnableAutoBet) {
this.lChipNum = e.AutoBetScore;
this.lblBetScore.string = this.lChipNum / 1e3;
var t = [];
t.RetCode = 0;
t.Enable = !0;
this.OnSetAutoBet(t);
}
if (e.EnableAutoCashOut) {
this.pGameEngineJs.bAutoCashOutMult = e.AutoCashOutMultiple;
this.keyBoardMultLab.getComponent(cc.Label).string = keepTwoDecimalFull(this.pGameEngineJs.bAutoCashOutMult / 100) + "x";
var i = [];
i.RetCode = 0;
i.Enable = !0;
this.OnSetAutoCashout(i);
}
var a = PlayerManager.GetMeUserItem().GetUserID();
this.hasBet = !1;
this.hasCashOut = !1;
for (var o = e.BetList, s = o.length, r = 0; r < s; r++) {
var c = o[r];
if (c.UserID == a) {
this.hasBet = !0;
c.WinMultiple > 0 && (this.hasCashOut = !0);
break;
}
}
if (this.bGameStatus == n.GS_GAME_FREE) ; else if (this.bGameStatus == n.GS_USER_BET) {
this.flyRocket = cc.instantiate(this.pfRocket);
this.nodeFlyBoard.addChild(this.flyRocket);
this.jsGameTimeDown.StartCountTime(e.TimeLeave);
this.hasBet ? this.OnUpdateOperateButtonStatus(!1, !0, !1, !1) : this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
} else if (this.bGameStatus == n.GS_FLYING) {
this.flyRocket = cc.instantiate(this.pfRocket);
this.nodeFlyBoard.addChild(this.flyRocket);
this.isFlying = !0;
this.flySpeed = 10;
this.hasBet && (this.hasCashOut ? this.OnUpdateOperateButtonStatus(!0, !1, !1, !1) : this.OnUpdateOperateButtonStatus(!1, !1, !0, !1));
} else if (this.bGameStatus == n.GS_GAME_END) {
var l = 1e3 * e.FlyDistance / 100;
this.lblCurMulti.string = OnScoreToString(l) + "x";
this.lblCurMulti.node.color = cc.color(255, 0, 0);
this.lblStatus.node.active = !0;
}
},
OnUpdateButtonStatus: function() {
if (this.bGameStatus == n.GS_GAME_FREE) {
this.btnNextRound.active && this.OnUpdateOperateButtonStatus(!1, !0, !1, !1);
this.lblGameStatus.string = "GS_GAME_FREE";
} else if (this.bGameStatus == n.GS_USER_BET) this.lblGameStatus.string = "GS_USER_BET"; else if (this.bGameStatus == n.GS_FLYING) {
this.hasBet ? this.OnUpdateOperateButtonStatus(!1, !1, !0, !1) : this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
this.lblGameStatus.string = "GS_FLYING";
} else if (this.bGameStatus == n.GS_GAME_END) {
if (this.btnCashOut.active) {
this.betClicked = !1;
this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
}
this.lblGameStatus.string = "GS_GAME_END";
}
},
ShowBetChip: function() {
for (var e = 0; e < 4; e++) {
var t = "LabelChip" + e;
this.nodeJetton[e].getChildByName(t).getComponent(cc.Label).string = window.OnIntScore(this.lBetChip[e]);
}
},
OnUpdateBetChipStatus: function(e) {
if (e) {
for (var t = -1, i = 0; i < 4; i++) {
var n = this.lMeScore >= this.lBetChip[i];
this.autoBet || (this.nodeJetton[i].getComponent(cc.Button).interactable = n);
n && (t = i);
}
if (-1 == t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var a = 0; a < 4; a++) this.nodeJetton[a].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = 1e3;
this.lblBetScore.string = this.lChipNum / 1e3;
} else if (this.lChipIndex > t) {
this.lChipIndex = 0;
this.lCurrentJetton = this.lBetChip[0];
for (var o = 0; o < 4; o++) this.nodeJetton[o].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[0].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
this.lChipNum = 1e3;
this.lblBetScore.string = this.lChipNum / 1e3;
}
} else for (var s = 0; s < 4; s++) this.nodeJetton[s].getComponent(cc.Button).interactable = !1;
},
ClickJettonBtn: function(e, t) {
var i = parseInt(t);
this.lCurrentJetton = this.lBetChip[i];
i == this.lChipIndex ? this.OnUpdateBetChip(0) : this.OnUpdateBetChip(1);
this.lChipIndex = i;
for (var n = 0; n < 4; n++) this.nodeJetton[n].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[0];
this.nodeJetton[i].getComponent(cc.Sprite).spriteFrame = this.spriteJetton[1];
},
OnViewUpdate: function(e) {
if (this.isFlying) {
this.flyCount += 4.5 * this.flySpeed;
this.flyRocket.rotation -= .2 * this.flySpeed;
var t = this.flyCount, i = Math.pow(t, 2.5) / (Math.pow(1e3, 2.5) / 350);
this.flyRocket.x = t;
this.flyRocket.y = i;
if (this.flyCount >= 1e3) {
this.isFlying = !1;
this.flyCount = 0;
this.flySpeed = 1;
var n = cc.sequence(cc.moveTo(2, t, i + 50), cc.moveTo(2, t, i - 50));
this.flyRocket.runAction(cc.repeatForever(n));
var a = cc.sequence(cc.scaleTo(2, 1, 1.15), cc.scaleTo(2, 1, .85));
this.imFlyLine.runAction(cc.repeatForever(a));
}
this.nodeMask.width = t;
}
},
OnUpdateCurWinWcore: function(e) {
var t = 1e3 * e / 100;
this.lblCurMulti.string = OnScoreToString(t) + "x";
if (!this.hasCashOut) {
var i = this.lChipNum * e / 100;
this.lblCurWin.string = OnScoreToString(i);
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("btnMenuMore" == i) this.OnMenuLayerShow(); else if ("btnRule" == i) this.OnHelpLayerShow(); else if ("Dis_btnBetSub" == i) this.OnUpdateBetChip(2); else if ("Dis_btnBetAdd" == i) this.OnUpdateBetChip(3); else if ("Dis_btnBet" == i) {
this.OnBtnBet();
this.DisableOperateButton();
} else if ("Dis_btnCancel" == i) {
this.OnBtnCancel();
this.DisableOperateButton();
} else if ("Dis_btnCashOut" == i) {
this.OnBtnCashOut();
this.DisableOperateButton();
} else if ("Dis_btnNextRound" == i) {
this.OnBtnNextRound();
this.DisableOperateButton();
} else "btnAutoBet" == i ? this.OnBtnAutoBet() : "btnAutoCashOut" == i ? this.OnBtnAutoCashOut() : "btnKeyBoard" == i && this.OnBtnShowKeyBoard();
},
OnBtnShowKeyBoard: function() {
if (this.autoCashOut) ManagerHelp_SetSystemLabel("Please turn off the Auto Cash Out  switch first"); else {
if (null == this.keyBoardItemJs || null == this.keyBoardItemJs) {
var e = cc.instantiate(this.keyBoardItem);
this.keyBoardItemJs = e.getComponent("XHJ_KeyBoard");
this.keyBoardNode.addChild(e);
this.keyBoardItemJs.inItKeyBoardNode(this.pGameEngineJs, this.keyBoardMultLab, this.keyBoardBigNode);
}
this.keyBoardBigNode.active = !0;
this.keyBoardNode.active = !0;
}
},
OnMenuLayerShow: function() {
this.nodeMenu.active = !this.nodeMenu.active;
},
OnHelpLayerShow: function() {
this.nodeHelp.active = !this.nodeHelp.active;
},
OnUpdateBetChip: function(e) {
if (0 == e) {
if (this.lChipNum + this.lCurrentJetton > this.lMeScore) return;
if (this.lChipNum + this.lCurrentJetton > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += this.lCurrentJetton;
} else if (1 == e) {
if (this.lCurrentJetton > this.lMeScore) return;
this.lChipNum = this.lCurrentJetton;
} else if (2 == e) this.lChipNum > 1e3 && (this.lChipNum -= 1e3); else if (3 == e) {
if (this.lChipNum + 1e3 > this.lMeScore) return;
if (this.lChipNum + 1e3 > this.lBetLimit) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += 1e3;
}
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnBtnBet: function() {
if (this.CheckCanBet()) if (this.bGameStatus == n.GS_USER_BET) this.pGameEngineJs.SendPackageUserBet(); else {
this.bGameStatus != n.GS_FLYING ? this.OnUpdateOperateButtonStatus(!1, !0, !1, !1) : this.OnUpdateOperateButtonStatus(!1, !1, !1, !0);
this.betClicked = !0;
} else this.OnOpenGameShop();
},
OnBtnCancel: function() {
if (this.bGameStatus == n.GS_USER_BET) this.pGameEngineJs.SendPackageUserCancelBet(); else {
this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
this.betClicked = !1;
}
},
OnBtnCashOut: function() {
this.pGameEngineJs.SendPackageUserCashOut();
},
OnBtnNextRound: function() {
this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
this.betClicked = !1;
},
OnBtnAutoBet: function() {
this.autoBet ? this.pGameEngineJs.SendPackageUserAutoBet(!1) : this.pGameEngineJs.SendPackageUserAutoBet(!0);
},
OnBtnAutoCashOut: function() {
this.autoCashOut ? this.pGameEngineJs.SendPackageUserAutoCashOut(!1) : this.pGameEngineJs.SendPackageUserAutoCashOut(!0);
},
OnFree: function(e) {
this.bGameStatus = n.GS_GAME_FREE;
this.OnUpdateButtonStatus();
this.lblCurMulti.string = "";
this.lblCurMulti.node.color = cc.color(255, 255, 255);
this.lblStatus.node.active = !1;
},
OnStart: function(e) {
this.bGameStatus = n.GS_USER_BET;
this.OnUpdateButtonStatus();
this.jsGameTimeDown.StartCountTime(e.TimeLeave);
if (null == this.flyRocket) {
this.flyRocket = cc.instantiate(this.pfRocket);
this.nodeFlyBoard.addChild(this.flyRocket);
}
if (this.betClicked && !this.hasBet && this.lChipNum > 0) {
if (!this.CheckCanBet()) {
this.OnOpenGameShop();
return;
}
this.pGameEngineJs.SendPackageUserBet();
}
},
OnUserBet: function(e) {
if (e.BetInfo.UserID == PlayerManager.GetMeUserItem().GetUserID()) {
if (0 != e.RetCode) return;
this.hasBet = !0;
this.lMeScore -= this.lChipNum;
this.OnUpdateUserScore(-this.lChipNum);
this.autoBet, this.OnUpdateOperateButtonStatus(!1, !0, !1, !1);
}
},
OnUserCancelBet: function(e) {
if (e.UserID == PlayerManager.GetMeUserItem().GetUserID()) {
if (0 != e.RetCode) return;
this.hasBet = !1;
this.lMeScore += this.lChipNum;
this.OnUpdateUserScore(this.lChipNum);
this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
}
},
OnStartFly: function() {
this.bGameStatus = n.GS_FLYING;
this.OnUpdateButtonStatus();
if (null == this.flyRocket) {
this.flyRocket = cc.instantiate(this.pfRocket);
this.nodeFlyBoard.addChild(this.flyRocket);
}
this.isFlying = !0;
this.jsGameTimeDown.StopCountTime();
},
OnUserCashOut: function(e) {
var t = this;
if (e.UserID == PlayerManager.GetMeUserItem().GetUserID()) {
if (0 != e.RetCode) return;
this.autoCashOut;
this.betClicked = !1;
this.hasBet = !1;
this.hasCashOut = !0;
this.OnUpdateCurWinWcore(e.WinMultiple);
window.mfConfig.PlayAudio("130/Audio/coin", !1, window.mfConfig.fMusic);
this.nodeEndLayer.active = !0;
var i = this.nodeEndLayer.getComponent(sp.Skeleton);
PlaySkeletonAnimation(i, !1, "feijinbi").setCompleteListener(function() {
t.nodeEndLayer.active = !1;
t.lMeScore += e.WinScore;
t.OnUpdateUserScore(e.WinScore);
t.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
var i = cc.instantiate(t.pfGameEndScore);
t.nodeViewUser[0].addChild(i);
i.getComponent("jsGameEndScore").InitGameScore(e.WinScore, 1, function() {
i.removeFromParent();
});
});
}
},
OnSetAutoBet: function(e) {
if (0 == e.RetCode) {
this.autoBet = e.Enable;
if (e.Enable) {
this.nodeAutoBetSwitch.getComponent(cc.Sprite).spriteFrame = this.spriteSwitch[1];
this.nodeAutoBetBar.x = 69;
this.OnUpdateBetChipStatus(!1);
this.btnBetSub.interactable = !1;
this.btnBetAdd.interactable = !1;
this.btnBet.getComponent(cc.Button).interactable = !1;
this.btnCancel.getComponent(cc.Button).interactable = !1;
this.btnNextRound.getComponent(cc.Button).interactable = !1;
if (this.bGameStatus == n.GS_USER_BET) if (this.hasBet) ; else {
if (!this.CheckCanBet()) {
this.OnOpenGameShop();
return;
}
this.pGameEngineJs.SendPackageUserBet();
}
} else {
this.nodeAutoBetSwitch.getComponent(cc.Sprite).spriteFrame = this.spriteSwitch[0];
this.nodeAutoBetBar.x = -69;
this.btnBet.getComponent(cc.Button).interactable = !0;
this.btnCancel.getComponent(cc.Button).interactable = !0;
this.btnNextRound.getComponent(cc.Button).interactable = !0;
if (this.bGameStatus == n.GS_USER_BET) {
this.btnBet.active = !1;
this.btnCancel.active = !0;
this.btnCashOut.active = !1;
this.btnNextRound.active = !1;
} else this.hasBet ? this.hasCashOut ? this.OnUpdateOperateButtonStatus(!0, !1, !1, !1) : this.OnUpdateOperateButtonStatus(!1, !1, !0, !1) : this.OnUpdateOperateButtonStatus(!0, !1, !1, !1);
}
}
},
OnSetAutoCashout: function(e) {
if (0 == e.RetCode) {
this.autoCashOut = e.Enable;
if (e.Enable) {
this.nodeAutoCashOutSwitch.getComponent(cc.Sprite).spriteFrame = this.spriteSwitch[1];
this.nodeAutoCashOutBar.x = 69;
this.nodeEditDisable.active = !0;
} else {
this.nodeAutoCashOutSwitch.getComponent(cc.Sprite).spriteFrame = this.spriteSwitch[0];
this.nodeAutoCashOutBar.x = -69;
this.nodeEditDisable.active = !1;
}
}
},
OnEnd: function(e) {
if (this.flyRocket) {
var t = 750 - (1e3 - this.flyRocket.x);
t = t < 0 ? 0 : t;
this.flyRocket.runAction(cc.sequence(cc.moveTo(.5, 1500, t), cc.removeSelf()));
this.flyRocket = null;
this.isFlying = !1;
this.flyCount = 0;
this.flySpeed = 1;
this.nodeMask.width = 0;
this.imFlyLine.scaleY = 1;
this.imFlyLine.stopAllActions();
}
this.hasBet = !1;
this.hasCashOut = !1;
this.bGameStatus = n.GS_GAME_END;
this.OnUpdateButtonStatus();
this.OnUpdateCurWinWcore(e.FlyDistance);
this.lblCurMulti.node.color = cc.color(255, 0, 0);
this.lblStatus.node.active = !0;
this.OnUpdateBetChipStatus(!0);
window.mfConfig.PlayAudio("130/Audio/flyaway", !1, window.mfConfig.fMusic);
},
OnUpdateOperateButtonStatus: function(e, t, i, n) {
if (!this.autoBet) {
this.OnUpdateBetChipStatus(e);
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
}
this.btnBet.active = e;
this.btnCancel.active = t;
this.btnCashOut.active = i;
this.btnNextRound.active = n;
},
OnFrameUpdateUserScore: function(e) {},
CheckCanBet: function() {
return this.lMeScore >= this.lChipNum;
},
OnOpenGameShop: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
},
DisableOperateButton: function() {
this.nodeBtnDisable.active = !0;
this.scheduleOnce(function() {
this.nodeBtnDisable.active = !1;
}, .3);
}
});
cc._RF.pop();
}, {
XHJ_CMD_Game: "XHJ_CMD_Game"
} ],
XHJ_InputBox: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fa21btS+udNYKAncRydm0Yh", "XHJ_InputBox");
cc.Class({
extends: cc.Component,
properties: {
editBox: cc.EditBox
},
InitEditingData: function(e) {
this.jsGameEngine = e;
},
OnEditingDidBegan: function(e, t) {},
OnTextChanged: function(e, t, i) {
cc.log("OnTextChanged", e);
var n = e.split(".");
n.length >= 2 && n[0].length >= 5 || 1 == n.length && e.length >= 5 && (e = e.substr(0, 5));
"0" == e && (e = "");
e = (e = (e = (e = (e = e.replace(/[^\d.]/g, "")).replace(/^\./g, "")).replace(/\.{2,}/g, ".")).replace(".", "$#$").replace(/\./g, "").replace("$#$", ".")).replace(/^(\-)*(\d+)\.(\d\d).*$/, "$1$2.$3");
t.string = e;
cc.log("OnTextChanged-----", e);
},
OnEditingDidEnded: function(e, t) {
var i = "";
if (0 == e.string.length) i = "1.01x"; else {
var n = e.string.split(".");
1 == n.length ? i = ".00x" : n.length >= 2 && (0 == n[1].length ? i = "00x" : 1 == n[1].length ? i = "0x" : 2 == n[1].length && (i = "x"));
}
e.string = e.string + i;
var a = e.string;
a = a.substr(0, a.length - 1);
a = parseFloat(a);
a = Math.floor(100 * a);
this.jsGameEngine.bAutoCashOutMult = a;
},
OnEditingReturn: function(e, t, i) {}
});
cc._RF.pop();
}, {} ],
XHJ_KeyBoard: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ca4b6mkCFdNb5Me86FQ5dgM", "XHJ_KeyBoard");
cc.Class({
extends: cc.Component,
properties: {
displayLab: cc.Node
},
inItKeyBoardNode: function(e, t, i) {
this.inputNum = "";
this.showLab = t;
this.pGameEngineJs = e;
this.keyBoardBigNode = i;
this.keyBoardBigNode.on(cc.Node.EventType.TOUCH_END, this.hide, this);
},
OnButtonEvent: function(e, t) {
var i = t;
cc.log(i);
switch (i) {
case "clean":
this.cleanInputNum();
break;

case "del":
this.delInputNum();
break;

case "ok":
this.ok();
break;

case "0":
parseFloat(this.inputNum) > 0 && this.showInputNum(this.inputNum + i);
break;

case ".":
!this.inputNum.includes(".") && parseFloat(this.inputNum) > 0 && this.showInputNum(this.inputNum + i);
break;

default:
this.showInputNum(this.inputNum + i);
}
},
hide: function() {
this.inputNum = "";
this.displayLab.getComponent(cc.Label).string = "";
this.keyBoardBigNode.active = !1;
this.node.parent.active = !1;
},
ok: function() {
if ("" != this.inputNum) {
var e = parseFloat(this.inputNum);
if (e <= 1 || e > 1e4) {
ManagerHelp_SetSystemLabel("Your input is out of range, please enter between 1.01x and 10000x");
this.showInputNum("");
} else {
this.showInputNum(keepTwoDecimalFull(e), !0);
this.hide();
}
} else this.hide();
},
showInputNum: function(e, t) {
var i = e.split("."), n = 0, a = i[0].length;
i.length > 1 && (n = i[1].length);
if (!(a > 5 || n > 2)) {
this.inputNum = e;
this.displayLab.getComponent(cc.Label).string = e;
if (t) {
e.includes("x") || (e += "x");
this.showLab.getComponent(cc.Label).string = e;
this.pGameEngineJs.bAutoCashOutMult = accMul(this.inputNum, 100);
}
}
},
delInputNum: function() {
for (var e = this.inputNum.split(""), t = "", i = 0; i < e.length; i++) i != e.length - 1 && (t += e[i]);
this.showInputNum(t);
},
cleanInputNum: function() {
this.showInputNum("");
}
});
cc._RF.pop();
}, {} ],
XXL_CMD_Game: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac63al8GP1N2YluHwjlIy68", "XXL_CMD_Game");
t.exports.SUB_S_START_GAME = 100;
t.exports.SUB_S_JACKPOT_SYNC = 200;
t.exports.SUB_C_SCENE_START = 1;
cc._RF.pop();
}, {} ],
XXL_GameEngine: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc786KZsYlAQJ3K51bW3Z43", "XXL_GameEngine");
var n = e("XXL_CMD_Game");
cc.Class({
extends: GameFrameEngine,
properties: {
pGameView: cc.Node
},
OnFrameEngineLoad: function() {
this.pGameViewJs = this.pGameView.getComponent("XXL_GameView");
this.ResetGameEngine();
this.objSceneData = null;
this.objResultData = null;
},
ResetGameEngine: function() {
this.jsGameView = this.pGameView.getComponent("XXL_GameView");
},
OnFrameEngineStart: function() {
cc.audioEngine.stopAll();
},
OnEventSceneMessage: function(e, t, i, n) {
var a = window.net.netSerializer.unpackMsg("CMD_S_GameScene", i);
console.log("Scene = ", a);
this.objSceneData = a;
this.jsGameView.OnBetConfig(a.chipsBets, a.BetMultiples, a.autoCfg);
this.jsGameView.updateJackpot(a.JackpotScore);
this.jsGameView.setSceneData(a);
return !0;
},
OnEventGameMessage: function(e, t, i) {
switch (e) {
case n.SUB_S_START_GAME:
return this.OnStartGame(t, i);

case n.SUB_S_JACKPOT_SYNC:
return this.OnJackpotUpdate(t, i);
}
},
OnStartGame: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_ThrowBetRes", e);
console.log("objResult", i);
this.objResultData = i;
this.pGameViewJs.onGameStart(i);
},
OnJackpotUpdate: function(e, t) {
var i = window.net.netSerializer.unpackMsg("CMD_S_JackpotSync", e);
this.pGameViewJs.updateJackpot(i.JackpotScore, i.ChangeScore);
},
OnSendEventGameStart: function(e) {
var t = {};
t.BetGold = e;
console.log("send start:", t);
var i = window.net.netSerializer.packMsg("CMD_C_ThrowBetReq", t);
this.SendGameData(n.SUB_C_SCENE_START, i, i.length);
}
});
cc._RF.pop();
}, {
XXL_CMD_Game: "XXL_CMD_Game"
} ],
XXL_GameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "363b1xdMWBKHrSS3EfRxdXb", "XXL_GameView");
var n = [ "", "caimei", "chengzi", "shumei", "pingguo", "ximei", "shiliu" ];
cc.Class({
extends: GameFrameView,
properties: {
bg: cc.Node,
lblUserScore: cc.Label,
lblBetScore: cc.Label,
lblCurWin: cc.Label,
colorItem: cc.Prefab,
cellItem: cc.Prefab,
colItem: cc.Prefab,
wildItem: cc.Prefab,
gameNode: cc.Node,
gameLayer: cc.Node,
gameBg: cc.Node,
wildLayer: cc.Node,
scoreItem: cc.Prefab,
scoreNode: cc.Node,
totalWinText: cc.Node,
menuLayer: cc.Node,
colorLayer: cc.Node,
caihongNode: cc.Node,
guangNode: cc.Node,
freegameAni: cc.Node,
freegameAniNode: cc.Node,
helpNode: cc.Prefab,
jphelpNode: cc.Prefab,
startBtn: cc.Button,
addBtn: cc.Button,
subBtn: cc.Button,
betBtn: cc.Button,
nodeJackpot: cc.Node,
nodeJackPotTurn: cc.Node,
nodeLoading: cc.Node,
updateBar: cc.ProgressBar,
updatePrecent: cc.Label,
LineBetBigbg: cc.Node,
LineBetNode: cc.Node,
lineBetPrefab: cc.Prefab,
fastFrame: [ cc.SpriteFrame ],
fastBtn: cc.Node,
bgFrame: [ cc.SpriteFrame ],
freeNodeBg: cc.Node,
freeNum: cc.Node,
freeEndNode: cc.Node,
endBg: cc.Node,
aniLight: cc.Node,
aniBall: cc.Node,
aniTitle: cc.Node,
endNum: cc.Node,
leftNum: cc.Node,
autoNode: cc.Node,
autoLable: [ cc.Label ],
aniLayer: cc.Node,
boomItem: cc.Prefab,
autoTip: cc.Node,
stopBtn: cc.Node,
stopAutoBtn: cc.Node
},
OnFrameViewLoad: function() {
var e = this;
this.isLoading = !0;
var t = PlayerManager.GetMeUserItem();
this.lMeScore = t.GetUserScore();
this.lblUserScore.string = OnScoreToString(this.lMeScore, 2);
this.inFreeGame = !1;
this.wildItemArr = [];
this.lChipNum = 1e3;
this.spineData = new Map();
for (var i = function(t) {
var i = n[t];
cc.loader.loadRes("302/Aspine/" + n[t], sp.SkeletonData, function(e, t) {
this.spineData.set(i, t);
}.bind(e));
}, a = 1; a < n.length; a++) i(a);
},
OnFrameViewStart: function() {
this.colDownArr = [];
this.colTopArr = [];
this.i_totalBet = [];
this.lBaseScore = GetProject().lBaseScore;
this.colStartX = -453;
this.i_totalBetIndex = 0;
this.autoLeftTimes = 0;
this.isFast = !1;
this.caihongNode.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
"S_caihong" == e.animation.name && (this.caihongNode.active = !1);
}.bind(this));
this.freegameAni.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
if ("B_fen1" == e.animation.name) {
this.freegameAni.getComponent(sp.Skeleton).loop = !0;
this.freegameAni.getComponent(sp.Skeleton).animation = "B_fen2";
this.freeNodeBg.getComponent(cc.Button).interactable = !0;
this.freeNum.active = !0;
this.freeNum.scale = 1.5;
this.freeNum.runAction(cc.sequence(cc.scaleTo(.3, .9), cc.scaleTo(.2, 1), cc.callFunc(function() {
this.freeNum.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, .9), cc.scaleTo(.2, 1))));
}.bind(this))));
} else if ("B_fen3" == e.animation.name) {
this.freegameAniNode.active = !1;
this.freeNum.active = !1;
this.guangNode.setLocalZOrder(-1);
this.guangNode.getComponent(sp.Skeleton).timeScale = 4;
this.scheduleOnce(function() {
this.startFreeGame();
}.bind(this), .5);
}
}.bind(this));
this.createColorItems();
var e = cc.instantiate(this.lineBetPrefab);
this.LineBetNodeJs = e.getComponent("jsLineBet");
this.LineBetNodeJs.initData(this);
this.LineBetNode.addChild(e);
this.startBtn.node.on("touchstart", function(e) {
if (this.autoLeftTimes <= 0 && !this.inFreeGame) {
var t = this;
this.startBtn.scheduleOnce(function() {
t.autoNode.active = !0;
}, .5);
}
}, this);
this.startBtn.node.on("touchend", function(e) {
this.startBtn.unscheduleAllCallbacks();
}, this);
this.startBtn.node.on("touchcancel", function(e) {
this.startBtn.unscheduleAllCallbacks();
}, this);
this.stopBtn.on("touchend", function(e) {
this.onStopBtn();
}, this);
window.mfConfig.PlayAudio("302/Audio/music_game_01", !0, window.mfConfig.fSound);
},
OnFrameUpdateUserScore: function(e) {},
onButtonFast: function() {
window.mfConfig.PlayAudio("302/Audio/ui_spin_button", !1, window.mfConfig.fSound);
this.isFast = !this.isFast;
for (var e = 0; e < this.colDownArr.length; e++) this.colDownArr[e].getComponent("colItem").setFast(this.isFast);
for (var t = 0; t < this.wildItemArr.length; t++) this.wildItemArr[t].getComponent("wildItem").setFast(this.isFast);
this.isFast ? this.fastBtn.getComponent(cc.Sprite).spriteFrame = this.fastFrame[1] : this.fastBtn.getComponent(cc.Sprite).spriteFrame = this.fastFrame[0];
},
onButtonFree: function() {
this.freegameAni.getComponent(sp.Skeleton).loop = !1;
this.freegameAni.getComponent(sp.Skeleton).animation = "B_fen3";
this.freeNodeBg.getComponent(cc.Button).interactable = !1;
this.freeNum.stopAllActions();
this.freeNum.runAction(cc.scaleTo(.5, .1));
},
createColorItems: function() {
this.colorItems = [];
for (var e = 1, t = 0; t < 8; t++) {
this.colorItems[t] = [];
for (var i = 0; i < 8; i++) {
var n = cc.instantiate(this.colorItem);
n.x = this.colStartX + 113 * t + 59;
n.y = -this.gameBg.height / 2 + 59 + 113 * i;
n.getComponent("colorItem").setColorId(e);
this.colorLayer.addChild(n);
(e += Value_GetRandomInt(1, 3)) > 5 && (e = 1);
this.colorItems[t][i] = n;
}
}
},
stopColorShow: function() {
for (var e = 0; e < this.colorItems.length; e++) for (var t = 0; t < this.colorItems[e].length; t++) this.colorItems[e][t].getComponent("colorItem").stopColor();
},
playColorShow: function(e, t, i) {
this.stopColorShow();
window.mfConfig.PlayAudio("302/Audio/sfx_disco_lights", !1, window.mfConfig.fSound);
if (e) {
for (var n = 0; n < e.length; n++) for (var a = 0; a < this.colorItems.length; a++) if (e[n].x == a) for (var o = 0; o < this.colorItems[a].length; o++) e[n].y == o && this.colorItems[a][o].getComponent("colorItem").stopColor();
} else for (var s = 0; s < this.colorItems.length; s++) for (var r = 0; r < this.colorItems[s].length; r++) this.colorItems[s][r].getComponent("colorItem").playColor();
this.scheduleOnce(function() {
this.stopColorShow();
t && t();
}.bind(this), i || 1.5);
},
OnBetConfig: function(e, t, i) {
this.lBetChip = e;
this.autoCfg = i;
this.i_totalBet = this.getTotalBet(e, t);
this.LineBetNodeJs.setConfig(e, t, "");
this.updateAutoNode();
},
updateAutoNode: function() {
for (var e = 0; e < this.autoLable.length; e++) this.autoLable[e].string = "" + this.autoCfg[e];
},
getTotalBet: function(e, t) {
for (var i = [], n = 0; n < e.length; n++) for (var a = 0; a < t.length; a++) {
var o = {};
o.i_lineIndex = a;
o.i_betIndex = n;
o.totalBet = e[n] * t[a];
i.push(o);
}
i.sort(function(e, t) {
return e.totalBet - t.totalBet;
});
for (var s = [ i[0] ], r = 1; r < i.length; r++) i[r].totalBet !== i[r - 1].totalBet && s.push(i[r]);
return s;
},
setSceneData: function(e) {
this.sceneData = e;
},
initIcons: function() {
for (var e = 0; e < this.sceneData.Defaultshow.length; e++) {
var t = cc.instantiate(this.colItem);
t.getComponent("colItem").createCol(this.sceneData.Defaultshow[e].id, e, this);
t.x = this.colStartX + 113 * e;
t.y = -this.gameBg.height / 2 + 10;
this.colDownArr.push(t);
this.gameLayer.addChild(t);
}
},
OnFreeGameScene: function() {
var e = this.sceneData;
if (!(e.FreeCount <= 0)) {
cc.log("免费游戏场景恢复");
this.inFreeGame = !0;
var t = 0;
t = null != e.FreeTotalWin.high && null != e.FreeTotalWin.low ? 0 : e.FreeTotalWin;
this.totalWinScore = t;
this.updateWinScore();
this.lastWildpos = e.lastWildPos;
if (this.lastWildpos) for (var i = 0; i < this.lastWildpos.infos.length; i++) {
var n = this.lastWildpos.infos[i].pos, a = this.getWildItemByPos(n);
if (a) {
a.tagId = this.lastWildpos.infos[i].id;
a.getComponent("wildItem").setBet(this.lastWildpos.infos[i].nMul);
}
}
this.autoTip.active = !1;
this.stopAutoBtn.active = !0;
this.bg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[1];
this.guangNode.getComponent(sp.Skeleton).timeScale = 4;
this.setLeftGameCount(e.FreeCount, 6, !0);
this.scheduleOnce(function() {
this.sendFreeSpin();
}.bind(this), 1);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("302/Audio/music_bonus_01", !0, window.mfConfig.fSound);
}
},
updateBtnStatu: function(e) {
this.startBtn.interactable = e;
this.addBtn.interactable = e;
this.subBtn.interactable = e;
this.betBtn.interactable = e;
this.autoLeftTimes > 0 && (this.startBtn.interactable = !0);
},
enterFreeGameAni: function() {
window.mfConfig.PlayAudio("302/Audio/sfx_scatter_anticipation", !1, window.mfConfig.fSound);
for (var e = 0; e < this.wildItemArr.length; e++) e == this.wildItemArr.length - 1 ? this.wildItemArr[e].getComponent("wildItem").setAct("P_xuanzhuan", !1, function() {
window.mfConfig.PlayAudio("302/Audio/sfx_scatter_anticipation_end", !1, window.mfConfig.fSound);
this.guangNode.setLocalZOrder(10);
this.freeNodeBg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[0];
this.freegameAniNode.active = !0;
this.freegameAni.getComponent(sp.Skeleton).animation = "B_fen1";
this.bg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[1];
}.bind(this)) : this.wildItemArr[e].getComponent("wildItem").setAct("P_xuanzhuan", !1);
},
startFreeGame: function() {
this.autoTip.active = !1;
this.stopAutoBtn.active = !0;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("302/Audio/music_bonus_01", !0, window.mfConfig.fSound);
this.inFreeGame = !0;
this.totalWinScore = 0;
this.updateWinScore();
this.updateBtnStatu(!0);
this.playSpin = !1;
this.setLeftGameCount(this.resultData.LeftFreeCount, 6, !0);
this.sendFreeSpin();
},
sendFreeSpin: function() {
this.autoTip.active = !1;
this.stopAutoBtn.active = !0;
this.updateBtnStatu(!1);
if (!this.playSpin) {
this.playSpin = !0;
this.jsGameEngine.OnSendEventGameStart(this.lChipNum);
}
},
onStopAuto: function() {
if (!this.inFreeGame) {
this.stopAutoBtn.active = !1;
this.autoTip.active = !0;
if (this.autoLeftTimes > 0) {
this.autoLeftTimes = 0;
this.setLeftGameCount(0, 0, !1);
}
}
},
updateJackpot: function(e, t) {
this.curJackpotScore = e;
this.nodeJackpot.getComponent("jsJackPotNum").setNumNew(e, t);
this.jsGameEngine.jsJackpotRank && this.jsGameEngine.jsJackpotRank.jsJackPotDraw && this.jsGameEngine.jsJackpotRank.jsJackPotDraw.setJPNum(OnIntScore(e));
},
onButtonHelp: function() {
var e = cc.instantiate(this.helpNode);
this.nodeRootCanvas.addChild(e, 999);
},
addWildItem: function(e, t, i) {
var n = this.getWildItemByPos({
x: e + 1,
y: t + 1
});
if (n) return n;
var a = cc.instantiate(this.wildItem);
a.getComponent("wildItem").setData({
id: 1
});
a.getComponent("wildItem").setFast(this.isFast);
a.getComponent("wildItem").quickStop(this.isQuickStop);
a.id = 1;
a.col = e;
a.row = t;
a.x = this.colStartX + 113 * e + 59;
a.y = i ? this.gameBg.height / 2 + 10 + 113 * t + 59 : -this.gameBg.height / 2 + 10 + 113 * t + 59;
this.wildLayer.addChild(a, 9999);
this.wildItemArr.push(a);
return a;
},
playBoomItem: function(e, t, i) {
var n = cc.instantiate(this.boomItem);
n.getComponent("boomItem").setData(t);
n.active = !1;
for (var a = -1, o = -1, s = -1, r = -1, c = 0; c < e.length; c++) {
-1 == a ? a = e[c].x : e[c].x < a && (a = e[c].x);
-1 == s ? s = e[c].y : e[c].y < s && (s = e[c].y);
e[c].y > r && (r = e[c].y);
e[c].x > o && (o = e[c].x);
}
4 == e.length && (n.scale = .75);
16 == e.length && (n.scale = 1.25);
n.x = this.colStartX + (o - 1 + (a - 1)) / 2 * 113 + 59;
n.y = -this.gameBg.height / 2 + 10 + (r - 1 + (s - 1)) / 2 * 113 + 59;
this.scheduleOnce(function() {
n.active = !0;
n.getComponent("boomItem").playAct(function() {
n.removeFromParent();
i && i();
}.bind(this));
}.bind(this), 0);
this.gameNode.addChild(n);
},
resetView: function() {},
OnButtonMenuEvent: function(e, t) {
this.menuLayer.active = !this.menuLayer.active;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("Dis_btnBetSub" == i) {
this.i_totalBetIndex--;
this.totalWinScore = 0;
this.updateWinScore();
this.i_totalBetIndex < 0 && (this.i_totalBetIndex = this.i_totalBet.length - 1);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else if ("Dis_btnBetAdd" == i) {
this.totalWinScore = 0;
this.updateWinScore();
this.i_totalBetIndex++;
this.i_totalBetIndex >= this.i_totalBet.length && (this.i_totalBetIndex = 0);
this.LineBetNodeJs.OnStakeUpdate(this.i_totalBet[this.i_totalBetIndex].i_betIndex, this.i_totalBet[this.i_totalBetIndex].i_lineIndex);
} else "BtnGameExit" == i ? this.jsGameEngine.SendPacketStandUp() : "jackpotNode" == i ? this.jsGameEngine.OnFrameButtonJackPotRecord(this.curJackpotScore, this) : "btn_Betinfo" == i ? this.LineBetBigbg.active = !this.LineBetBigbg.active : "Dis_LineBetBigbg" == i && (this.LineBetBigbg.active = !1);
},
OnStakeUpdate: function() {
for (var e = 0; e < this.i_totalBet.length; e++) if (this.i_totalBet[e].totalBet == 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string)) {
this.i_totalBetIndex = e;
break;
}
this.lChipNum = 1e3 * parseFloat(this.LineBetNodeJs.lineNoteLbl.string) * parseFloat(this.LineBetNodeJs.multipleLbl.string);
this.lblBetScore.string = OnScoreToString(this.lChipNum, 2);
},
OnUpdateOperateButtonStatus: function(e) {
this.OnUpdateBetChipStatus(e);
this.btnBetSub.interactable = e;
this.btnBetAdd.interactable = e;
this.swicthBtn.interactable = e;
},
OnUpdateBetChip: function(e) {
if (0 == e) {
if (this.lChipNum + this.lCurrentJetton > this.lMeScore) return;
this.lChipNum += this.lCurrentJetton;
} else if (1 == e) {
if (this.lCurrentJetton > this.lMeScore) return;
this.lChipNum = this.lCurrentJetton;
} else if (2 == e) this.lChipNum > this.lBetChip[0] && (this.lChipNum -= 1e3); else if (3 == e) {
if (this.lChipNum + 1e3 > this.lMeScore) return;
if (this.lChipNum + 1e3 > this.MaxBetGold) {
ManagerHelp_SetSystemLabel("Your bet cannot exceed the limit!");
return;
}
this.lChipNum += 1e3;
}
this.lblBetScore.string = this.lChipNum / 1e3;
},
OnUpdateUserScore: function(e) {
var t = 1e3 * this.lblUserScore.string + e;
this.lblUserScore.string = OnScoreToString(t, 2);
},
freeGameWildJump: function(e) {
var t = this.resultData.wildPos[this.startIndex];
if (t) {
if (this.lastWildpos && this.lastWildpos.infos && this.lastWildpos.infos.length > 0) for (var i = 0; i < this.lastWildpos.infos.length; i++) {
for (var n = this.getWildItemByPos(this.lastWildpos.infos[i].pos), a = null, o = 0; o < t.infos.length; o++) {
if (t.infos[o].id == n.tagId) {
a = t.infos[o];
break;
}
if (null == n.tagId && t.infos[i]) {
n.tagId = t.infos[i].id;
a = t.infos[i];
break;
}
}
if (n && a && !this.isSamePos(a.pos, this.lastWildpos.infos[i].pos)) {
var s = 113 * (a.pos.x - this.lastWildpos.infos[i].pos.x), r = 113 * (a.pos.y - this.lastWildpos.infos[i].pos.y), c = a.pos;
n.getComponent("wildItem").setAct("P_tiao", !1, null, a.nMul);
n.col = c.x - 1;
n.row = c.y - 1;
var l = cc.delayTime(.3);
n.runAction(cc.sequence(l, cc.moveBy(.3, cc.p(s, r)), cc.callFunc(function() {
if (e) {
e();
e = null;
}
}.bind(this))));
}
}
} else e();
},
showHelpPanel: function() {
var e = cc.instantiate(this.jphelpNode);
this.nodeRootCanvas.addChild(e, 999);
},
onGameStart: function(e) {
var t = this;
this.LineBetBigbg.active = !1;
this.isQuickStop = !1;
if (0 == e.RetCode) {
this.stopBtn.active = !0;
this.resultData = e;
this.pushWildArr = [];
this.startIndex = 0;
this.colTopArr = [];
this.inFreeGame || function() {
if (t.autoLeftTimes > 0) {
t.autoLeftTimes = t.autoLeftTimes - 1;
t.setLeftGameCount(t.autoLeftTimes, t.autoTotalTimes, !0);
}
t.OnUpdateUserScore(-t.lChipNum);
var e = t.wildItemArr.concat();
t.tempWildArr = e;
for (var i = function(i) {
t.scheduleOnce(function() {
e[i].getComponent("wildItem").quickStop(this.isQuickStop);
e[i].getComponent("wildItem").setTagY(e[i].y - 1e3, function(e) {
e.removeFromParent();
}.bind(this));
}.bind(t), .05 * e[i].col);
}, n = 0; n < e.length; n++) i(n);
t.wildItemArr = [];
}();
this.WinJackpotScore = 0;
this.WinJackpotPercent = 0;
if (null == e.WinJackpotScore.high && null == e.WinJackpotScore.low) {
this.WinJackpotScore = e.WinJackpotScore;
this.WinJackpotPercent = e.WinJackpotPercent;
}
for (var i = [], a = function(e) {
i.push(t.colDownArr[e].y);
t.scheduleOnce(function() {
var t = this.colDownArr[e];
this.colDownArr[e].getComponent("colItem").setTagY(this.colDownArr[e].y - 1e3, function(e) {
t.removeFromParent();
e + 1 == this.colDownArr.length && (this.colDownArr = []);
}.bind(this));
}.bind(t), .05 * e);
}, o = 0; o < this.colDownArr.length; o++) a(o);
var s = function() {
for (var t = this, a = 0; a < e.gameData.length; a++) {
var o = cc.instantiate(this.colItem, {
id: 1,
cc: 2
});
o.getComponent("colItem").createCol(e.gameData[a].id, a, this, !0);
o.x = this.colStartX + 113 * a;
o.y = this.gameBg.height / 2 + 10;
this.colTopArr.push(o);
this.gameLayer.addChild(o);
}
for (var s = function(a) {
t.scheduleOnce(function() {
this.colTopArr[a].getComponent("colItem").setTagY(i[a], function(t) {
window.mfConfig.PlayAudio("302/Audio/sfx_fruits_burst_2", !1, window.mfConfig.fSound);
if (t + 1 == this.colTopArr.length) {
this.colDownArr = this.colTopArr;
this.colTopArr = [];
this.stopBtn.active = !1;
if (e.boomData && e.boomData.length > 0) {
this.guangNode.getComponent(sp.Skeleton).timeScale = 4;
this.playColorShow(null, function() {
window.mfConfig.PlayAudio("302/Audio/sfx_taste_the_rainbow", !1, window.mfConfig.fSound);
this.caihongNode.active = !0;
this.caihongNode.getComponent(sp.Skeleton).animation = "S_caihong";
this.scheduleOnce(function() {
for (var t = this, i = function(i) {
var a = e.boomData[i];
a && a.tagPos && t.playBoomItem(a.boomPos, a.id, function() {
this.guangNode.getComponent(sp.Skeleton).timeScale = .25;
window.mfConfig.PlayAudio("302/Audio/sfx_giant_fruits_pop", !1, window.mfConfig.fSound);
for (var t = 0; t < a.boomPos.length; t++) {
var i = a.boomPos[t];
this.colDownArr[i.x - 1] && this.colDownArr[i.x - 1].getComponent("colItem").updateId(i.y - 1, a.id, this.spineData.get(n[a.id - 1]));
}
this.scheduleOnce(function() {
this.startEliminate(e.passData);
}.bind(this), .5);
}.bind(t));
}, a = 0; a < e.boomData.length; a++) i(a);
}.bind(this), 1.2);
}.bind(this));
} else if (e.passData.length <= 0 && this.randIsBoom() && !this.inFreeGame && e.AddFreeCount <= 0) {
this.guangNode.getComponent(sp.Skeleton).timeScale = 4;
this.playColorShow(null, function() {
this.guangNode.getComponent(sp.Skeleton).timeScale = .25;
this.startEliminate(e.passData);
}.bind(this));
} else this.startEliminate(e.passData);
}
}.bind(this));
}.bind(t), .3 + .05 * a);
}, r = 0; r < this.colTopArr.length; r++) s(r);
for (var c = function(e) {
t.scheduleOnce(function() {
this.inFreeGame ? this.wildItemArr[e].row > 7 && this.wildItemArr[e].getComponent("wildItem").setTagY(this.wildItemArr[e].y - this.gameBg.height, function(e) {}.bind(this)) : this.wildItemArr[e].getComponent("wildItem").setTagY(this.wildItemArr[e].y - this.gameBg.height, function(e) {
e.row <= 7 && window.mfConfig.PlayAudio("302/Audio/sfx_jar_scatter_land_2", !1, window.mfConfig.fSound);
}.bind(this));
}.bind(t), .3 + .05 * (t.wildItemArr[e].col - 1));
}, l = 0; l < this.wildItemArr.length; l++) c(l);
}.bind(this);
if (this.inFreeGame) {
3;
this.setLeftGameCount(this.resultData.LeftFreeCount, 6, !0);
this.scheduleOnce(function() {
this.freeGameWildJump(s);
}.bind(this), 1.5);
} else s();
} else {
this.updateBtnStatu(!0);
this.playSpin = !1;
ManagerHelp_SetSystemLabel("Your balance is insufficient!");
this.autoLeftTimes = 0;
this.setLeftGameCount(0, 0, !1);
this.autoTip.active = !0;
this.stopAutoBtn.active = !1;
}
},
startEliminate: function(e) {
this.passData = e;
this.startEliminateByindex();
},
randIsBoom: function() {
return Math.random() <= .06;
},
startEliminateByindex: function() {
var e = this;
this.isWildJump = !1;
var t = [];
this.maxLineNum = 0;
console.log("this.startIndex = " + this.startIndex);
if (this.startIndex < this.passData.length && this.passData[this.startIndex]) (function() {
var i = e.passData[e.startIndex].posData;
e.createScoreItem(e.passData[e.startIndex].score);
for (var n = 0; n < i.length; n++) {
t[i[n].x - 1] || (t[i[n].x - 1] = []);
i[n].x > e.maxLineNum && (e.maxLineNum = i[n].x - 1);
t[i[n].x - 1].push(i[n].y - 1);
}
var a = 0, o = 0;
e.maskFadePlay(!0);
e.scheduleOnce(function() {
window.mfConfig.PlayAudio("302/Audio/sfx_fruits_burst_1", !1, window.mfConfig.fSound);
}, .2);
for (var s = 0; s < 8; s++) if (t[s] && t[s].length > 0) {
o++;
e.colDownArr[s].getComponent("colItem").removeItems(t[s], function() {
a++;
console.log("romeveLineCount = " + a);
if (a >= o) {
for (var e = 0; e < this.wildItemArr.length; e++) this.wildItemArr[e].getComponent("wildItem").showMask(!1);
this.startIndex++;
this.updateWildIndex();
var t = 1;
(this.startIndex > this.passData.length || !this.passData[this.startIndex]) && (t = .5);
this.scheduleOnce(function() {
for (var e = 0; e < this.colDownArr.length; e++) this.colDownArr[e].getComponent("colItem").updateWildIndex();
this.startEliminateByindex();
}.bind(this), t);
}
}.bind(e));
}
})(); else {
null == this.resultData.WinGold.high && null == this.resultData.WinGold.low && this.OnUpdateUserScore(this.resultData.WinGold);
if (this.resultData.AddFreeCount > 0) {
this.autoLeftTimes = 0;
for (var i = this.resultData.wildPos.length - 1; i >= 0; i--) if (this.resultData.wildPos[i] && this.resultData.wildPos[i].infos.length > 0) {
this.lastWildpos = this.resultData.wildPos[i];
break;
}
this.enterFreeGameAni();
} else if (this.resultData.LeftFreeCount > 0) {
this.autoLeftTimes = 0;
for (var n = this.resultData.wildPos.length - 1; n >= 0; n--) if (this.resultData.wildPos[n] && this.resultData.wildPos[n].infos.length > 0) {
this.lastWildpos = this.resultData.wildPos[n];
break;
}
this.updateBtnStatu(!0);
this.playSpin = !1;
this.scheduleOnce(function() {
this.sendFreeSpin();
}.bind(this), .8);
} else {
if (0 == this.resultData.LeftFreeCount && this.inFreeGame) {
this.setLeftGameCount(0, 0, !1);
this.scheduleOnce(function() {
this.startFreeEndAni(this.resultData.freeGameWinScore);
}.bind(this), .5);
}
this.WinJackpotScore > 0 && this.WinJackpotPercent > 0 && this.playJackpotAnim();
this.playSpin = !1;
this.updateBtnStatu(!0);
this.inFreeGame = !1;
if (!this.inFreeGame) if (this.autoLeftTimes <= 0) {
this.autoTip.active = !0;
this.stopAutoBtn.active = !1;
this.setLeftGameCount(0, 0, !1);
} else this.scheduleOnce(function() {
this.atuoStart();
}.bind(this), .5);
}
0 == this.startIndex && this.playWildDump();
}
},
playJackpotAnim: function() {
var e = this;
this.jsGameEngine.OnFrameButtonJackPotDraw(e.nodeJackPotTurn, e.WinJackpotPercent / 100, parseInt(e.WinJackpotScore / e.WinJackpotPercent * 10), function() {
e.updateWinScore();
e.OnUpdateUserScore(e.WinJackpotScore);
e.WinJackpotScore = 0;
e.WinJackpotPercent = 0;
}, e.WinJackpotScore);
},
createScoreItem: function(e) {
var t = this;
this.scoreNode.removeAllChildren();
if (e && !(e.length <= 0)) for (var i = 0; i < e.length; i++) {
var n = e[i];
n && function() {
var a = cc.instantiate(t.scoreItem);
a.x = t.colStartX + 113 * n.pos.x;
a.y = -t.gameBg.height / 2 + 113 * n.pos.y - 30;
t.scoreNode.addChild(a);
t.totalWinScore = t.totalWinScore + n.nScore * n.nMul;
i == e.length - 1 ? a.getComponent("scoreItem").setScore(n.nScore, n.nMul, function() {
a.removeFromParent();
this.updateWinScore();
}.bind(t)) : a.getComponent("scoreItem").setScore(n.nScore, n.nMul, function() {
a.removeFromParent();
}.bind(t));
}();
}
},
updateWinScore: function() {
this.totalWinText.getComponent(cc.Label).string = "" + OnScoreToString(this.totalWinScore);
},
maskFadePlay: function(e) {
for (var t = 0; t < this.colDownArr.length; t++) this.colDownArr[t] && this.colDownArr[t].getComponent("colItem").maskFadePlay(e);
for (var i = 0; i < this.wildItemArr.length; i++) {
e && this.wildItemArr[i].getComponent("wildItem").showMask(!0);
this.wildItemArr[i].getComponent("wildItem").maskFadePlay(e);
}
},
isPassPos: function(e) {
for (var t = this.passData[this.startIndex].posData, i = 0; i < t.length; i++) if (this.isSamePos(e, t[i])) return !0;
return !1;
},
onStopBtn: function() {
this.stopBtn.active = !1;
this.isQuickStop = !0;
for (var e = 0; e < this.colDownArr.length; e++) this.colDownArr[e].getComponent("colItem").quickStop(!0);
for (var t = 0; t < this.colTopArr.length; t++) this.colTopArr[t].getComponent("colItem").quickStop(!0);
for (var i = 0; i < this.wildItemArr.length; i++) this.wildItemArr[i].getComponent("wildItem").quickStop(!0);
for (var n = 0; n < this.tempWildArr.length; n++) this.tempWildArr[n].getComponent("wildItem").quickStop(!0);
this.tempWildArr = [];
},
onStartBtn: function() {
if (!this.autoNode.active) {
window.mfConfig.PlayAudio("302/Audio/ui_button_on", !1, window.mfConfig.fSound);
if (!this.inFreeGame) {
if (this.autoLeftTimes > 0) {
this.autoLeftTimes = 0;
this.setLeftGameCount(0, 0, !1);
return;
}
this.totalWinScore = 0;
this.updateWinScore();
}
this.updateBtnStatu(!1);
if (!this.playSpin) {
this.playSpin = !0;
this.jsGameEngine.OnSendEventGameStart(this.lChipNum);
}
}
},
atuoStart: function() {
if (!this.inFreeGame) {
this.totalWinScore = 0;
this.updateWinScore();
}
this.updateBtnStatu(!1);
if (!this.playSpin) {
this.playSpin = !0;
this.jsGameEngine.OnSendEventGameStart(this.lChipNum);
}
},
playWildPassAct: function(e) {
for (var t = 0; t < e.length; t++) for (var i = 0; i < this.wildItemArr.length; i++) e[t].x - 1 == this.wildItemArr[i].col && e[t].y - 1 == this.wildItemArr[i].row && this.wildItemArr[i].getComponent("wildItem").setAct("P_pen", !1);
},
moveColItems: function(e, t) {
for (var i = 0; i < this.colDownArr.length; i++) i == this.maxLineNum ? this.colDownArr[i].getComponent("colItem").moveItems(t) : this.colDownArr[i].getComponent("colItem").moveItems();
},
isSamePos: function(e, t) {
return e.x == t.x && e.y == t.y;
},
playWildDump: function() {
this.maskFadePlay(!1);
if (!this.resultData.wildPos[this.startIndex] || this.resultData.wildPos[this.startIndex].infos.length <= 0) this.moveColItems(); else {
for (var e = this.resultData.wildPos[this.startIndex], t = 0; t < e.infos.length; t++) {
var i = this.getWildItemByPos(e.infos[t].pos);
i && (i.tagId || (i.tagId = e.infos[t].id));
}
var n = this.resultData.wildPos[this.startIndex + 1];
if (!n || n.infos.length <= 0) this.moveColItems(); else if (!this.isWildJump) {
this.pushWildArr = [];
for (var a = !1, o = 0; o < this.wildItemArr.length; o++) {
var s = this.wildItemArr[o];
if (s && s.tagId) {
for (var r = null, c = 0; c < n.infos.length; c++) if (n.infos[c].id == s.tagId) {
r = n.infos[c];
break;
}
if (r) {
var l = this.colStartX + 113 * (r.pos.x - 1) + 59, h = -this.gameBg.height / 2 + 10 + 113 * (r.pos.y - 1) + 59, u = r.pos;
if (this.isPassPos({
x: s.col + 1,
y: s.row + 1
})) {
a = !0;
var d = cc.delayTime(.3);
s.getComponent("wildItem").setAct("P_tiao", !1, null, r.nMul);
s.isMove = !0;
s.runAction(cc.sequence(d, cc.moveTo(.3, cc.p(l, h)), cc.callFunc(function() {}.bind(this))));
}
s.col = u.x - 1;
s.row = u.y - 1;
}
}
}
this.isWildJump = !0;
var m = .8;
a || (m = 0);
this.scheduleOnce(function() {
this.moveColItems(0, function() {}.bind(this));
}.bind(this), m + .3);
}
}
},
updateWildIndex: function() {
for (var e = [], t = 0; t < this.wildItemArr.length; t++) {
var i = this.wildItemArr[t];
if (i) {
e[i.col] || (e[i.col] = []);
e[i.col].push(i);
}
}
for (var n = 0; n < 8; n++) e[n] && e[n].length > 0 && e[n].sort(function(e, t) {
return e.row - t.row;
});
for (var a = 0; a < 8; a++) if (e[a] && e[a].length > 0) for (var o = 0; o < e[a].length; o++) {
var s = e[a][o];
if (s && this.colDownArr[s.col]) {
for (var r = this.colDownArr[s.col].getComponent("colItem").itemArr, c = !0, l = 0; l < r.length; l++) if (r[l] == s) {
c = !1;
break;
}
c && this.colDownArr[s.col].getComponent("colItem").pushWild(s.row, s);
}
}
for (var h = 0; h < this.wildItemArr.length; h++) {
var u = this.wildItemArr[h];
if (u) {
u.isMove = !1;
if (this.colDownArr[u.col]) {
var d = this.colDownArr[u.col].getComponent("colItem").itemArr;
console.log("index = ", this.colDownArr[u.col].getComponent("colItem").index);
console.log("itemArr = ", d);
for (var m = 0; m < d.length; m++) d[m] == u && !1;
}
}
}
},
getWildItemByPos: function(e) {
for (var t = 0; t < this.wildItemArr.length; t++) if (this.wildItemArr[t].col == e.x - 1 && this.wildItemArr[t].row == e.y - 1) return this.wildItemArr[t];
return !1;
},
randomNum: function(e, t) {
switch (arguments.length) {
case 1:
return Math.random() * e + 1;

case 2:
return Math.random() * (t - e + 1) + e;

default:
return 0;
}
},
onBtnCloseAuto: function() {
this.autoNode.active = !1;
},
onBtnAutoTimes: function(e, t) {
this.autoNode.active = !1;
if (this.inFreeGame) this.autoLeftTimes = 0; else {
if (1e3 * this.lblUserScore.string - this.lChipNum < 0) ManagerHelp_SetSystemLabel("Your balance is insufficient!"); else {
this.autoLeftTimes = this.autoCfg[parseInt(t)];
this.autoTotalTimes = this.autoLeftTimes;
if (this.autoLeftTimes && this.autoLeftTimes > 0) {
this.autoTip.active = !1;
this.stopAutoBtn.active = !0;
this.setLeftGameCount(this.autoLeftTimes, this.autoTotalTimes, !0);
this.atuoStart();
}
}
}
},
freeGameEnd: function() {
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("302/Audio/music_game_01", !0, window.mfConfig.fSound);
this.freeEndNode.active = !1;
this.bg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[0];
this.guangNode.getComponent(sp.Skeleton).timeScale = .25;
},
startFreeEndAni: function(e) {
this.freeEndNode.active = !0;
this.endBg.opacity = 255;
this.endBg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[0];
this.aniLight.getComponent(sp.Skeleton).animation = "01start_light";
this.aniLight.getComponent(sp.Skeleton).loop = !1;
this.aniLight.getComponent(sp.Skeleton).addAnimation(0, "keep_light", !0);
this.aniBall.getComponent(sp.Skeleton).animation = "01start_ball";
this.aniBall.getComponent(sp.Skeleton).loop = !1;
this.aniBall.getComponent(sp.Skeleton).addAnimation(0, "01keep_ball", !0);
this.aniTitle.getComponent(sp.Skeleton).animation = "start_FRUITYWIN";
this.aniTitle.getComponent(sp.Skeleton).loop = !1;
this.aniTitle.getComponent(sp.Skeleton).addAnimation(0, "keep_FRUITYWIN", !1);
this.curEndStatu = 1;
this.tagEndScore = e;
this.curEndScore = 0;
this.addScore = Math.floor(this.tagEndScore / 500);
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("302/Audio/sfx_big_win", !0, window.mfConfig.fSound);
window.mfConfig.PlayAudio("302/Audio/sfx_count_up", !0, window.mfConfig.fSound);
this.schedule(this.endScoreAdd, .01);
},
switchAni1: function() {
this.endBg.runAction(cc.sequence(cc.fadeOut(.15), cc.callFunc(function() {
this.endBg.getComponent(cc.Sprite).spriteFrame = this.bgFrame[1];
}.bind(this)), cc.fadeIn(.15)));
this.aniBall.getComponent(sp.Skeleton).animation = "02start_ball_qiehuan";
this.aniBall.getComponent(sp.Skeleton).loop = !1;
this.aniBall.getComponent(sp.Skeleton).addAnimation(0, "02keep_ball", !0);
this.aniTitle.getComponent(sp.Skeleton).animation = "end_FRUITYWIN";
this.aniTitle.getComponent(sp.Skeleton).loop = !1;
this.aniTitle.getComponent(sp.Skeleton).addAnimation(0, "start_JUICYWIN", !1);
this.aniTitle.getComponent(sp.Skeleton).addAnimation(0, "keep_JUICYWIN", !1);
},
switchAni2: function() {
this.aniBall.getComponent(sp.Skeleton).animation = "03start_ball";
this.aniBall.getComponent(sp.Skeleton).loop = !1;
this.aniBall.getComponent(sp.Skeleton).addAnimation(0, "03keep_ball", !0);
this.aniTitle.getComponent(sp.Skeleton).animation = "end_JUICYWIN";
this.aniTitle.getComponent(sp.Skeleton).loop = !1;
this.aniTitle.getComponent(sp.Skeleton).addAnimation(0, "start_SUPER", !1);
this.aniTitle.getComponent(sp.Skeleton).addAnimation(0, "keep_SUPER", !1);
},
endSwitch: function() {
this.aniTitle.getComponent(sp.Skeleton).animation = "start_TOTALWIN";
this.aniTitle.getComponent(sp.Skeleton).loop = !1;
cc.audioEngine.stopAll();
window.mfConfig.PlayAudio("302/Audio/sfx_count_up_end", !1, window.mfConfig.fSound);
this.scheduleOnce(function() {
this.freeGameEnd();
}.bind(this), 3);
},
endScoreAdd: function() {
this.curEndScore = this.curEndScore + this.addScore;
if (this.curEndScore > this.tagEndScore) {
this.unschedule(this.endScoreAdd);
this.endNum.getComponent(cc.Label).string = OnScoreToString(this.tagEndScore);
this.endSwitch();
} else {
this.endNum.getComponent(cc.Label).string = OnScoreToString(this.curEndScore);
if (50 == Math.floor(this.curEndScore / this.lChipNum) && 1 == this.curEndStatu) {
this.curEndStatu = 2;
this.switchAni1();
}
if (100 == Math.floor(this.curEndScore / this.lChipNum) && 2 == this.curEndStatu) {
this.curEndStatu = 3;
this.switchAni2();
}
}
},
setLeftGameCount: function(e, t, i) {
this.leftNum.active = i;
this.inFreeGame ? this.leftNum.getComponent(cc.Label).string = e + "/" + t : this.leftNum.getComponent(cc.Label).string = e;
},
update: function(e) {
if (this.isLoading) if (this.updateBar.progress < 1) {
this.updateBar.progress = (100 * this.updateBar.progress + 1) / 100;
this.updatePrecent.string = Math.floor(100 * this.updateBar.progress) + "%";
} else if (this.spineData.size > 0 && this.sceneData) {
this.isLoading = !1;
this.scheduleOnce(function() {
this.nodeLoading.active = !1;
this.initIcons();
this.OnFreeGameScene();
}.bind(this), .5);
}
},
onDestroy: function() {}
});
cc._RF.pop();
}, {} ],
XXL_jackpot_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "377f1GkC/pAnrOv8Jq/afz9", "XXL_jackpot_control");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
cc.Class({
extends: cc.Component,
properties: {
nodeRollNum: [ cc.Node ],
nodeRolltest: cc.Label,
isFirst: !0
},
setNumNew: function(e, t, i) {
this.num = "" + e;
this.numLength = this.num.length;
this.nodeRolltest.string = OnScoreToString(this.num, 3);
null == i && (i = 5);
null == this.originNum && (this.originNum = e - 60);
e - this.originNum <= 0 && (this.originNum = e - 60);
t = e - this.originNum;
this.arr = [];
this.arr.push(parseInt(.22 * t));
this.arr.push(parseInt(.19 * t));
this.arr.push(parseInt(.21 * t));
this.arr.push(parseInt(.18 * t));
this.arr.push(parseInt(.2 * t));
for (var n = 11; n > 11 - this.numLength; n--) {
var a = this.nodeRollNum[n].getComponent("Slot_rollNum"), o = this.originNum + "";
a.setData(o[n - (11 - this.numLength) - 1]);
}
this.count = 0;
this.unschedule(this.setNumNewFun);
this.schedule(this.setNumNewFun, 1, i);
},
setNumNewFun: function(e) {
var t = this;
if (!(this.count > 4)) {
this.originNum += this.arr[this.count];
for (var i = 0, a = function(e) {
t.scheduleOnce(function(t, i) {
var n = this.nodeRollNum[e].getComponent("Slot_rollNum"), a = this.originNum + "";
n.startRoll(t, 0, a[this.numLength - i - 1]);
}.bind(t, e, i), .1 * (11 - e));
if (++i >= t.numLength) return {
v: void 0
};
}, o = 11; o >= 0; o--) {
var s = a(o);
if ("object" === ("undefined" == typeof s ? "undefined" : n(s))) return s.v;
}
this.count++;
}
}
});
cc._RF.pop();
}, {} ],
ZApi_GameFrame: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9f730EsZN5Bv5G9vWAK9sP2", "ZApi_GameFrame");
e("GameDelegate");
e("AServerListData");
e("SceneManager");
e("PlayerManager");
e("MissionLogon");
e("MissionService");
e("ServerRoom");
e("GameFrameEngine");
e("GameFrameView");
cc._RF.pop();
}, {
AServerListData: "AServerListData",
GameDelegate: "GameDelegate",
GameFrameEngine: "GameFrameEngine",
GameFrameView: "GameFrameView",
MissionLogon: "MissionLogon",
MissionService: "MissionService",
PlayerManager: "PlayerManager",
SceneManager: "SceneManager",
ServerRoom: "ServerRoom"
} ],
ZApi_Include: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3c126805A1PEoykKOR8e1RQ", "ZApi_Include");
e("ACMD_AValue");
e("ACMD_AStruct");
e("BDefine");
e("BPacket");
e("BPacketAide");
e("CMD_Commom");
e("CMD_GameServer");
e("CMD_GenericMatch");
e("CMD_LogonServer");
e("CMD_MsgService");
e("CMD_TaskLogic");
e("CMD_UserPack");
e("CMD_YQMatch");
e("Property");
e("RightDefine");
e("ServerRule");
e("Struct");
e("LogSystem");
cc._RF.pop();
}, {
ACMD_AStruct: "ACMD_AStruct",
ACMD_AValue: "ACMD_AValue",
BDefine: "BDefine",
BPacket: "BPacket",
BPacketAide: "BPacketAide",
CMD_Commom: "CMD_Commom",
CMD_GameServer: "CMD_GameServer",
CMD_GenericMatch: "CMD_GenericMatch",
CMD_LogonServer: "CMD_LogonServer",
CMD_MsgService: "CMD_MsgService",
CMD_TaskLogic: "CMD_TaskLogic",
CMD_UserPack: "CMD_UserPack",
CMD_YQMatch: "CMD_YQMatch",
LogSystem: "LogSystem",
Property: "Property",
RightDefine: "RightDefine",
ServerRule: "ServerRule",
Struct: "Struct"
} ],
ZApi_Protocol: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd922OZnytMo4R8rkEVPbKF", "ZApi_Protocol");
e("AASwitchConfig");
e("AAYQYArray");
e("ACardHelp");
e("AHelpEvent");
e("AHelpGame");
e("AHelpNode");
e("AProjectInfo");
e("AWindowEvent");
e("CrearGuid");
e("H5EventSDK");
e("IosEventResult");
cc._RF.pop();
}, {
AASwitchConfig: "AASwitchConfig",
AAYQYArray: "AAYQYArray",
ACardHelp: "ACardHelp",
AHelpEvent: "AHelpEvent",
AHelpGame: "AHelpGame",
AHelpNode: "AHelpNode",
AProjectInfo: "AProjectInfo",
AWindowEvent: "AWindowEvent",
CrearGuid: "CrearGuid",
H5EventSDK: "H5EventSDK",
IosEventResult: "IosEventResult"
} ],
ball: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fc3b1KDmPdK5b0CqW2k6fLl", "ball");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
setPathNode: function(e) {
this.posIndex = 0;
this.pathArr = e;
},
onBeginContact: function(e, t, i) {},
onEndContact: function(e, t, i) {},
onPreSolve: function(e, t, i) {},
onPostSolve: function(e, t, i) {},
onCollisionEnter: function(e, t) {
var i = t.world, n = (i.aabb, i.preAabb, i.transform, i.radius, i.position, i.points, 
e.node);
if (n.getComponent("point")) {
n.getComponent("point").playAct();
window.mfConfig.PlayAudio("301/Audio/bounce_1", !1, window.mfConfig.fSound);
}
},
setMain: function(e) {
this.main = e;
},
onCollisionExit: function(e, t) {},
onCollisionStay: function(e, t) {},
update: function(e) {
if (this.pathArr) if (this.pathArr[this.posIndex]) {
this.node.x = this.pathArr[this.posIndex][0] / 100;
this.node.y = this.pathArr[this.posIndex][1] / 100;
this.posIndex++;
} else this.main && this.main.OnPutBall(this.node);
}
});
cc._RF.pop();
}, {} ],
boomItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "44dd10dI4pEH7TVDYOY5HI9", "boomItem");
var n = [ "", "Caomei", "Chengzi", "Shumei", "Pingguo", "Ximei", "Shiliu" ];
cc.Class({
extends: cc.Component,
properties: {
iconNode: cc.Node
},
start: function() {
this.iconNode.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
if (e.animation.name == "B-" + n[this.id] + "-2" || "S_bao" == e.animation.name) {
this.node.removeFromParent();
if (this.actCallBack) {
this.actCallBack();
this.actCallBack = null;
}
}
}.bind(this));
},
setData: function(e) {
this.id = e - 1;
},
playAct: function(e) {
this.actCallBack = e;
this.iconNode.getComponent(sp.Skeleton).animation = "B-" + n[this.id] + "-1";
this.iconNode.getComponent(sp.Skeleton).addAnimation(0, "B-" + n[this.id] + "-2", !1);
}
});
cc._RF.pop();
}, {} ],
bytebuffer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f203fkuYQlBDZXZmSyKHyld", "bytebuffer");
var n, a, o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
n = void 0, a = function(e) {
var t = function e(t, i, a) {
"undefined" == typeof t && (t = e.DEFAULT_CAPACITY);
"undefined" == typeof i && (i = e.DEFAULT_ENDIAN);
"undefined" == typeof a && (a = e.DEFAULT_NOASSERT);
if (!a) {
if ((t |= 0) < 0) throw RangeError("Illegal capacity");
i = !!i;
a = !!a;
}
this.buffer = 0 === t ? n : new ArrayBuffer(t);
this.view = 0 === t ? null : new Uint8Array(this.buffer);
this.offset = 0;
this.markedOffset = -1;
this.limit = t;
this.littleEndian = i;
this.noAssert = a;
};
t.VERSION = "5.0.1";
t.LITTLE_ENDIAN = !0;
t.BIG_ENDIAN = !1;
t.DEFAULT_CAPACITY = 16;
t.DEFAULT_ENDIAN = t.BIG_ENDIAN;
t.DEFAULT_NOASSERT = !1;
t.Long = e || null;
var i = t.prototype;
i.__isByteBuffer__;
Object.defineProperty(i, "__isByteBuffer__", {
value: !0,
enumerable: !1,
configurable: !1
});
var n = new ArrayBuffer(0), a = String.fromCharCode;
function s(e) {
var t = 0;
return function() {
return t < e.length ? e.charCodeAt(t++) : null;
};
}
function r() {
var e = [], t = [];
return function() {
if (0 === arguments.length) return t.join("") + a.apply(String, e);
e.length + arguments.length > 1024 && (t.push(a.apply(String, e)), e.length = 0);
Array.prototype.push.apply(e, arguments);
};
}
t.accessor = function() {
return Uint8Array;
};
t.allocate = function(e, i, n) {
return new t(e, i, n);
};
t.concat = function(e, i, n, a) {
if ("boolean" == typeof i || "string" != typeof i) {
a = n;
n = i;
i = void 0;
}
for (var o, s = 0, r = 0, c = e.length; r < c; ++r) {
t.isByteBuffer(e[r]) || (e[r] = t.wrap(e[r], i));
(o = e[r].limit - e[r].offset) > 0 && (s += o);
}
if (0 === s) return new t(0, n, a);
var l, h = new t(s, n, a);
r = 0;
for (;r < c; ) if (!((o = (l = e[r++]).limit - l.offset) <= 0)) {
h.view.set(l.view.subarray(l.offset, l.limit), h.offset);
h.offset += o;
}
h.limit = h.offset;
h.offset = 0;
return h;
};
t.isByteBuffer = function(e) {
return !0 === (e && e.__isByteBuffer__);
};
t.type = function() {
return ArrayBuffer;
};
t.wrap = function(e, n, a, s) {
if ("string" != typeof n) {
s = a;
a = n;
n = void 0;
}
if ("string" == typeof e) {
"undefined" == typeof n && (n = "utf8");
switch (n) {
case "base64":
return t.fromBase64(e, a);

case "hex":
return t.fromHex(e, a);

case "binary":
return t.fromBinary(e, a);

case "utf8":
return t.fromUTF8(e, a);

case "debug":
return t.fromDebug(e, a);

default:
throw Error("Unsupported encoding: " + n);
}
}
if (null === e || "object" !== ("undefined" == typeof e ? "undefined" : o(e))) throw TypeError("Illegal buffer");
var r;
if (t.isByteBuffer(e)) {
(r = i.clone.call(e)).markedOffset = -1;
return r;
}
if (e instanceof Uint8Array) {
r = new t(0, a, s);
if (e.length > 0) {
r.buffer = e.buffer;
r.offset = e.byteOffset;
r.limit = e.byteOffset + e.byteLength;
r.view = new Uint8Array(e.buffer);
}
} else if (e instanceof ArrayBuffer) {
r = new t(0, a, s);
if (e.byteLength > 0) {
r.buffer = e;
r.offset = 0;
r.limit = e.byteLength;
r.view = e.byteLength > 0 ? new Uint8Array(e) : null;
}
} else {
if ("[object Array]" !== Object.prototype.toString.call(e)) throw TypeError("Illegal buffer");
(r = new t(e.length, a, s)).limit = e.length;
for (var c = 0; c < e.length; ++c) r.view[c] = e[c];
}
return r;
};
i.writeBitSet = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if (!(e instanceof Array)) throw TypeError("Illegal BitSet: Not an array");
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
var n, a = t, o = e.length, s = o >> 3, r = 0;
t += this.writeVarint32(o, t);
for (;s--; ) {
n = 1 & !!e[r++] | (1 & !!e[r++]) << 1 | (1 & !!e[r++]) << 2 | (1 & !!e[r++]) << 3 | (1 & !!e[r++]) << 4 | (1 & !!e[r++]) << 5 | (1 & !!e[r++]) << 6 | (1 & !!e[r++]) << 7;
this.writeByte(n, t++);
}
if (r < o) {
var c = 0;
n = 0;
for (;r < o; ) n |= (1 & !!e[r++]) << c++;
this.writeByte(n, t++);
}
if (i) {
this.offset = t;
return this;
}
return t - a;
};
i.readBitSet = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
var i, n = this.readVarint32(e), a = n.value, o = a >> 3, s = 0, r = [];
e += n.length;
for (;o--; ) {
i = this.readByte(e++);
r[s++] = !!(1 & i);
r[s++] = !!(2 & i);
r[s++] = !!(4 & i);
r[s++] = !!(8 & i);
r[s++] = !!(16 & i);
r[s++] = !!(32 & i);
r[s++] = !!(64 & i);
r[s++] = !!(128 & i);
}
if (s < a) {
var c = 0;
i = this.readByte(e++);
for (;s < a; ) r[s++] = !!(i >> c++ & 1);
}
t && (this.offset = e);
return r;
};
i.readBytes = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + e > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+" + e + ") <= " + this.buffer.byteLength);
}
var n = this.slice(t, t + e);
i && (this.offset += e);
return n;
};
i.writeBytes = i.append;
i.writeInt8 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 1;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 1;
this.view[t] = e;
i && (this.offset += 1);
return this;
};
i.writeByte = i.writeInt8;
i.readInt8 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+1) <= " + this.buffer.byteLength);
}
var i = this.view[e];
128 == (128 & i) && (i = -(255 - i + 1));
t && (this.offset += 1);
return i;
};
i.readByte = i.readInt8;
i.writeUint8 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 1;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 1;
this.view[t] = e;
i && (this.offset += 1);
return this;
};
i.writeUInt8 = i.writeUint8;
i.readUint8 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+1) <= " + this.buffer.byteLength);
}
var i = this.view[e];
t && (this.offset += 1);
return i;
};
i.readUInt8 = i.readUint8;
i.writeInt16 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 2;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 2;
if (this.littleEndian) {
this.view[t + 1] = (65280 & e) >>> 8;
this.view[t] = 255 & e;
} else {
this.view[t] = (65280 & e) >>> 8;
this.view[t + 1] = 255 & e;
}
i && (this.offset += 2);
return this;
};
i.writeShort = i.writeInt16;
i.readInt16 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 2 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+2) <= " + this.buffer.byteLength);
}
var i = 0;
if (this.littleEndian) {
i = this.view[e];
i |= this.view[e + 1] << 8;
} else {
i = this.view[e] << 8;
i |= this.view[e + 1];
}
32768 == (32768 & i) && (i = -(65535 - i + 1));
t && (this.offset += 2);
return i;
};
i.readShort = i.readInt16;
i.writeUint16 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 2;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 2;
if (this.littleEndian) {
this.view[t + 1] = (65280 & e) >>> 8;
this.view[t] = 255 & e;
} else {
this.view[t] = (65280 & e) >>> 8;
this.view[t + 1] = 255 & e;
}
i && (this.offset += 2);
return this;
};
i.writeUInt16 = i.writeUint16;
i.readUint16 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 2 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+2) <= " + this.buffer.byteLength);
}
var i = 0;
if (this.littleEndian) {
i = this.view[e];
i |= this.view[e + 1] << 8;
} else {
i = this.view[e] << 8;
i |= this.view[e + 1];
}
t && (this.offset += 2);
return i;
};
i.readUInt16 = i.readUint16;
i.writeInt32 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 4;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 4;
if (this.littleEndian) {
this.view[t + 3] = e >>> 24 & 255;
this.view[t + 2] = e >>> 16 & 255;
this.view[t + 1] = e >>> 8 & 255;
this.view[t] = 255 & e;
} else {
this.view[t] = e >>> 24 & 255;
this.view[t + 1] = e >>> 16 & 255;
this.view[t + 2] = e >>> 8 & 255;
this.view[t + 3] = 255 & e;
}
i && (this.offset += 4);
return this;
};
i.writeInt = i.writeInt32;
i.readInt32 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+4) <= " + this.buffer.byteLength);
}
var i = 0;
if (this.littleEndian) {
i = this.view[e + 2] << 16;
i |= this.view[e + 1] << 8;
i |= this.view[e];
i += this.view[e + 3] << 24 >>> 0;
} else {
i = this.view[e + 1] << 16;
i |= this.view[e + 2] << 8;
i |= this.view[e + 3];
i += this.view[e] << 24 >>> 0;
}
i |= 0;
t && (this.offset += 4);
return i;
};
i.readInt = i.readInt32;
i.writeUint32 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 4;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 4;
if (this.littleEndian) {
this.view[t + 3] = e >>> 24 & 255;
this.view[t + 2] = e >>> 16 & 255;
this.view[t + 1] = e >>> 8 & 255;
this.view[t] = 255 & e;
} else {
this.view[t] = e >>> 24 & 255;
this.view[t + 1] = e >>> 16 & 255;
this.view[t + 2] = e >>> 8 & 255;
this.view[t + 3] = 255 & e;
}
i && (this.offset += 4);
return this;
};
i.writeUInt32 = i.writeUint32;
i.readUint32 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+4) <= " + this.buffer.byteLength);
}
var i = 0;
if (this.littleEndian) {
i = this.view[e + 2] << 16;
i |= this.view[e + 1] << 8;
i |= this.view[e];
i += this.view[e + 3] << 24 >>> 0;
} else {
i = this.view[e + 1] << 16;
i |= this.view[e + 2] << 8;
i |= this.view[e + 3];
i += this.view[e] << 24 >>> 0;
}
t && (this.offset += 4);
return i;
};
i.readUInt32 = i.readUint32;
if (e) {
i.writeInt64 = function(t, i) {
var n = "undefined" == typeof i;
n && (i = this.offset);
if (!this.noAssert) {
if ("number" == typeof t) t = e.fromNumber(t); else if ("string" == typeof t) t = e.fromString(t); else if (!(t && t instanceof e)) throw TypeError("Illegal value: " + t + " (not an integer or Long)");
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal offset: " + i + " (not an integer)");
if ((i >>>= 0) < 0 || i + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + i + " (+0) <= " + this.buffer.byteLength);
}
"number" == typeof t ? t = e.fromNumber(t) : "string" == typeof t && (t = e.fromString(t));
i += 8;
var a = this.buffer.byteLength;
i > a && this.resize((a *= 2) > i ? a : i);
i -= 8;
var o = t.low, s = t.high;
if (this.littleEndian) {
this.view[i + 3] = o >>> 24 & 255;
this.view[i + 2] = o >>> 16 & 255;
this.view[i + 1] = o >>> 8 & 255;
this.view[i] = 255 & o;
i += 4;
this.view[i + 3] = s >>> 24 & 255;
this.view[i + 2] = s >>> 16 & 255;
this.view[i + 1] = s >>> 8 & 255;
this.view[i] = 255 & s;
} else {
this.view[i] = s >>> 24 & 255;
this.view[i + 1] = s >>> 16 & 255;
this.view[i + 2] = s >>> 8 & 255;
this.view[i + 3] = 255 & s;
i += 4;
this.view[i] = o >>> 24 & 255;
this.view[i + 1] = o >>> 16 & 255;
this.view[i + 2] = o >>> 8 & 255;
this.view[i + 3] = 255 & o;
}
n && (this.offset += 8);
return this;
};
i.writeLong = i.writeInt64;
i.readInt64 = function(t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+8) <= " + this.buffer.byteLength);
}
var n = 0, a = 0;
if (this.littleEndian) {
n = this.view[t + 2] << 16;
n |= this.view[t + 1] << 8;
n |= this.view[t];
n += this.view[t + 3] << 24 >>> 0;
t += 4;
a = this.view[t + 2] << 16;
a |= this.view[t + 1] << 8;
a |= this.view[t];
a += this.view[t + 3] << 24 >>> 0;
} else {
a = this.view[t + 1] << 16;
a |= this.view[t + 2] << 8;
a |= this.view[t + 3];
a += this.view[t] << 24 >>> 0;
t += 4;
n = this.view[t + 1] << 16;
n |= this.view[t + 2] << 8;
n |= this.view[t + 3];
n += this.view[t] << 24 >>> 0;
}
var o = new e(n, a, !1);
i && (this.offset += 8);
return o;
};
i.readLong = i.readInt64;
i.writeUint64 = function(t, i) {
var n = "undefined" == typeof i;
n && (i = this.offset);
if (!this.noAssert) {
if ("number" == typeof t) t = e.fromNumber(t); else if ("string" == typeof t) t = e.fromString(t); else if (!(t && t instanceof e)) throw TypeError("Illegal value: " + t + " (not an integer or Long)");
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal offset: " + i + " (not an integer)");
if ((i >>>= 0) < 0 || i + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + i + " (+0) <= " + this.buffer.byteLength);
}
"number" == typeof t ? t = e.fromNumber(t) : "string" == typeof t && (t = e.fromString(t));
i += 8;
var a = this.buffer.byteLength;
i > a && this.resize((a *= 2) > i ? a : i);
i -= 8;
var o = t.low, s = t.high;
if (this.littleEndian) {
this.view[i + 3] = o >>> 24 & 255;
this.view[i + 2] = o >>> 16 & 255;
this.view[i + 1] = o >>> 8 & 255;
this.view[i] = 255 & o;
i += 4;
this.view[i + 3] = s >>> 24 & 255;
this.view[i + 2] = s >>> 16 & 255;
this.view[i + 1] = s >>> 8 & 255;
this.view[i] = 255 & s;
} else {
this.view[i] = s >>> 24 & 255;
this.view[i + 1] = s >>> 16 & 255;
this.view[i + 2] = s >>> 8 & 255;
this.view[i + 3] = 255 & s;
i += 4;
this.view[i] = o >>> 24 & 255;
this.view[i + 1] = o >>> 16 & 255;
this.view[i + 2] = o >>> 8 & 255;
this.view[i + 3] = 255 & o;
}
n && (this.offset += 8);
return this;
};
i.writeUInt64 = i.writeUint64;
i.readUint64 = function(t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+8) <= " + this.buffer.byteLength);
}
var n = 0, a = 0;
if (this.littleEndian) {
n = this.view[t + 2] << 16;
n |= this.view[t + 1] << 8;
n |= this.view[t];
n += this.view[t + 3] << 24 >>> 0;
t += 4;
a = this.view[t + 2] << 16;
a |= this.view[t + 1] << 8;
a |= this.view[t];
a += this.view[t + 3] << 24 >>> 0;
} else {
a = this.view[t + 1] << 16;
a |= this.view[t + 2] << 8;
a |= this.view[t + 3];
a += this.view[t] << 24 >>> 0;
t += 4;
n = this.view[t + 1] << 16;
n |= this.view[t + 2] << 8;
n |= this.view[t + 3];
n += this.view[t] << 24 >>> 0;
}
var o = new e(n, a, !0);
i && (this.offset += 8);
return o;
};
i.readUInt64 = i.readUint64;
}
function c(e, t, i, n, a) {
var o, s, r = 8 * a - n - 1, c = (1 << r) - 1, l = c >> 1, h = -7, u = i ? a - 1 : 0, d = i ? -1 : 1, m = e[t + u];
u += d;
o = m & (1 << -h) - 1;
m >>= -h;
h += r;
for (;h > 0; o = 256 * o + e[t + u], u += d, h -= 8) ;
s = o & (1 << -h) - 1;
o >>= -h;
h += n;
for (;h > 0; s = 256 * s + e[t + u], u += d, h -= 8) ;
if (0 === o) o = 1 - l; else {
if (o === c) return s ? NaN : Infinity * (m ? -1 : 1);
s += Math.pow(2, n);
o -= l;
}
return (m ? -1 : 1) * s * Math.pow(2, o - n);
}
function l(e, t, i, n, a, o) {
var s, r, c, l = 8 * o - a - 1, h = (1 << l) - 1, u = h >> 1, d = 23 === a ? Math.pow(2, -24) - Math.pow(2, -77) : 0, m = n ? 0 : o - 1, f = n ? 1 : -1, p = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
t = Math.abs(t);
if (isNaN(t) || Infinity === t) {
r = isNaN(t) ? 1 : 0;
s = h;
} else {
s = Math.floor(Math.log(t) / Math.LN2);
if (t * (c = Math.pow(2, -s)) < 1) {
s--;
c *= 2;
}
if ((t += s + u >= 1 ? d / c : d * Math.pow(2, 1 - u)) * c >= 2) {
s++;
c /= 2;
}
if (s + u >= h) {
r = 0;
s = h;
} else if (s + u >= 1) {
r = (t * c - 1) * Math.pow(2, a);
s += u;
} else {
r = t * Math.pow(2, u - 1) * Math.pow(2, a);
s = 0;
}
}
for (;a >= 8; e[i + m] = 255 & r, m += f, r /= 256, a -= 8) ;
s = s << a | r;
l += a;
for (;l > 0; e[i + m] = 255 & s, m += f, s /= 256, l -= 8) ;
e[i + m - f] |= 128 * p;
}
i.writeFloat32 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e) throw TypeError("Illegal value: " + e + " (not a number)");
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 4;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 4;
l(this.view, e, t, this.littleEndian, 23, 4);
i && (this.offset += 4);
return this;
};
i.writeFloat = i.writeFloat32;
i.readFloat32 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+4) <= " + this.buffer.byteLength);
}
var i = c(this.view, e, this.littleEndian, 23, 4);
t && (this.offset += 4);
return i;
};
i.readFloat = i.readFloat32;
i.writeFloat64 = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof e) throw TypeError("Illegal value: " + e + " (not a number)");
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
t += 8;
var n = this.buffer.byteLength;
t > n && this.resize((n *= 2) > t ? n : t);
t -= 8;
l(this.view, e, t, this.littleEndian, 52, 8);
i && (this.offset += 8);
return this;
};
i.writeDouble = i.writeFloat64;
i.readFloat64 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 8 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+8) <= " + this.buffer.byteLength);
}
var i = c(this.view, e, this.littleEndian, 52, 8);
t && (this.offset += 8);
return i;
};
i.readDouble = i.readFloat64;
t.MAX_VARINT32_BYTES = 5;
t.calculateVarint32 = function(e) {
return (e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 1 << 21 ? 3 : e < 1 << 28 ? 4 : 5;
};
t.zigZagEncode32 = function(e) {
return ((e |= 0) << 1 ^ e >> 31) >>> 0;
};
t.zigZagDecode32 = function(e) {
return e >>> 1 ^ -(1 & e) | 0;
};
i.writeVarint32 = function(e, i) {
var n = "undefined" == typeof i;
n && (i = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal offset: " + i + " (not an integer)");
if ((i >>>= 0) < 0 || i + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + i + " (+0) <= " + this.buffer.byteLength);
}
var a, o = t.calculateVarint32(e);
i += o;
var s = this.buffer.byteLength;
i > s && this.resize((s *= 2) > i ? s : i);
i -= o;
e >>>= 0;
for (;e >= 128; ) {
a = 127 & e | 128;
this.view[i++] = a;
e >>>= 7;
}
this.view[i++] = e;
if (n) {
this.offset = i;
return this;
}
return o;
};
i.writeVarint32ZigZag = function(e, i) {
return this.writeVarint32(t.zigZagEncode32(e), i);
};
i.readVarint32 = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+1) <= " + this.buffer.byteLength);
}
var i, n = 0, a = 0;
do {
if (!this.noAssert && e > this.limit) {
var o = Error("Truncated");
o.truncated = !0;
throw o;
}
i = this.view[e++];
n < 5 && (a |= (127 & i) << 7 * n);
++n;
} while (0 != (128 & i));
a |= 0;
if (t) {
this.offset = e;
return a;
}
return {
value: a,
length: n
};
};
i.readVarint32ZigZag = function(e) {
var i = this.readVarint32(e);
"object" === ("undefined" == typeof i ? "undefined" : o(i)) ? i.value = t.zigZagDecode32(i.value) : i = t.zigZagDecode32(i);
return i;
};
if (e) {
t.MAX_VARINT64_BYTES = 10;
t.calculateVarint64 = function(t) {
"number" == typeof t ? t = e.fromNumber(t) : "string" == typeof t && (t = e.fromString(t));
var i = t.toInt() >>> 0, n = t.shiftRightUnsigned(28).toInt() >>> 0, a = t.shiftRightUnsigned(56).toInt() >>> 0;
return 0 == a ? 0 == n ? i < 16384 ? i < 128 ? 1 : 2 : i < 1 << 21 ? 3 : 4 : n < 16384 ? n < 128 ? 5 : 6 : n < 1 << 21 ? 7 : 8 : a < 128 ? 9 : 10;
};
t.zigZagEncode64 = function(t) {
"number" == typeof t ? t = e.fromNumber(t, !1) : "string" == typeof t ? t = e.fromString(t, !1) : !1 !== t.unsigned && (t = t.toSigned());
return t.shiftLeft(1).xor(t.shiftRight(63)).toUnsigned();
};
t.zigZagDecode64 = function(t) {
"number" == typeof t ? t = e.fromNumber(t, !1) : "string" == typeof t ? t = e.fromString(t, !1) : !1 !== t.unsigned && (t = t.toSigned());
return t.shiftRightUnsigned(1).xor(t.and(e.ONE).toSigned().negate()).toSigned();
};
i.writeVarint64 = function(i, n) {
var a = "undefined" == typeof n;
a && (n = this.offset);
if (!this.noAssert) {
if ("number" == typeof i) i = e.fromNumber(i); else if ("string" == typeof i) i = e.fromString(i); else if (!(i && i instanceof e)) throw TypeError("Illegal value: " + i + " (not an integer or Long)");
if ("number" != typeof n || n % 1 != 0) throw TypeError("Illegal offset: " + n + " (not an integer)");
if ((n >>>= 0) < 0 || n + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + n + " (+0) <= " + this.buffer.byteLength);
}
"number" == typeof i ? i = e.fromNumber(i, !1) : "string" == typeof i ? i = e.fromString(i, !1) : !1 !== i.unsigned && (i = i.toSigned());
var o = t.calculateVarint64(i), s = i.toInt() >>> 0, r = i.shiftRightUnsigned(28).toInt() >>> 0, c = i.shiftRightUnsigned(56).toInt() >>> 0;
n += o;
var l = this.buffer.byteLength;
n > l && this.resize((l *= 2) > n ? l : n);
n -= o;
switch (o) {
case 10:
this.view[n + 9] = c >>> 7 & 1;

case 9:
this.view[n + 8] = 9 !== o ? 128 | c : 127 & c;

case 8:
this.view[n + 7] = 8 !== o ? r >>> 21 | 128 : r >>> 21 & 127;

case 7:
this.view[n + 6] = 7 !== o ? r >>> 14 | 128 : r >>> 14 & 127;

case 6:
this.view[n + 5] = 6 !== o ? r >>> 7 | 128 : r >>> 7 & 127;

case 5:
this.view[n + 4] = 5 !== o ? 128 | r : 127 & r;

case 4:
this.view[n + 3] = 4 !== o ? s >>> 21 | 128 : s >>> 21 & 127;

case 3:
this.view[n + 2] = 3 !== o ? s >>> 14 | 128 : s >>> 14 & 127;

case 2:
this.view[n + 1] = 2 !== o ? s >>> 7 | 128 : s >>> 7 & 127;

case 1:
this.view[n] = 1 !== o ? 128 | s : 127 & s;
}
if (a) {
this.offset += o;
return this;
}
return o;
};
i.writeVarint64ZigZag = function(e, i) {
return this.writeVarint64(t.zigZagEncode64(e), i);
};
i.readVarint64 = function(t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+1) <= " + this.buffer.byteLength);
}
var n = t, a = 0, o = 0, s = 0, r = 0;
a = 127 & (r = this.view[t++]);
if (128 & r) {
a |= (127 & (r = this.view[t++])) << 7;
if (128 & r || this.noAssert && "undefined" == typeof r) {
a |= (127 & (r = this.view[t++])) << 14;
if (128 & r || this.noAssert && "undefined" == typeof r) {
a |= (127 & (r = this.view[t++])) << 21;
if (128 & r || this.noAssert && "undefined" == typeof r) {
o = 127 & (r = this.view[t++]);
if (128 & r || this.noAssert && "undefined" == typeof r) {
o |= (127 & (r = this.view[t++])) << 7;
if (128 & r || this.noAssert && "undefined" == typeof r) {
o |= (127 & (r = this.view[t++])) << 14;
if (128 & r || this.noAssert && "undefined" == typeof r) {
o |= (127 & (r = this.view[t++])) << 21;
if (128 & r || this.noAssert && "undefined" == typeof r) {
s = 127 & (r = this.view[t++]);
if (128 & r || this.noAssert && "undefined" == typeof r) {
s |= (127 & (r = this.view[t++])) << 7;
if (128 & r || this.noAssert && "undefined" == typeof r) throw Error("Buffer overrun");
}
}
}
}
}
}
}
}
}
var c = e.fromBits(a | o << 28, o >>> 4 | s << 24, !1);
if (i) {
this.offset = t;
return c;
}
return {
value: c,
length: t - n
};
};
i.readVarint64ZigZag = function(i) {
var n = this.readVarint64(i);
n && n.value instanceof e ? n.value = t.zigZagDecode64(n.value) : n = t.zigZagDecode64(n);
return n;
};
}
i.writeCString = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
var n, a = e.length;
if (!this.noAssert) {
if ("string" != typeof e) throw TypeError("Illegal str: Not a string");
for (n = 0; n < a; ++n) if (0 === e.charCodeAt(n)) throw RangeError("Illegal str: Contains NULL-characters");
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
a = d.calculateUTF16asUTF8(s(e))[1];
t += a + 1;
var o = this.buffer.byteLength;
t > o && this.resize((o *= 2) > t ? o : t);
t -= a + 1;
d.encodeUTF16toUTF8(s(e), function(e) {
this.view[t++] = e;
}.bind(this));
this.view[t++] = 0;
if (i) {
this.offset = t;
return this;
}
return a;
};
i.readCString = function(e) {
var t = "undefined" == typeof e;
t && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+1) <= " + this.buffer.byteLength);
}
var i, n = e, a = -1;
d.decodeUTF8toUTF16(function() {
if (0 === a) return null;
if (e >= this.limit) throw RangeError("Illegal range: Truncated data, " + e + " < " + this.limit);
return 0 === (a = this.view[e++]) ? null : a;
}.bind(this), i = r(), !0);
if (t) {
this.offset = e;
return i();
}
return {
string: i(),
length: e - n
};
};
i.writeIString = function(e, t) {
var i = "undefined" == typeof t;
i && (t = this.offset);
if (!this.noAssert) {
if ("string" != typeof e) throw TypeError("Illegal str: Not a string");
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
var n, a = t;
n = d.calculateUTF16asUTF8(s(e), this.noAssert)[1];
t += 4 + n;
var o = this.buffer.byteLength;
t > o && this.resize((o *= 2) > t ? o : t);
t -= 4 + n;
if (this.littleEndian) {
this.view[t + 3] = n >>> 24 & 255;
this.view[t + 2] = n >>> 16 & 255;
this.view[t + 1] = n >>> 8 & 255;
this.view[t] = 255 & n;
} else {
this.view[t] = n >>> 24 & 255;
this.view[t + 1] = n >>> 16 & 255;
this.view[t + 2] = n >>> 8 & 255;
this.view[t + 3] = 255 & n;
}
t += 4;
d.encodeUTF16toUTF8(s(e), function(e) {
this.view[t++] = e;
}.bind(this));
if (t !== a + 4 + n) throw RangeError("Illegal range: Truncated data, " + t + " == " + (t + 4 + n));
if (i) {
this.offset = t;
return this;
}
return t - a;
};
i.readIString = function(e) {
var i = "undefined" == typeof e;
i && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 4 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+4) <= " + this.buffer.byteLength);
}
var n = e, a = this.readUint32(e), o = this.readUTF8String(a, t.METRICS_BYTES, e += 4);
e += o.length;
if (i) {
this.offset = e;
return o.string;
}
return {
string: o.string,
length: e - n
};
};
t.METRICS_CHARS = "c";
t.METRICS_BYTES = "b";
i.writeUTF8String = function(e, t) {
var i, n = "undefined" == typeof t;
n && (t = this.offset);
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: " + t + " (not an integer)");
if ((t >>>= 0) < 0 || t + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + t + " (+0) <= " + this.buffer.byteLength);
}
var a = t;
i = d.calculateUTF16asUTF8(s(e))[1];
t += i;
var o = this.buffer.byteLength;
t > o && this.resize((o *= 2) > t ? o : t);
t -= i;
d.encodeUTF16toUTF8(s(e), function(e) {
this.view[t++] = e;
}.bind(this));
if (n) {
this.offset = t;
return this;
}
return t - a;
};
i.writeString = i.writeUTF8String;
t.calculateUTF8Chars = function(e) {
return d.calculateUTF16asUTF8(s(e))[0];
};
t.calculateString = t.calculateUTF8Bytes = function(e) {
return d.calculateUTF16asUTF8(s(e))[1];
};
i.readUTF8String = function(e, i, n) {
if ("number" == typeof i) {
n = i;
i = void 0;
}
var a = "undefined" == typeof n;
a && (n = this.offset);
"undefined" == typeof i && (i = t.METRICS_CHARS);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal length: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof n || n % 1 != 0) throw TypeError("Illegal offset: " + n + " (not an integer)");
if ((n >>>= 0) < 0 || n + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + n + " (+0) <= " + this.buffer.byteLength);
}
var o, s = 0, c = n;
if (i === t.METRICS_CHARS) {
o = r();
d.decodeUTF8(function() {
return s < e && n < this.limit ? this.view[n++] : null;
}.bind(this), function(e) {
++s;
d.UTF8toUTF16(e, o);
});
if (s !== e) throw RangeError("Illegal range: Truncated data, " + s + " == " + e);
if (a) {
this.offset = n;
return o();
}
return {
string: o(),
length: n - c
};
}
if (i === t.METRICS_BYTES) {
if (!this.noAssert) {
if ("number" != typeof n || n % 1 != 0) throw TypeError("Illegal offset: " + n + " (not an integer)");
if ((n >>>= 0) < 0 || n + e > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + n + " (+" + e + ") <= " + this.buffer.byteLength);
}
var l = n + e;
d.decodeUTF8toUTF16(function() {
return n < l ? this.view[n++] : null;
}.bind(this), o = r(), this.noAssert);
if (n !== l) throw RangeError("Illegal range: Truncated data, " + n + " == " + l);
if (a) {
this.offset = n;
return o();
}
return {
string: o(),
length: n - c
};
}
throw TypeError("Unsupported metrics: " + i);
};
i.readString = i.readUTF8String;
i.writeVString = function(e, i) {
var n = "undefined" == typeof i;
n && (i = this.offset);
if (!this.noAssert) {
if ("string" != typeof e) throw TypeError("Illegal str: Not a string");
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal offset: " + i + " (not an integer)");
if ((i >>>= 0) < 0 || i + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + i + " (+0) <= " + this.buffer.byteLength);
}
var a, o, r = i;
a = d.calculateUTF16asUTF8(s(e), this.noAssert)[1];
o = t.calculateVarint32(a);
i += o + a;
var c = this.buffer.byteLength;
i > c && this.resize((c *= 2) > i ? c : i);
i -= o + a;
i += this.writeVarint32(a, i);
d.encodeUTF16toUTF8(s(e), function(e) {
this.view[i++] = e;
}.bind(this));
if (i !== r + a + o) throw RangeError("Illegal range: Truncated data, " + i + " == " + (i + a + o));
if (n) {
this.offset = i;
return this;
}
return i - r;
};
i.readVString = function(e) {
var i = "undefined" == typeof e;
i && (e = this.offset);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 1 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+1) <= " + this.buffer.byteLength);
}
var n = e, a = this.readVarint32(e), o = this.readUTF8String(a.value, t.METRICS_BYTES, e += a.length);
e += o.length;
if (i) {
this.offset = e;
return o.string;
}
return {
string: o.string,
length: e - n
};
};
i.append = function(e, i, n) {
if ("number" == typeof i || "string" != typeof i) {
n = i;
i = void 0;
}
var a = "undefined" == typeof n;
a && (n = this.offset);
if (!this.noAssert) {
if ("number" != typeof n || n % 1 != 0) throw TypeError("Illegal offset: " + n + " (not an integer)");
if ((n >>>= 0) < 0 || n + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + n + " (+0) <= " + this.buffer.byteLength);
}
e instanceof t || (e = t.wrap(e, i));
var o = e.limit - e.offset;
if (o <= 0) return this;
n += o;
var s = this.buffer.byteLength;
n > s && this.resize((s *= 2) > n ? s : n);
n -= o;
this.view.set(e.view.subarray(e.offset, e.limit), n);
e.offset += o;
a && (this.offset += o);
return this;
};
i.appendTo = function(e, t) {
e.append(this, t);
return this;
};
i.assert = function(e) {
this.noAssert = !e;
return this;
};
i.capacity = function() {
return this.buffer.byteLength;
};
i.clear = function() {
this.offset = 0;
this.limit = this.buffer.byteLength;
this.markedOffset = -1;
return this;
};
i.clone = function(e) {
var i = new t(0, this.littleEndian, this.noAssert);
if (e) {
i.buffer = new ArrayBuffer(this.buffer.byteLength);
i.view = new Uint8Array(i.buffer);
} else {
i.buffer = this.buffer;
i.view = this.view;
}
i.offset = this.offset;
i.markedOffset = this.markedOffset;
i.limit = this.limit;
return i;
};
i.compact = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal end: Not an integer");
t >>>= 0;
if (e < 0 || e > t || t > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + t + " <= " + this.buffer.byteLength);
}
if (0 === e && t === this.buffer.byteLength) return this;
var i = t - e;
if (0 === i) {
this.buffer = n;
this.view = null;
this.markedOffset >= 0 && (this.markedOffset -= e);
this.offset = 0;
this.limit = 0;
return this;
}
var a = new ArrayBuffer(i), o = new Uint8Array(a);
o.set(this.view.subarray(e, t));
this.buffer = a;
this.view = o;
this.markedOffset >= 0 && (this.markedOffset -= e);
this.offset = 0;
this.limit = i;
return this;
};
i.copy = function(e, i) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof i && (i = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal end: Not an integer");
i >>>= 0;
if (e < 0 || e > i || i > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + i + " <= " + this.buffer.byteLength);
}
if (e === i) return new t(0, this.littleEndian, this.noAssert);
var n = i - e, a = new t(n, this.littleEndian, this.noAssert);
a.offset = 0;
a.limit = n;
a.markedOffset >= 0 && (a.markedOffset -= e);
this.copyTo(a, 0, e, i);
return a;
};
i.copyTo = function(e, i, n, a) {
var o, s;
if (!this.noAssert && !t.isByteBuffer(e)) throw TypeError("Illegal target: Not a ByteBuffer");
i = (s = "undefined" == typeof i) ? e.offset : 0 | i;
n = (o = "undefined" == typeof n) ? this.offset : 0 | n;
a = "undefined" == typeof a ? this.limit : 0 | a;
if (i < 0 || i > e.buffer.byteLength) throw RangeError("Illegal target range: 0 <= " + i + " <= " + e.buffer.byteLength);
if (n < 0 || a > this.buffer.byteLength) throw RangeError("Illegal source range: 0 <= " + n + " <= " + this.buffer.byteLength);
var r = a - n;
if (0 === r) return e;
e.ensureCapacity(i + r);
e.view.set(this.view.subarray(n, a), i);
o && (this.offset += r);
s && (e.offset += r);
return this;
};
i.ensureCapacity = function(e) {
var t = this.buffer.byteLength;
return t < e ? this.resize((t *= 2) > e ? t : e) : this;
};
i.fill = function(e, t, i) {
var n = "undefined" == typeof t;
n && (t = this.offset);
"string" == typeof e && e.length > 0 && (e = e.charCodeAt(0));
"undefined" == typeof t && (t = this.offset);
"undefined" == typeof i && (i = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal value: " + e + " (not an integer)");
e |= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal begin: Not an integer");
t >>>= 0;
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal end: Not an integer");
i >>>= 0;
if (t < 0 || t > i || i > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + t + " <= " + i + " <= " + this.buffer.byteLength);
}
if (t >= i) return this;
for (;t < i; ) this.view[t++] = e;
n && (this.offset = t);
return this;
};
i.flip = function() {
this.limit = this.offset;
this.offset = 0;
return this;
};
i.mark = function(e) {
e = "undefined" == typeof e ? this.offset : e;
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal offset: " + e + " (not an integer)");
if ((e >>>= 0) < 0 || e + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + e + " (+0) <= " + this.buffer.byteLength);
}
this.markedOffset = e;
return this;
};
i.order = function(e) {
if (!this.noAssert && "boolean" != typeof e) throw TypeError("Illegal littleEndian: Not a boolean");
this.littleEndian = !!e;
return this;
};
i.LE = function(e) {
this.littleEndian = "undefined" == typeof e || !!e;
return this;
};
i.BE = function(e) {
this.littleEndian = "undefined" != typeof e && !e;
return this;
};
i.prepend = function(e, i, n) {
if ("number" == typeof i || "string" != typeof i) {
n = i;
i = void 0;
}
var a = "undefined" == typeof n;
a && (n = this.offset);
if (!this.noAssert) {
if ("number" != typeof n || n % 1 != 0) throw TypeError("Illegal offset: " + n + " (not an integer)");
if ((n >>>= 0) < 0 || n + 0 > this.buffer.byteLength) throw RangeError("Illegal offset: 0 <= " + n + " (+0) <= " + this.buffer.byteLength);
}
e instanceof t || (e = t.wrap(e, i));
var o = e.limit - e.offset;
if (o <= 0) return this;
var s = o - n;
if (s > 0) {
var r = new ArrayBuffer(this.buffer.byteLength + s), c = new Uint8Array(r);
c.set(this.view.subarray(n, this.buffer.byteLength), o);
this.buffer = r;
this.view = c;
this.offset += s;
this.markedOffset >= 0 && (this.markedOffset += s);
this.limit += s;
n += s;
} else new Uint8Array(this.buffer);
this.view.set(e.view.subarray(e.offset, e.limit), n - o);
e.offset = e.limit;
a && (this.offset -= o);
return this;
};
i.prependTo = function(e, t) {
e.prepend(this, t);
return this;
};
i.printDebug = function(e) {
"function" != typeof e && (e = console.log.bind(console));
e(this.toString() + "\n-------------------------------------------------------------------\n" + this.toDebug(!0));
};
i.remaining = function() {
return this.limit - this.offset;
};
i.reset = function() {
if (this.markedOffset >= 0) {
this.offset = this.markedOffset;
this.markedOffset = -1;
} else this.offset = 0;
return this;
};
i.resize = function(e) {
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal capacity: " + e + " (not an integer)");
if ((e |= 0) < 0) throw RangeError("Illegal capacity: 0 <= " + e);
}
if (this.buffer.byteLength < e) {
var t = new ArrayBuffer(e), i = new Uint8Array(t);
i.set(this.view);
this.buffer = t;
this.view = i;
}
return this;
};
i.reverse = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal end: Not an integer");
t >>>= 0;
if (e < 0 || e > t || t > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + t + " <= " + this.buffer.byteLength);
}
if (e === t) return this;
Array.prototype.reverse.call(this.view.subarray(e, t));
return this;
};
i.skip = function(e) {
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal length: " + e + " (not an integer)");
e |= 0;
}
var t = this.offset + e;
if (!this.noAssert && (t < 0 || t > this.buffer.byteLength)) throw RangeError("Illegal length: 0 <= " + this.offset + " + " + e + " <= " + this.buffer.byteLength);
this.offset = t;
return this;
};
i.slice = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal end: Not an integer");
t >>>= 0;
if (e < 0 || e > t || t > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + t + " <= " + this.buffer.byteLength);
}
var i = this.clone();
i.offset = e;
i.limit = t;
return i;
};
i.toBuffer = function(e) {
var t = this.offset, i = this.limit;
if (!this.noAssert) {
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal offset: Not an integer");
t >>>= 0;
if ("number" != typeof i || i % 1 != 0) throw TypeError("Illegal limit: Not an integer");
i >>>= 0;
if (t < 0 || t > i || i > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + t + " <= " + i + " <= " + this.buffer.byteLength);
}
if (!e && 0 === t && i === this.buffer.byteLength) return this.buffer;
if (t === i) return n;
var a = new ArrayBuffer(i - t);
new Uint8Array(a).set(new Uint8Array(this.buffer).subarray(t, i), 0);
return a;
};
i.toArrayBuffer = i.toBuffer;
i.toString = function(e, t, i) {
if ("undefined" == typeof e) return "ByteBufferAB(offset=" + this.offset + ",markedOffset=" + this.markedOffset + ",limit=" + this.limit + ",capacity=" + this.capacity() + ")";
"number" == typeof e && (i = t = e = "utf8");
switch (e) {
case "utf8":
return this.toUTF8(t, i);

case "base64":
return this.toBase64(t, i);

case "hex":
return this.toHex(t, i);

case "binary":
return this.toBinary(t, i);

case "debug":
return this.toDebug();

case "columns":
return this.toColumns();

default:
throw Error("Unsupported encoding: " + e);
}
};
var h = function() {
for (var e = {}, t = [ 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 ], i = [], n = 0, a = t.length; n < a; ++n) i[t[n]] = n;
e.encode = function(e, i) {
for (var n, a; null !== (n = e()); ) {
i(t[n >> 2 & 63]);
a = (3 & n) << 4;
if (null !== (n = e())) {
i(t[63 & ((a |= n >> 4 & 15) | n >> 4 & 15)]);
a = (15 & n) << 2;
null !== (n = e()) ? (i(t[63 & (a | n >> 6 & 3)]), i(t[63 & n])) : (i(t[63 & a]), 
i(61));
} else i(t[63 & a]), i(61), i(61);
}
};
e.decode = function(e, t) {
var n, a, o;
function s(e) {
throw Error("Illegal character code: " + e);
}
for (;null !== (n = e()); ) {
"undefined" == typeof (a = i[n]) && s(n);
if (null !== (n = e())) {
"undefined" == typeof (o = i[n]) && s(n);
t(a << 2 >>> 0 | (48 & o) >> 4);
if (null !== (n = e())) {
if ("undefined" == typeof (a = i[n])) {
if (61 === n) break;
s(n);
}
t((15 & o) << 4 >>> 0 | (60 & a) >> 2);
if (null !== (n = e())) {
if ("undefined" == typeof (o = i[n])) {
if (61 === n) break;
s(n);
}
t((3 & a) << 6 >>> 0 | o);
}
}
}
}
};
e.test = function(e) {
return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);
};
return e;
}();
i.toBase64 = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
t |= 0;
if ((e |= 0) < 0 || t > this.capacity || e > t) throw RangeError("begin, end");
var i;
h.encode(function() {
return e < t ? this.view[e++] : null;
}.bind(this), i = r());
return i();
};
t.fromBase64 = function(e, i) {
if ("string" != typeof e) throw TypeError("str");
var n = new t(e.length / 4 * 3, i), a = 0;
h.decode(s(e), function(e) {
n.view[a++] = e;
});
n.limit = a;
return n;
};
t.btoa = function(e) {
return t.fromBinary(e).toBase64();
};
t.atob = function(e) {
return t.fromBase64(e).toBinary();
};
i.toBinary = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
t |= 0;
if ((e |= 0) < 0 || t > this.capacity() || e > t) throw RangeError("begin, end");
if (e === t) return "";
for (var i = [], n = []; e < t; ) {
i.push(this.view[e++]);
i.length >= 1024 && (n.push(String.fromCharCode.apply(String, i)), i = []);
}
return n.join("") + String.fromCharCode.apply(String, i);
};
t.fromBinary = function(e, i) {
if ("string" != typeof e) throw TypeError("str");
for (var n, a = 0, o = e.length, s = new t(o, i); a < o; ) {
if ((n = e.charCodeAt(a)) > 255) throw RangeError("illegal char code: " + n);
s.view[a++] = n;
}
s.limit = o;
return s;
};
i.toDebug = function(e) {
for (var t, i = -1, n = this.buffer.byteLength, a = "", o = "", s = ""; i < n; ) {
if (-1 !== i) {
a += (t = this.view[i]) < 16 ? "0" + t.toString(16).toUpperCase() : t.toString(16).toUpperCase();
e && (o += t > 32 && t < 127 ? String.fromCharCode(t) : ".");
}
++i;
if (e && i > 0 && i % 16 == 0 && i !== n) {
for (;a.length < 51; ) a += " ";
s += a + o + "\n";
a = o = "";
}
i === this.offset && i === this.limit ? a += i === this.markedOffset ? "!" : "|" : i === this.offset ? a += i === this.markedOffset ? "[" : "<" : i === this.limit ? a += i === this.markedOffset ? "]" : ">" : a += i === this.markedOffset ? "'" : e || 0 !== i && i !== n ? " " : "";
}
if (e && " " !== a) {
for (;a.length < 51; ) a += " ";
s += a + o + "\n";
}
return e ? s : a;
};
t.fromDebug = function(e, i, n) {
for (var a, o, s = e.length, r = new t((s + 1) / 3 | 0, i, n), c = 0, l = 0, h = !1, u = !1, d = !1, m = !1, f = !1; c < s; ) {
switch (a = e.charAt(c++)) {
case "!":
if (!n) {
if (u || d || m) {
f = !0;
break;
}
u = d = m = !0;
}
r.offset = r.markedOffset = r.limit = l;
h = !1;
break;

case "|":
if (!n) {
if (u || m) {
f = !0;
break;
}
u = m = !0;
}
r.offset = r.limit = l;
h = !1;
break;

case "[":
if (!n) {
if (u || d) {
f = !0;
break;
}
u = d = !0;
}
r.offset = r.markedOffset = l;
h = !1;
break;

case "<":
if (!n) {
if (u) {
f = !0;
break;
}
u = !0;
}
r.offset = l;
h = !1;
break;

case "]":
if (!n) {
if (m || d) {
f = !0;
break;
}
m = d = !0;
}
r.limit = r.markedOffset = l;
h = !1;
break;

case ">":
if (!n) {
if (m) {
f = !0;
break;
}
m = !0;
}
r.limit = l;
h = !1;
break;

case "'":
if (!n) {
if (d) {
f = !0;
break;
}
d = !0;
}
r.markedOffset = l;
h = !1;
break;

case " ":
h = !1;
break;

default:
if (!n && h) {
f = !0;
break;
}
o = parseInt(a + e.charAt(c++), 16);
if (!n && (isNaN(o) || o < 0 || o > 255)) throw TypeError("Illegal str: Not a debug encoded string");
r.view[l++] = o;
h = !0;
}
if (f) throw TypeError("Illegal str: Invalid symbol at " + c);
}
if (!n) {
if (!u || !m) throw TypeError("Illegal str: Missing offset or limit");
if (l < r.buffer.byteLength) throw TypeError("Illegal str: Not a debug encoded string (is it hex?) " + l + " < " + s);
}
return r;
};
i.toHex = function(e, t) {
e = "undefined" == typeof e ? this.offset : e;
t = "undefined" == typeof t ? this.limit : t;
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal end: Not an integer");
t >>>= 0;
if (e < 0 || e > t || t > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + t + " <= " + this.buffer.byteLength);
}
for (var i, n = new Array(t - e); e < t; ) (i = this.view[e++]) < 16 ? n.push("0", i.toString(16)) : n.push(i.toString(16));
return n.join("");
};
t.fromHex = function(e, i, n) {
if (!n) {
if ("string" != typeof e) throw TypeError("Illegal str: Not a string");
if (e.length % 2 != 0) throw TypeError("Illegal str: Length not a multiple of 2");
}
for (var a, o = e.length, s = new t(o / 2 | 0, i), r = 0, c = 0; r < o; r += 2) {
a = parseInt(e.substring(r, r + 2), 16);
if (!n && (!isFinite(a) || a < 0 || a > 255)) throw TypeError("Illegal str: Contains non-hex characters");
s.view[c++] = a;
}
s.limit = c;
return s;
};
var u, d = u = {
MAX_CODEPOINT: 1114111,
encodeUTF8: function(e, t) {
var i = null;
"number" == typeof e && (i = e, e = function() {
return null;
});
for (;null !== i || null !== (i = e()); ) {
i < 128 ? t(127 & i) : i < 2048 ? (t(i >> 6 & 31 | 192), t(63 & i | 128)) : i < 65536 ? (t(i >> 12 & 15 | 224), 
t(i >> 6 & 63 | 128), t(63 & i | 128)) : (t(i >> 18 & 7 | 240), t(i >> 12 & 63 | 128), 
t(i >> 6 & 63 | 128), t(63 & i | 128));
i = null;
}
},
decodeUTF8: function(e, t) {
for (var i, n, a, o, s = function(e) {
e = e.slice(0, e.indexOf(null));
var t = Error(e.toString());
t.name = "TruncatedError";
t.bytes = e;
throw t;
}; null !== (i = e()); ) if (0 == (128 & i)) t(i); else if (192 == (224 & i)) null === (n = e()) && s([ i, n ]), 
t((31 & i) << 6 | 63 & n); else if (224 == (240 & i)) (null === (n = e()) || null === (a = e())) && s([ i, n, a ]), 
t((15 & i) << 12 | (63 & n) << 6 | 63 & a); else {
if (240 != (248 & i)) throw RangeError("Illegal starting byte: " + i);
(null === (n = e()) || null === (a = e()) || null === (o = e())) && s([ i, n, a, o ]), 
t((7 & i) << 18 | (63 & n) << 12 | (63 & a) << 6 | 63 & o);
}
},
UTF16toUTF8: function(e, t) {
for (var i, n = null; null !== (i = null !== n ? n : e()); ) if (i >= 55296 && i <= 57343 && null !== (n = e()) && n >= 56320 && n <= 57343) {
t(1024 * (i - 55296) + n - 56320 + 65536);
n = null;
} else t(i);
null !== n && t(n);
},
UTF8toUTF16: function(e, t) {
var i = null;
"number" == typeof e && (i = e, e = function() {
return null;
});
for (;null !== i || null !== (i = e()); ) {
i <= 65535 ? t(i) : (t(55296 + ((i -= 65536) >> 10)), t(i % 1024 + 56320));
i = null;
}
},
encodeUTF16toUTF8: function(e, t) {
u.UTF16toUTF8(e, function(e) {
u.encodeUTF8(e, t);
});
},
decodeUTF8toUTF16: function(e, t) {
u.decodeUTF8(e, function(e) {
u.UTF8toUTF16(e, t);
});
},
calculateCodePoint: function(e) {
return e < 128 ? 1 : e < 2048 ? 2 : e < 65536 ? 3 : 4;
},
calculateUTF8: function(e) {
for (var t, i = 0; null !== (t = e()); ) i += t < 128 ? 1 : t < 2048 ? 2 : t < 65536 ? 3 : 4;
return i;
},
calculateUTF16asUTF8: function(e) {
var t = 0, i = 0;
u.UTF16toUTF8(e, function(e) {
++t;
i += e < 128 ? 1 : e < 2048 ? 2 : e < 65536 ? 3 : 4;
});
return [ t, i ];
}
};
i.toUTF8 = function(e, t) {
"undefined" == typeof e && (e = this.offset);
"undefined" == typeof t && (t = this.limit);
if (!this.noAssert) {
if ("number" != typeof e || e % 1 != 0) throw TypeError("Illegal begin: Not an integer");
e >>>= 0;
if ("number" != typeof t || t % 1 != 0) throw TypeError("Illegal end: Not an integer");
t >>>= 0;
if (e < 0 || e > t || t > this.buffer.byteLength) throw RangeError("Illegal range: 0 <= " + e + " <= " + t + " <= " + this.buffer.byteLength);
}
var i;
try {
d.decodeUTF8toUTF16(function() {
return e < t ? this.view[e++] : null;
}.bind(this), i = r());
} catch (i) {
if (e !== t) throw RangeError("Illegal range: Truncated data, " + e + " != " + t);
}
return i();
};
t.fromUTF8 = function(e, i, n) {
if (!n && "string" != typeof e) throw TypeError("Illegal str: Not a string");
var a = new t(d.calculateUTF16asUTF8(s(e), !0)[1], i, n), o = 0;
d.encodeUTF16toUTF8(s(e), function(e) {
a.view[o++] = e;
});
a.limit = o;
return a;
};
return t;
}, "function" == typeof define && define.amd ? define([ "long" ], a) : "function" == typeof e && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && t && t.exports ? t.exports = function() {
var t;
try {
t = e("long");
} catch (e) {}
return a(t);
}() : (n.dcodeIO = n.dcodeIO || {}).ByteBuffer = a(n.dcodeIO.Long);
cc._RF.pop();
}, {
long: "long"
} ],
celIItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c833dNe/0lCk4rjLhUvDhk5", "celIItem");
cc.Class({
extends: cc.Component,
properties: {
iconNode: cc.Node
},
start: function() {
this.SPEED_Y = 7;
this.iconNode.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
if ("S_bao2" == e.animation.name || "S_bao" == e.animation.name) {
this.node.removeFromParent();
if (this.actCallBack) {
this.actCallBack();
this.actCallBack = null;
}
}
}.bind(this));
this.updateView();
},
setFast: function(e) {
this.iconNode.getComponent(sp.Skeleton).timeScale = e ? 1.5 : 1;
this.isFast = e;
},
updateId: function(e, t) {
this.iconNode.getComponent(sp.Skeleton).skeletonData = t;
this.iconNode.getComponent(sp.Skeleton).animation = "S_jingtai";
},
setTagY: function(e, t) {
this.tagY = e || this.node.y;
this.isFast ? this.SPEED_Y = 20 : this.SPEED_Y = 7;
this.isMove = !0;
this.callbak = t;
this.setAct("S_lachang_start", !1);
},
setData: function(e) {
this.cellData = e;
},
updateView: function() {
this.iconNode.getComponent(sp.Skeleton).skeletonData = this.cellData.spineData;
this.iconNode.getComponent(sp.Skeleton).animation = "S_jingtai";
},
setAct: function(e, t, i) {
this.actCallBack = i;
this.iconNode.getComponent(sp.Skeleton).animation = e;
this.iconNode.getComponent(sp.Skeleton).loop = t || !1;
},
update: function(e) {
if (this.isMove) if (this.node.y <= this.tagY) {
this.node.y = this.tagY;
this.isMove = !1;
if (this.callbak) {
this.callbak();
this.callbak = null;
}
this.setAct("S_huitan", !1);
this.SPEED_Y = 7;
} else {
this.node.y - this.SPEED_Y <= this.tagY ? this.node.y = this.tagY : this.node.y = this.node.y - this.SPEED_Y;
this.SPEED_Y = this.SPEED_Y + 1;
}
}
});
cc._RF.pop();
}, {} ],
colItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "35e31hI0yRI6YLlaeO/wyKt", "colItem");
var n = 7, a = [ "", "caimei", "chengzi", "shumei", "pingguo", "ximei", "shiliu" ];
cc.Class({
extends: cc.Component,
properties: {
cellItem: cc.Prefab,
wildItem: cc.Prefab,
maskNode: cc.Node
},
onLoad: function() {},
start: function() {
this.SPEED_Y = n;
this.tagY = this.node.y;
this.maskNode.setLocalZOrder(999);
},
setFast: function(e) {
n = e ? 40 : 7;
for (var t = 0; t < this.itemArr.length; t++) this.itemArr[t] && (1 == this.itemArr[t].id || this.itemArr[t].getComponent("celIItem").setFast(e));
},
quickStop: function(e) {
this.isQuickStop = e;
e && (this.SPEED_Y = 200);
},
maskFadePlay: function(e) {
if (e) {
this.maskNode.opacity = 0;
this.maskNode.runAction(cc.fadeIn(.3));
} else if (0 != this.maskNode.opacity) {
this.maskNode.opacity = 255;
this.maskNode.runAction(cc.fadeOut(.15));
}
},
updateId: function(e, t, i) {
if (this.itemArr[e]) {
this.itemArr[e].getComponent("celIItem").updateId(t, i);
this.itemArr[e].id = t;
}
},
createCol: function(e, t, i, n) {
this.main = i;
this.isTop = n;
this.index = t;
this.itemArr = [];
for (var o = 0; o < e.length; o++) if (1 == e[o]) {
var s = this.main.addWildItem(this.index, o, this.isTop);
this.itemArr.push(s);
} else {
var r = cc.instantiate(this.cellItem);
r.getComponent("celIItem").setData({
id: e[o],
spineData: i.spineData.get(a[e[o] - 1])
});
r.id = e[o];
r.x = 59;
r.y = 59 + 113 * o;
this.itemArr.push(r);
this.node.addChild(r);
}
this.setFast(this.main.isFast);
this.quickStop(this.main.isQuickStop);
},
setTagY: function(e, t) {
this.tagY = e || this.node.y;
this.isMove = !0;
this.callbak = t;
this.SPEED_Y = n;
if (this.isQuickStop) {
this.isQuickStop = !1;
this.SPEED_Y = 200;
}
for (var i = 0; i < this.itemArr.length; i++) this.itemArr[i] && (1 == this.itemArr[i].id || this.itemArr[i].getComponent("celIItem").setAct("S_lachang_start", !1));
},
removeItem: function(e, t, i) {
if (this.itemArr[e]) {
if (1 == this.itemArr[e].id) {
this.itemArr[e].getComponent("wildItem").showMask(!1);
this.itemArr[e].getComponent("wildItem").setAct("P_pen", !1, function() {}.bind(this));
} else {
var n = this.itemArr[e].parent.convertToWorldSpaceAR(this.itemArr[e].position);
n = this.main.aniLayer.convertToNodeSpaceAR(n);
this.itemArr[e].parent = this.main.aniLayer;
this.itemArr[e].x = n.x;
this.itemArr[e].y = n.y;
this.itemArr[e].getComponent("celIItem").setAct("S_bao", !1, function() {
if (t) {
t();
t = null;
}
}.bind(this));
}
this.itemArr[e] = null;
}
},
wildDumpAct: function() {
if (this.isRemoveBack) {
var e = .3;
if (!this.main.resultData.wildPos[this.main.startIndex] || this.main.resultData.wildPos[this.main.startIndex].infos.length <= 0 || !this.main.resultData.wildPos[this.main.startIndex + 1] || this.main.resultData.wildPos[this.main.startIndex + 1].infos.length <= 0) e = 0; else {
var t = this.main.resultData.wildPos[this.main.startIndex + 1];
(!t || t.infos.length <= 0) && (e = 0);
}
this.scheduleOnce(function() {
this.main.playWildDump();
}.bind(this), e);
this.isRemoveBack = null;
}
},
moveItems: function(e) {
this.MoveCallBack = e;
this.fullIndex = [];
for (var t = 0; t < this.itemArr.length; t++) this.fullIndex[t] = 1;
if (this.indexArr && this.indexArr.length > 0) {
for (var i = 0; i < this.indexArr.length; i++) {
this.fullIndex[this.indexArr[i]] = 0;
var n = this.main.getWildItemByPos({
x: this.index + 1,
y: this.indexArr[i] + 1
});
n && 1 == n.isMove && (this.fullIndex[this.indexArr[i]] = 2);
}
for (var a = !1, o = 0; o < this.indexArr.length; o++) if (this.itemArr[this.indexArr[o] + 1]) {
a = !0;
this.moveItem(this.indexArr[o], this.indexArr[o + 1] || this.itemArr.length, o == this.indexArr.length - 1);
}
if (0 == a) {
this.removeNull();
this.reSetData();
if (this.MoveCallBack) {
this.MoveCallBack();
this.MoveCallBack = null;
}
if (this.removeCallBack) {
this.removeCallBack();
this.removeCallBack = null;
}
}
}
},
pushWild: function(e, t) {
this.itemArr.splice(e, 0, t);
},
reSetData: function() {
this.indexArr = [];
this.fullIndex = [];
},
removeItems: function(e, t) {
e.sort(function(e, t) {
return e - t;
});
this.indexArr = e;
this.removeCallBack = t;
t && (this.isRemoveBack = !0);
for (var i = function() {
this.wildDumpAct();
}.bind(this), n = 0; n < e.length; n++) this.removeItem(e[n], i, n == e.length - 1);
},
updateWildIndex: function() {
for (var e = 0; e < this.itemArr.length; e++) 1 != this.itemArr[e].id || !this.itemArr[e].row && 0 != this.itemArr[e].row || (this.itemArr[e].row = e);
},
removeNull: function() {
for (var e = this.itemArr.length - 1; e >= 0; e--) null == this.itemArr[e] && this.itemArr.splice(e, 1);
},
getIsfull: function(e, t) {
for (var i = 0; i < t; i++) if (0 == e[i]) return !1;
return !0;
},
getMoveCount: function(e, t) {
for (var i = 0, n = 0; n < e; n++) 0 == t[n] ? i++ : 2 == t[n] && (this.getIsfull(t, n) || i++);
return i;
},
moveItem: function(e, t, i) {
for (var n = e + 1; n < t; n++) if (this.itemArr[n]) {
var a = this.getMoveCount(n, this.fullIndex);
if (a > 0) {
var o = this.fullIndex[n];
this.fullIndex[n] = 0;
this.fullIndex[n - a] = 1;
2 == o && (this.fullIndex[n - a] = 2);
}
n == t - 1 ? 1 == this.itemArr[n].id ? this.itemArr[n].getComponent("wildItem").setTagY(this.itemArr[n].y - 113 * a, function(e) {
if (i) {
this.removeNull();
this.reSetData();
if (this.MoveCallBack) {
this.MoveCallBack();
this.MoveCallBack = null;
}
if (this.removeCallBack) {
this.removeCallBack();
this.removeCallBack = null;
}
}
}.bind(this)) : this.itemArr[n].getComponent("celIItem").setTagY(this.itemArr[n].y - 113 * a, function() {
if (i) {
this.removeNull();
this.reSetData();
if (this.MoveCallBack) {
this.MoveCallBack();
this.MoveCallBack = null;
}
if (this.removeCallBack) {
this.removeCallBack();
this.removeCallBack = null;
}
}
}.bind(this)) : 1 == this.itemArr[n].id ? this.itemArr[n].getComponent("wildItem").setTagY(this.itemArr[n].y - 113 * a, function(e) {}.bind(this)) : this.itemArr[n].getComponent("celIItem").setTagY(this.itemArr[n].y - 113 * a);
}
},
update: function(e) {
if (this.isMove) if (this.node.y <= this.tagY) {
this.isQuickStop = !1;
this.node.y = this.tagY;
this.isMove = !1;
if (this.callbak) {
this.callbak(this.index);
this.callbak = null;
}
for (var t = 0; t < this.itemArr.length; t++) this.itemArr[t] && (1 == this.itemArr[t].id || this.itemArr[t].getComponent("celIItem").setAct("S_huitan", !1));
this.SPEED_Y = n;
} else {
this.node.y - this.SPEED_Y <= this.tagY ? this.node.y = this.tagY : this.node.y = this.node.y - this.SPEED_Y;
this.SPEED_Y = this.SPEED_Y + 1;
}
}
});
cc._RF.pop();
}, {} ],
colorItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "12ac0RK/0lO/71Fxv4fEsX9", "colorItem");
cc.Class({
extends: cc.Component,
properties: {
colorSp: [ cc.SpriteFrame ],
spItem: cc.Node
},
start: function() {
this.spItem.active = !1;
},
setColorId: function(e) {
this.colorSp[e] && (this.spItem.getComponent(cc.Sprite).spriteFrame = this.colorSp[e]);
},
playColor: function() {
this.spItem.active = !0;
this.spItem.stopAllActions();
var e = Value_GetRandomInt(0, 3);
if (0 == e) {
this.spItem.opacity = 0;
this.spItem.runAction(cc.repeatForever(cc.sequence(cc.fadeIn(.2), cc.fadeOut(.3))));
} else if (1 == e) {
this.spItem.opacity = 255;
this.spItem.runAction(cc.repeatForever(cc.sequence(cc.fadeOut(.25), cc.fadeIn(.15))));
} else if (2 == e) {
this.spItem.opacity = 125;
this.spItem.runAction(cc.repeatForever(cc.sequence(cc.fadeOut(.15), cc.fadeIn(.25))));
} else if (3 == e) {
this.spItem.opacity = 125;
this.spItem.runAction(cc.repeatForever(cc.sequence(cc.fadeIn(.15), cc.fadeOut(.25))));
}
},
stopColor: function() {
this.spItem.stopAllActions();
this.spItem.runAction(cc.sequence(cc.fadeIn(.15), cc.callFunc(function() {
this.spItem.active = !1;
}.bind(this))));
}
});
cc._RF.pop();
}, {} ],
color_jackpot_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "31be5TGdHRJErwtrzfaNb3W", "color_jackpot_control");
var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
cc.Class({
extends: cc.Component,
properties: {
nodeRollNum: [ cc.Node ],
nodeRolltest: cc.Label,
isFirst: !0
},
setNumNew: function(e, t, i) {
this.num = "" + e;
this.numLength = this.num.length;
null == i && (i = 5);
null == this.originNum && (this.originNum = e - 60);
e - this.originNum <= 0 && (this.originNum = e - 60);
t = e - this.originNum;
this.arr = [];
var n = 0;
n += parseInt(.22 * t);
this.arr.push(parseInt(.22 * t));
n += parseInt(.19 * t);
this.arr.push(parseInt(.19 * t));
n += parseInt(.21 * t);
this.arr.push(parseInt(.21 * t));
n += parseInt(.18 * t);
this.arr.push(parseInt(.18 * t));
this.arr.push(parseInt(t - n));
for (var a = 9; a > 9 - this.numLength; a--) {
var o = this.nodeRollNum[a].getComponent("Color_rollNum"), s = this.originNum + "";
o.setData(s[a - (9 - this.numLength) - 1]);
}
this.count = 0;
this.unschedule(this.setNumNewFun);
this.schedule(this.setNumNewFun, 1, i);
},
setNumNewFun: function(e) {
var t = this;
if (!(this.count > 4)) {
this.originNum += this.arr[this.count];
this.count++;
for (var i = 0, a = function(e) {
t.scheduleOnce(function(t, i) {
var n = this.nodeRollNum[e].getComponent("Color_rollNum"), a = this.originNum + "";
n.startRoll(t, 0, a[this.numLength - i - 1]);
}.bind(t, e, i), .1 * (9 - e));
if (++i >= t.numLength) return {
v: void 0
};
}, o = 9; o >= 0; o--) {
var s = a(o);
if ("object" === ("undefined" == typeof s ? "undefined" : n(s))) return s.v;
}
}
}
});
cc._RF.pop();
}, {} ],
gameData: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c1cbdJIz5VJoZrpsHxeuOVu", "gameData");
e("os").endianness;
cc.Class({
properties: {},
start: function() {},
createInitData: function(e) {
this.callback = e;
this.initData = [ [ 1, 1, 1, 2, 2, 3, 3, 4 ], [ 2, 1, 1, 2, 2, 3, 1, 4 ], [ 3, 5, 4, 6, 1, 1, 6, 6 ], [ 1, 5, 4, 1, 3, 3, 3, 1 ], [ 2, 2, 4, 3, 4, 2, 2, 2 ], [ 3, 6, 4, 2, 6, 5, 5, 5 ], [ 5, 2, 1, 1, 3, 6, 2, 6 ], [ 1, 5, 6, 6, 2, 3, 6, 6 ] ];
this.spinData = [];
this.addData = [];
this.tempinitData = [];
this.spinData.passData = [];
this.wildPos = [];
for (var t = 0; t < 8; t++) {
this.addData[t] = [];
this.initData[t] = [];
this.tempinitData[t] = [];
for (var i = 0; i < 8; i++) {
var n = this.randomNum(1, 6);
this.initData[t][i] = n;
this.tempinitData[t][i] = this.initData[t][i];
}
}
this.passCount = 0;
this.createWild();
this.oneTimesPass();
},
createWild: function() {
for (var e = 0; e < 3; e++) {
var t = this.randomNum(0, 10), i = this.randomNum(0, 10);
if (t < 8 && i < 8 && !this.isSamePosByData(this.wildPos, pos)) {
var n = {
x: i,
y: t
};
this.wildPos.push(n);
}
}
},
isWildByPos: function(e) {
for (var t = 0; t < this.wildPos.length; t++) if (e.x = this.wildPos[t].x && e.y == this.wildPos[t].y) return !0;
return !1;
},
oneTimesPass: function() {
for (var e = [], t = [], i = 0; i < this.initData.length; i++) for (var n = 0; n < this.initData[i].length; n++) if (!this.isSamePosByData(e, {
x: i,
y: n
})) {
var a = [];
a.push({
x: i,
y: n
});
this.getSameByPos({
x: i,
y: n
}, a);
var o = [];
if (a.length >= 5) for (var s = 0; s < a.length; s++) this.isSamePosByData(o, a[s]) || o.push(a[s]);
if (o.length >= 5) {
var r = {
num: this.getScoreByData(o.length, this.initData[i][n]),
index: {
x: i,
y: n
}
};
t.push(r);
for (var c = 0; c < o.length; c++) this.isSamePosByData(e, o[c]) || e.push(o[c]);
}
}
if (e.length > 0 && t.length > 0) {
var l = {
score: t,
pos: e
};
this.spinData.passData.push(l);
}
if (e.length > 0) {
this.removePassPos(e);
this.oneTimesPass();
} else this.spinEnd();
},
spinEnd: function() {
for (var e = 0; e < this.addData.length; e++) for (var t = 0; t < this.addData[e].length; t++) this.tempinitData[e].push(this.addData[e][t]);
this.spinData.gameData = this.tempinitData;
this.callback(this.spinData);
},
removePassPos: function(e) {
for (var t = 0; t < e.length; t++) this.initData[e[t].x] && this.initData[e[t].x][e[t].y] && (this.initData[e[t].x][e[t].y] = 0);
for (var i = 0; i < this.initData.length; i++) for (var n = this.initData[i].length - 1; n >= 0; n--) if (0 == this.initData[i][n]) {
this.initData[i].splice(n, 1);
var a = this.randomNum(1, 6);
this.initData[i].push(a);
this.addData[i].push(a);
}
},
isSamePosByData: function(e, t) {
for (var i = 0; i < e.length; i++) if (t.x == e[i].x && t.y == e[i].y) return !0;
return !1;
},
getScoreByData: function(e, t) {
return 1e3;
},
getSameByPos: function(e, t, i) {
i = i || [];
if (!this.isSamePosByData(i, e)) {
i.push(e);
if (this.initData[e.x - 1] && this.initData[e.x - 1][e.y] && (this.initData[e.x - 1][e.y] == this.initData[e.x][e.y] || this.isWildByPos({
x: e.x - 1,
y: e.y
}))) {
t.push({
x: e.x - 1,
y: e.y
});
this.getSameByPos({
x: e.x - 1,
y: e.y
}, t, i);
}
if (this.initData[e.x + 1] && this.initData[e.x + 1][e.y] && (this.initData[e.x + 1][e.y] == this.initData[e.x][e.y] || this.isWildByPos({
x: e.x + 1,
y: e.y
}))) {
t.push({
x: e.x + 1,
y: e.y
});
this.getSameByPos({
x: e.x + 1,
y: e.y
}, t, i);
}
if (this.initData[e.x]) {
if (y + 1 < 8 && this.initData[e.x][e.y + 1] && (this.initData[e.x][e.y + 1] == this.initData[e.x][e.y] || this.isWildByPos({
x: e.x,
y: e.y + 1
}))) {
t.push({
x: e.x,
y: e.y + 1
});
this.getSameByPos({
x: e.x,
y: e.y + 1
}, t, i);
}
if (this.initData[e.x][e.y - 1] && (this.initData[e.x][e.y - 1] == this.initData[e.x][e.y] || this.isWildByPos({
x: e.x,
y: e.y - 1
}))) {
t.push({
x: e.x,
y: e.y - 1
});
this.getSameByPos({
x: e.x,
y: e.y - 1
}, t, i);
}
}
}
},
randomNum: function(e, t) {
switch (arguments.length) {
case 1:
return parseInt(Math.random() * e + 1);

case 2:
return parseInt(Math.random() * (t - e + 1) + e);

default:
return 0;
}
}
});
cc._RF.pop();
}, {
os: 1
} ],
helpNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "11fd548ROxCea6Rbq3JWdLW", "helpNode");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
onBtnclose: function() {
this.node.removeFromParent();
}
});
cc._RF.pop();
}, {} ],
jsActivityNewYear: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8f42cBZcTxCp6EMzqZg22s5", "jsActivityNewYear");
cc.Class({
extends: cc.Component,
properties: {
nodeSpine: cc.Node,
nodeBtnClose: cc.Node,
nodeBtnOpen: cc.Node,
nodeBtnGoShop: cc.Node,
nodeReward: cc.Node,
lblReward: cc.Label,
nodeEnd: cc.Node,
lblEndReward: cc.Label
},
onLoad: function() {
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetPopHelper().GetOnePopup();
});
},
start: function() {
this.bOpen = !1;
this.rewardStart = 0;
this.rewardEnd = 0;
this.step = 1;
this.start = !1;
},
OnShowReward: function() {
var e = this;
setTimeout(function() {
e.nodeBtnOpen.active = !0;
}, 500);
this.nodeSpine.active = !0;
var t = this.nodeSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "idle").setCompleteListener(function() {
PlaySkeletonAnimation(t, !0, "idlekeep");
});
},
OnEventStatus: function() {
if (this.nodeEnd.active) {
this.node.destroy();
GetPopHelper().GetOnePopup();
}
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnOpen" == i ? this.OnOpen() : "btnGoShop" == i && OnShowVip(!0);
},
OnOpen: function() {
var e = this;
if (!this.bOpen) {
this.bOpen = !0;
var t = GetProject().szActivityNewYearUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&type=1";
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
t ? 200 == i.statusCode && e.OnOpenResult(i) : ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
}
},
OnOpenResult: function(e) {
this.rewardEnd = e.integral;
this.nodeBtnOpen.active = !1;
this.nodeReward.active = !0;
this.step = Math.max(4, Math.floor(this.rewardEnd / 413) + 4);
this.start = !0;
var t = this.nodeSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "open").setCompleteListener(function() {
PlaySkeletonAnimation(t, !0, "openkeep");
});
},
update: function() {
var e = this;
if (this.start) {
this.rewardStart += this.step;
if (this.rewardStart >= this.rewardEnd) {
this.rewardStart = this.rewardEnd;
this.start = !1;
setTimeout(function() {
e.playEnd();
}, 2e3);
}
this.lblReward.string = this.rewardStart;
}
},
playEnd: function() {
this.nodeReward.active = !1;
this.nodeBtnClose.active = !0;
this.nodeBtnGoShop.active = !0;
this.nodeEnd.active = !0;
this.lblEndReward.string = this.rewardEnd;
var e = this.nodeSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "end").setCompleteListener(function() {
PlaySkeletonAnimation(e, !0, "endkeep");
});
}
});
cc._RF.pop();
}, {} ],
jsActivityRecharge: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd7cbjShHpNFoHAOgUIL0uQ", "jsActivityRecharge");
cc.Class({
extends: cc.Component,
properties: {
nodeOld: cc.Node,
nodeNew: cc.Node,
nodeItem: [ cc.Node ],
lblReward: cc.Label,
lblHour: cc.Label,
lblMinute: cc.Label,
lblSecond: cc.Label
},
onLoad: function() {
GetProject().onlyLayer = this;
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
updateBuoyEntry(LuckyPackOpen);
GetProject().onlyLayer = null;
GetPopHelper().GetOnePopup();
});
},
setData: function(e) {
this.jsondata = e;
if (1005 == e.activityID) {
this.nodeOld.active = !0;
this.nodeNew.active = !1;
this.lblReward.string = "+" + e.giftQuota / 1e3;
} else if (1006 == e.activityID) {
this.nodeOld.active = !1;
this.nodeNew.active = !0;
for (var t = 0; t < 4; t++) {
var i = cc.find("recharge", this.nodeItem[t]), n = cc.find("di/reward", this.nodeItem[t]);
i.getComponent(cc.Label).string = "Top Up " + e.factor[t] + "+";
n.getComponent(cc.Label).string = "+" + e.giftQuota[t] / 1e3;
}
}
this.OnTimeUpdate();
this.schedule(this.OnTimeUpdate, 1);
},
OnTimeUpdate: function() {
var e = new Date().getTime(), t = 1e3 * this.jsondata.endTime, i = this.calculateTimeDifference(e, t), n = this.OnFormat(i);
this.lblHour.string = n._hours;
this.lblMinute.string = n._minutes;
this.lblSecond.string = n._seconds;
"0 0" != n._hours || "0 0" != n._minutes || "0 0" != n._seconds || this.unschedule(this.OnTimeUpdate);
},
calculateTimeDifference: function(e, t) {
var i = t - e;
return {
hours: Math.floor(i / 36e5),
minutes: Math.floor(i % 36e5 / 6e4),
seconds: Math.floor(i % 6e4 / 1e3)
};
},
OnFormat: function(e) {
var t = "" + e.hours;
1 == t.length ? t = "0 " + e.hours : 2 == t.length && (t = t[0] + " " + t[1]);
var i = "" + e.minutes;
1 == i.length ? i = "0 " + e.minutes : 2 == i.length && (i = i[0] + " " + i[1]);
var n = "" + e.seconds;
1 == n.length ? n = "0 " + e.seconds : 2 == n.length && (n = n[0] + " " + n[1]);
return {
_hours: t,
_minutes: i,
_seconds: n
};
},
openShopLayer: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}
});
cc._RF.pop();
}, {} ],
jsAutoPlay: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1cbcv0SARHg7PUsK/d4Zwi", "jsAutoPlay");
cc.Class({
extends: cc.Component,
properties: {
autoPlayItem: cc.Node,
autoPlayNode: cc.Node
},
initAutoPlayMenu: function(e, t) {
for (var i = 0; i < e.length; i++) {
var n = cc.instantiate(this.autoPlayItem);
n.active = !0;
n.setPosition(0, 0);
n.getChildByName("times").getComponent(cc.Label).string = "-1" == e[i] ? "∞" : e[i];
n.getChildByName("times").getComponent(cc.Label).fontSize = "-1" == e[i] ? 58 : 48;
n.getChildByName("times").getComponent(cc.Label).lineHeight = "-1" == e[i] ? 58 : 48;
n.on(cc.Node.EventType.TOUCH_START, t, this);
n.autoRun = e[i];
this.autoPlayNode.addChild(n);
}
}
});
cc._RF.pop();
}, {} ],
jsBigAwardLaba: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7660bWWS0lOn4dQFIGt5khV", "jsBigAwardLaba");
cc.Class({
extends: cc.Component,
properties: {
awardNodeLaba: cc.Node,
lobbyNodeLaba: cc.Node,
gameNodeLaba: cc.Node,
smallsaoguang: cc.Node,
Caidai: cc.Node,
bigsaoguang: cc.Node,
jpNode: cc.Node,
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite,
nickName: cc.Label,
awardContent: cc.RichText,
lobbyContent: cc.RichText,
gameContent: cc.RichText,
bAdd: !1,
fSpeed: 100,
toggleNode: cc.Node,
ChristmasNode: cc.Node,
lobby_iconLabe: cc.Sprite,
iconLabeFrame: [ cc.SpriteFrame ]
},
onLoad: function() {
if (0 == GetProject().cbCheckAccounts) {
this.node.active = !0;
if (GetProject().isChristmasSkinOpen) {
this.ChristmasNode.active = !0;
this.lobby_iconLabe.spriteFrame = this.iconLabeFrame[1];
} else {
this.ChristmasNode.active = !1;
this.lobby_iconLabe.spriteFrame = this.iconLabeFrame[0];
}
this.bCanAddMsg = 0 != GetProject().bMissionService;
cc.loader.loadRes("GameLobby/json/bigAwardMsg", function(e, t) {
e ? cc.log("cc.loader.loadRes bigAwardMsg error = " + e) : this.jsonData = t;
}.bind(this));
this.isGame = !1;
this.isAwardLabaDisplay = !0;
} else this.node.active = !1;
},
onBtnGoToPlay: function() {
if (null != this.stCurMsg) {
0 == GetServerRoom().GetKindID() ? this.goto() : ManagerHelp_SetSystemLabel("The current game is in progress, cannot go to");
}
},
goto: function() {
var e = this.stCurMsg.KindID, t = !0;
if (cc.sys.isNative) {
this.writablePath = jsb.fileUtils.getWritablePath();
var i = this.writablePath + "search_" + e;
t = jsb.fileUtils.isDirectoryExist(i);
}
if (t) {
var n = ServerData_GetGameServerArray(e);
if (n.length > 0) {
var a = n[0];
GetServerRoom().SetOperateName("");
GetServerRoom().SetGameServer(a);
GetServerRoom().OnLogonGameEvent(a);
}
} else ManagerHelp_SetSystemLabel("This game is not updated, can not go to");
},
OnToggleValueChanged: function(e, t) {
if (e.isChecked) {
ManagerHelp_SetSystemLabel("No longer displayed in current game");
this.isAwardLabaDisplay = !1;
} else this.isAwardLabaDisplay = !0;
},
update: function(e) {
if (this.bCanAddMsg && null != this.jsonData && null == this.stCurMsg) {
this.stCurMsg = BMSG_OnGetMsg();
if (null != this.stCurMsg) {
if (!this.bAdd) {
this.bAdd = !0;
this.setData();
}
} else {
this.awardNodeLaba.active = !1;
this.lobbyNodeLaba.active = !1;
this.gameNodeLaba.active = !1;
}
}
},
setData: function() {
this.curJsonData = null;
this.toggleNode.active = this.isGame;
for (var e = 0; e < this.jsonData.length; e++) if (this.jsonData[e].msgId == this.stCurMsg.MsgID) {
this.curJsonData = this.jsonData[e];
break;
}
if (null != this.curJsonData) {
this.awardNodeLaba.active = 2 == this.curJsonData.showPos || 3 == this.curJsonData.showPos;
this.lobbyNodeLaba.active = !this.isGame && (1 == this.curJsonData.showPos || 3 == this.curJsonData.showPos);
this.gameNodeLaba.active = this.isGame && (1 == this.curJsonData.showPos || 3 == this.curJsonData.showPos);
this.replacements = {
Game: OnConverString(this.stCurMsg.GameName, 6),
Name: this.stCurMsg.NickName.substring(0, 3) + "***",
Score: (this.stCurMsg.WinScore / 1e3).toFixed(2),
JP: (this.stCurMsg.WinJP / 1e3).toFixed(2),
Mul: this.stCurMsg.WinMul.toFixed(2) + "x"
};
this.awardNodeLaba.active && this.goAwardLaba();
if (this.lobbyNodeLaba.active) {
this.replacements.Game = this.stCurMsg.GameName;
this.goLobbyLaba();
}
if (this.gameNodeLaba.active) {
this.replacements.Game = this.stCurMsg.GameName;
this.goGameLaba();
}
} else cc.log("根据 MsgID " + this.stCurMsg.MsgID + "未找到本地配置");
},
goLobbyLaba: function() {
var e = this.curJsonData.content_en.replace(/\n/g, ""), t = " <color=#6effab>" + this.replacements.Name + "</color>", i = this.replaceKeywords(e), n = i.indexOf("!"), a = t + i;
-1 !== n && (a = i.slice(0, n + "!".length) + t + i.slice(n + "!".length));
this.lobbyContent.string = a;
this.OnRolltext(this.lobbyContent.node);
},
goGameLaba: function() {
var e = this.curJsonData.content_en.replace(/\n/g, ""), t = " <color=#6effab>" + this.replacements.Name + "</color>", i = this.replaceKeywords(e), n = i.indexOf("!"), a = t + i;
-1 !== n && (a = i.slice(0, n + "!".length) + t + i.slice(n + "!".length));
this.gameContent.string = a;
this.OnRolltext(this.gameContent.node);
},
goAwardLaba: function() {
if (this.isAwardLabaDisplay) {
var e = 0 == this.curJsonData.headType, t = 1 == this.curJsonData.headType;
this.jpNode.active = e;
this.spUserHead.node.active = t;
if (t) {
this.SetHeadSpriteFrame(this.stCurMsg.FaceID, this.stCurMsg.FrameID);
this.nickName.string = this.stCurMsg.NickName.substring(0, 3) + "***";
}
this.awardContent.string = this.replaceKeywords(this.curJsonData.content_en);
this.smallsaoguang.active = 1 == this.curJsonData.winLv;
this.bigsaoguang.active = 2 == this.curJsonData.winLv;
PlaySkeletonAnimation(this.awardNodeLaba, !0, 2 == this.curJsonData.winLv ? "big_start" : "small_start");
var i = this.awardNodeLaba.getComponent(cc.Animation);
i.play("moveEnterLaba");
i.onPlaying || (i.onPlaying = function() {
PlaySkeletonAnimation(this.Caidai, !1, "animation");
}.bind(this));
this.scheduleOnce(function() {
var e = this.awardNodeLaba.getComponent(cc.Animation);
e.play("moveQuitLaba");
e.onPlayEnd || (e.onPlayEnd = function() {
this.awardOver = !0;
this.quitMsg();
}.bind(this));
}.bind(this), this.curJsonData.stopTime / 1e3);
} else {
this.awardOver = !0;
this.quitMsg();
}
},
OnRolltext: function(e) {
e.x = e.parent.width;
var t = e.x / this.fSpeed, i = -e.width, n = cc.sequence(cc.moveTo(t, cc.v2(i, 0)), cc.callFunc(function() {
e.x = e.parent.width;
this.rollTextOver = !0;
this.lobbyNodeLaba.active = !1;
this.gameNodeLaba.active = !1;
this.quitMsg();
}.bind(this)));
e.runAction(n);
},
quitMsg: function() {
if (3 == this.curJsonData.showPos) {
if (this.rollTextOver && this.awardOver) {
this.stCurMsg = null;
this.bAdd = !1;
this.rollTextOver = !1;
this.awardOver = !1;
}
} else {
this.stCurMsg = null;
this.bAdd = !1;
this.rollTextOver = !1;
this.awardOver = !1;
}
},
replaceKeywords: function(e) {
var t = this;
return e.replace(/@(\w+)/g, function(e, i) {
return t.replacements.hasOwnProperty(i) ? t.replacements[i] : e;
});
},
SetHeadSpriteFrame: function(e, t) {
var i = this, n = "common/UserHead/Head_" + (e = e <= 15 ? e : 15);
cc.loader.loadRes(n, cc.SpriteFrame, function(e, t) {
e || i.spUserHead && (i.spUserHead.spriteFrame = t);
});
var a = "common/HeadFrame/Frame_" + (t = t <= 9 ? t : 9);
cc.loader.loadRes(a, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
}
});
cc._RF.pop();
}, {} ],
jsBigWin_text_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aae41GUKLlCo6LHmn1aMm1z", "jsBigWin_text_control");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e, t, i, n, a, o, s) {
this.endCallBack = n;
this.winScoreLvArry = a;
this.bigCallBack = o;
this.megaCallBack = s;
this.i_num = parseFloat(e);
this.i_cur_num = i || 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
if (this.winScoreLvArry && this.winScoreLvArry.length > 2) if (this.i_cur_num >= this.winScoreLvArry[2] / 1e3) {
if (this.megaCallBack) {
cc.log("加到megawin倍数 = ", this.i_cur_num);
this.megaCallBack();
this.megaCallBack = null;
}
} else if (this.i_cur_num >= this.winScoreLvArry[1] / 1e3 && this.bigCallBack) {
cc.log("加到bigwin倍数 = ", this.i_cur_num);
this.bigCallBack();
this.bigCallBack = null;
}
} else if (this.endCallBack) {
cc.log("全部结束 = ", this.i_cur_num);
this.endCallBack();
this.endCallBack = null;
}
}
});
cc._RF.pop();
}, {} ],
jsBigWin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a31b1BDp6ZCB7A3fUQNUz5G", "jsBigWin");
cc.Class({
extends: cc.Component,
properties: {
nodeBigSpine: cc.Node,
nodeBigWinScore: cc.Node,
prefab_gold: cc.Prefab,
nodeGold: cc.Node
},
onLoad: function() {
this.arryGodPool = new cc.NodePool();
for (var e = 0; e < 200; e++) {
var t = cc.instantiate(this.prefab_gold);
this.arryGodPool.put(t);
}
},
start: function() {},
setTotalWinData: function(e, t, i) {
this.totalScore = t;
this.callBackAniOver = i;
window.mfConfig.PlayAudio("AGameHelp/audio/totalwin_star", !1);
var n = this.nodeBigSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(n, !1, "a9");
n.setCompleteListener(function(e) {
window.mfConfig.PlayAudio("AGameHelp/audio/totalwin_loop", !1);
PlaySkeletonAnimation(n, !0, "a10");
}.bind(this));
var a = this.nodeBigWinScore.getComponent("jsBigWin_text_control"), o = this.calcTotalWinLoopTime(1e3 * parseInt(e));
a.setNum(e / 1e3, o, 0, function(e) {
this.scheduleOnce(function() {
window.mfConfig.PlayAudio("AGameHelp/audio/totalwin_end", !1);
PlaySkeletonAnimation(n, !1, "a11");
n.setCompleteListener(function(e) {
this.playBigAniOver();
});
}.bind(this), 2.5);
}.bind(this));
},
setBigWinData: function(e, t, i, n) {
var a = [];
this.totalScore = t;
this.callBackAniOver = n;
a.push(i[0] * t);
a.push(i[1] * t);
a.push(i[2] * t);
this.node.active = !0;
var o = "2";
e >= a[0] && e < a[1] ? o = "2" : e >= a[1] && e < a[2] ? o = "5" : e >= a[2] && (o = "8");
var s = this.nodeBigSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(s, !1, "a0");
this.schedule(this.EruptGold, .05);
this.playAudio("AGameHelp/audio/bigwin_intro");
s.setCompleteListener(function(e) {
PlaySkeletonAnimation(s, !0, "a1");
this.playAudio("AGameHelp/audio/bigwin_loop");
}.bind(this));
this.nodeBigWinScore.scale = 1;
var r = this.nodeBigWinScore.getComponent("jsBigWin_text_control"), c = this.calcTotalWinLoopTime(e);
r.setNum(e / 1e3, c, 0, function(e) {
this.scheduleOnce(function() {
PlaySkeletonAnimation(s, !1, "a" + o);
window.mfConfig.StopAudioClip(this.bigwin_loop_3);
this.playAudio("AGameHelp/audio/bigwin_end");
this.nodeBigWinScore.runAction(cc.sequence(cc.scaleTo(10 / 30, 0), cc.callFunc(function(e) {
this.node.active = !1;
}.bind(this))));
s.setCompleteListener(function(e) {
this.playBigAniOver();
}.bind(this));
}.bind(this), 2.5);
}.bind(this), a, function(e) {
this.schedule(this.EruptGold, .03);
window.mfConfig.StopAudioClip(this.bigwin_loop);
this.playAudio("AGameHelp/audio/bigwin_loop_2");
this.playBigAni(2);
}.bind(this), function(e) {
this.schedule(this.EruptGold, .02);
window.mfConfig.StopAudioClip(this.bigwin_loop_2);
this.playAudio("AGameHelp/audio/bigwin_loop_3");
this.playBigAni(5);
}.bind(this));
},
playBigAni: function(e) {
this.nodeBigWinScore.runAction(cc.sequence(cc.scaleTo(10 / 30, .3), cc.scaleTo(10 / 30, 1)));
var t = this.nodeBigSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(t, !1, "a" + e);
t.setCompleteListener(function(i) {
PlaySkeletonAnimation(t, !1, "a" + (e + 1));
t.setCompleteListener(function(i) {
PlaySkeletonAnimation(t, !0, "a" + (e + 2));
}.bind(this));
}.bind(this));
},
playBigAniOver: function() {
this.callBackAniOver && this.callBackAniOver();
},
calcTotalWinLoopTime: function(e) {
var t = Math.min(e / this.totalScore, 300), i = Math.pow(t, .7) - t / 50;
cc.log("times = " + t + " ,LoopTime = " + i);
return i;
},
EruptGold: function() {
var e = this, t = this.arryGodPool.get();
t.setPosition(cc.v2(Value_GetRandomInt(0, 100) - 50, -800 + Value_GetRandomInt(0, 100) - 50));
var i = .1 * Value_GetRandomInt(10, 13), n = Value_GetRandomInt(0, 360), a = Value_GetRandomInt(0, 360);
t.setScale(i, i);
t.angle = n;
t.rotation = a;
var o = Value_GetRandomInt(0, 1500) - 750, s = (o + t.x) / 2, r = [ t.getPosition(), cc.v2(s, 1e3 + Value_GetRandomInt(0, 1e3) + 100), cc.v2(o, -750) ];
t.runAction(cc.sequence(cc.bezierTo(1.5, r), cc.callFunc(function(t) {
t.removeFromParent();
e.arryGodPool.put(t);
}.bind(this))));
e.nodeGold.addChild(t);
},
playAudio: function(e, t) {
var i = this;
cc.loader.loadRes(e, cc.AudioClip, function(n, a) {
if (n) cc.warn(e + " is not found"); else switch (e) {
case "AGameHelp/audio/bigwin_end":
i.bigwin_end = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "AGameHelp/audio/bigwin_intro":
i.bigwin_intro = cc.audioEngine.play(a, t, window.mfConfig.fSound);
break;

case "AGameHelp/audio/bigwin_loop":
i.bigwin_loop = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

case "AGameHelp/audio/bigwin_loop_2":
i.bigwin_loop_2 = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
break;

case "AGameHelp/audio/bigwin_loop_3":
i.bigwin_loop_3 = cc.audioEngine.play(a, t, window.mfConfig.fMusic);
}
});
}
});
cc._RF.pop();
}, {} ],
jsBuoy: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "263f4u6wZlGLIGAoawVgFBZ", "jsBuoy");
cc.Class({
extends: cc.Component,
properties: {
bounsNode: cc.Node,
boxAni: cc.Node,
pfBuoyItem: cc.Node,
bodyNode: cc.Node,
activityIconSA: cc.SpriteAtlas,
hideBtn: cc.Node,
lightAni: cc.Node
},
start: function() {
this.bounsNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
this.bounsNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
this.bounsNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
this.bounsNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);
this.touchStartTime = 0;
this.startPosition = cc.v2(0, 0);
this.minYDistance = 200;
this.maxYDistance = 200;
this.timeThreshold = 5;
this.lastNodePosition = cc.v2(0, 0);
this.timer = 0;
this.isDragging = !1;
this.schedule(this.checkNodePositionChange, 1);
this.isLeftPos = !0;
this.updateData();
},
updateData: function() {
this.bodyNode.removeAllChildren();
this.hideBtn.active && (this.hideBtn.active = !1);
this.angleSpacing = 45;
var e = this.calcStartAngle();
this.buoyItem = [];
for (var t = 0; t < this.node.openKeys.length; t++) {
var i = this.node.openKeys[t], n = cc.instantiate(this.pfBuoyItem);
n.active = !0;
this.bodyNode.addChild(n);
n.getChildByName("enterBtn").getChildByName("ringBg").getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.activityIconSA.getSpriteFrame(i);
n.rotation = e + this.angleSpacing * (-1 + t);
n.getChildByName("enterBtn").rotation = -n.rotation;
this.buoyItem.push(n);
n.getChildByName("enterBtn").keys = i;
n.getChildByName("enterBtn").on("click", function(e) {
this.clickActiveButton(e.target.keys);
}.bind(this));
}
},
clickActiveButton: function(e) {
switch (e) {
case ChristmasOpen:
this.requestLuckyChristmasConfig();
break;

case LuckyPackOpen:
this.requestActivityRechagre();
break;

case VipOpen:
OnShowVip();
break;

case AskOpen:
OnShowQuestionnaire();
}
this.hideBodyEvent();
},
calcStartAngle: function() {
var e = this.node.openKeys.length;
return this.angleSpacing - (e - 1) * (this.angleSpacing / 2);
},
onTouchStart: function(e) {
this.touchStartTime = Date.now();
this.startPosition = e.getLocation();
this.isDragging = !0;
this.resetTimer();
this.boxAni.getComponent(sp.Skeleton).timeScale = 2;
},
onTouchMove: function(e) {
if (this.isDragging) {
this.hideBtn.active || (this.lightAni.active = !0);
var t = e.getLocation();
this.bounsNode.position = t;
var i = this.minYDistance, n = cc.winSize.height - this.maxYDistance;
this.bounsNode.y = cc.clampf(this.bounsNode.y, i, n);
this.resetTimer();
}
},
onTouchEnd: function(e) {
if (this.isDragging) {
this.adjustNodePosition();
this.isDragging = !1;
this.resetTimer();
var t = Date.now() - this.touchStartTime, i = e.getLocation(), n = cc.v2(i.x - this.startPosition.x, i.y - this.startPosition.y).mag();
if (t < 200 && n < 5) this.clickBuoy(); else if (this.hideBtn.active) return;
}
},
onTouchCancel: function() {
if (this.isDragging) {
this.adjustNodePosition();
this.isDragging = !1;
this.resetTimer();
}
},
clickBuoy: function() {
if (!GetProject().onlyLayer) if (this.hideBtn.active) this.hideBodyEvent(); else {
this.lightAni.active = !1;
PlaySkeletonAnimation(this.boxAni, !1, "start").setCompleteListener(function(e) {
"start" == e.animation.name && PlaySkeletonAnimation(this.boxAni, !1, "keep");
}.bind(this));
for (var e = 0; e < this.buoyItem.length; e++) this.buoyItem[e].runAction(cc.sequence(cc.scaleTo(.1, 1, 1), cc.callFunc(function(e) {
this.hideBtn.active || (this.hideBtn.active = !0);
}.bind(this))));
}
},
hideBodyEvent: function() {
this.lightAni.active = !0;
PlaySkeletonAnimation(this.boxAni, !1, "end").setCompleteListener(function(e) {
"end" == e.animation.name && PlaySkeletonAnimation(this.boxAni, !0, "idle");
}.bind(this));
for (var e = 0; e < this.buoyItem.length; e++) this.buoyItem[e].runAction(cc.sequence(cc.scaleTo(.1, 0, 0), cc.callFunc(function(e) {
this.hideBtn.active && (this.hideBtn.active = !1);
}.bind(this))));
},
adjustNodePosition: function() {
var e = cc.winSize.width, t = e / 2;
if (this.bounsNode.position.x < t) {
this.bounsNode.x = this.bounsNode.width / 2;
this.isLeftPos = !0;
} else {
this.bounsNode.x = e - this.bounsNode.width / 2;
this.isLeftPos = !1;
}
this.bodyNode.setScale(cc.v2(this.isLeftPos ? 1 : -1, 1));
for (var i = 0; i < this.buoyItem.length; i++) this.buoyItem[i].getChildByName("enterBtn").getChildByName("ringBg").setScale(cc.v2(this.isLeftPos ? 1 : -1, 1));
},
requestLuckyChristmasConfig: function() {
var e = this, t = GetProject().szChristmasConfigUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
if (t) {
if (200 == i.statusCode) {
cc.error(i);
switch (i.state) {
case 0:
case 3:
updateBuoyEntry(ChristmasOpen, !0);
break;

case 1:
case 2:
e.addLuckyChristmas(i.data, i.state);
}
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
},
addLuckyChristmas: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLuckyChristmas", function(i, n) {
if (!i) {
n.zIndex = 3;
n.getComponent("jsLuckyChristmas").setData(e, t);
}
});
},
requestActivityRechagre: function() {
var e = GetProject().szRechargeActivityQueryTaskUrl, t = USI_OnGetInfo(), i = "uid=" + t.dwUserID + "&sign=" + t.szSign;
HttpHelper.post_NotDecrypt(e, i, function(e, t) {
if (e) if (200 == t.statusCode) OnShowRechargeActivity(t); else {
ManagerHelp_SetSystemLabel(t.message);
updateBuoyEntry(LuckyPackOpen, !0);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
},
hideBuoy: function(e) {
this.isHideBuoy = e;
e ? this.bounsNode.runAction(cc.moveBy(.3, this.isLeftPos ? -200 : 200, 0)) : this.bounsNode.runAction(cc.moveBy(.3, this.isLeftPos ? 200 : -200, 0));
},
update: function(e) {
GetProject().onlyLayer && !this.isHideBuoy && this.hideBuoy(!0);
!GetProject().onlyLayer && this.isHideBuoy && this.hideBuoy(!1);
},
checkNodePositionChange: function() {
this.bounsNode.position.equals(this.lastNodePosition) ? this.rotateAndMoveOut() : this.lastNodePosition = this.bounsNode.position.clone();
},
resetTimer: function() {
this.timer = 0;
},
rotateAndMoveOut: function() {
this.timer += 1;
if (this.timer >= this.timeThreshold && this.lightAni.active && !this.isHideBuoy) {
this.lightAni.active = !1;
var e = cc.rotateBy(.3, 360), t = cc.moveTo(.3, cc.v2(this.isLeftPos ? 0 : cc.winSize.width, this.bounsNode.y)), i = cc.spawn(e, t);
this.bounsNode.runAction(i);
this.resetTimer();
this.boxAni.getComponent(sp.Skeleton).timeScale = .5;
this.lastNodePosition = this.bounsNode.position.clone();
}
}
});
cc._RF.pop();
}, {} ],
jsButtonItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "283b2ANNkVB/68cZqu1q2Mn", "jsButtonItem");
cc.Class({
extends: cc.Component,
properties: {
nodeTarget: cc.Node,
nActionRemoveType: 0,
markForNode: 0
},
OnButtonClick: null,
OnRemoveCallBack: null,
onDisable: function() {
this.btnNode && (this.btnNode = void 0);
},
SetButtonClick: function(e) {
this.OnButtonClick = e;
},
SetRemoveCallBack: function(e) {
this.OnRemoveCallBack = e;
},
OnButtonEvent: function(e) {
var t = e.target;
this.btnNode = t;
var i = 2 == arguments.length ? arguments[1] : 0;
OnBtnClickAgainEvent(e.target);
this.OnButtonClick && this.OnButtonClick(this, i);
},
OnButtonRemoveTarget: function(e, t) {
this.OnRemoveCallBack && this.OnRemoveCallBack();
if (this.nodeTarget && "undefined" != typeof this.nodeTarget) {
this.nodeTarget.removeFromParent();
this.nodeTarget = null;
}
},
OnButtonActiveFalseTarget: function() {
SceneManager_AlertClose(this.nodeTarget, window.SceneType.fSpeed, function(e) {
e && "undefined" != typeof e && (e.active = !1);
});
},
OnButtonActiveTrueTarget: function() {
this.nodeTarget && "undefined" != typeof this.nodeTarget && (this.nodeTarget.active = !0);
},
OnButtonActiveTarget: function() {
this.nodeTarget && "undefined" != typeof this.nodeTarget && (this.nodeTarget.active = !this.nodeTarget.active);
},
onLoad: function() {}
});
cc._RF.pop();
}, {} ],
jsButton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "893b7ZdKihG66HHwCk8ePTK", "jsButton");
cc.Class({
extends: cc.Button,
properties: {
mClickEvents: [ cc.Component.EventHandler ],
isTouch: !1,
isScale: !1,
isColor: !1
},
onLoad: function() {},
start: function() {
var e = this;
e.tagScale = e.node.scale;
e.node.on("touchstart", function(t) {
if (this.isTouch) {
e.isScale && (e.node.scale = .95 * e.tagScale);
e.isColor && (e.node.color = cc.color(125, 125, 125));
}
}, e);
e.node.on("touchend", function(t) {
if (this.isTouch) {
e.isScale && (e.node.scale = 1 * e.tagScale);
e.isColor && (e.node.color = cc.color(255, 255, 255));
var i = {
target: e.node
};
cc.Component.EventHandler.emitEvents(e.mClickEvents, i);
}
}, e);
e.node.on("touchcancel", function(t) {
if (this.isTouch) {
e.isScale && (e.node.scale = 1 * e.tagScale);
e.isColor && (e.node.color = cc.color(255, 255, 255));
}
}, e);
}
});
cc._RF.pop();
}, {} ],
jsCanvasDesignResolution: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d595HxgRtA9p+H/T2kV4RI", "jsCanvasDesignResolution");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
wGameWidth: 0,
wGameHeight: 0,
wScreenDir: 0
},
onLoad: function() {
if (cc.sys.isBrowser && "Windows" != cc.sys.os && "OS X" != cc.sys.os) {
cc.view.setDesignResolutionSize(this.wGameWidth, this.wGameHeight, cc.ResolutionPolicy.EXACT_FIT);
this.wGameHeight > this.wGameWidth ? cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT) : cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
cc.view._orientationChange();
} else if ("wechatgame" == cc.sys.browserType) {
this.OnRotationFrame();
cc.view.setDesignResolutionSize(this.wGameWidth, this.wGameHeight, cc.ResolutionPolicy.EXACT_FIT);
this.wGameHeight > this.wGameWidth ? cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT) : cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
cc.view._orientationChange();
} else {
if (0 == this.wGameWidth) {
this.wGameWidth = 1920;
this.wGameHeight = 1080;
this.wScreenDir = window.mfConfig.ScreenHomeRight;
}
window.mfConfig.SetDesignResolutionSize(this.wGameWidth, this.wGameHeight);
}
cc.sys.platform == cc.sys.ANDROID && cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
},
onDestroy: function() {
cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
},
onKeyDown: function(e) {
switch (e.keyCode) {
case cc.KEY.back:
var t = cc.director.getScene();
if (!t) return;
var i = t.getChildByName("Canvas");
if (!i) return;
var n = i.getChildByName("pfCustomer");
n && n.removeFromParent();
GameFrameEngine.instances ? GameFrameEngine.instances.SendPacketStandUp() : ManagerHelp_SetSystemAlert("Are you sure you don't want to play a little more?", function(e, t) {
t == YQ_SYS_OK && window.mfConfig.OnCloseApp();
}, !0);
}
},
OnRotationFrame: function() {
window.H5_Evnet.bRotation = !1;
if (this.nodeContent) {
window.H5_Evnet.bRotation = !0;
var e = cc.director.getScene();
if (!e) {
cc.warn(" OnRotationFrame_Scene is null");
return;
}
var t = e.getChildByName("Canvas");
if (!t) {
cc.warn("OnRotationFrame_canvas is null");
return;
}
t.rotation = 90;
this.wGameWidth = 1080;
this.wGameHeight = 1920;
}
}
});
cc._RF.pop();
}, {} ],
jsCompetitionItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "42bd55vBCVNIo5KFpZdbA/3", "jsCompetitionItem");
cc.Class({
extends: cc.Component,
properties: {
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite,
spResult: cc.Sprite,
labelResult: cc.Label,
labelGameID: cc.Label,
labelAccount: cc.Label,
labelTotalComm: cc.Label,
resPngNo: [ cc.SpriteFrame ]
},
OnSetListData: function(e) {
var t = -1, i = 0, n = 0, a = 0, o = "", s = 0;
if (null != e && null != e) {
t = e.TopId - 1;
i = e.FaceID;
n = e.CustomFaceVer;
a = e.GameID;
o = e.NickName;
s = e.SumAward;
}
var r = this.spResult.node, c = this.labelResult.node;
if (t >= 0 && t < 3) {
r.active = !0;
c.active = !1;
this.spResult.spriteFrame = this.resPngNo[t];
} else if (t < 0) {
r.active = !1;
c.active = !0;
this.labelResult.string = "Not on the list";
} else if (t >= 3) {
r.active = !1;
c.active = !0;
this.labelResult.string = "" + (t + 1);
}
this.SetHeadSpriteFrame(i, n);
this.labelGameID.string = "ID:" + a;
this.labelAccount.string = o;
this.labelTotalComm.string = OnScoreToString(s);
},
SetHeadSpriteFrame: function(e, t) {
var i = this, n = "common/UserHead/Head_" + e;
cc.loader.loadRes(n, cc.SpriteFrame, function(e, t) {
e || i.spUserHead && (i.spUserHead.spriteFrame = t);
});
var a = "common/HeadFrame/Frame_" + t;
cc.loader.loadRes(a, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
}
});
cc._RF.pop();
}, {} ],
jsControlActivity: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "12703bPUZFDF5wjBTIAIP0u", "jsControlActivity");
cc.Class({
extends: cc.Component,
properties: {
nodeLeftButton: cc.Node,
pfLeftButtonItem: cc.Node,
nodeTopBtn: cc.Node,
nodeTopSelect: cc.Node,
nodeTopButton: [ cc.Node ],
ImgNotice: cc.Node,
lblNitice: cc.Node,
tgPopNotice: cc.Toggle,
nodeLinkBtn: cc.Node,
luckCodePanelNode: cc.Node,
luckCodeInput: cc.EditBox
},
onLoad: function() {
SceneManager_AlertShow(this.node);
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetPopHelper().GetOnePopup();
});
this.tgPopNotice.isChecked = 1 != GetProject().cbPopNotice;
this.clickLeft = 0;
this.clickTop = 0;
this.activityInfo = null;
this.requestActivityInfo();
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
AddXmasPrefab(cc.find("nodeLogon", this.luckCodePanelNode));
},
requestActivityInfo: function() {
var e = this, t = GetProject().szActivityUrl, i = USI_OnGetInfo(), n = t + "?uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(n, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
cc.log(n);
e.activityInfo = n.data;
e.showActivityInfo();
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showActivityInfo: function() {
var e = this;
this.nodeTopBtn.active = !0;
var t = this.activityInfo.length;
for (i = 0; i < t; i++) {
var n = cc.instantiate(this.pfLeftButtonItem);
n.active = !0;
this.nodeLeftButton.addChild(n);
var a = this.activityInfo[i], o = cc.find("imgSelect", n), s = cc.find("imgNormal", n), r = cc.find("Label", o), c = cc.find("Label", s);
if (0 == i) {
o.active = !0;
s.active = !1;
r.getComponent(cc.Label).string = a.Title;
c.getComponent(cc.Label).string = a.Title;
} else {
o.active = !1;
s.active = !0;
r.getComponent(cc.Label).string = a.Title;
c.getComponent(cc.Label).string = a.Title;
}
n._index = i;
n.on("click", function(t) {
e.clickLeftButton(t.target._index);
});
}
this.showTopInfo(0);
this.initSpriteNotice();
},
showTopInfo: function(e) {
var t = this.activityInfo[e];
if (null != t) {
for (var i = t.Children.length, n = 0; n < 3; n++) this.nodeTopButton[n].active = !1;
for (var a = 0; a < i; a++) this.nodeTopButton[a].active = !0;
for (var o = 0; o < i; o++) {
var s = this.nodeTopButton[o], r = cc.find("Label0", s), c = cc.find("Label1", s);
if (0 == o) {
r.active = !0;
c.active = !1;
} else {
r.active = !1;
c.active = !0;
}
r.getComponent(cc.Label).string = t.Children[o].Title;
c.getComponent(cc.Label).string = t.Children[o].Title;
}
}
},
clickLeftButton: function(e) {
if (e != this.clickLeft) {
this.clickTop = 0;
this.clickLeft = e;
var t = this.nodeLeftButton.children, n = this.nodeLeftButton.childrenCount;
for (i = 0; i < n; i++) {
var a = t[i], o = cc.find("imgSelect", a), s = cc.find("imgNormal", a);
if (e == i) {
o.active = !0;
s.active = !1;
} else {
o.active = !1;
s.active = !0;
}
}
this.nodeTopSelect.x = this.nodeTopButton[0].x;
this.showTopInfo(e);
this.initSpriteNotice();
}
},
clickTopButton: function(e) {
if (e != this.clickTop) {
this.clickTop = e;
var t = this.activityInfo[this.clickLeft].Children.length;
for (i = 0; i < t; i++) {
var n = this.nodeTopButton[i], a = cc.find("Label0", n), o = cc.find("Label1", n);
if (i == e) {
a.active = !0;
o.active = !1;
} else {
a.active = !1;
o.active = !0;
}
}
this.initSpriteNotice();
}
},
initSpriteNotice: function() {
var e = this, t = this.activityInfo[this.clickLeft].Children[this.clickTop], i = t.Contents, n = t.Describe, a = t.ImageURL, o = t.Title;
if ("" != a && "" == i) cc.loader.load(a, function(t, i) {
e.ImgNotice.active = !0;
e.lblNitice.active = !1;
var a = new cc.SpriteFrame(i);
e.ImgNotice.getComponent(cc.Sprite).spriteFrame = a;
e.nodeLinkBtn.active = "Join Group" == o;
e.ImgNotice.getComponent(cc.Button).clickEvents[0].customEventData = n;
}); else if ("" == a && "" != i) {
this.ImgNotice.active = !1;
this.lblNitice.active = !0;
this.lblNitice.getComponent(cc.Label).string = i;
}
},
OnButtonClick: function(e, t) {
"FREE COIN" == t && this.OnShowLuckCodePanel();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if (0 == i.indexOf("btnTop")) {
var n = parseInt(t);
this.nodeTopSelect.x = this.nodeTopButton[n].x;
this.clickTopButton(n);
} else "btnYouTube" == i ? cc.sys.openURL("https://www.youtube.com/@phoenixgameofficial5934") : "btnFacebook" == i ? cc.sys.openURL("https://www.facebook.com/groups/558430848479650/members") : "btnTelegram" == i && cc.sys.openURL("https://t.me/+gTbmf6Uhwc9jNmJl");
},
OnPopNoticeValueChanged: function(e, t) {
var i = e.isChecked ? 0 : 1;
cc.log("改变 toggle 状态 cbpop = " + i + "GetProject().cbPopNotice = " + GetProject().cbPopNotice);
cc.sys.localStorage.setItem("cbPopNoticeCheck", i);
GetProject().cbPopNotice = i;
},
OnShowLuckCodePanel: function() {
this.luckCodePanelNode.active = !0;
},
OnHideLuckCodePanel: function() {
this.luckCodePanelNode.active = !1;
},
OnLuckCodeExchange: function() {
var e = this;
if ("" != this.luckCodeInput.string && null != this.luckCodeInput.string) {
var t, i = USI_OnGetInfo(), n = GetProject().exchangeUrl, a = this.luckCodeInput.string;
t = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&code=" + a;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(n, t, function(t, i) {
if (t) {
ManagerHelp_SetSystemAlert(i.message);
if (200 == i.statusCode) {
var n = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(n.GetUserID());
e.OnHideLuckCodePanel();
}
} else ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
} else ManagerHelp_SetSystemLabel("please enter your luck code");
}
});
cc._RF.pop();
}, {} ],
jsControlBankTakePw: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d3a69I9pHZP75phaLnY3d+u", "jsControlBankTakePw");
cc.Class({
extends: cc.Component,
properties: {
ebBankPassword: cc.EditBox,
pfResetPassword: cc.Prefab,
lShowTakeScore: 0
},
OnChangePassword: null,
Init: function(e) {
SceneManager_AlertShow(this.node);
this.lShowTakeScore = e;
},
OnBtnChangePassword: function(e, t) {
this.OnChangePassword && this.OnChangePassword();
},
OnCommitBank: function() {
var e = this.ebBankPassword.string;
if ("" != e && null != e && null != e) {
var t = GetProject().lBaseScore;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetMissionLogon().OnSocketDrawCoin(this.lShowTakeScore * t, this.ebBankPassword.string);
this.node.removeFromParent();
} else ManagerHelp_SetSystemLabel("密码不能为空！");
}
});
cc._RF.pop();
}, {} ],
jsControlBank: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "03901bPlbpMZpehCGCjKQlE", "jsControlBank");
var n = e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
edSaveMoney: cc.EditBox,
edTakeMoney: cc.EditBox,
labelCurMoney: cc.Label,
labelBankDeposite: cc.Label,
SaveSlider: cc.Slider,
TakeSlider: cc.Slider,
SaveProgressBar: cc.ProgressBar,
TakedProgressBar: cc.ProgressBar,
pfBankPassword: cc.Prefab,
pfResetPassword: cc.Prefab,
pfRegister: cc.Prefab
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().SetBankInterface(this);
this.OnSocketSubGPInsureInfo();
GetMissionLogon().SendPacketInsureInfo();
this.lBaseScore = GetProject().lBaseScore;
},
onDestroy: function() {
GetMissionLogon().SetBankInterface(null);
},
OnSliderEventByChange: function(e, t) {
var i = PlayerManager.GetMeUserItem();
if (0 == t) {
var n = parseInt(i.GetUserScore()), a = this.SaveSlider.progress;
this.SaveProgressBar.progress = a;
var o = parseInt(n * a / this.lBaseScore);
this.edSaveMoney.string = 0 == o ? 0 : OnIntScore(o * this.lBaseScore);
} else if (1 == t) {
var s = parseInt(i.GetUserInsure()), r = this.TakeSlider.progress;
this.TakedProgressBar.progress = r;
var c = parseInt(s * r / this.lBaseScore);
this.edTakeMoney.string = 0 == c ? 0 : OnIntScore(c * this.lBaseScore);
}
},
OnEditChanged: function(e, t, i) {},
OnEditEnded: function(e, t) {
if (0 != e.string.length) if (IsNumber(e.string)) {
var i = parseInt(e.string);
if (0 == t) {
var n = parseInt(this.labelCurMoney.string);
if (i >= n) {
i = n;
e.string = OnIntScore(i * this.lBaseScore);
}
var a = i * this.lBaseScore;
e.string = 0 == i ? 0 : OnIntScore(a);
this.SaveProgressBar.progress = 0 == n ? 0 : i / n;
this.SaveSlider.progress = this.SaveProgressBar.progress;
} else if (1 == t) {
var o = parseInt(this.labelBankDeposite.string);
if (i >= o) {
i = o;
e.string = OnIntScore(i * this.lBaseScore);
}
var s = i * this.lBaseScore;
e.string = 0 == i ? 0 : OnIntScore(s);
this.TakedProgressBar.progress = 0 == o ? 0 : i / o;
this.TakeSlider.progress = this.TakedProgressBar.progress;
}
} else ManagerHelp_SetSystemLabel("格式异常，请检查输入金额");
},
OnBankOperate: function(e, t) {
switch (parseInt(t)) {
case 0:
var i = parseInt(this.edSaveMoney.string);
if (isNaN(i) || i <= 0) {
ManagerHelp_SetSystemLabel("请输入存款金额！");
return;
}
if (i > parseInt(this.labelCurMoney.string)) {
ManagerHelp_SetSystemLabel("存入金额过大，请检查金额！");
return;
}
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetMissionLogon().OnSocketDepositCoin(i * this.lBaseScore);
return;

case 1:
var n = parseInt(this.edTakeMoney.string);
if (isNaN(n) || n <= 0) {
ManagerHelp_SetSystemLabel("请输入正确的金额");
return;
}
if (n > parseInt(this.labelBankDeposite.string)) {
ManagerHelp_SetSystemLabel("取款金额过大，请检查金额！");
return;
}
this.OnBtnCommitPassword();
return;
}
},
OnBtnCommitPassword: function(e, t) {
var i = this;
SceneManager_PushBack(SceneType.Prefab_Init, this.pfBankPassword, function(e, t) {
if (!e) {
t.zIndex = 3;
var n = t.getComponent("jsControlBankTakePw");
n.Init(parseInt(i.edTakeMoney.string));
n.OnChangePassword = i.OnBtnResetPassword.bind(i);
}
});
},
OnBtnResetPassword: function(e, t) {
var i = GetProject().GetRegister(), n = this;
i ? SceneManager_PushBack(SceneType.Prefab_Init, this.pfResetPassword, function(e, t) {
if (!e) {
t.zIndex = 3;
var i = t.getComponent("jsControlShouJiLogon");
i.OnShowForgetPassWord(PWD_TYPE_BANK);
i.OnShowPhoneNumber();
}
}) : ManagerHelp_SetSystemAlert("请先注册为正式账号后再重置密码！", function(e, t) {
window.YQ_SYS_OK == t && SceneManager_PushBack(SceneType.Prefab_Init, n.pfRegister, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlPersionalInformation").OnShowRegisterLayer();
}
});
}, !0, window.BTN_CLOSE);
},
OnMaxBtnEvent: function(e, t) {
var i = parseInt(t);
if (0 == i) {
this.edSaveMoney.string = parseInt(this.labelCurMoney.string);
this.SaveSlider.progress = 1;
this.SaveProgressBar.progress = 1;
} else if (1 == i) {
var n = parseInt(this.labelBankDeposite.string);
if (0 == n) {
ManagerHelp_SetSystemAlert("The current deposit is 0");
return;
}
this.edTakeMoney.string = n;
var a = 0;
this.edTakeMoney.string > 0 && (a = 1);
this.TakeSlider.progress = a;
this.TakedProgressBar.progress = a;
}
},
OnClearBtnEvent: function(e, t) {
var i = parseInt(t);
if (0 == i) {
this.edSaveMoney.string = "";
this.SaveSlider.progress = 0;
this.SaveProgressBar.progress = 0;
} else if (1 == i) {
this.edTakeMoney.string = "";
this.TakeSlider.progress = 0;
this.TakedProgressBar.progress = 0;
}
},
OnInputPassWordCallback: function(e) {
if (isNaN(e)) return !1;
var t = parseInt(this.edMoney.string);
GetMissionLogon().OnSocketDrawCoin(t, e);
return !0;
},
OnSocketSubGPInsureInfo: function(e, t) {
var i = PlayerManager.GetMeUserItem();
this.labelCurMoney.string = OnScoreToString(i.GetUserScore());
this.labelBankDeposite.string = OnScoreToString(i.GetUserInsure());
return !0;
},
OnSocketSubGPBankSucceed: function(e, t) {
ManagerHelp_SetSystemLabel("操作成功");
this.OnSocketSubGPInsureInfo();
n.self && n.self.UpdateUserDataItem();
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return !0;
},
OnSocketSubGPBankFailure: function(e, t, i) {
var n = ToUtf8(i.szDescribeString);
ManagerHelp_SetSystemAlert(n);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return !0;
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsControlCheckInItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "94c2bRMfy5JIpEKQmEotaUC", "jsControlCheckInItem");
cc.Class({
extends: cc.Component,
properties: {
iconSA: cc.SpriteAtlas,
awardIcon: cc.Sprite,
frame_bg: cc.Sprite,
frame_bgFrame: [ cc.SpriteFrame ],
dayLab: cc.Label,
awardCount: cc.Label,
signedNode: cc.Node,
checkInAni: sp.Skeleton
},
setData: function(e, t, i, n) {
this.dayLab.string = "Day" + n.ItemIndex;
this.awardCount.string = n.ItemCount / 1e3;
this.signedNode.active = t >= n.ItemIndex;
var a = 7 == n.ItemIndex, o = e == n.ItemIndex;
this.manageLabColorAndBg(a, o);
this.awardIcon.spriteFrame = this.iconSA.getSpriteFrame(n.IconID);
},
manageLabColorAndBg: function(e, t) {
var i = "#7C4000", n = "#A35A00", a = "#D89A3F", o = 0;
if (e) if (t) {
i = "#A35A00";
n = "#A03100";
a = "#f6b74c";
o = 3;
} else {
i = "#8A3000";
n = "#913300";
a = "#e18451";
o = 2;
} else if (t) {
i = "#A35A00";
n = "#A03100";
a = "#f6b74c";
o = 1;
} else {
i = "#7C4000";
n = "#7c4000";
a = "#d89a3f";
o = 0;
}
this.dayLab.node.color = cc.hexToColor(i);
this.awardCount.node.color = cc.hexToColor(n);
this.awardCount.node.getComponent(cc.LabelOutline).color = cc.hexToColor(a);
this.frame_bg.spriteFrame = this.frame_bgFrame[o];
},
playCheckInAni: function() {
this.checkInAni.node.active = !0;
window.mfConfig.PlayAudio("GameLobby/Audio/tick", !1);
PlaySkeletonAnimation(this.checkInAni, !1, "start").setCompleteListener(function() {
PlaySkeletonAnimation(this.checkInAni, !1, "keep");
}.bind(this));
}
});
cc._RF.pop();
}, {} ],
jsControlCheckIn: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "732d7KPZGFNgbnN/au/PbxJ", "jsControlCheckIn");
cc.Class({
extends: cc.Component,
properties: {
bodyNode: cc.Node,
checkInItem: cc.Node,
receiveBtn: cc.Node,
piaoJinBiAni: sp.Skeleton,
pfGameEndScore: cc.Prefab,
showScoreNode: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
start: function() {
this.sendCheckInCf();
},
sendCheckInCf: function() {
var e = this, t = USI_OnGetInfo(), i = "&uid=" + t.dwUserID + "&sign=" + t.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szCheckInInfoUrl, i, function(t, i) {
cc.log(i);
t && 200 == i.statusCode ? e.setData(i) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
setData: function(e) {
if (null != e) {
this.curDay = 1;
e.IsCheck ? this.curDay = e.LxCount : this.curDay = e.LxCount + 1;
this.curDayAwardCount = 0;
this.receiveBtn.active = 0 == e.IsCheck;
this.itemArr = [];
for (var t = 0; t < e.checkInConfig.length && t < 7; t++) {
var i = cc.instantiate(this.checkInItem);
i.active = !0;
this.bodyNode.addChild(i);
e.checkInConfig[t].ItemIndex == this.curDay && 0 == this.curDayAwardCount && (this.curDayAwardCount = e.checkInConfig[t].ItemCount / 1e3);
i.getComponent("jsControlCheckInItem").setData(this.curDay, e.LxCount, e.IsCheck, e.checkInConfig[t]);
this.itemArr.push(i);
}
}
},
onBtnEvent: function(e, t) {
"receiveBtn" == e.target.name && this.sendReceive();
},
sendReceive: function() {
var e = USI_OnGetInfo(), t = "&uid=" + e.dwUserID + "&sign=" + e.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szGameCheckInUrl, t, function(e, t) {
cc.log(t);
if (e) if (200 == t.statusCode) {
this.receiveBtn.active = !1;
this.itemArr[this.curDay - 1].getComponent("jsControlCheckInItem").playCheckInAni();
this.OnShowGameScore(1e3 * this.curDayAwardCount);
this.piaoJinBiAni.node.active = !0;
var i = this.curDayAwardCount <= 1 ? 1 : 2;
window.mfConfig.PlayAudio("GameLobby/Audio/getCoins", !1);
PlaySkeletonAnimation(this.piaoJinBiAni, !1, "" + i).setCompleteListener(function() {
GetMissionLogon().SendPacketInsureInfo();
}.bind(this));
} else ManagerHelp_SetSystemLabel(t.message); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}.bind(this), window.fHttpTimeOut);
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore);
t.scale = 1.5;
var i = t.getComponent("jsGameEndScore");
this.showScoreNode.addChild(t);
i.InitGameScore(e, 1, function() {
t.removeFromParent();
});
}
});
cc._RF.pop();
}, {} ],
jsControlCommissionEEX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1b69lba9JMMpTiGDdGxSzD", "jsControlCommissionEEX");
e("jsControlLobby");
var n = cc.color(142, 101, 37), a = cc.color(102, 100, 96);
cc.Class({
extends: cc.Component,
properties: {
AllSpriteBgList: [ cc.Node ],
BtnSelectStatusList: [ cc.Node ],
CommThisWeekScrollView: cc.ScrollView,
CommThisWeekContent: cc.Node,
pfZhouBanItem: cc.Prefab,
lszjlLabel: cc.Label,
ktqjlLabel: cc.Label,
labelMaxAndMinTip: cc.RichText,
AmountEditBox: cc.EditBox,
LabelBindGcash: cc.Label,
pfBindAccount: cc.Prefab,
myLinkUrlLabel: cc.Label,
myInviteCodeLabel: cc.Label,
SuperiorsIDEditBox: cc.EditBox,
SuperiorsIDLabel: cc.Label,
SuperiorsIDBangDing: cc.Node,
pfExtractRecordItem: cc.Prefab,
pfSevenCommissionRecordItem: cc.Prefab,
erCodeUrl: null,
nodeAdvertisPage: cc.Node,
nodeDesLayer: cc.Node
},
GcashAccount: null,
onLoad: function() {
this.GcashAccount = "";
this.dwMaxmumSpreadAward = 0;
this.dwMinmumSpreadAward = 0;
this.dwReservedNumScore = 0;
this.lBaseScore = GetProject().lBaseScore;
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
this.OnTitleBtnClick(null, 0);
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
start: function() {},
onDestroy: function() {
this.GcashAccount = "";
GetMissionLogon().setInformationface(null);
},
OnPageClick: function(e, t) {
this.nodeDesLayer.active = !0;
if (0 == t) {
this.nodeDesLayer.getChildByName("conentBg").getChildByName("AgentDetails").active = !0;
this.nodeDesLayer.getChildByName("conentBg").getChildByName("AgentMode").active = !1;
} else if (1 == t) {
this.nodeDesLayer.getChildByName("conentBg").getChildByName("AgentDetails").active = !1;
this.nodeDesLayer.getChildByName("conentBg").getChildByName("AgentMode").active = !0;
}
},
OnTitleBtnClick: function(e, t) {
for (var i = 0; i < this.BtnSelectStatusList.length; i++) {
this.BtnSelectStatusList[i].getChildByName("imgSelect").active = !1;
this.BtnSelectStatusList[i].getChildByName("imgNormal").active = !0;
this.AllSpriteBgList[i].active = t == i;
}
this.BtnSelectStatusList[t].getChildByName("imgSelect").active = !0;
this.BtnSelectStatusList[t].getChildByName("imgNormal").active = !1;
var n = this.nodeAdvertisPage.getComponent(cc.PageView);
n.scrollToPage(n.getCurrentPageIndex());
this.unscheduleAllCallbacks();
if (0 == t) {
this.requestGcashNum();
this.requestLinkUrl();
this.requestCommDatas();
this.OnInitInvitationCodeView();
} else 1 == t ? this.schedule(function() {
var e = n.getPages().length, t = n.getCurrentPageIndex();
t = t + 1 >= e ? 0 : t + 1;
n.scrollToPage(t, 2);
}, 5) : 2 == t && this.requestLastSevenDayDatas();
},
requestLinkUrl: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().commissionUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&typeid=0";
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data;
e.erCodeUrl = n.apis.qrcode;
e.myLinkUrlLabel.string = e.erCodeUrl;
} else ManagerHelp_SetSystemLabel(i.message);
}, 15e3);
},
requestCommDatas: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().commissionUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&typeid=1";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data.statistics;
if (n) for (var a = 0; a < n.length; a++) 0 == n[a].typeid ? e.lszjlLabel.string = "" + Number.parseFloat(n[a].benefits).toFixed(2) : 5 == n[a].typeid ? e.ktqjlLabel.string = "" + Number.parseFloat(n[a].benefits).toFixed(2) : 6 == n[a].typeid || 1 == n[a].typeid || 2 == n[a].typeid || 4 == n[a].typeid || n[a].typeid;
} else ManagerHelp_SetSystemLabel(i.message);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, 15e3);
},
requestLastSevenDayDatas: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().commissionUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&typeid=3";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data.Ranking;
e.displayTuiGuangZhouBan(n);
} else ManagerHelp_SetSystemLabel(i.message);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, 15e3);
},
OnClickBtnEvent: function(e, t) {
var i = e.target.name;
"Dis_exchange_btn" == i && this.handleExchangeOrWithdraw(0, e);
"Dis_withdraw_btn" == i && this.handleExchangeOrWithdraw(1, e);
if ("copyurl_btn" == i) if (null == this.erCodeUrl) ManagerHelp_SetSystemLabel("The QR code address is empty！"); else {
window.mfConfig.setText(this.erCodeUrl);
ManagerHelp_SetSystemLabel("QR code address copied successfully！");
}
if ("copyInviteCode_btn" == i) {
window.mfConfig.setText(this.myInviteCodeLabel.string);
ManagerHelp_SetSystemLabel("InviteCode copied successfully！");
}
"exchangeRecord_btn" == i && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLingquRecord", function(e, t) {
if (!e) {
t.zIndex = 3;
var i = t.getComponent("jsExLingquRecord");
i && i.SetUserDataItem(0);
}
});
"withdrawRecord_btn" == i && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfWithdrawRecord", function(e, t) {
if (!e) {
t.zIndex = 3;
var i = t.getComponent("jsWithdrawRecord");
if (i) {
i.SetTypeValue(1);
i.requestRecordInfo();
}
}
});
"gotoDetails_btn" == i && this.OnTitleBtnClick(null, 1);
},
handleExchangeOrWithdraw: function(e, t) {
var i = this;
if (IsNumber(i.AmountEditBox.string)) {
var n = Number(i.AmountEditBox.string);
if (n <= 0) {
ManagerHelp_SetSystemLabel("Please enter a positive integer, please check and enter again!");
i.AmountEditBox.string = "";
} else if (n % 1 == 0) {
if (0 == e) {
var a = USI_OnGetInfo(), o = GetProject().extractCommissionUrl, s = "uid=" + a.dwUserID + "&sign=" + a.szSign + "&amount=" + n + "&typeId=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(o, s, function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemLabel("" + t.message);
200 == t.statusCode && (i.ktqjlLabel.string = "" + t.data);
}, window.fHttpTimeOut);
this.buttonDelayClick(t);
} else if (1 == e) {
if ("" == this.GcashAccount) {
this.OnShowSaveGcashInfoPrefab();
return;
}
var r = parseInt(this.AmountEditBox.string), c = USI_OnGetInfo(), l = "channelid=" + PlayerManager.GetMeUserItem().GetRegChannelID(), h = GetProject().GetDeviceType(), u = ServerData_GetLocaHallVersion();
l += "&uid=" + c.dwUserID + "&amount=" + r + "&sign=" + c.szSign + "&Model=" + h + "&ver=" + u + "&SourceType=1";
var d = GetProject().szWithdrawUrl, m = i.ktqjlLabel.string - i.AmountEditBox.string;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(d, l, function(e, t) {
if (e) {
var n = "";
if (200 == t.statusCode) {
n = "apply successfully";
i.ktqjlLabel.string = m.toFixed(2);
i.AmountEditBox.string = 0;
} else n = t.message;
ManagerHelp_SetSystemAlert(n);
}
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
this.buttonDelayClick(t);
}
} else {
ManagerHelp_SetSystemLabel("Please enter a positive integer, please check and enter again!");
i.AmountEditBox.string = "";
}
} else {
ManagerHelp_SetSystemLabel("Format abnormal, please check the input amount");
i.AmountEditBox.string = "";
}
},
buttonDelayClick: function(e) {
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
t.getChildByName("New Label");
this.scheduleOnce(function() {
t.getComponent(cc.Button).interactable = !0;
}, 5);
},
setQRCode: function(e) {},
closeMaxErCodeImage: function() {},
displayTuiGuangZhouBan: function(e) {
if (null != e && null != e) {
this.CommThisWeekContent.removeAllChildren();
this.CommThisWeekScrollView.stopAutoScroll();
this.CommThisWeekScrollView.scrollToTop(.1);
for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.pfZhouBanItem), n = i.getComponent("jsExCommisItem");
this.CommThisWeekContent.addChild(i);
n.labelDate.string = "" + e[t].CollectDate;
n.labelNumComm.string = "" + OnScoreToString(e[t].BindAndPayAward, 2);
n.labelBetComm.string = "" + OnScoreToString(e[t].Amount, 2);
n.labelTotalComm.string = "" + OnScoreToString(e[t].TotalAward, 2);
}
}
},
onOpenQRCode: function(e) {},
OnInitInvitationCodeView: function() {
var e = PlayerManager.GetMeUserItem();
this.myInviteCodeLabel.string = "" + e.GetGameID();
var t = e.GetUpSpreadID(), i = this.SuperiorsIDBangDing.getComponent(cc.Button), o = this.SuperiorsIDBangDing.getChildByName("New Label");
if (0 == t) {
this.SuperiorsIDEditBox.string = "";
this.SuperiorsIDEditBox.node.active = !0;
this.SuperiorsIDLabel.string = "";
if (i) {
i.interactable = !0;
o && (o.getComponent(cc.LabelOutline).color = n);
}
} else {
this.SuperiorsIDEditBox.string = "" + t;
this.SuperiorsIDEditBox.node.active = !1;
this.SuperiorsIDLabel.string = "" + t;
if (i) {
i.interactable = !1;
o && (o.getComponent(cc.LabelOutline).color = a);
}
}
},
OnButtonBindClick: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = this.SuperiorsIDEditBox.getComponent(cc.EditBox);
if (i) {
var n = parseInt(i.string);
if (n && 0 != n) {
PlayerManager.GetMeUserItem().SetUpSpreadID(n);
GetMissionLogon().SendPacketModifyIndividualEx();
} else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemLabel("Incorrect invitation code, please try again！");
}
}
},
OnOperSuccess: function(e, t) {
e == MDM_GP_USER_SERVICE && t == SUB_GP_MODIFY_INDIVIDUAL && this.OnInitInvitationCodeView();
},
OnOperFailure: function(e, t, i) {
e == MDM_GP_USER_SERVICE && t == SUB_GP_MODIFY_INDIVIDUAL && ManagerHelp_SetSystemAlert(i);
},
requestGcashNum: function() {
var e = this, t = [];
GetMissionLogon().SendQueryBindInfo(function(i, n) {
if (null != i) t[i] = n; else if (null == i) {
e.LabelBindGcash.string = "";
var a = t[DTP_GP_UI_ALIPAY];
if (null != a && null != a) {
e.LabelBindGcash.string = "Bound Gcash Account: " + ToUtf8(a);
e.GcashAccount = ToUtf8(a);
} else {
e.LabelBindGcash.string = "No bound Gcash account";
e.GcashAccount = "";
}
e.labelMaxAndMinTip.string = "";
var o = t[DTP_GP_UI_EXCHANGE_LIMIT];
if (null != o) {
e.dwMaxmumSpreadAward = o.dwMaxmumSpreadAward / e.lBaseScore;
e.dwMinmumSpreadAward = o.dwMinmumSpreadAward / e.lBaseScore;
e.dwReservedNumSpreadAward = o.dwReservedNumSpreadAward / e.lBaseScore;
e.labelMaxAndMinTip.string = "<color=#97967E>* The withdrawal or exchange amount must be between </c><color=#d9804f>" + e.dwMinmumSpreadAward + "</c><color=#97967E> ~ </c><color=#d9804f>" + e.dwMaxmumSpreadAward + "</c>";
}
}
});
},
OnShowSaveGcashInfoPrefab: function() {
var e = cc.instantiate(this.pfBindAccount), t = e.getComponent("jsSavePersonInfo");
t.OnBindSuccess = this.OnBindSuccess.bind(this);
t.OnInitView(this.GcashAccount);
this.node.addChild(e);
},
OnBindSuccess: function(e) {
ManagerHelp_SetSystemLabel("The GCash account was successfully bound!");
this.LabelBindGcash.string = e;
this.GcashAccount = e;
},
OnEditEndEvent: function(e, t) {
var i = parseInt(e.string);
isNaN(i) && (i = 0);
var n = parseFloat(this.ktqjlLabel.string);
if (n < this.dwMinmumSpreadAward + this.dwReservedNumSpreadAward) i = 0; else {
i < this.dwMinmumSpreadAward ? i = this.dwMinmumSpreadAward : i > this.dwMaxmumSpreadAward && (i = this.dwMaxmumSpreadAward);
i > n - this.dwReservedNumSpreadAward && (i = n - this.dwReservedNumSpreadAward);
}
e.string = parseInt(i);
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsControlCompetiton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b8fabTrWBVBJKdLk1AfjlRv", "jsControlCompetiton");
cc.Class({
extends: cc.Component,
statics: {
s_RankData: []
},
properties: {
AllSpriteBgList: [ cc.Node ],
BtnSelectStatusList: [ cc.Node ],
scrollViewItem: cc.ScrollView,
nodeContent: cc.Node,
pfRankItem: cc.Prefab,
meItem: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
OnTitleBtnClick: function(e, t) {
for (var i = 0; i < this.AllSpriteBgList.length; i++) {
this.AllSpriteBgList[i].active = t == i;
this.BtnSelectStatusList[i].getChildByName("imgSelect").active = !1;
this.BtnSelectStatusList[i].getChildByName("imgNormal").active = !0;
}
this.BtnSelectStatusList[t].getChildByName("imgSelect").active = !0;
this.BtnSelectStatusList[t].getChildByName("imgNormal").active = !1;
0 == t || 1 == t && this.requestBounsRank(1);
},
requestBounsRank: function(e) {
var t = this;
t.meItem.active = !1;
t.nodeContent.removeAllChildren();
t.scrollViewItem.stopAutoScroll();
t.scrollViewItem.scrollToTop(.1);
var i = USI_OnGetInfo(), n = GetProject().competitionUrl, a = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&TypeId=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(n, a, function(e, i) {
if (e) if (200 == i.statusCode) {
var n = i.data, a = n.list, o = n.mine;
if (null != a && null != a && a.length > 0) {
t.displayBounsRank(a);
t.displayMeBounsRank(o);
}
} else ManagerHelp_SetSystemLabel(i.message);
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, 15e3);
},
displayBounsRank: function(e) {
if (null != e && null != e) for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.pfRankItem);
this.nodeContent.addChild(i);
i.getComponent("jsCompetitionItem").OnSetListData(e[t]);
}
},
displayMeBounsRank: function(e) {
this.meItem.active = !0;
this.meItem.getComponent("jsCompetitionItem").OnSetListData(e);
}
});
cc._RF.pop();
}, {} ],
jsControlEmail: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8fc727Rqy1HvLorH3yTM14n", "jsControlEmail");
var n = e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
nodeEmailList: cc.Node,
nodeServer: cc.Node,
scrollViewEmail: cc.ScrollView,
nodeEmailContent: cc.Node,
nodeNoEmailTip: cc.Node,
pfEmailItem: cc.Prefab,
pfEmailInfo: cc.Prefab,
edInput: cc.EditBox,
nMaxEamil: 0,
nCurIndex: 0,
aryIndex: []
},
onLoad: function() {
SceneManager_AlertShow(this.node);
AddXmasPrefab(cc.find("No_EmilList", this.node));
},
OnInitView: function(e) {
if (0 == e) {
this.nodeEmailList.active = !0;
this.nodeServer.active = !1;
this.aryIndex[ET_UNRECEIVE] = 0;
this.aryIndex[ET_UNREAD] = 0;
this.aryIndex[ET_OVER] = 0;
this.nMaxEamil = EMA_OnGetMaxLength();
this.scrollViewEmail.node.on("bounce-bottom", this.OnScrollEnd, this);
this.OnAddEmailItem();
this.OnUpdateEmailTip();
} else if (1 == e) {
this.nodeEmailList.active = !1;
this.nodeServer.active = !0;
}
},
start: function() {},
onEnable: function() {
GetMissionService().SetEmailInterface(this);
},
onDisable: function() {
GetMissionService().SetEmailInterface(null);
},
OnTogBtnCallback: function(e, t) {
if (0 == parseInt(t)) {
this.nodeEmailContent.removeAllChildren();
this.nCurIndex = 0;
this.aryIndex[ET_UNRECEIVE] = 0;
this.aryIndex[ET_UNREAD] = 0;
this.aryIndex[ET_OVER] = 0;
this.OnAddEmailItem();
}
},
OnUpdateView: function() {
this.nMaxEamil = EMA_OnGetMaxLength();
if (this.nMaxEamil <= 0) {
this.scrollViewEmail.node.active = !1;
this.nodeNoEmailTip.active = !0;
} else {
this.scrollViewEmail.node.active = !0;
this.nodeNoEmailTip.active = !1;
}
},
OnUpdateEmailTip: function() {
this.OnUpdateView();
n.self.OnUpdateEmailTip();
},
OnScrollEnd: function() {
this.nCurIndex < this.nMaxEamil && this.OnAddEmailItem();
},
OnAddEmailItem: function() {
for (var e = 0, t = !1, i = 0; i < EmailConfig.aryEmail.length; i++) {
for (var n = this.aryIndex[i], a = EMA_OnGetAryLength(i), o = n; o < a; o++) {
var s = EMA_OnGetEmailByIndex(i, o);
s && this.OnInstantiateItem(s, !1);
this.aryIndex[i]++;
this.nCurIndex++;
if (++e >= 6) {
t = !0;
break;
}
}
if (t) break;
}
},
OnUpdateNewItem: function() {
for (var e = !1, t = 0; t < EmailConfig.aryEmail.length; t++) {
for (var i = this.aryIndex[t], n = EMA_OnGetAryLength(t), a = i; a < n; a++) {
var o = EMA_OnGetEmailByIndex(t, a);
if (o) {
this.OnInstantiateItem(o, !1);
this.aryIndex[t]++;
this.nCurIndex++;
e = !0;
break;
}
}
if (e) break;
}
},
OnInstantiateItem: function(e, t) {
var i = cc.instantiate(this.pfEmailItem), n = i.getComponent("jsEmailItem");
n.labelTime.string = new Date(1e3 * e.lSendTimeStamp).format("yyyy-MM-dd hh:mm");
var a = ToUtf8(e.szTitle);
n.labelTitle.string = "[ " + OnConverString(a, 40) + " ]";
0 == e.dwSrcUserId && (n.labelSend.string = "GM");
n.stEmail = e;
n.OnButtonCallback = this.OnButtonCallback.bind(this);
n.OnSetIcon(e.lAttachedScore);
n.OnSetBtnShow(e.cbReadState, e.cbAttachmentState, e.lAttachedScore, t);
this.nodeEmailContent.addChild(i);
this.OnUpdateEmailTip();
},
OnOpenEmailInfo: function(e) {
var t = cc.instantiate(this.pfEmailInfo), i = t.getComponent("jsEmailInfo");
i.OnInitData(e);
i.OnReceiveBtnCallback = this.OnReceiveBtnCallback.bind(this);
this.node.addChild(t);
},
OnReceiveBtnCallback: function(e, t) {
this.OnSendServerSequest(e, TYPE_RECEIVE, t);
},
OnButtonCallback: function(e, t) {
var i = null;
0 == e.stEmail.cbReadState && (i = TYPE_READ);
this.OnOpenEmailInfo(e);
null != i && this.OnSendServerSequest(e, i);
},
OnSendServerSequest: function(e, t, i) {
var a = this, o = e.stEmail, s = o.lId, r = o.lAttachedScore, c = o.cbAttachmentState;
t == TYPE_RECEIVE ? GetMissionService().OnSendReceiveMailRequset(s, function(t) {
i.node.removeFromParent();
if (t.dwErrorCode == EM_ErrorCode.EC_OK) {
ManagerHelp_RewardPopup(r);
var o = EMA_OnGetEamilByID(s);
EMA_OnDeleteEmail(o);
o.cbReadState = 1;
o.cbAttachmentState = 1;
var c = Math.round(new Date().getTime() / 1e3);
o.OperationTime = c;
a.aryIndex[ET_UNRECEIVE] -= 1;
a.aryIndex[ET_OVER] += 1;
EMA_OnAddEamil(o);
e.OnSetBtnShow(o.cbReadState, o.cbAttachmentState, o.lAttachedScore, !0);
a.OnUpdateEmailTip();
n.self.OnUpdateVipInfo();
}
a.OnErrorCodeLog(t.dwErrorCode, s);
}) : t == TYPE_READ && GetMissionService().OnSendReadEmailRequest(s, function(t) {
if (t.dwErrorCode == EM_ErrorCode.EC_OK) {
var i = EMA_OnGetEamilByID(s);
EMA_OnGetEamilType(i);
EMA_OnDeleteEmail(i);
i.cbReadState = 1;
var n = Math.round(new Date().getTime() / 1e3);
i.OperationTime = n;
if (!(0 == c && r > 0)) {
a.aryIndex[ET_UNREAD] -= 1;
a.aryIndex[ET_OVER] += 1;
}
EMA_OnAddEamil(i);
e.OnSetBtnShow(i.cbReadState, i.cbAttachmentState, i.lAttachedScore, !0);
a.OnUpdateEmailTip();
}
a.OnErrorCodeLog(t.dwErrorCode, s);
});
},
OnSendBugToService: function() {},
OnErrorCodeLog: function(e, t) {
switch (e) {
case EM_ErrorCode.EC_OK:
this.OnUpdateNewItem();
break;

case EM_ErrorCode.EC_MAIL_NOT_FIND:
ManagerHelp_SetSystemLabel("Operation failed,The message does not exist!");
this.OnDeleteEmailForId(t);
break;

case EM_ErrorCode.EC_MAIL_REREAD:
ManagerHelp_SetSystemLabel("Operation failed,repeat reading!");
break;

case EM_ErrorCode.EC_MAIL_REGET_ATTACHMENT:
ManagerHelp_SetSystemLabel("Operation failed,repeated claim!");
break;

case EM_ErrorCode.EC_MAIL_REDELETE:
ManagerHelp_SetSystemLabel("Operation failed,duplicate deletion!");
break;

case EM_ErrorCode.EC_UNKNOWN:
ManagerHelp_SetSystemLabel("Operation failed,unknown error!");
}
},
OnDeleteEmailForId: function(e) {
for (var t = EMA_OnGetEamilByID(e), i = EMA_OnGetEamilType(t), n = this.nodeEmailContent.children, a = 0; a < n.length; a++) {
var o = n[a];
if (o.getComponent("jsEmailItem").stEmail.lId == e) {
o.removeFromParent();
break;
}
}
this.aryIndex[i] -= 1;
EMA_OnDeleteEmail(t);
var s = this.node.getChildByName("pfEmilInfo");
null != s && null != s && SceneManager_AlertClose(s, window.SceneType.fSpeed, function(e) {
if (e && "undefined" != typeof e) {
e.removeFromParent();
e = null;
}
});
},
update: function(e) {}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsControlLobby: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb610lyMrNNTLUl7alK+YE+", "jsControlLobby");
var n = cc.Class({
extends: CSocketDelegate,
statics: {
self: null
},
properties: {
nodeUpBarLayout: cc.Node,
pfGameView: cc.Prefab,
pfGameViewVerify: cc.Prefab,
pfLobbyGameField: cc.Prefab,
jsLobbyGameView: null,
jsLobbyGameFiled: null,
img: cc.Sprite,
imgFrame: [ cc.SpriteFrame ],
ChristmasNode: cc.Node
},
start: function() {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var e = this.nodeUpBarLayout.getComponent("jsLobbyFrameUser");
GetMissionLogon().SetUserInterface(e);
this.OnUpdateInsureInfo();
this.UpdateUserDataItem();
GetMissionService().OnSendEmailListRequest();
cc.audioEngine.stopAll();
cc.audioEngine.uncacheAll();
GetProject().isChristmasSkinOpen ? window.mfConfig.PlayAudio("GameLobby/Xmas/Audio/xmas" + Rand(10) % 4, !0) : window.mfConfig.PlayAudio("GameLobby/Audio/BGM", !0);
},
onLoad: function() {
GetProject().isChristmasSkinOpen ? this.ChristmasNode.active = !0 : this.ChristmasNode.active = !1;
if (0 == GetProject().cbCheckAccounts) {
SceneManager_AddPrefab(SceneType.Prefab_Path, "GameLobby/APrefab/pfLobbyLaba");
SceneManager_AddPrefab(SceneType.Prefab_Path, "GameLobby/APrefab/pfBigAwardLaba");
this.img.spriteFrame = this.imgFrame[0];
} else this.img.spriteFrame = this.imgFrame[1];
this.OnInitView();
this.bEmailAction = !1;
if (0 == GetProject().cbCheckAccounts) {
null == GetProject().GetRealUser() && GetProject().SetRealUser();
}
},
onEnable: function() {
n.self = this;
GetMissionLogon().SetEventDelegate(this);
GetMissionService().SetEventLobby(this);
},
onDisable: function() {
n.self = null;
GetMissionLogon().SetEventDelegate(null);
GetMissionService().SetEventLobby(null);
EMA_OnSaveEamil();
},
OnInitView: function() {
if (0 == GetProject().cbCheckAccounts && 0 == window.mfConfig.cbEnterLobby) {
GetProject().cbFirstTopUp || GetPopHelper().PushPopup("s_Path_FirstTopUp");
GetProject().GetPopNotice() && GetPopHelper().PushPopup("s_Path_Activity");
}
this.OnShowLobbyGame();
},
OnShowLobbyGame: function() {
if (null == this.jsLobbyGameView) {
window.mfConfig.cbEnterLobby = 0;
var e = null;
e = 0 == GetProject().cbCheckAccounts ? cc.instantiate(this.pfGameView) : cc.instantiate(this.pfGameViewVerify);
this.node.addChild(e);
this.jsLobbyGameView = e.getComponent("jsLobbyGameView");
this.jsLobbyGameView.jsControlLobby = this;
}
},
OnShowLobbyField: function() {
if (null == this.jsLobbyGameFiled) {
window.mfConfig.cbEnterLobby = 1;
var e = cc.instantiate(this.pfLobbyGameField);
this.node.addChild(e);
this.jsLobbyGameFiled = e.getComponent("jsLobbyGameField");
this.jsLobbyGameFiled.jsControlLobby = this;
}
window.mfConfig.cbEnterLobby = 1;
},
OnButtonEvent: function(e, t) {
var i = "";
if ("btnShop" == e.target.name || "shop" == t) {
if (1 == GetProject().cbCheckAccounts && GetProject().isOpenLuckGuyVerify) {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLuckguyVerify", function(e, t) {
e || (t.zIndex = 3);
});
return;
}
i = "GameLobby/APrefab/ControlShopBY";
}
SceneManager_AddPrefab(SceneType.Prefab_Path, i);
},
OnButtonRefresh: function(e) {
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
var i = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(i.GetUserID());
cc.loader.loadRes("GameLobby/Res/Refresh1", cc.SpriteFrame, function(e, i) {
if (null == e) {
var n = t.getComponent(cc.Sprite);
n && (n.spriteFrame = i);
}
});
this.scheduleOnce(function() {
t.getComponent(cc.Button).interactable = !0;
cc.loader.loadRes("GameLobby/Res/Refresh0", cc.SpriteFrame, function(e, i) {
if (null == e) {
var n = t.getComponent(cc.Sprite);
n && (n.spriteFrame = i);
}
});
}, 3);
},
UpdateUserDataItem: function() {
var e = this.nodeUpBarLayout.getComponent("jsLobbyFrameUser"), t = PlayerManager.GetMeUserItem();
e.SetUserDataItem(t);
},
OnReadEventBegan: function(e, t, i, n) {
var a = this;
if (e == MDM_MB_LOGON && t == SUB_MB_LOGON_SUCCESS) {
ManagerHelp_SetSystemAlert("Account registration successful", function() {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
GetProject().SetAccountType(ACCOUNT_NORMAL);
a.OnUpdateInsureInfo();
GetProject().SetRegister(!0);
});
var o = MF_LoadOnMainChannelID("nNormalAccount");
ACF_OnDeleteAccount(o);
ACF_SaveAccount();
}
return !1;
},
OnReadEventEnded: function(e, t, i, n) {
if (e == MDM_USER_SERVICE && t == SUB_USER_ACTION) {
var a = new CMD_PushUserAction();
a.init(i);
if (a.nUserAction == USER_ACTION_PAYRESULT) {
this.OnUpdateInsureInfo();
this.OnUpdateVipInfo();
}
if (a.nUserAction == USER_ACTION_SERVICE && this.jsLobbyGameView) {
var o = this.jsLobbyGameView.nodeServer, s = o.getChildByName("msgTip");
s && (s.active = !0);
var r = o.getChildByName("iconServer");
if (r) {
var c = ACT_GetNodeJitter();
r.runAction(cc.repeatForever(c));
}
}
}
},
OnMissionRelease: function(e) {
e == window.GST_ERROR && ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return !1;
},
OnUpdateInsureInfo: function(e, t) {
GetMissionLogon().SendPacketInsureInfo();
},
OnUpdateVipInfo: function() {
GetMissionLogon().SendPacketUserVipInfo();
},
OnUpdateEmailTip: function() {
if (this.jsLobbyGameView) {
var e = this.jsLobbyGameView.nodeEmailTip, t = this.jsLobbyGameView.nodeEmail;
if (e && t) {
var i = EMA_OnGetAryLength(ET_UNRECEIVE), n = EMA_OnGetAryLength(ET_UNREAD);
if (i > 0 || n > 0) {
e.active || (e.active = !0);
var a = ACT_GetNodeJitter();
if (!this.bEmailAction) {
this.bEmailAction = !0;
t.runAction(cc.repeatForever(a));
}
return !0;
}
e.active && (e.active = !1);
if (this.bEmailAction) {
this.bEmailAction = !1;
t.rotation = 0;
t.scale = 1;
t.stopAllActions();
}
return !1;
}
}
},
OnAddPrefab: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Path, e, function(e, i) {
e || (i.zIndex = t);
});
}
});
n.OnUpdateEmailTip = function() {
n.self && n.self.OnUpdateEmailTip();
};
t.exports = n;
cc._RF.pop();
}, {} ],
jsControlLogin: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8c304g60KNDMq6loAPopjbF", "jsControlLogin");
var n = cc.color(253, 180, 86), a = cc.color(206, 189, 144);
cc.Class({
extends: cc.Component,
properties: {
nodeSpriteSms: cc.Node,
nodeSpriteAccount: cc.Node,
labelSms: cc.Node,
labelAccount: cc.Node,
nodeSms: cc.Node,
nodeAccount: cc.Node,
edPhone: cc.EditBox,
edCaptCha: cc.EditBox,
btnAcquire: cc.Node,
m_InputPhone: cc.EditBox,
m_InputPassword: cc.EditBox,
m_ToggleRemember: cc.Toggle,
pfModify: cc.Prefab,
pfRegister: cc.Prefab
},
onLoad: function() {
this.loginType = 0;
this.fCmdDelayTime = 0;
this.timeStart = !1;
AddXmasPrefab(cc.find("nodeLogon", this.node));
},
start: function() {
var e = ACF_GetAccountOtp();
if (e) {
var t = e.account.slice(2, 12);
this.edPhone.string = t;
}
var i = ACF_GetAccount();
if (null != i && "true" == i.remember) {
null == i.account && null == i.account || (this.m_InputPhone.string = i.account);
null == i.password && null == i.password || (this.m_InputPassword.string = i.password);
}
var n = ACF_GetAccountType();
"0" == n ? this.OnUpdateTab(0) : "1" == n && null != i && "true" == i.remember && this.OnUpdateTab(1);
},
onEnable: function() {
Dispatcher.AddListener(this, DSP_LOGIN_SUCCESS, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_LOGIN_UPDATE, this.OnDispatcherEvent);
},
onDisable: function() {
Dispatcher.RemoveAllListener(this);
},
SetAccountAndPassword: function(e, t) {
this.m_InputPhone.string = e;
this.m_InputPassword.string = t;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnLoginSms" == i ? this.OnUpdateTab(0) : "btnLoginAccount" == i && this.OnUpdateTab(1);
},
OnUpdateTab: function(e) {
this.loginType = e;
if (0 == e) {
this.nodeSpriteSms.active = !0;
this.nodeSpriteAccount.active = !1;
this.labelSms.color = n;
this.labelAccount.color = a;
this.nodeSms.active = !0;
this.nodeAccount.active = !1;
} else {
this.nodeSpriteSms.active = !1;
this.nodeSpriteAccount.active = !0;
this.labelSms.color = a;
this.labelAccount.color = n;
this.nodeSms.active = !1;
this.nodeAccount.active = !0;
}
},
OnBtnLogonEvent: function(e, t) {
0 == this.loginType ? this.OnLogonOtp() : this.OnLogonAccount();
},
OnLogonOtp: function() {
if (this.OnCheckInput(!0)) {
var e = PhonePrefix + this.edPhone.string, t = parseInt(this.edCaptCha.string);
GetMissionLogon().SendPacketLogonOtp(e, t);
}
},
OnLogonAccount: function() {
if (10 != this.m_InputPhone.string.length) {
ManagerHelp_SetSystemLabel("Please enter the correct account number");
return !1;
}
if ("" == this.m_InputPassword.string || this.m_InputPassword.string.length < 6 || this.m_InputPassword.string.length > 10) {
ManagerHelp_SetSystemLabel("Please enter the correct password");
return !1;
}
GetMissionLogon().SendPacketAccountLogon(PhonePrefix + this.m_InputPhone.string, this.m_InputPassword.string);
},
OnForgetBtnEvent: function(e, t) {
var i = this;
SceneManager_PushBack(SceneType.Prefab_Init, this.pfModify, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsModifyPassword").jsControlLogin = i;
}
});
},
OnRegisterBtnEvent: function(e, t) {
SceneManager_PushBack(SceneType.Prefab_Init, this.pfRegister, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlPersionalInformation").OnShowRegisterLayer();
}
});
},
OnGetVerifyButtonEvent: function(e, t) {
var i = this, n = PhonePrefix + this.edPhone.string;
if (this.OnCheckInput(!1)) if (0 == GetProject().bSmsType) {
GetMissionLogon().SendPacketGetVerify(n, 1);
this.btnAcquire.getComponent(cc.Button).interactable = !1;
this.fCmdDelayTime = 300;
} else 1 == GetProject().bSmsType && GetMissionLogon().SendPacketGetVerify(n, 4, function() {
i.btnAcquire.getComponent(cc.Button).interactable = !1;
i.fCmdDelayTime = 300;
i.timeStart = !0;
});
},
OnCheckInput: function(e) {
var t = this.edPhone.string;
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("The Mobile No cannot be empty！");
return !1;
}
if (!OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("Please enter the correct mobile phone number");
return !1;
}
var i = parseInt(this.edCaptCha.string);
if (1 == e) {
if (isNaN(i)) {
ManagerHelp_SetSystemLabel("OTP cannot be empty");
return !1;
}
if (!IsNumber(this.edCaptCha.string, 6)) {
ManagerHelp_SetSystemLabel("Please enter 6-digit OTP code!");
return !1;
}
}
return !0;
},
OnDispatcherEvent: function(e) {
switch (e) {
case DSP_LOGIN_SUCCESS:
GetProject().SetRegister(!0);
ACF_SetAccount(this.m_InputPhone.string, this.m_InputPassword.string, this.m_ToggleRemember.isChecked);
break;

case DSP_LOGIN_UPDATE:
this.node.removeFromParent();
}
},
update: function(e) {
if (this.timeStart) if (this.fCmdDelayTime > 0) {
this.fCmdDelayTime -= e;
this.btnAcquire && (this.btnAcquire.children[0].getComponent(cc.Label).string = parseInt(this.fCmdDelayTime) + "s");
} else {
this.fCmdDelayTime = 0;
this.timeStart = !1;
if (this.btnAcquire) {
this.btnAcquire.getComponent(cc.Button).interactable = !0;
this.btnAcquire.children[0].getComponent(cc.Label).string = "Send";
}
}
}
});
cc._RF.pop();
}, {} ],
jsControlNotice: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "340133mSfNO5LlSyg4WJNWc", "jsControlNotice");
e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
nodeToggleGroup: cc.Node,
pfToggleItem: cc.Node,
dataNotice: null,
ImgNotice: cc.Node,
tgPopNotice: cc.Toggle,
luckCodePanelNode: cc.Node,
luckCodeInput: cc.EditBox
},
onLoad: function() {
var e = this;
this.tgPopNotice.isChecked = 1 != GetProject().cbPopNotice;
SceneManager_AlertShow(this.node);
var t, i = USI_OnGetInfo(), n = GetProject().commissionUrl;
t = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&typeid=4";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(n, t, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data;
if (null != n) {
e.dataNotice = n.notice;
cc.log(e.dataNotice.name);
null != e.dataNotice && null != e.dataNotice && e.SetToggleButton();
}
} else ManagerHelp_SetSystemLabel("Request for notification data failed. Please try again！"); else ManagerHelp_SetSystemLabel("Request for notification data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
SetToggleButton: function() {
var e = this;
if (null != e.dataNotice && null != e.dataNotice) {
var t = e.dataNotice, i = t.length >= 8 ? 8 : t.length;
e.defaultIndex = 0;
for (var n = 0; n < i; n++) {
var a = t[n], o = cc.instantiate(e.pfToggleItem);
o.active = !0;
e.nodeToggleGroup.addChild(o);
e.initToggleItem(e.dataNotice[n].NoticeId, o, a);
a.IsTop && (e.defaultIndex = n);
}
for (var s = e.nodeToggleGroup.children, r = 1; r < e.nodeToggleGroup.childrenCount; r++) {
var c = s[r].getComponent(cc.Toggle);
c.isChecked = !1;
if (e.defaultIndex + 1 == r) {
c.isChecked = !0;
e.OnValueChanged(c, c.checkEvents[0].customEventData);
}
}
}
},
initToggleItem: function(e, t, i) {
if (null != i && null != i) {
var n = i.image;
t.getChildByName("Title").getComponent(cc.Label).string = i.Title;
var a = new cc.Component.EventHandler();
a.target = this.node;
a.component = "jsControlNotice";
a.handler = "OnValueChanged";
var o = [];
o.push(e);
o.push(n[2]);
a.customEventData = o;
var s = t.getComponent(cc.Toggle);
if (s) {
s.checkEvents = [];
s.checkEvents.push(a);
}
}
},
OnValueChanged: function(e, t) {
e.isChecked && console.log(t);
null != t && null != t && "" != t && this.initSpriteNotice(t[0], t[1]);
},
initSpriteNotice: function(e, t) {
var i = this;
null != t && null != t && "" != t && cc.loader.load(t, function(t, n) {
var a = new cc.SpriteFrame(n);
i.ImgNotice.getComponent(cc.Sprite).spriteFrame = a;
i.ImgNotice.getComponent(cc.Button).clickEvents[0].customEventData = e;
});
},
OnButtonClick: function(e, t) {
1 == t ? this.OnShowTurntable() : 3 == t ? cc.sys.openURL("https://www.facebook.com/groups/558430848479650/members") : 6 == t ? this.OnShowLuckCodePanel() : 14 == t && cc.sys.openURL("https://www.facebook.com/groups/558430848479650/members");
},
OnPopNoticeValueChanged: function(e, t) {
var i = e.isChecked ? 0 : 1;
cc.log("改变 toggle 状态 cbpop = " + i + "GetProject().cbPopNotice = " + GetProject().cbPopNotice);
cc.sys.localStorage.setItem("cbPopNoticeCheck", i);
GetProject().cbPopNotice = i;
},
OnShowLuckCodePanel: function() {
this.luckCodePanelNode.active = !0;
},
OnHideLuckCodePanel: function() {
this.luckCodePanelNode.active = !1;
},
OnLuckCodeExchange: function() {
if ("" != this.luckCodeInput.string && null != this.luckCodeInput.string) {
var e, t = USI_OnGetInfo(), i = GetProject().exchangeUrl, n = this.luckCodeInput.string;
e = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&code=" + n;
var a = this;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, e, function(e, t) {
if (e) {
t.data;
ManagerHelp_SetSystemAlert(t.message);
if (200 == t.statusCode) {
var i = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(i.GetUserID());
a.OnHideLuckCodePanel();
}
} else ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
} else ManagerHelp_SetSystemLabel("please enter your luck code");
},
OnShowTurntable: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLuckguyNew", function(e, t) {
e || (t.zIndex = 3);
});
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsControlNotify: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "88b05b/vQBFjZYv0dxDrdzl", "jsControlNotify");
cc.Class({
extends: cc.Component,
properties: {
contentLab: cc.RichText
},
onLoad: function() {
this.sendLoginNotice();
},
onDisable: function() {
GetProject().SetShowNotify();
},
sendLoginNotice: function() {
var e = this;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szLoginNoticeUrl, "", function(t, i) {
t && 200 == i.statusCode ? e.contentLab.string = i.data : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
});
cc._RF.pop();
}, {} ],
jsControlPersionalInformation: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6f2804UtkdLiYlJjgcrn8Xj", "jsControlPersionalInformation");
cc.Class({
extends: cc.Component,
properties: {
nodeRegister: cc.Node,
edPhone: cc.EditBox,
edPassWord: cc.EditBox,
edSurePassword: cc.EditBox,
edCaptCha: cc.EditBox,
btnAcquire: cc.Node,
fCmdDelayTime: 0
},
OnRegisterSuccessCallback: null,
onLoad: function() {
this.fCmdDelayTime = 0;
this.nodeRegister.active = !0;
SceneManager_AlertShow(this.node);
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
onEnable: function() {
Dispatcher.AddListener(this, DSP_LOGIN_SUCCESS, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_LOGIN_UPDATE, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_OPERATE_SUCCESS, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_OPERATE_FAIL, this.OnDispatcherEvent);
},
onDisable: function() {
Dispatcher.RemoveAllListener(this);
},
OnShowRegisterLayer: function() {
this.nodeRegister.active = !0;
},
OnIphoneCallback: function(e) {
if (isNaN(e)) return !1;
10 != e.length ? ManagerHelp_SetSystemAlert("Phone number inputted incorrectly, please try again") : this.edPhone.string = e;
return !0;
},
OnPassWordCallback: function(e) {
if (isNaN(e)) return !1;
this.edPassWord.string = e;
return !0;
},
OnCaptChaCallback: function(e) {
if (isNaN(e)) return !1;
this.edCaptCha.string = e;
return !0;
},
OnGetVerifyButtonEvent: function(e, t) {
var i = this, n = PhonePrefix + this.edPhone.string;
if (this.OnCheckInput(!1)) if (0 == GetProject().bSmsType) {
GetMissionLogon().SendPacketGetVerify(n, 1);
this.btnAcquire.getComponent(cc.Button).interactable = !1;
this.fCmdDelayTime = 300;
} else 1 == GetProject().bSmsType && GetMissionLogon().SendPacketGetVerify(n, 1, function() {
i.btnAcquire.getComponent(cc.Button).interactable = !1;
i.fCmdDelayTime = 300;
});
},
OnRegisterButtonEvent: function() {
GetMissionLogon().setInformationface(this);
var e = PhonePrefix + this.edPhone.string, t = this.edPassWord.string, i = parseInt(this.edCaptCha.string);
if (this.OnCheckInput(!0)) {
GetProject().isRegister = !0;
GetMissionLogon().SendPacketRegister(e, t, i);
}
},
OnCheckInput: function(e) {
var t = this.edPhone.string, i = this.edPassWord.string, n = this.edSurePassword.string, a = parseInt(this.edCaptCha.string);
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("The Mobile No cannot be empty！");
return !1;
}
if (!OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("Please enter the correct mobile phone number");
return !1;
}
if ("" == i || null == i || null == i) {
ManagerHelp_SetSystemLabel("The password cannot be empty!");
return !1;
}
if (i.length < 6 || i.length > 10) {
ManagerHelp_SetSystemLabel("Password length must be between 6 and 10 characters");
return !1;
}
if (n != i) {
ManagerHelp_SetSystemLabel("The two passwords entered do not match. Please check and try again！");
return !1;
}
if (1 == e) {
if (isNaN(a)) {
ManagerHelp_SetSystemLabel("OTP cannot be empty");
return !1;
}
if (!IsNumber(this.edCaptCha.string, 6)) {
ManagerHelp_SetSystemLabel("Please enter 6-digit OTP code!");
return !1;
}
}
return !0;
},
OnOperFailure: function(e, t, i) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_GETVERIFICATIONCODE) {
this.fCmdDelayTime = 0;
ManagerHelp_SetSystemAlert(i);
}
},
OnDispatcherEvent: function(e, t, i, n) {
switch (e) {
case DSP_LOGIN_SUCCESS:
GetProject().SetRegister(!0);
ACF_SetAccount(this.edPhone.string, this.edPassWord.string, null);
break;

case DSP_LOGIN_UPDATE:
this.node.removeFromParent();
break;

case DSP_OPERATE_SUCCESS:
t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE && ManagerHelp_SetSystemAlert(n);
break;

case DSP_OPERATE_FAIL:
if (t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE) {
this.fCmdDelayTime = 0;
ManagerHelp_SetSystemAlert(n);
}
}
},
update: function(e) {
if (this.fCmdDelayTime > 0) {
this.fCmdDelayTime -= e;
this.btnAcquire && (this.btnAcquire.children[0].getComponent(cc.Label).string = parseInt(this.fCmdDelayTime) + "s");
} else if (this.btnAcquire) {
this.btnAcquire.getComponent(cc.Button).interactable = !0;
this.btnAcquire.children[0].getComponent(cc.Label).string = "Send";
}
}
});
cc._RF.pop();
}, {} ],
jsControlReplaceHead: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a2aebYJgJBKRoUxPDMTbdDH", "jsControlReplaceHead");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
pfFrameItem: cc.Prefab,
nodeTogGroup: cc.Node,
spriteMale: [ cc.SpriteFrame ],
spriteHeadFrame: [ cc.SpriteFrame ],
nodeBtnSelect: [ cc.Node ],
nodeBtnUnSelect: [ cc.Node ]
},
OnCloseCallBack: null,
onLoad: function() {
SceneManager_AlertShow(this.node);
GetProject().bAppShop && (this.nodeTogGroup.active = !1);
this.nType = 0;
this.bLoadHead = !1;
this.bLoadHeadFrame = !1;
this.cbTempFaceID = null;
this.cbTempFaceFrameID = null;
var e = this.node.getComponent("jsLobbyFrameUser"), t = PlayerManager.GetMeUserItem();
e.SetHeadSpriteFrame(t);
this.slectIndex = 0;
this.setChildLayer();
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("avatar" == i) {
this.slectIndex = 0;
this.setChildLayer();
} else if ("btnVipFrame" == i) {
this.slectIndex = 2;
this.setChildLayer();
} else if ("btnCustomAvatar" == i) {
this.slectIndex = 3;
this.setChildLayer();
}
},
setChildLayer: function() {
for (var e = 0; e < 3; e++) if (this.slectIndex == e) {
this.nodeBtnSelect[e].active = !0;
this.nodeBtnUnSelect[e].active = !1;
} else {
this.nodeBtnSelect[e].active = !1;
this.nodeBtnUnSelect[e].active = !0;
}
if (0 == this.slectIndex || 1 == this.slectIndex) {
this.nType = 0;
this.setHeadArray();
} else if (2 == this.slectIndex) {
this.nType = 1;
this.setHeadArray();
}
},
setHeadArray: function() {
this.nodeContent.removeAllChildren();
var e = PlayerManager.GetMeUserItem().GetMemberOrder(), t = !1, i = this.getCurID(), n = [];
if (0 == this.slectIndex) n = this.spriteMale; else if (1 == this.slectIndex) ; else if (2 == this.slectIndex) {
n = this.spriteHeadFrame;
t = !0;
}
for (var a = 0; a < n.length; a++) {
var o = n[a].name.split("_"), s = parseInt(o[1]), r = cc.instantiate(this.pfFrameItem);
this.nodeContent.addChild(r, s);
r.scale = .85;
r.getChildByName("nodeText").getComponent(cc.Sprite).spriteFrame = n[a];
var c = r.getChildByName("IconLock"), l = r.getComponent(cc.Toggle), h = this.nodeContent.getComponent(cc.ToggleGroup);
l.toggleGroup = h;
h.addToggle(l);
var u = new cc.Component.EventHandler();
u.target = this.node;
u.component = "jsControlReplaceHead";
u.handler = "OnTogEventCallBack";
u.customEventData = "" + s;
if (s == i) {
l.isChecked = !0;
r.getChildByName("check").active = !0;
}
if (t && s > e) {
l.interactable = !1;
c.active = !0;
}
l.checkEvents.push(u);
}
},
getCurID: function() {
var e = PlayerManager.GetMeUserItem(), t = 0;
t = null != this.cbTempFaceID ? this.cbTempFaceID : e.GetFaceID();
var i = 0;
i = null != this.cbTempFaceFrameID ? this.cbTempFaceFrameID : e.GetFaceFrameID();
var n = 0;
0 == this.slectIndex || 1 == this.slectIndex ? n = t : 2 == this.slectIndex && (n = i);
return n;
},
OnTogEventCallBack: function(e, t) {
var i = parseInt(t), n = this.node.getComponent("jsLobbyFrameUser");
if (0 == this.nType) {
n.SetHeadText(i);
this.cbTempFaceID = i;
} else if (1 == this.nType) {
n.SetHeadFerameText(i);
this.cbTempFaceFrameID = i;
}
},
OnCloseEvent: function() {
var e = PlayerManager.GetMeUserItem(), t = e.GetFaceID(), i = e.GetFaceFrameID();
null == this.cbTempFaceID && (this.cbTempFaceID = t);
null == this.cbTempFaceFrameID && (this.cbTempFaceFrameID = i);
var n = this.cbTempFaceID, a = this.cbTempFaceFrameID;
if (t != n || i != a) {
var o = MF_LoadOnMainChannelID("nNormalAccount"), s = ACF_GetMd5Password(o);
GetMissionLogon().SendSystemFaceInfo(n, a, s);
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
}
this.OnCloseCallBack && this.OnCloseCallBack(n, a);
SceneManager_AlertClose(this.node, window.SceneType.fSpeed, function(e) {
e.removeFromParent();
e = null;
});
}
});
cc._RF.pop();
}, {} ],
jsControlSetCenter: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "217764TafBIyYD3h/IH3TFb", "jsControlSetCenter");
cc.Class({
extends: cc.Component,
properties: {
labelVersion: cc.Label
},
onLoad: function() {
null != window.mfConfig.version && window.mfConfig.version && (this.labelVersion.string = "v" + window.mfConfig.version);
null == window.mfConfig.version && cc.sys.isBrowser && (this.labelVersion.string = "v1.0.1");
},
start: function() {}
});
cc._RF.pop();
}, {} ],
jsControlShare: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "31d7dURRT5GGp5G40Q0QE07", "jsControlShare");
cc.Class({
extends: cc.Component,
properties: {
lblShareLink: cc.Label
},
onLoad: function() {
SceneManager_AlertShow(this.node);
this.shareDesc = "I'm playing the game below, if you like it too, please click the link below to get free rewards and play with me!\n";
this.shareLink = "";
this.requestLinkUrl();
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"btnClose" == i ? this.node.destroy() : "btnLuckGuy" == i ? this.openLuckGuy() : "btnShare" == i && this.startShare();
},
requestLinkUrl: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().commissionUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&typeid=0";
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data;
e.shareLink = n.apis.qrcode;
e.lblShareLink.string = e.shareLink;
} else ManagerHelp_SetSystemLabel(i.message);
}, 15e3);
},
openLuckGuy: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfLuckguyNew", function(e, t) {
e || (t.zIndex = 3);
});
},
startShare: function() {
window.mfConfig.share(this.shareDesc + this.shareLink);
}
});
cc._RF.pop();
}, {} ],
jsControlShopBY: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9c093FD6j9JKqjilvvdDHm+", "jsControlShopBY");
var n = cc.Class({
extends: cc.Component,
statics: {
self: null
},
properties: {
nodeSubChannel: cc.Node,
nodeShopList: cc.Node,
contentShopList: cc.Node,
nodeRecord: cc.Node,
contentRecord: cc.Node,
nodePayeeInfo: cc.Node,
labelGcashNo: cc.Label,
labelGoldCoins: cc.Label,
labelMoney: cc.Label,
firstIcon: cc.Node,
nodePayType: cc.Node,
nodeSubPayContent: cc.Node,
nodeRecordBtn: cc.Node,
pfMainPayItem: cc.Prefab,
pfSubPayItem: cc.Prefab,
pfShopRecordItem: cc.Prefab,
pfShopListItem: cc.Prefab
},
onLoad: function() {
if (1 != GetProject().cbCheckAccounts) {
SceneManager_AlertShow(this.node);
this.requestShopList();
} else this.node.active = !1;
},
onEnable: function() {
n.self = this;
},
onDisable: function() {
n.self = null;
var e = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(e.GetUserID());
},
OnButtonClick: function(e, t) {
"RecordBtn" == e.target.name && this.showRecordList();
},
OnGoToYoTubeClick: function() {
cc.sys.openURL("https://www.facebook.com/phoenixgame777/videos");
},
OnServiceClick: function() {
OnShowServer();
},
requestShopList: function() {
var e = this;
this.contentShopList.removeAllChildren();
var t = USI_OnGetInfo(), i = GetProject().szCommonUrl + "?uid=" + t.dwUserID + "&sign=" + t.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(i, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
var a = n.data;
if (null != a) {
if (a.buyPayInfo.UnPayState) e.showShopList(a); else {
var o = a.buyPayInfo.UnPayMsg;
ManagerHelp_SetSystemAlert(o);
}
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showShopList: function(e) {
this.shopKinds = e.shopKinds;
this.isPaid = e.isPaid;
if (this.shopKinds.length <= 0) {
ManagerHelp_SetSystemLabel("There are currently no available recharge channels. Please try again later!");
this.showRecordList();
} else this.showMainChannel();
},
showMainChannel: function() {
for (var e = this, t = 0; t < this.shopKinds.length; t++) {
var i = cc.instantiate(this.pfMainPayItem);
this.nodePayType.addChild(i);
var n = this.shopKinds[t], a = cc.find("channel0", i), o = cc.find("channel1", i);
a.getComponent(cc.Label).string = n.KindName;
o.getComponent(cc.Label).string = n.KindName;
i._index = t;
i.on("click", function(t) {
e.selectMainChannel(t.target._index);
});
}
this.selectMainChannel(0);
},
selectMainChannel: function(e) {
this.subChannel = this.shopKinds[e];
for (var t = this.nodePayType.children, i = this.nodePayType.childrenCount, n = 0; n < i; n++) {
var a = cc.find("graysprite", t[n]), o = cc.find("channel0", t[n]), s = cc.find("channel1", t[n]);
if (e == n) {
a.active = !0;
o.active = !0;
s.active = !1;
} else {
a.active = !1;
o.active = !1;
s.active = !0;
}
}
this.showSubPayChannel();
},
showSubPayChannel: function() {
var e = this;
this.nodeSubPayContent.removeAllChildren();
for (var t = this.subChannel.ShopPageList, i = 0; i < t.length; i++) {
var n = cc.instantiate(this.pfSubPayItem);
this.nodeSubPayContent.addChild(n);
var a = t[i];
cc.find("channel", n).getComponent(cc.Label).string = a.PageName;
n._index = i;
n.on("click", function(t) {
e.selectSubChannel(t.target._index);
});
}
this.selectSubChannel(0);
},
selectSubChannel: function(e) {
this.shopList = this.subChannel.ShopPageList[e];
for (var t = this.nodeSubPayContent.children, i = this.nodeSubPayContent.childrenCount, n = 0; n < i; n++) {
var a = cc.find("graysprite", t[n]), o = cc.find("channel", t[n]);
if (e == n) {
a.active = !0;
o.color = cc.color(157, 90, 2);
} else {
a.active = !1;
o.color = cc.color(169, 147, 137);
}
}
this.showPayItemList(e);
},
showPayItemList: function() {
var e = this.shopList;
this.contentShopList.removeAllChildren();
this.nodeShopList.active = !0;
for (var t = e.Products.length, i = 0; i < t; i++) {
var n = cc.instantiate(this.pfShopListItem);
this.contentShopList.addChild(n);
n.getComponent("jsShopItem").OnSetListData(this.isPaid, e, e.Products[i]);
}
this.selectRecord(!1);
},
showRecordList: function() {
for (var e = this.nodePayType.children, t = this.nodePayType.childrenCount, i = 0; i < t; i++) {
var n = cc.find("graysprite", e[i]), a = cc.find("channel0", e[i]), o = cc.find("channel1", e[i]);
n.active = !1;
a.active = !1;
o.active = !0;
}
this.selectRecord(!0);
this.nodeSubChannel.active = !1;
this.nodeShopList.active = !1;
this.nodeRecord.active = !0;
this.nodePayeeInfo.active = !1;
this.requestOrderRecordList();
},
selectRecord: function(e) {
cc.find("graysprite", this.nodeRecordBtn).active = e;
var t = cc.find("channel0", this.nodeRecordBtn), i = cc.find("channel1", this.nodeRecordBtn);
t.active = e;
i.active = !e;
this.nodeSubChannel.active = !e;
this.nodeRecord.active = e;
this.nodePayeeInfo.active = e;
},
requestOrderRecordList: function() {
var e = this;
this.contentRecord.removeAllChildren();
var t = USI_OnGetInfo(), i = GetProject().payRecordUrl + "?uid=" + t.dwUserID + "&sign=" + t.szSign + "&pageSize=10";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.get(i, function(t, i) {
if (t) {
if (i) {
var n = JSON.parse(i.response);
if (200 == n.statusCode) {
var a = n.data;
if (null != a) for (var o = 0; o < a.length; o++) {
var s = cc.instantiate(e.pfShopRecordItem);
e.contentRecord.addChild(s);
s.getComponent("jsShopRecordItem").OnSetListData(a[o]);
}
} else ManagerHelp_SetSystemLabel("Request for record data failed. Please try again！");
}
} else ManagerHelp_SetSystemLabel("Request for record data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showShopDetailsInfo: function(e) {
this.nodeSubChannel.active = !0;
this.nodeShopList.active = !1;
this.nodeRecord.active = !1;
this.nodePayeeInfo.active = !0;
var t = e.card, i = e.quantity / 1e3;
this.labelGcashNo.string = t;
var n = i - e.amount;
if (n <= 0) {
this.firstIcon.active = !1;
this.labelGoldCoins.string = i;
} else {
this.firstIcon.active = !0;
this.labelGoldCoins.string = e.amount + " + " + n;
}
this.labelMoney.string = e.amount;
},
requireDeviceID: function() {
return !cc.sys.isNative || cc.sys.platform != cc.sys.IPHONE && cc.sys.platform != cc.sys.IPAD ? (cc.sys.isNative && (cc.sys.platform, 
cc.sys.ANDROID), 0) : 1;
},
OnCopyButtonClick: function(e, t) {
var i = this.labelGcashNo.string;
window.mfConfig.setText(i);
ManagerHelp_SetSystemLabel("Gcash Account copied successfully");
},
OnChangeGcashClick: function(e, t) {}
});
t.exports = n;
cc._RF.pop();
}, {} ],
jsControlShouJiLogon: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8582cFff6lLbr4roKEDyuLI", "jsControlShouJiLogon");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: [ cc.Node ],
edPhone1: cc.EditBox,
edPassWord: cc.EditBox,
labelPhone2: cc.Label,
edPhone2: cc.EditBox,
edNewPassWord: cc.EditBox,
edSurePassword: cc.EditBox,
edCaptCha: cc.EditBox,
btnAcquire: cc.Node,
labelPwdTitle: cc.Label,
cbPassType: 0
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
OnLogonButtonEvent: function() {
var e = this.edPhone1.string;
if (IsNumber(e, 11) && OnValidatePhone(e)) {
var t = this.edPassWord.string;
null != t.match(/^[a-zA-Z0-9]+$/) ? GetMissionLogon().SendPacketAccountLogon(e, t) : ManagerHelp_SetSystemAlert("密码格式错误，密码只能由字母和数字构成");
} else ManagerHelp_SetSystemAlert("请输入正确的手机号");
},
OnForgetPassWordButtonEvent: function() {
this.nodeContent[0].active = !1;
this.nodeContent[1].active = !0;
},
OnShowPhoneNumber: function() {
this.edPhone2.node.active = !1;
this.labelPhone2.node.active = !0;
this.labelPhone2.string = GetProject().szRegisterPhone;
this.edPhone2.string = GetProject().szRegisterPhone;
},
OnBtnEvent: function(e, t) {
parseInt(t) == PWD_TYPE_LOGON && this.OnShowForgetPassWord(PWD_TYPE_LOGON);
},
OnShowForgetPassWord: function(e) {
this.nodeContent[0].active = !1;
this.nodeContent[1].active = !0;
e == PWD_TYPE_LOGON ? this.labelPwdTitle && (this.labelPwdTitle.string = "重置登录密码") : e == PWD_TYPE_BANK && this.labelPwdTitle && (this.labelPwdTitle.string = "重置银行密码");
this.cbPassType = e;
},
OnBackLogonButtonEvent: function() {
if (this.cbPassType == PWD_TYPE_NONE) {
this.nodeContent[0].active = !0;
this.nodeContent[1].active = !1;
} else SceneManager_AlertClose(this.node, window.SceneType.fSpeed, function(e) {
e.removeFromParent();
e = null;
});
},
OnCheckInput: function(e) {
var t = this.edPhone2.string, i = this.edNewPassWord.string, n = this.edSurePassword.string, a = parseInt(this.edCaptCha.string);
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("手机号不能为空！");
return !1;
}
if (!IsNumber(t, 11) || !OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("请输入正确的手机号");
return !1;
}
if ("" == i || null == i || null == i) {
ManagerHelp_SetSystemLabel("密码不能为空!");
return !1;
}
if (i.length < 6 || i.length > 10) {
ManagerHelp_SetSystemLabel("密码长度必须在6到10位之间");
return !1;
}
if (n != i) {
ManagerHelp_SetSystemLabel("两次输入的密码不一致，请检查后重试！");
return !1;
}
if (1 == e) {
if (isNaN(a)) {
ManagerHelp_SetSystemLabel("验证码不能为空!");
return !1;
}
if (!IsNumber(this.edCaptCha.string, 4)) {
ManagerHelp_SetSystemLabel("请输入4位数验证码!");
return !1;
}
}
return !0;
},
OnGetVerifyButtonEvent: function() {
var e = this.edPhone2.string;
if (this.OnCheckInput(!1)) {
GetMissionLogon().SendPacketGetVerify(e, 2);
this.btnAcquire.getComponent(cc.Button).interactable = !1;
this.fCmdDelayTime = 60;
}
},
OnCertainButtonEvent: function() {
var e = this.edPhone2.string, t = this.edNewPassWord.string, i = this.edCaptCha.string;
this.OnCheckInput(!0) && GetMissionLogon().SendPacketForgetPass(e, t, i, this.cbPassType);
},
OnOperSuccess: function(e, t) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_FORGET_LOGON_PASS) {
if (this.cbPassType == PWD_TYPE_LOGON) {
var i = this.edPhone2.string, n = this.edNewPassWord.string, a = hex_md5(n).toUpperCase();
ACF_OnAddAccount(i, a);
ACF_SaveAccount();
}
this.OnBackLogonButtonEvent();
}
},
OnOperFailure: function(e, t) {
e == MDM_GP_USER_SERVICE && t == SUB_GP_GETVERIFICATIONCODE && (this.fCmdDelayTime = 0);
},
update: function(e) {
if (this.fCmdDelayTime > 0) {
this.fCmdDelayTime -= e;
this.btnAcquire.children[0].getComponent(cc.Label).string = parseInt(this.fCmdDelayTime) + "s";
} else {
this.btnAcquire.getComponent(cc.Button).interactable = !0;
this.btnAcquire.children[0].getComponent(cc.Label).string = "验证码";
}
}
});
cc._RF.pop();
}, {} ],
jsControlUserChange: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "50553QDqAlBVbqMrm+KyZq/", "jsControlUserChange");
cc.Class({
extends: cc.Component,
properties: {
nodeModify: cc.Node,
nodeSure: cc.Node,
ebNickName: cc.EditBox,
labelSureName: cc.Label
},
OnClosedChangeCallback: null,
onLoad: function() {
GetMissionLogon().setInformationface(this);
SceneManager_AlertShow(this.node);
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
OnTextSureChange: function() {
var e = this.ebNickName.string;
if ("" != e) {
var t = IsNumber(e, e.length);
if (OnTotleLength(e) <= 0 || OnTotleLength(e) > 12 || t) ManagerHelp_SetSystemLabel("Incorrect format of nickname input! Please reenter！"); else {
this.nodeModify.active = !1;
this.nodeSure.active = !0;
this.labelSureName.string = e;
}
} else ManagerHelp_SetSystemLabel("Nicknames cannot be empty!");
},
OnSureBtnEvent: function() {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var e = this.labelSureName.string, t = SendPacketHelper_GetPacketNickName(e);
GetMissionLogon().SendPacketModifyIndividual(t);
},
OnCancelBtnEvent: function() {
this.nodeModify.active = !0;
this.nodeSure.active = !1;
this.node.removeFromParent();
},
OnOperSuccess: function(e, t) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_MODIFY_INDIVIDUAL) {
this.OnClosedChangeCallback && this.OnClosedChangeCallback(this.labelSureName.string);
this.node.removeFromParent();
}
}
});
cc._RF.pop();
}, {} ],
jsControlUserInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "698c4vP4N5JXr6rdTHxXGcY", "jsControlUserInfo");
var n = e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
nodeRegister: cc.Node,
nodeClearAccount: cc.Node,
nodeSet: cc.Node,
nodeBtnBuy: cc.Node,
nodeBtnModifyNickName: cc.Node,
nodeBtnModifyGcash: cc.Node,
pfReplaceHead: cc.Prefab,
pfChangeUserInfo: cc.Prefab,
pfRegister: cc.Prefab,
pfBindGcashAccount: cc.Prefab,
LabelBindGcash: cc.Label,
vipNum: cc.Label,
vipProgress: cc.ProgressBar,
labelGameVersion: cc.Label
},
GcashAccount: null,
onLoad: function() {
SceneManager_AlertShow(this.node);
var e = this.node.getComponent("jsLobbyFrameUser");
GetMissionLogon().SetBankInterface(e);
this.nodeBtnBuy.active = 0 == GetProject().cbCheckAccounts;
this.OnShowModifyBtn();
this.requestGcashNum();
this.setVip();
this.setVersion();
AddXmasPrefab(cc.find("No_nodeContent", this.node));
},
setVersion: function() {
var e = ServerData_GetLocaHallVersion();
if ("0.0.0" == e) this.labelGameVersion.node.active = !1; else {
this.labelGameVersion.node.active = !0;
this.labelGameVersion.string = "v" + REV_PROCESS_VERSION3(e);
}
},
setVip: function() {
var e = PlayerManager.GetMeUserItem();
this.vip = e.GetMemberOrder();
this.vipNum.string = this.vip;
var t = [ 0, 1e4, 6e4, 2e5, 6e5, 2e6, 4e6, 1e7, 2e7, 5e7 ];
if (this.vip >= 9) {
this.vipProgress.progress = 1;
this.vipProgress.node.getChildByName("lab").getComponent(cc.Label).string = "Max";
} else {
var i = e.GetMemberExp();
cc.log("vipExp =" + i + "  vipExpCF =" + t[this.vip + 1]);
var n = i / t[this.vip + 1];
this.vipProgress.progress = n;
this.vipProgress.node.getChildByName("lab").getComponent(cc.Label).string = (100 * n).toFixed(2) + "%";
}
},
onDestroy: function() {
GetMissionLogon().SetBankInterface(null);
},
start: function() {},
onEnable: function() {
this.GcashAccount = "";
GetMissionLogon().setInformationface(this);
},
onDisable: function() {
this.GcashAccount = "";
GetMissionLogon().setInformationface(null);
},
OnCloseCallBack: function(e, t) {
this.cbTempFaceID = e;
this.cbTempFaceFrameID = t;
},
OnClosedChangeCallback: function(e) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var t = PlayerManager.GetMeUserItem();
SetArrayFormUtf8(t.pGlobalData.szNickName, e);
t.SetNickNameUtf8(e);
this.node.getComponent("jsLobbyFrameUser").SetUserDataItem(t);
this.OnShowModifyBtn();
n.self && n.self.UpdateUserDataItem();
GetMissionLogon().setInformationface(this);
},
OnOperSuccess: function(e, t) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_SYSTEM_FACE_INFO) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
var i = PlayerManager.GetMeUserItem();
i.SetFaceID(this.cbTempFaceID);
i.SetFaceFrameID(this.cbTempFaceFrameID);
this.node.getComponent("jsLobbyFrameUser").SetUserDataItem(i);
n.self && n.self.UpdateUserDataItem();
}
},
OnBtnCallback: function(e, t) {
var i = this;
SceneManager_PushBack(SceneType.Prefab_Init, this.pfReplaceHead, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlReplaceHead").OnCloseCallBack = i.OnCloseCallBack.bind(i);
}
});
},
OnShowModifyBtn: function() {
var e = PlayerManager.GetMeUserItem().GetNickNameUtf8();
this.nodeBtnModifyNickName.active = IsNumber(e, e.length);
},
OnClearAccount: function() {
ManagerHelp_SetLayerEvent("ClearAccounts");
},
OnCopyGameID: function(e, t) {
var i = PlayerManager.GetMeUserItem().GetGameID();
window.mfConfig.setText(i);
ManagerHelp_SetSystemLabel("Game ID copied successfully");
},
OnBtnRegisterEvent: function() {
var e = this;
SceneManager_PushBack(SceneType.Prefab_Init, e.pfRegister, function(t, i) {
if (!t) {
i.zIndex = 3;
var n = i.getComponent("jsControlPersionalInformation");
n.OnShowRegisterLayer();
n.OnRegisterSuccessCallback = e.OnRegistetSuccess.bind(e);
}
});
},
OnRegistetSuccess: function() {},
OnEditUserInfo: function(e, t) {
PlayerManager.GetMeUserItem().GetNickNameUtf8();
var i = this;
SceneManager_PushBack(SceneType.Prefab_Init, this.pfChangeUserInfo, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlUserChange").OnClosedChangeCallback = i.OnClosedChangeCallback.bind(i);
}
});
},
OnModifyGcashNum: function(e, t) {
var i = this.pfBindGcashAccount, n = cc.instantiate(i), a = n.getComponent("jsSavePersonInfo");
a.OnBindSuccess = this.OnBindSuccess.bind(this);
a.OnInitView(this.GcashAccount);
this.node.addChild(n);
},
OnBindSuccess: function(e) {
ManagerHelp_SetSystemLabel("The GCash account was successfully bound!");
this.LabelBindGcash.string = e;
},
requestGcashNum: function() {
var e = this, t = [];
GetMissionLogon().SendQueryBindInfo(function(i, n) {
if (null != i) t[i] = n; else if (null == i) {
e.LabelBindGcash.string = "";
var a = t[DTP_GP_UI_ALIPAY];
if (null != a && null != a) {
e.LabelBindGcash.string = ToUtf8(a);
e.GcashAccount = ToUtf8(a);
} else {
e.LabelBindGcash.string = "No Gcash account";
e.GcashAccount = "";
}
}
});
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsControlVipNewItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1718DlzplLpqzSizcHlES1", "jsControlVipNewItem");
cc.Class({
extends: cc.Component,
properties: {
shopName: cc.Label,
iconNum: cc.Label,
points: cc.Label,
lockNode: cc.Node,
icon: cc.Sprite,
WaitSprite: cc.Node
},
start: function() {},
setData: function(e) {
this.shopName.string = e.Name;
var t = e.Value;
if (t <= 1) this.iconNum.node.active = !1; else {
1 == e.ProductType && (t /= 1e3);
this.iconNum.string = "x" + t;
}
999999999 == e.Price ? this.points.string = "????" : this.points.string = e.Price;
var i = e.IconUrl;
cc.loader.load(i, function(e, t) {
this.WaitSprite.active = !1;
var i = new cc.SpriteFrame(t);
this.icon.spriteFrame = i;
}.bind(this));
this.lockNode.active = e.Quantity <= 0;
},
onLockBtnEvent: function() {
ManagerHelp_SetSystemLabel("Coming Soon");
}
});
cc._RF.pop();
}, {} ],
jsControlVipNew: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "b2f56KFbypAZIfsKP8eESYC", "jsControlVipNew");
cc.Class({
extends: cc.Component,
properties: {
poolNum: cc.Label,
vipNum: cc.Label,
coinRichText: cc.RichText,
scoreLab: [ cc.Label ],
ratioLab: [ cc.Label ],
receiveBtn: cc.Button,
tipLab: cc.Label,
todaySp: cc.Sprite,
todaySF: [ cc.SpriteFrame ],
YProgressBar: cc.ProgressBar,
RProgressBar: cc.ProgressBar,
nodeHelpLayer: cc.Node,
piaoJinBiAni: sp.Skeleton,
saoGuangAni: sp.Skeleton,
pfGameEndScore: cc.Prefab,
showScoreNode: cc.Node,
myPoints: cc.Label,
tabNode: cc.Node,
PointContent: cc.Node,
ShopContent: cc.Node,
DetailsContent: cc.Node,
shopItemNode: cc.Node,
shopItem: cc.Node,
vipNode: cc.Node,
BetPool: cc.Sprite,
BetPoolBg: [ cc.SpriteFrame ]
},
onLoad: function() {
SceneManager_AlertShow(this.node);
this.vip = 0;
this.totalPoint = 0;
this.bRRunAni = !1;
GetProject().onlyLayer = this;
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetProject().onlyLayer = null;
});
},
start: function() {
var e = PlayerManager.GetMeUserItem();
this.vip = e.GetMemberOrder();
this.sendIntegralCf();
this.OnTouchRegister();
this.node.isGoShop && this.clickLeftButton(null, 2);
},
OnTouchRegister: function() {
this.vipNode.on(cc.Node.EventType.TOUCH_START, this.OnVipTransitionStart, this);
this.vipNode.on(cc.Node.EventType.TOUCH_CANCEL, this.OnVipTransitionEnded, this);
this.vipNode.on(cc.Node.EventType.TOUCH_END, this.OnVipTransitionEnded, this);
},
sendIntegralCf: function() {
var e = this, t = USI_OnGetInfo(), i = "&uid=" + t.dwUserID + "&sign=" + t.szSign + "&lv=" + this.vip;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szIntegralUrl, i, function(t, i) {
cc.log("sendIntegralCf", i);
t && 200 == i.statusCode ? e.setData(i) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
setData: function(e) {
if (null != e) {
this.data = e;
this.vipNum.string = this.vip;
var t = 0 == e.recieveStatus;
this.varyState(t, e);
this.myPoints.string = e.points;
for (var i = 0; i < e.config.length; i++) {
this.scoreLab[i].string = change_Num_K(e.config[i].ScoreMin);
this.ratioLab[i].string = e.config[i].Ratio / 100 + "%";
}
if (t) {
this.RProgressBar.progress = this.getProgress(e.rebateScore);
this.YProgressBar.progress = 0;
} else {
this.RProgressBar.progress = this.getProgress(e.rebateScore);
this.YProgressBar.progress = this.getProgress(this.totalPoint);
}
}
},
setShopNode: function() {
for (var e = this, t = 0; t < this.shopCf.length; t++) {
var i = cc.instantiate(this.shopItem);
i.active = !0;
i.getComponent("jsControlVipNewItem").setData(this.shopCf[t]);
i.data = this.shopCf[t];
i.on("click", function(t) {
e.doBuy(t.target, t.target.data);
}).bind(this);
this.shopItemNode.addChild(i);
}
},
doBuy: function(e, t) {
var i = this, n = USI_OnGetInfo(), a = "&uid=" + n.dwUserID + "&sign=" + n.szSign + "&productId=" + t.ID;
t.Price > parseInt(this.myPoints.string) ? ManagerHelp_SetSystemLabel("Failure, Insufficient points") : ManagerHelp_SetSystemAlert("Are you sure to exchange it?", function(n, o) {
if (o == YQ_SYS_OK) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szPointsExchangeUrl, a, function(n, a) {
cc.log("doBuy", a);
if (n) if (200 == a.statusCode) {
1 == t.ProductType ? ManagerHelp_RewardPopup(t.Value) : ManagerHelp_SetSystemLabel("Exchange successful,Please check your Email");
i.OnShowGameScore(-t.Price);
NumberProcessChange(i.myPoints, -t.Price, .5);
--t.Quantity <= 0 && (e.getComponent("jsControlVipNewItem").lockNode.active = !0);
} else ManagerHelp_SetSystemLabel(a.message); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
}, !0);
},
getProgress: function(e) {
return this.calcProgress(e) + (e - this.getScoreMin(e)) / (this.getScoreMax(e) - this.getScoreMin(e)) * this.calcProgressRatio(e);
},
getProgressRebate: function(e) {
var t = this.getCurLevel(e);
return this.data.config[t].Ratio;
},
getNextProgressRebate: function(e) {
var t = this.getNextCurLevel(e);
return this.data.nextconfig[t].Ratio;
},
getNextCurLevel: function(e) {
for (var t = this.data.nextconfig, i = 0, n = 0; n < t.length; n++) if (e < t[n].ScoreMax) {
i = n;
break;
}
return i;
},
setCurRebateColor: function(e) {
for (var t = this.getCurLevel(e), i = 0; i < this.ratioLab.length; i++) this.ratioLab[i].node.color = i == t ? cc.hexToColor("#8BFB20") : cc.hexToColor("#F1D98C");
},
setNextCurRebateColor: function(e) {
for (var t = this.getNextCurLevel(e), i = 0; i < this.ratioLab.length; i++) this.ratioLab[i].node.color = i == t ? cc.hexToColor("#8BFB20") : cc.hexToColor("#F1D98C");
},
getScoreMax: function(e) {
var t = this.getCurLevel(e);
return t == this.data.config.length - 1 ? this.data.config[t].ScoreMin + 1e5 : this.data.config[t].ScoreMax;
},
getScoreMin: function(e) {
var t = this.getCurLevel(e);
return this.data.config[t].ScoreMin;
},
calcProgress: function(e) {
var t = 0;
switch (this.getCurLevel(e)) {
case 0:
t = 0;
break;

case 1:
t = .215;
break;

case 2:
t = .472;
break;

case 3:
t = .86;
}
return t;
},
calcProgressRatio: function(e) {
var t = 0;
switch (this.getCurLevel(e)) {
case 0:
t = .215;
break;

case 1:
t = .257;
break;

case 2:
t = .388;
break;

case 3:
t = .14;
}
return t;
},
getCurLevel: function(e) {
for (var t = this.data.config, i = 0, n = 0; n < t.length; n++) if (e < t[n].ScoreMax) {
i = n;
break;
}
return i;
},
sendReceive: function() {
var e = this, t = USI_OnGetInfo(), i = "&uid=" + t.dwUserID + "&sign=" + t.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szIntegralReceiveUrl, i, function(t, i) {
cc.log("sendReceive", i);
if (t) if (200 == i.statusCode) {
e.receiveBtn.interactable = !1;
e.refreshData(i);
} else ManagerHelp_SetSystemLabel(i.message); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
onBtnEvent: function(e, t) {
"All_receiveBtn" == e.target.name ? this.sendReceive() : "helpBtn" == e.target.name && this.showHelpLayer();
},
OnVipTransitionStart: function() {
this.vipNum.string >= 9 || this.switchVipConfig(!1);
},
OnVipTransitionEnded: function() {
this.vipNum.string >= 9 || this.switchVipConfig(!0);
},
switchVipConfig: function(e) {
if (e) this.setData(this.data); else {
this.receiveBtn.interactable = !1;
this.vipNum.string = this.vip + 1;
for (var t = 0; t < this.data.nextconfig.length; t++) {
this.scoreLab[t].string = change_Num_K(this.data.nextconfig[t].ScoreMin);
this.ratioLab[t].string = this.data.nextconfig[t].Ratio / 100 + "%";
}
var i = this.totalPoint, n = this.getNextProgressRebate(this.totalPoint);
this.setNextCurRebateColor(this.totalPoint);
var a = parseInt(.6 * i * n / 1e4);
this.coinRichText.string = "<color=#FCD934>" + i + "*60%*</c><color=#8BFB20>" + n / 100 + "%</color><color=#FCD934> ≈ " + a.toFixed(2) + "</c>";
this.YProgressBar.progress = this.getProgress(this.totalPoint);
}
},
showHelpLayer: function() {
this.nodeHelpLayer.active = !0;
},
refreshData: function(e) {
this.data.recieveStatus = 1;
this.data.rebateScore = e.rebateScore;
this.data.rebateValue = e.rebateValue;
this.data.points += e.receVal;
this.thresholdR = this.getProgress(this.data.rebateScore);
this.bRRunAni = !0;
this.piaoJinBiAni.node.active = !0;
window.mfConfig.PlayAudio("GameLobby/Audio/getCoins", !1);
var t = PlaySkeletonAnimation(this.piaoJinBiAni, !1, "animation");
t.setCompleteListener(function() {
this.piaoJinBiAni.node.active = !1;
this.OnShowGameScore(e.receVal);
NumberProcessChange(this.myPoints, e.receVal, .2);
this.saoGuangAni.node.active = !0;
window.mfConfig.PlayAudio("GameLobby/Audio/sweepLight", !1);
(t = PlaySkeletonAnimation(this.saoGuangAni, !1, "animation")).setCompleteListener(function() {
this.saoGuangAni.node.active = !1;
this.varyState(!1, e);
}.bind(this));
}.bind(this));
},
varyState: function(e, t) {
this.tipLab.string = e ? "Available today" : "Available tomorrow";
this.receiveBtn.interactable = e;
this.todaySp.spriteFrame = e ? this.todaySF[0] : this.todaySF[1];
this.BetPool.spriteFrame = e ? this.BetPoolBg[0] : this.BetPoolBg[1];
this.totalPoint = e ? t.rebateScore : t.rebateValue + t.rebateScore;
this.poolNum.string = this.totalPoint.toLocaleString();
var i = this.totalPoint, n = this.getProgressRebate(this.totalPoint);
this.setCurRebateColor(this.totalPoint);
var a = parseInt(.6 * i * n / 1e4);
this.coinRichText.string = "<color=#FCD934>" + i + "*60%*</c><color=#8BFB20>" + n / 100 + "%</color><color=#FCD934> ≈ " + a.toFixed(2) + "</c>";
this.YProgressBar.progress = this.getProgress(this.totalPoint);
},
OnShowGameScore: function(e) {
var t = cc.instantiate(this.pfGameEndScore);
t.scale = .9;
var i = t.getComponent("jsGameEndScore");
this.showScoreNode.addChild(t);
i.InitGamePoints(e, 1, function() {
t.removeFromParent();
});
},
update: function(e) {
if (this.bRRunAni) {
this.RProgressBar.progress -= cc.clampf(.8 * e, 0, 1);
this.RProgressBar.progress <= this.thresholdR && (this.bRRunAni = !1);
}
},
sendShopCf: function() {
var e = this, t = USI_OnGetInfo(), i = "&uid=" + t.dwUserID + "&sign=" + t.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szPointsShopUrl, i, function(t, i) {
cc.log("sendShopCf", i);
if (t) if (200 == i.statusCode) {
e.shopCf = i.data;
e.setShopNode();
} else ManagerHelp_SetSystemLabel("Network exception, try again"); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
clickLeftButton: function(e, t) {
if (t != this.clickLeft) {
this.clickTop = 0;
this.clickLeft = t;
var n = this.tabNode.children, a = this.tabNode.childrenCount;
for (i = 0; i < a; i++) {
var o = n[i], s = cc.find("imgSelect", o), r = cc.find("imgNormal", o);
if (t == i) {
s.active = !0;
r.active = !1;
} else {
s.active = !1;
r.active = !0;
}
}
this.receiveBtn.node.active = 1 == this.clickLeft;
this.PointContent.active = 1 == this.clickLeft;
this.ShopContent.active = 2 == this.clickLeft;
this.DetailsContent.active = 0 == this.clickLeft;
2 == this.clickLeft && (this.shopCf || this.sendShopCf());
}
}
});
cc._RF.pop();
}, {} ],
jsControlWithdraw: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "9008aE2Hb1Mmb14Tx1aHXfU", "jsControlWithdraw");
cc.color(142, 101, 37), cc.color(102, 100, 96);
var a = e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
labelCurGold: cc.Label,
editWithdraw: cc.EditBox,
labelBindGcash: cc.Label,
labelBtnBindGcash: cc.Label,
pfBindAccount: cc.Prefab,
labelTip: cc.RichText,
labelMaxAndMinTip: cc.RichText,
labelTip2: cc.Label,
scrollViewChannel: cc.Node,
contentChannel: cc.Node,
pfWithdrawChannel: cc.Prefab,
nodeCurrentChannel: cc.Node,
spriteChannel: [ cc.SpriteFrame ],
MaxCashOut: cc.Label,
tabNode: cc.Node,
CashOutContent: cc.Node,
RecordContent: cc.Node,
nodeHelpLayer: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().SetBankInterface(this);
this.lBaseScore = GetProject().lBaseScore;
var e = PlayerManager.GetMeUserItem();
GetMissionLogon().SendPacketInsureInfo(e.GetUserID());
this.channelList = null;
this.curChannel = 0;
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
onDisable: function() {
this.GcashAccount = "";
},
onDestroy: function() {
GetMissionLogon().SetBankInterface(null);
},
OnInitView: function(e) {
this.objGCashInfo = e;
this.updateGCashBingingStatus();
var t = e[DTP_GP_UI_EXCHANGE_LIMIT];
if (null != t) {
this.dwMaxmumScore = t.dwMaxmumScore / this.lBaseScore;
this.dwMinmumScore = t.dwMinmumScore / this.lBaseScore;
this.dwReservedNumScore = 0;
this.dwRevenueRatio = t.wRevenueRatio;
this.labelTip.string = "<color=#97967E>* Fee: <color=#d9804f>" + this.dwRevenueRatio / 10 + "%<color=#97967E> of the withdrawal amount per withdrawal, up to a maximum of<color=#d9804f><color=#97967E> ₱50";
this.labelMaxAndMinTip.string = "<color=#97967E>* The withdrawal amount must be between </c><color=#d9804f>" + this.dwMinmumScore + "</c><color=#97967E> ~ </c><color=#d9804f>" + this.dwMaxmumScore + "</c>";
this.labelTip2.string = "* Activate the max cash out amount after cash in.";
}
this.requestWithdrawConfig();
},
updateGCashBingingStatus: function() {
this.GcashAccount = "";
var e = this.objGCashInfo[DTP_GP_UI_ALIPAY];
if (null != e && null != e) {
this.labelBindGcash.string = ToUtf8(e);
this.GcashAccount = ToUtf8(e);
this.labelBtnBindGcash.string = "Change";
this.labelBindGcash.fontSize = 40;
this.labelBindGcash.node.color = cc.hexToColor("#EAD9A4");
} else {
this.labelBindGcash.string = "No bound Gcash account";
this.GcashAccount = "";
this.labelBtnBindGcash.string = "Bind";
this.labelBindGcash.fontSize = 30;
this.labelBindGcash.node.color = cc.hexToColor("#97967E");
}
},
requestWithdrawConfig: function() {
var e, t = this, i = USI_OnGetInfo(), n = GetProject().szWithdrawConfig;
e = "uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(n, e, function(e, i) {
e ? 200 == i.statusCode && t.showWithdrawList(i) : ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showWithdrawList: function(e) {
this.channelList = e.data;
this.MaxCashOut.string = parseInt(e.withdrawable / 1e3);
if (this.channelList.length > 0) {
var t = this.channelList[0].RequestType;
this.nodeCurrentChannel.getComponent(cc.Sprite).spriteFrame = this.spriteChannel[t];
0 != t && this.requestBindingStatus(t);
}
},
OnSocketSubGPInsureInfo: function(e, t) {
var i = PlayerManager.GetMeUserItem();
this.labelCurGold.string = "₱ " + OnScoreToString(i.GetUserScore());
a.self && a.self.UpdateUserDataItem();
return !0;
},
OnEditEndEvent: function(e, t) {
var i = parseInt(e.string);
isNaN(i) && (i = 0);
var n = PlayerManager.GetMeUserItem().GetUserScore() / GetProject().lBaseScore, a = this.dwMinmumScore + this.dwReservedNumScore, o = parseInt(this.MaxCashOut.string);
if (n < (a = a > (o = o > this.dwMaxmumScore ? this.dwMaxmumScore : o) ? o : a)) i = 0; else {
i < a ? i = a : i > o && (i = o);
i > n - this.dwReservedNumScore && (i = n - this.dwReservedNumScore);
}
if (i < this.dwMinmumScore) {
ManagerHelp_SetSystemLabel("The amount that can be withdrawn is less than " + this.dwMinmumScore);
e.string = "";
} else e.string = parseInt(i);
},
OnResetBtnClick: function() {
this.editWithdraw.string = "";
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"Dis_btnOpenChannel" == i ? this.showChannelList() : "btnHelp" == i && this.showHelpLayer();
},
showHelpLayer: function() {
this.nodeHelpLayer.active = !0;
},
showChannelList: function() {
if (this.channelList.length <= 0) ManagerHelp_SetSystemLabel("There are currently no available redemption channels available!"); else if (1 != this.channelList.length) {
this.scrollViewChannel.active = !this.scrollViewChannel.active;
if (this.scrollViewChannel.active) {
var e = this;
this.contentChannel.removeAllChildren();
for (var t = 0; t < this.channelList.length; t++) {
var i = cc.instantiate(this.pfWithdrawChannel);
this.contentChannel.addChild(i);
var n = this.channelList[t].RequestType;
i.getComponent(cc.Sprite).spriteFrame = this.spriteChannel[n];
i._index = t;
i.on("click", function(t) {
e.selectCurrentChannel(t.target._index);
});
}
}
} else ManagerHelp_SetSystemLabel("There are currently no more redemption channels!");
},
selectCurrentChannel: function(e) {
this.scrollViewChannel.active = !1;
this.updateChannel(e);
},
updateChannel: function(e) {
this.curChannel = this.channelList[e].RequestType;
this.nodeCurrentChannel.getComponent(cc.Sprite).spriteFrame = this.spriteChannel[this.curChannel];
this.scrollViewChannel.active = !1;
0 == this.curChannel ? this.updateGCashBingingStatus() : this.requestBindingStatus(this.curChannel);
},
requestBindingStatus: function(e) {
var t, i = this, n = USI_OnGetInfo(), a = GetProject().szGetBindingStatusUrl;
t = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&type=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(a, t, function(e, t) {
e ? 200 == t.statusCode && i.updateBingInfo(t) : ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
updateBingInfo: function(e) {
if ("" == e.card) {
this.labelBindGcash.string = "No bound account";
this.labelBtnBindGcash.string = "Bind";
} else {
this.labelBindGcash.string = e.card;
this.labelBtnBindGcash.string = "Change";
}
},
OnSendWithdrawHttp: function(e, t) {
var i = this, n = this;
if (this.channelList.length <= 0) ManagerHelp_SetSystemLabel("There are currently no available redemption channels available!"); else if ("" != this.GcashAccount) {
var a = parseInt(this.editWithdraw.string);
if (IsNumber(this.editWithdraw.string)) if (a <= 0) {
ManagerHelp_SetSystemLabel("Please enter a positive integer, please check and enter again!");
this.editWithdraw.string = "";
} else {
var o = PlayerManager.GetMeUserItem(), s = USI_OnGetInfo(), r = "channelid=" + o.GetRegChannelID(), c = GetProject().GetDeviceType(), l = ServerData_GetLocaHallVersion();
r += "&uid=" + s.dwUserID + "&amount=" + a + "&sign=" + s.szSign + "&Model=" + c + "&ver=" + l + "&SourceType=0&withdrawalType=" + this.curChannel;
var h = GetProject().szWithdrawUrl;
if (this.dwRevenueRatio > 0) ManagerHelp_SetSystemAlert("Withdrawal will be deducted " + this.dwRevenueRatio / 10 + "% of the withdrawal amount.Whether to continue the withdrawal", function(t, o) {
if (o == YQ_SYS_OK) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(h, r, function(e, t) {
if (e) {
if (1 == window.logConsole.wirteserverlog) {
ManagerHelp_SetSystemAlert(JSON.stringify(t));
WriteLogsForHttp("devicelog", JSON.stringify(t));
}
var o = "";
if (200 == t.statusCode) {
o = "apply successfully";
n.editWithdraw.string = 0;
GetMissionLogon().SendPacketInsureInfo();
i.MaxCashOut.string = parseInt(i.MaxCashOut.string) - a;
} else o = t.message;
ManagerHelp_SetSystemAlert(o);
}
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
n.buttonDelayClick(e);
}
}, !0); else {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(h, r, function(e, t) {
if (e) {
if (1 == window.logConsole.wirteserverlog) {
ManagerHelp_SetSystemAlert(JSON.stringify(t));
WriteLogsForHttp("devicelog", JSON.stringify(t));
}
var i = "";
if (200 == t.statusCode) {
i = "apply successfully";
n.editWithdraw.string = 0;
GetMissionLogon().SendPacketInsureInfo();
} else i = t.message;
ManagerHelp_SetSystemAlert(i);
}
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
this.buttonDelayClick(e);
}
} else {
ManagerHelp_SetSystemLabel("Format abnormal, please check the input amount");
this.editWithdraw.string = "";
}
} else this.OnShowSaveGcashInfoPrefab();
},
OnShowSaveGcashInfoPrefab: function() {
var e = cc.instantiate(this.pfBindAccount);
this.node.addChild(e);
var t = e.getComponent("jsSavePersonInfo");
t.OnBindSuccess = this.OnBindSuccess.bind(this);
t.OnInitView(this.GcashAccount, this.curChannel);
},
OnBindSuccess: function(e) {
ManagerHelp_SetSystemLabel("The GCash account was successfully bound!");
this.labelBindGcash.string = e;
this.GcashAccount = e;
this.labelBtnBindGcash.string = "Change";
},
buttonDelayClick: function(e) {
var t = e.target;
t.getComponent(cc.Button).interactable = !1;
this.scheduleOnce(function() {
t.getComponent(cc.Button).interactable = !0;
}, 5);
},
OnWithdrawRecordHttp: function(e, t) {
var i = this.RecordContent.getComponent("jsWithdrawRecord");
if (i) {
i.SetTypeValue(0);
i.requestRecordInfo();
}
},
clickLeftButton: function(e, t) {
if (t != this.clickLeft) {
this.clickTop = 0;
this.clickLeft = t;
var n = this.tabNode.children, a = this.tabNode.childrenCount;
for (i = 0; i < a; i++) {
var o = n[i], s = cc.find("imgSelect", o), r = cc.find("imgNormal", o);
if (t == i) {
s.active = !0;
r.active = !1;
} else {
s.active = !1;
r.active = !0;
}
}
if (0 == this.clickLeft) {
this.CashOutContent.active = !0;
this.RecordContent.active = !1;
} else {
this.CashOutContent.active = !1;
this.RecordContent.active = !0;
this.OnWithdrawRecordHttp();
}
}
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsCustomer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "745a2dQ8B5APIjAxAp2qEgJ", "jsCustomer");
cc.Class({
extends: cc.Component,
properties: {
labelCustomInfo: cc.Label,
btnGroup: [ cc.Node ],
ContentService: cc.Node,
ContentQA: cc.Node,
ContentFeedBack: cc.Node,
nodeBtnType: [ cc.Node ],
nodeSelect: cc.Node,
editBoxContent: cc.EditBox
},
onLoad: function() {
this.url = "";
this.type = 0;
AddXmasPrefab(cc.find("nodeContent", this.node));
0 == GetProject().cbCheckAccounts ? this.btnGroup[1].active = !0 : this.btnGroup[1].active = !1;
},
start: function() {
var e = this, t = USI_OnGetInfo(), i = "typeid=9&uid=" + t.dwUserID + "&sign=" + t.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().facebookUrl, i, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data;
if (n) {
var a = n.kefuSrv[0];
e.url = a.WechatID;
e.labelCustomInfo.string = a.NickName;
} else ManagerHelp_SetSystemLabel("request failed,please try again！");
} else ManagerHelp_SetSystemLabel(i.message); else ManagerHelp_SetSystemLabel("request failed,please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
copyUrlBtnClick: function() {
null != this.labelCustomInfo.string && null != this.labelCustomInfo.string && "" != this.url && cc.sys.openURL(this.url);
},
onlineServiceBtnClick: function() {
var e = PlayerManager.GetMeUserItem(), t = "http://service.phoenixvideogame.com:8081/chatIndex?kefu_id=phoenix&ent_id=10&game_user_id=" + e.GetGameID() + "&userid=" + e.GetUserID() + "&vip=" + e.GetMemberOrder();
cc.sys.openURL(t);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"Service" == i ? this.updateLayer(0) : "QA" == i ? this.updateLayer(1) : "FeedBack" == i && this.updateLayer(2);
if (0 == i.indexOf("btnType")) {
var n = parseInt(t);
this.updateType(n);
} else "Dis_BtnSend" == i && this.sendFeedback();
},
updateLayer: function(e) {
if (null != cc.sys.localStorage.getItem("account") || 0 == e) {
for (var t = 0; t < this.btnGroup.length; t++) {
this.btnGroup[t].getChildByName("imgSelect").active = !1;
this.btnGroup[t].getChildByName("imgNormal").active = !0;
}
this.ContentService.active = 0 == e;
this.ContentQA.active = 1 == e;
this.ContentFeedBack.active = 2 == e;
this.btnGroup[e].getChildByName("imgSelect").active = !0;
this.btnGroup[e].getChildByName("imgNormal").active = !1;
}
},
updateType: function(e) {
this.nodeSelect.x = this.nodeBtnType[e].x + 20;
this.type = e;
},
sendFeedback: function() {
var e = this;
if (this.editBoxContent.string.length <= 0) ManagerHelp_SetSystemLabel("Feedback content cannot be empty"); else {
var t = GetProject().szFeedbackUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&type=" + this.type + "&content=" + this.editBoxContent.string;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
if (t) {
if (200 == i.statusCode) {
ManagerHelp_SetSystemLabel("Successfully");
e.editBoxContent.string = "";
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
}
});
cc._RF.pop();
}, {} ],
jsDownGame: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1f92aKZgu1JE62XR1xuiSXF", "jsDownGame");
cc.Class({
extends: cc.Component,
properties: {
nodeBtnRegister: cc.Node,
nodeBtnDown: cc.Node,
nodeQRCode: cc.Node,
pfRegister: cc.Prefab
},
onLoad: function() {
SceneManager_AlertShow(this.node);
var e = GetProject().GetRegister();
this.nodeBtnRegister.active = !e;
"Windows" == cc.sys.os || "OS X" == cc.sys.os ? this.nodeBtnDown.active = !1 : this.nodeBtnDown.active = !0;
},
start: function() {
var e = this.nodeQRCode.getComponent("jsMagicQRCode"), t = GetProject().szDownloadUrl;
e.string = t;
},
OnButtonEvent: function(e, t) {
e.target;
var i = parseInt(t);
if (0 == i) SceneManager_PushBack(SceneType.Prefab_Init, this.pfRegister, function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlPersionalInformation").OnShowRegisterLayer();
}
}); else if (1 == i) {
var n = GetProject().szDownloadUrl, a = document.createElement("a");
a.setAttribute("target", "_blank");
a.setAttribute("href", n);
a.click();
}
}
});
cc._RF.pop();
}, {} ],
jsEmailInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c7fbdfCFzRNu5OZNTOD0BOj", "jsEmailInfo");
cc.Class({
extends: cc.Component,
properties: {
nodeMsg: cc.Node,
nodeGold: cc.Node,
labelBody: cc.Label,
labelSend: cc.Label,
labelGoldTip: cc.Label,
labelGold: cc.Label,
ScrviewGold: cc.ScrollView,
jsEmailItem: null
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
start: function() {},
OnReceiveBtnCallback: null,
OnInitData: function(e) {
this.jsEmailItem = e;
var t = e.stEmail, i = ToUtf8(t.szBody);
if (t.lAttachedScore > 0 && 0 == t.cbAttachmentState) {
this.labelGold.string = OnScoreToString(t.lAttachedScore);
this.nodeMsg.active = !1;
this.nodeGold.active = !0;
this.labelGoldTip.string = i;
var n = this.ScrviewGold.node.height, a = this;
this.scheduleOnce(function() {
a.labelGoldTip.node.height > n && a.ScrviewGold.scrollToTop(0);
}, .1);
} else {
this.nodeMsg.active = !0;
this.nodeGold.active = !1;
this.labelBody.string = i;
}
0 == t.dwSrcUserId && (this.labelSend.string = "Sender: GM");
},
OnReceiveEvent: function(e, t) {
this.OnReceiveBtnCallback && this.OnReceiveBtnCallback(this.jsEmailItem, this);
}
});
cc._RF.pop();
}, {} ],
jsEmailItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "740b2jl95pDFYTKrp/asRGx", "jsEmailItem");
cc.Class({
extends: cc.Component,
properties: {
nodeNormalIcon: cc.Node,
nodeGoldIcon: cc.Node,
spFNormalIcon: [ cc.SpriteFrame ],
spFGoldIcon: [ cc.SpriteFrame ],
labelReceiveGold: cc.Label,
labelTitle: cc.Label,
labelTime: cc.Label,
labelSend: cc.Label,
nodeNew: cc.Node,
stEmail: null
},
OnButtonCallback: null,
onLoad: function() {},
start: function() {},
OnSetIcon: function(e) {
if (e > 0) {
this.nodeGoldIcon.active = !0;
this.labelReceiveGold.string = OnScoreToString(e);
} else this.nodeGoldIcon.active = !1;
},
OnSetBtnShow: function(e, t, i, n) {
if (0 == t && i > 0) {
this.node.zIndex = 1 == n ? -1 : 0;
this.nodeNew.active = !0;
this.nodeNormalIcon.getComponent(cc.Sprite).spriteFrame = this.spFNormalIcon[0];
this.nodeGoldIcon.getComponent(cc.Sprite).spriteFrame = this.spFGoldIcon[0];
} else if (0 == e) {
this.node.zIndex = 1 == n ? 1 : 2;
this.nodeNew.active = !0;
this.nodeNormalIcon.getComponent(cc.Sprite).spriteFrame = this.spFNormalIcon[0];
this.nodeGoldIcon.getComponent(cc.Sprite).spriteFrame = this.spFGoldIcon[0];
} else {
this.node.zIndex = 1 == n ? 3 : 4;
this.nodeNew.active = !1;
this.nodeNormalIcon.getComponent(cc.Sprite).spriteFrame = this.spFNormalIcon[1];
this.nodeGoldIcon.getComponent(cc.Sprite).spriteFrame = this.spFGoldIcon[1];
}
},
OnButtonEvent: function(e, t) {
this.OnButtonCallback && this.OnButtonCallback(this, t);
}
});
cc._RF.pop();
}, {} ],
jsExCommisItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "656f4UOxwtMZ6FVjVTkroSw", "jsExCommisItem");
cc.Class({
extends: cc.Component,
properties: {
labelDate: cc.Label,
labelNumComm: cc.Label,
labelBetComm: cc.Label,
labelTotalComm: cc.Label,
jsonItemData: null
},
onLoad: function() {},
start: function() {}
});
cc._RF.pop();
}, {} ],
jsExLingquRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d36ec4s7NlE9Lb+IAt+PUAb", "jsExLingquRecordItem");
cc.Class({
extends: cc.Component,
properties: {
labelValue: cc.Label,
labelTime: cc.Label,
labelState: cc.Label
},
OnButtonCallback: null,
onLoad: function() {},
start: function() {},
OnSetListData: function(e) {
this.labelValue.string = e.fee + "";
this.labelTime.string = "" + e.date;
1 == e.state ? this.labelState.string = "Arrived" : this.labelState.string = "Uncollected";
}
});
cc._RF.pop();
}, {} ],
jsExLingquRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "05adaWhGmRMQrjfoPiH0EhU", "jsExLingquRecord");
cc.Class({
extends: cc.Component,
properties: {
recordScrollview: cc.ScrollView,
contentScrollview: cc.Node,
pfLingquRecordItem: cc.Prefab
},
onLoad: function() {
AddXmasPrefab(cc.find("nodeLingqu", this.node));
},
SetUserDataItem: function(e) {
var t, i = this, n = USI_OnGetInfo(), a = GetProject().commissionUrl, o = 0 == e ? 7 : 10;
t = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&typeid=" + o;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(a, t, function(t, n) {
if (t) if (200 == n.statusCode) {
var a = (o = n.data).extract;
if (null != a && null != a) {
var o = n.data, s = void 0;
0 == e ? s = o.extract : 1 == e && (s = o.extractInsure);
if (null != s) for (var r = 0; r < s.length; r++) {
var c = cc.instantiate(i.pfLingquRecordItem);
c.getComponent("jsExLingquRecordItem").OnSetListData(s[r]);
i.contentScrollview.addChild(c);
}
}
} else ManagerHelp_SetSystemLabel("Request CommissionData failed. Please try again！"); else ManagerHelp_SetSystemLabel("Request CommissionData failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
displayLingquDetail: function(e) {
if (null != e && null != e) {
this.contentScrollview.removeAllChildren();
this.recordScrollview.stopAutoScroll();
this.recordScrollview.scrollToTop(.1);
for (var t = 0; t < e.length; t++) {
var i = cc.instantiate(this.pfLingquRecordItem), n = i.getComponent("jsExLingquRecordItem");
i.y = -1 * (t * (i.height + 4) + i.height / 2);
this.contentScrollview.addChild(i);
n.labelValue.string = "" + e[t].fee;
n.labelTime.string = "" + e[t].date;
n.labelState.string = "" + e[t].state;
}
}
}
});
cc._RF.pop();
}, {} ],
jsFirstTopUp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0ccffn82rxBeKhGMej6Suvo", "jsFirstTopUp");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetPopHelper().GetOnePopup();
});
},
onfastGame: function() {
window.mfConfig.onEvent("af_enter_room", JSON.stringify({
af_game_id: 303
}));
cc.log("zzzzzzzzz 进入游戏 wKindID = 303");
if (GCF_IsGameGold(303)) {
var e = ServerData_GetGameServerIngoreJoinID(303);
if (null == e) {
ManagerHelp_SetSystemAlert("The room is full, please try later.");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else {
var t = PlayerManager.GetMeUserItem();
if (e.lMinEnterScore > t.GetUserScore()) {
ManagerHelp_SetSystemAlert("your gold is below the minimum limit of " + OnScoreToString(e.lMinEnterScore) + " for the current game room.");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return;
}
if (e.lMaxEnterScore > 0 && t.GetUserScore() > e.lMaxEnterScore) {
ManagerHelp_SetSystemAlert("your gold is higher the maximum limit of " + OnScoreToString(e.lMaxEnterScore) + " for the current game room.");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
return;
}
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetServerRoom().SetOperateName("QuickGame");
GetServerRoom().SetGameServer(e);
GetServerRoom().OnLogonGameEvent(e);
cc.log("zzzzzzzzz 进入游戏 end");
}
} else this.OnMatchGameRule(303);
},
onButtonClick: function() {
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/ControlShopBY", function(e, t) {
e || (t.zIndex = 3);
});
}
});
cc._RF.pop();
}, {} ],
jsFrameUser: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8633dIb4llKw4pZf4jlBynh", "jsFrameUser");
cc.Class({
extends: cc.Component,
szHeadImgUrl: "",
szNickName: "",
dwGameID: 0,
jsControlSystemMsg: null,
wViewID: 0,
OnUpdateVerifyCount: null,
GetHeadImgUrl: function() {
return this.szHeadImgUrl;
},
GetNickName: function() {
return this.szNickName;
},
GetGameId: function() {
return this.dwGameID;
},
properties: {
wUserType: 0,
bCanTouch: !0,
bSetcount: !1,
jsUserItem: null,
pfLobbyInfo: cc.Prefab,
pfAgentInfo: cc.Prefab,
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite,
btnHead: cc.Button,
labelNickName: cc.Label,
labelGold: cc.Label,
labelInsure: cc.Label,
nodeInsure: cc.Node,
labelGameId: cc.Label,
labelUserIp: cc.Label,
labelMemberOrder: cc.Label,
labelMemberOrderExp: cc.Label,
labelSpecial: cc.Label,
labelGameScore: cc.Label,
nodeReady: cc.Node,
nodeOffLine: cc.Node,
nodeBanker: cc.Node
},
onLoad: function() {},
onEnable: function() {},
SetHeadText: function(e, t) {
var i = "common/UserHead/Head_" + (e = e <= 15 ? e : 15), n = this;
cc.loader.loadRes(i, cc.SpriteFrame, function(e, i) {
if (!e) {
n.spUserHead && (n.spUserHead.spriteFrame = i);
t && t();
}
});
},
SetHeadFerameText: function(e) {
var t = "common/HeadFrame/Frame_" + (e = e <= 9 ? e : 9), i = this;
cc.loader.loadRes(t, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
},
start: function() {},
SetReadyActive: function(e) {
this.nodeReady && (this.nodeReady.active = e);
},
SetOffLineActive: function(e) {
this.nodeOffLine && (this.nodeOffLine.active = e);
},
SetBankerActive: function(e) {
this.nodeBanker && (this.nodeBanker.active = e);
},
SetNickName: function(e) {
this.labelNickName && (this.labelNickName.string = OnConverString(e));
},
SetGameID: function(e) {
this.labelGameId && (this.labelGameId.string = parseInt(e));
this.dwGameID = e;
},
SetViewID: function(e) {
this.wViewID = e;
},
GetViewID: function() {
return this.wViewID;
},
SetUserCout: function(e) {
this.bSetcount = e;
},
SetNickNameColor: function(e) {
this.labelNickName && (this.labelNickName.node.color = e);
},
UpdateUserGold: function(e) {
if (this.jsUserItem) {
var t = this.jsUserItem.GetUserScore();
"number" == typeof e && (t += e);
this.SetUserGold(t);
}
},
SetUserGold: function(e) {
if (this.labelGold) {
if (400 == GetServerRoom().GetKindID() && this.dwGameID != PlayerManager.GetMeUserItem().GetGameID()) {
this.labelGold.string = "****";
return;
}
this.bSetcount ? this.labelGold.string = OnScoreToString(e, 3) : this.labelGold.string = OnScoreToString(e);
}
},
UpdateGameScore: function(e) {
if (this.jsUserItem) {
var t = this.jsUserItem.GetUserScore();
"number" == typeof e && (t += e);
this.SetGameScore(t);
}
},
SetGameScore: function(e) {
this.labelGameScore && (this.bSetcount ? this.labelGameScore.string = OnScoreToString(e, 3) : this.labelGameScore.string = OnScoreToString(e));
},
SetGameScoreColor: function(e) {
this.labelGameScore && (this.labelGameScore.node.color = e);
},
SetUserDataItem: function(e, t) {
var i = this;
if (null != e) {
var n = GetProject().GetCanShop();
if (this.labelGold) {
var a = this.labelGold.node.parent.getComponent(cc.Button);
a && (a.interactable = n);
}
if (e) {
this.jsUserItem = e;
this.szHeadImgUrl = e.GetExternFaceUrl();
this.szNickName = e.GetNickNameUtf8();
this.dwGameID = e.GetGameID();
this.SetHeadSpriteFrame(e, function() {
i.labelNickName && (i.wUserType ? i.labelNickName.string = OnConverString(i.szNickName) : i.labelNickName.string = i.szNickName);
i.labelGameId && (i.labelGameId.string = "ID:" + i.dwGameID);
i.UpdateUserGold();
i.UpdateGameScore();
i.labelUserIp && (i.labelUserIp.string = e.GetIp());
var n = e.GetUserInsure();
i.labelInsure && (i.labelInsure.string = OnScoreToString(n));
i.nodeInsure && (i.nodeInsure.active = !1);
i.OnSocketSubGPVipInfo(e);
t && t();
});
}
} else cc.warn("jsUserItem = null return");
},
SetHeadSpriteFrame: function(e, t) {
var i = e.GetFaceID();
this.SetHeadText(i, t);
var n = e.GetFaceFrameID();
this.SetHeadFerameText(n);
},
SetAddbuttonState: function(e) {
if (0 == e) {
this.ButAddFriends.active = !1;
this.NodeFriended.active = !1;
} else {
this.ButAddFriends.active = !1;
this.NodeFriended.active = !0;
}
},
SetUserNameTail: function(e) {
this.labelNickName && (this.labelNickName.string = OnConverString(this.szNickName, e));
},
OnUpdateUserHeadImg: function(e, t) {
var i = this;
window.mfConfig.LoadUserHeadImg(e, t, function(e, t) {
sprite && (i.spUserHead.spriteFrame = t);
});
},
ResetGameData: function() {
this.nodeReady && (this.nodeReady.active = !1);
this.nodeBanker && (this.nodeBanker.active = !1);
},
OnEventFunction: null,
OnButtonEvent: function(e, t) {
if (this.bCanTouch) {
OnBtnClickAgainEvent(e.target);
var i = this;
PlayerManager.GetMeUserItem();
0 == i.wUserType ? SceneManager_PushBack(window.SceneType.Prefab_Init, i.pfLobbyInfo, function(e, t) {
if (t) {
t.zIndex = 3;
var n = t.getComponent("jsFrameUser");
n && n.SetUserDataItem(i.jsUserItem);
}
}.bind(this), "AddChild") : GameFrameView.instances && GameFrameView.instances.OnFrameButtonUserHead(i.jsUserItem, i.wUserType);
}
},
OnDisableBtn: function(e) {
this.btnHead && (this.btnHead.interactable = e);
},
OnRemoveAction: function() {
this.node.runAction(cc.sequence(cc.moveTo(.2, this.node.x, this.node.y - this.node.height), cc.removeSelf()));
},
OnUpdateUserScore: function() {
var e = PlayerManager.GetMeUserItem();
if (null != e) {
this.labelGold && (this.bSetcount ? this.labelGold.string = OnScoreToString(e.GetUserScore(), 3) : this.labelGold.string = OnScoreToString(e.GetUserScore()));
this.labelInsure && (this.labelInsure.string = OnScoreToString(e.GetUserInsure()));
this.nodeInsure && (this.nodeInsure.active = !1);
}
},
OnSocketSubGPVipInfo: function(e) {
var t = PlayerManager.GetMeUserItem();
1 == arguments.length && (t = e);
if (this.labelMemberOrder) {
var i = GetProject().bAppShop;
i ? this.labelMemberOrder.node.parent.active = !1 : i || 0 != t.GetMemberOrder() || null == GetGameFrameEngine() ? this.labelMemberOrder.node.parent.active = !0 : this.labelMemberOrder.node.parent.active = !1;
this.labelMemberOrder.string = t.GetMemberOrder();
}
this.labelMemberOrderExp && (this.labelMemberOrderExp.string = t.GetMemberExp());
},
OnSocketSubGPInsureInfo: function(e, t) {
this.OnUpdateUserScore();
return !0;
},
OnSocketSubGPBankSucceed: function(e, t) {
this.OnUpdateUserScore();
return !0;
},
OnSocketSubGPBankFailure: function(e, t) {
return !0;
}
});
cc._RF.pop();
}, {} ],
jsGameEndScore: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b17a80XcE9BB75Gy2ikicnZ", "jsGameEndScore");
cc.Class({
extends: cc.Component,
properties: {
nodeWinScore: cc.Node,
labelWinScore: cc.Label,
labelLoseScore: cc.Label,
nodeParticle: cc.Node
},
InitGameScore: function(e, t, i) {
if (e >= 0) {
this.nodeWinScore.active = !0;
this.labelLoseScore.node.active = !1;
this.labelWinScore.string = "+" + OnScoreToString(e);
} else {
this.nodeWinScore.active = !1;
this.labelLoseScore.node.active = !0;
this.labelLoseScore.string = "-" + OnScoreToString(-e);
}
this.OnRemoveTarget(i, t);
},
InitGamePoints: function(e, t, i) {
if (e >= 0) {
this.nodeWinScore.active = !0;
this.labelLoseScore.node.active = !1;
this.labelWinScore.string = "+" + e;
} else {
this.nodeWinScore.active = !1;
this.labelLoseScore.node.active = !0;
this.labelLoseScore.string = "-" + -e;
}
this.OnRemoveTarget(i, t);
},
OnRemoveTarget: function(e, t) {
null != e && null != e && (this.callbackFinish = e);
var i = this, n = 1;
null != t && null != t && t > 0 && (n = t);
var a = cc.sequence(cc.moveTo(n, cc.v2(0, 60)), cc.delayTime(n), cc.callFunc(function() {
i.nodeParticle && (i.nodeParticle.active = !1);
null != e && null != e && i.callbackFinish();
}));
this.node.runAction(a);
},
SetGameEndScore: function(e) {
if (1 == e) {
this.labelWinScore.node.setAnchorPoint(1, .5);
this.labelWinScore.HorizontalAlign = 0;
this.labelLoseScore.node.setAnchorPoint(1, .5);
this.labelLoseScore.HorizontalAlign = 0;
this.nodeParticle.setAnchorPoint(1, .5);
this.nodeParticle.HorizontalAlign = 0;
} else if (0 == e || 4 == e) {
this.labelWinScore.node.setAnchorPoint(0, .5);
this.labelWinScore.HorizontalAlign = 2;
this.labelLoseScore.node.setAnchorPoint(0, .5);
this.labelLoseScore.HorizontalAlign = 2;
this.nodeParticle.setAnchorPoint(0, .5);
this.nodeParticle.HorizontalAlign = 2;
}
}
});
cc._RF.pop();
}, {} ],
jsGameGuide: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ad6b4GGC95A4KP7qjyeLWen", "jsGameGuide");
cc.Class({
extends: cc.Component,
properties: {
nodeGuideScrollview: cc.ScrollView,
nodeLayout: cc.Node,
nodePage: cc.Node,
pfItemLayout: cc.Prefab,
bLobby: !1
},
OnButtonClick: null,
onLoad: function() {},
start: function() {
if (cc.sys.isBrowser && 3002 == GetServerRoom().GetKindID() || this.bLobby) {
var e = this.nodeLayout.getComponent(cc.Widget);
e && (e.enabled = !1);
var t = this;
this.nodeGuideScrollview.scrollToLeft(.01);
var i = cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
t.nodeGuideScrollview.horizontal = !1;
}));
this.node.runAction(i);
}
this.nodePage && 0 == GS_OnGetValueByKey("s9", NodeActive_TRUE) && (this.nodePage.active = !1);
},
OnShowGuideGame: function(e, t, i, n) {
this.node.active = !0;
this.nodeLayout.removeAllChildren();
for (var a = null, o = 0; o < t; o++) {
var s = cc.instantiate(this.pfItemLayout);
this.nodeLayout.addChild(s);
if (o == e) {
a = s;
n.setPosition(cc.v2(0, 0));
s.addChild(n, -1);
}
}
if (a.x + a.width / 2 > i) {
a.x, a.width, this.nodeLayout.width;
this.nodeGuideScrollview.scrollToPercentHorizontal(1, 1);
}
a.getChildByName("nodeGuide").active = !0;
cc.sys.isBrowser && this.nodeGuideScrollview.scrollToLeft(.1);
},
OnShowGuideField: function(e, t, i) {
this.node.active = !0;
for (var n = 0; n < t; n++) {
var a = cc.instantiate(this.pfItemLayout);
if (0 == n) {
this.nodeLayout.addChild(a, -1);
e.setPosition(cc.v2(0, 0));
a.addChild(e, -1);
a.getChildByName("nodeGuide").active = !0;
i && (this.OnButtonClick = i);
e.on(cc.Node.EventType.TOUCH_END, this.OnCloseGuideView, this);
} else this.nodeLayout.addChild(a, 0);
}
},
OnCloseGuideView: function() {
this.node.opacity = 0;
var e = this, t = cc.sequence(cc.delayTime(.01), cc.callFunc(function() {
e.node.removeFromParent();
}));
this.OnButtonClick && this.OnButtonClick();
this.node.runAction(t);
},
OnEnabledNode: function() {
this.nodeGuideScrollview && (this.nodeGuideScrollview.horizontal = !1);
}
});
cc._RF.pop();
}, {} ],
jsGameKind: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6425ePehFRNPadiWSVchkiA", "jsGameKind");
var n = e("../Developer/HotUpdate/CUpdateDef").default, a = e("../Developer/HotUpdate/CUpdateManager").default, o = [];
o[130] = "Crash";
o[131] = "TossACoin";
o[133] = "DragonTiger";
o[134] = "ColorGame";
o[135] = "MythicalAnimals";
o[136] = "BlackRed";
o[137] = "BirdAnimals";
o[138] = "Baccarat";
o[139] = "Benz&BMW";
o[141] = "Bullfighting";
o[300] = "Minesweeper";
o[301] = "Plinko";
o[302] = "JamminJars";
o[303] = "Treasuredigging";
o[304] = "Plinko2";
o[306] = "TreasureHunt";
o[307] = "luckyfruit";
o[400] = "Tongits";
o[500] = "CrazyMonkey";
o[501] = "AztecMagic";
o[502] = "AztecMagicPlus";
o[504] = "CapatainsTreasure";
o[505] = "Hot777";
o[506] = "FortuneRabbit";
o[3002] = "Fishing";
cc.Class({
extends: cc.Component,
properties: {
nodeIcon: cc.Node,
nodeUpdatePanel: cc.Node,
nodeNewIcon: cc.Node,
proNewRes: cc.ProgressBar,
labelPercent: cc.Label,
nodeHot: cc.Node,
nodeNew: cc.Node,
nodeComming: cc.Node
},
onLoad: function() {
this.wKindID = 0;
this.bShowPleaseWait = !1;
this.OnButtonClick = null;
},
GetKindID: function() {
return this.wKindID;
},
SetGameFlag: function(e) {
if (2 == e) this.nodeHot.active = !0; else if (3 == e) this.nodeNew.active = !0; else if (4 == e) {
this.bShowPleaseWait = !0;
this.nodeComming.active = !0;
}
},
SetGameKind: function(e) {
cc.systemEvent.on(n.check + e, this.updateTask_Check.bind(this), this, !1);
cc.systemEvent.on(n.wait + e, this.updateTask_Wait.bind(this), this, !1);
cc.systemEvent.on(n.start + e, this.updateTask_Start.bind(this), this, !1);
cc.systemEvent.on(n.percent + e, this.updateTask_Percent.bind(this), this, !1);
cc.systemEvent.on(n.finish + e, this.updateTask_Finish.bind(this), this, !1);
this.wKindID = e;
this.SetGameIcon(e);
1 == GetProject().cbCheckAccounts && e == GetProject().checkGameId || this.bShowPleaseWait || this.OnCheckVersion(!1);
},
updateTask_Check: function(e) {
if (e.detail.gameId == this.wKindID) {
var t = e.detail.cache_version, i = e.detail.server_version, a = n.toVerProcess(t), o = n.toVerProcess(i);
this.nodeNewIcon.active = a < o;
}
},
updateTask_Wait: function(e) {
if (e.detail.gameId == this.wKindID) {
this.labelPercent.string = "Waiting";
this.proNewRes.node.active = !0;
this.proNewRes.progress = 0;
}
},
updateTask_Start: function(e) {
if (e.detail.gameId == this.wKindID) {
this.nodeNewIcon.active = !1;
this.proNewRes.node.active = !0;
this.proNewRes.progress = 0;
}
},
updateTask_Percent: function(e) {
if (e.detail.gameId == this.wKindID) {
var t = e.detail.percent;
this.proNewRes.node.active = !0;
this.nodeNewIcon.active = !1;
this.labelPercent.string = t + "%";
this.proNewRes.progress = t / 100;
}
},
updateTask_Finish: function(e) {
if (e.detail.gameId == this.wKindID) {
this.proNewRes.node.active = !1;
ManagerHelp_SetSystemLabel("update successfully!");
}
},
SetGameIcon: function(e) {
var t = this;
if (this.nodeIcon && null != o[e] && null != o[e]) {
var i = "GameLobby/GameIcon/iconKind";
cc.loader.loadRes(i, cc.SpriteFrame, function(e, n) {
if (e) cc.warn("SetGameKind.Error.spriteFrame（" + i + "）.is.null"); else {
t.nodeIcon.getComponent(cc.Sprite).spriteFrame = n;
t.nodeIcon.active = !0;
}
});
var n = t.nodeIcon.getChildByName("skeletonNode");
n.setPosition(cc.p(0, 0));
var a = n.getComponent(sp.Skeleton), s = "GameLobby/GameIcon/IconSpine/" + o[e];
GetProject().isChristmasSkinOpen && (s = "GameLobby/Xmas/IconSpine/" + o[e]);
cc.loader.loadRes(s, sp.SkeletonData, function(e, t) {
a.skeletonData = t;
a.animation = "animation";
});
}
},
SetIconCutsomData: function(e) {
this.node.getComponent(cc.Button).clickEvents[0].customEventData = e;
},
OnButtonEvent: function(e, t) {
if (this.bShowPleaseWait) ManagerHelp_SetSystemLabel("The game is not open yet, please looking forward to it!"); else {
var i = !1;
window.SwitchType != window.SC_Local && (i = a.getInstance().isNeedHotUpdate(this.wKindID, !0));
!i && this.OnButtonClick && this.OnButtonClick(this, this.wKindID);
}
},
onDestroy: function() {
this._am && this._am.release();
},
GetLocalVersion: function() {
return this._am.getLocalManifest().getVersion();
},
IsShowNode: function(e) {
null != this.nodeUpdatePanel && null != this.nodeUpdatePanel && (this.nodeUpdatePanel.active = e);
},
OnCheckVersion: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
this.nodeNewIcon && (this.nodeNewIcon.active = !1);
cc.sys.isNative && window.SwitchType != window.SC_Local && a.getInstance().checkUpdate(this.wKindID, e);
}
});
cc._RF.pop();
}, {
"../Developer/HotUpdate/CUpdateDef": "CUpdateDef",
"../Developer/HotUpdate/CUpdateManager": "CUpdateManager"
} ],
jsGameNameItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5b3fTy/3xBtrYqSQVPznUH", "jsGameNameItem");
var n = [];
n[104] = cc.size(478, 612);
cc.Class({
extends: cc.Component,
properties: {
nodeFieldBg: cc.Node,
nodeScore: cc.Node,
labelBaseScore: cc.Label,
labelDesc: cc.Label,
labelMinGold: cc.Label,
dwJionModel: 0,
wKindId: 0
},
OnButtonClick: null,
init: function(e) {
this.wKindId = e;
},
OnTransitionRegister: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this.OnTransitionStart, this);
this.node.on(cc.Node.EventType.TOUCH_END, this.OnTransitionEnded, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTransitionCancel, this);
},
OnTransitionStart: function() {
for (var e = this.node.getComponent(cc.Toggle).toggleGroup.getComponent(cc.ToggleGroup), t = 0; t < e.toggleItems.length; t++) if (e.toggleItems[t]) {
var i = e.toggleItems[t].getComponent(cc.Toggle);
1 == i.isChecked && (this.BeforeSelectIndex = t);
i.isChecked = !1;
}
this.node.getComponent(cc.Toggle).isChecked = !0;
this.node.runAction(cc.scaleTo(.1, 1.1, 1));
},
OnTransitionEnded: function() {
this.node.runAction(cc.scaleTo(0, 1, 1));
var e = this.node.getComponent(cc.Toggle);
e.isChecked = !1;
e.check();
},
OnTransitionCancel: function() {
this.node.runAction(cc.scaleTo(0, 1, 1));
this.node.getComponent(cc.Toggle).isChecked = !1;
var e = this.node.getComponent(cc.Toggle).toggleGroup.getComponent(cc.ToggleGroup);
e.toggleItems[this.BeforeSelectIndex] && (e.toggleItems[this.BeforeSelectIndex].isChecked = !0);
},
SetFieldBg: function(e, t) {
var i = this, a = n[e];
a ? i.node.setContentSize(a) : i.node.setContentSize(cc.size(474, 750));
var o = "GameLobby/GameField/" + e + "_" + t;
cc.loader.loadRes(o, cc.SpriteFrame, function(t, n) {
if (t) cc.warn("SetFieldBg.Error.spriteFrame（" + o + "）.is.null"); else if (i.nodeFieldBg) {
i.nodeFieldBg.getComponent(cc.Sprite).spriteFrame = n;
i.nodeFieldBg.active = !0;
104 != e && (i.nodeScore.active = !0);
}
});
},
SetToggleGroup: function(e) {
var t = this.node.getComponent(cc.Toggle);
t.toggleGroup = e.getComponent(cc.ToggleGroup);
t.toggleGroup.toggleItems.push(t);
},
SetToggleCheck: function(e) {
var t = this.node.getComponent(cc.Toggle);
e && t.check();
},
onLoad: function() {},
OnButtnCallbackEvent: function(e, t) {
this.OnButtonClick && this.OnButtonClick(this);
}
});
cc._RF.pop();
}, {} ],
jsGoldAction: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "956fdt6kqlKOpzk+NmUm5aH", "jsGoldAction");
cc.Class({
extends: cc.Component,
properties: {
nodeParticle: cc.Node
},
onLoad: function() {},
start: function() {},
OnPlayAction: function() {
this.nodeParticle.active = !0;
this.nodeParticle.getComponent(cc.ParticleSystem).resetSystem();
window.mfConfig.PlayAudio("GameLobby/Audio/gold", !1);
var e = cc.sequence(cc.delayTime(2), cc.removeSelf());
this.node.runAction(e);
}
});
cc._RF.pop();
}, {} ],
jsGoodLuck: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c842476411L3JHV5WYmtci1", "jsGoodLuck");
cc.Class({
extends: cc.Component,
properties: {
winNode: cc.Node,
goodLuck: cc.Node,
pleaseSpin: cc.Node
},
onLoad: function() {},
start: function() {},
stopAllAni: function() {
this.goodLuck.stopAllActions();
this.pleaseSpin.stopAllActions();
this.winNode.stopAllActions();
this.bPlaySpinAni = !1;
},
showWinNode: function() {
this.winNode.opacity = 255;
this.goodLuck.opacity = 0;
this.pleaseSpin.opacity = 0;
},
playEnterAni: function() {
this.stopAllAni();
this.winNode.opacity = 0;
this.goodLuck.opacity = 0;
this.pleaseSpin.opacity = 255;
var e = cc.sequence(cc.delayTime(7), cc.fadeTo(1, 255), cc.delayTime(7), cc.fadeTo(1, 0)), t = cc.sequence(cc.delayTime(7), cc.fadeTo(1, 0), cc.delayTime(7), cc.fadeTo(1, 255));
this.goodLuck.runAction(cc.repeatForever(e));
this.pleaseSpin.runAction(cc.repeatForever(t));
},
playSpinAni: function() {
this.stopAllAni();
this.showWinNode();
this.bPlaySpinAni = !0;
var e = cc.sequence(cc.delayTime(12), cc.fadeTo(1, 255), cc.delayTime(6), cc.fadeTo(1, 0)), t = cc.sequence(cc.delayTime(12), cc.fadeTo(1, 0), cc.delayTime(6), cc.fadeTo(1, 255));
this.goodLuck.runAction(cc.repeatForever(e));
this.winNode.runAction(cc.repeatForever(t));
}
});
cc._RF.pop();
}, {} ],
jsHandCardTexture: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "42139PL4JRAoKtqxnVuROAD", "jsHandCardTexture");
var n = cc.Class({
extends: cc.Component,
statics: {
instance: null
},
properties: {
handcardAtlas: cc.SpriteAtlas,
spCardHand: [ cc.SpriteFrame ],
spCardHandData: [ cc.SpriteFrame ],
spCardHandBack: [ cc.SpriteFrame ],
spCardOut: [ cc.SpriteFrame ],
spEndCard: [ cc.SpriteFrame ]
},
onLoad: function() {
n.instance = this;
},
GetMJFrame: function(e, t, i) {
var n = 9 * MJ_GetColor(i) + (MJ_GetValue(i) + 1), a = parseInt(n / 10) + "" + parseInt(n % 10), o = "";
"CardHand" == e || 0 == e ? o = 0 == t ? 255 == i ? this.spCardHandBack[t].name : (o = this.spCardHand[t].name.split("_")[0]) + "_" + a : 255 == i ? this.spCardHandData[t].name : this.spCardHand[t].name : "CardHandData" == e || 1 == e ? o = 255 == i ? this.spCardHand[t].name : (o = this.spCardHandData[t].name.split("_")[0]) + "_" + a : "CardHandBack" == e || 2 == e ? o = this.spCardHandBack[t].name : "CardOut" == e || 3 == e ? o = 255 == i ? this.spCardHandBack[t].name : (o = this.spCardOut[t].name.split("_")[0]) + "_" + a : "CardEnd" != e && 4 != e || (o = 255 == i ? this.spEndCard[0].name : (o = this.spEndCard[1].name.split("_")[0]) + "_" + a);
var s = this.handcardAtlas.getSpriteFrame(o);
cc.assert(s, "not find spCardFrame");
return s;
},
GetPkFrame: function(e) {
var t = "pk_" + parseInt(e / 10) + e % 10;
return this.handcardAtlas.getSpriteFrame(t);
}
});
n.GetMJFrame = function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 255;
if (n.instance) return n.instance.GetMJFrame(e, t, i);
cc.assert(!1, "error");
};
n.GetPkFrame = function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 81;
if (n.instance) return n.instance.GetPkFrame(e);
};
n.HAND = 0;
n.HANDDATA = 1;
n.BACK = 2;
n.OUT = 3;
n.END = 4;
t.exports = n;
cc._RF.pop();
}, {} ],
jsHelpGameRuleNew: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e1908mh30tBi5Nv7arM/UaD", "jsHelpGameRuleNew");
cc.Class({
extends: cc.Component,
properties: {
pfRuleItem: cc.Prefab,
nodeRuleContent: cc.Node,
nodeRuleImgContent: cc.Node,
nodeWait: cc.Node,
labScrollView: cc.Node,
imgScrollView: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
SetRuleByKind: function(e) {
this.wKind = e;
},
start: function() {
var e = this, t = this;
this.bAddEnd = !0;
this.nAddIndex = 0;
this.labScrollView.active = !1;
this.imgScrollView.active = !1;
if (300 == this.wKind || 304 == this.wKind || 306 == this.wKind || 501 == this.wKind || 502 == this.wKind) {
t.nodeWait.active = !1;
t.imgScrollView.active = !0;
for (var i = function(i) {
cc.loader.loadRes(e.wKind + "/AGameRes/" + i, cc.SpriteFrame, function(e, n) {
if (!e) {
var a = new cc.Node("nodeImgHelp"), o = a.addComponent(cc.Sprite);
o.spriteFrame = n;
o.sizeMode = cc.Sprite.SizeMode.RAW;
o.trim = !1;
t.nodeRuleImgContent.addChild(a, i);
}
});
}, n = 1; n < 7; n++) i(n);
} else cc.loader.loadRes("AGameHelp/json/" + this.wKind, function(e, i) {
if (!e) {
t.labScrollView.active = !0;
t.jsonData = i;
t.bAddEnd = !1;
t.nodeWait.active = !1;
t.schedule(t.showHelp.bind(t), .2);
}
});
},
showHelp: function(e) {
if (!this.bAddEnd) {
var t = this.jsonData.title, i = this.jsonData.content;
if (this.nAddIndex < this.jsonData.title.length) {
var n = this.nAddIndex, a = cc.instantiate(this.pfRuleItem);
this.nodeRuleContent.addChild(a);
a.runAction(cc.fadeIn(.3));
var o = a.getChildByName("title"), s = a.getChildByName("content");
o.getComponent(cc.Label).string = t[n];
s.getComponent(cc.Label).string = i[n];
a.getComponent(cc.Layout).updateLayout();
this.nAddIndex += 1;
} else {
this.bAddEnd = !0;
this.unschedule(this.showHelp);
}
this.nodeRuleContent.getComponent(cc.Layout).updateLayout();
}
}
});
cc._RF.pop();
}, {} ],
jsHelpGameRule: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "8c825g8qahEFbKR4+pNQNeq", "jsHelpGameRule");
cc.Class({
extends: cc.Component,
properties: {
pfRuleItem: cc.Prefab,
nodeRuleContent: cc.Node,
nodeImgHelp: cc.Node,
nodeWait: cc.Node,
nodeRuleImgContent: cc.Node,
imgScrollView: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
SetRuleByKind: function(e) {
this.wKind = e;
},
start: function() {
var e = this;
this.bAddEnd = !0;
this.nAddIndex = 0;
if (135 == this.wKind) cc.loader.loadRes(this.wKind + "/AGameRes/imgHelp", cc.SpriteFrame, function(t, i) {
if (!t) {
e.nodeRuleContent.active = !1;
e.nodeImgHelp.active = !0;
e.nodeWait.active = !1;
e.nodeImgHelp.getComponent(cc.Sprite).spriteFrame = i;
}
}); else if (133 == this.wKind || 136 == this.wKind) {
e.nodeWait.active = !1;
e.imgScrollView.active = !0;
cc.loader.loadRes(this.wKind + "/AGameRes/imgHelp", cc.SpriteFrame, function(t, n) {
if (!t) {
var a = new cc.Node("nodeImgHelp"), o = a.addComponent(cc.Sprite);
o.spriteFrame = n;
o.sizeMode = cc.Sprite.SizeMode.RAW;
o.trim = !1;
e.nodeRuleImgContent.addChild(a, i);
}
});
} else cc.loader.loadRes("AGameHelp/json/" + this.wKind, function(t, i) {
if (!t) {
e.jsonData = i;
e.bAddEnd = !1;
e.nodeRuleContent.active = !0;
e.nodeImgHelp.active = !1;
e.nodeWait.active = !1;
e.schedule(e.showHelp.bind(e), .2);
}
});
},
showHelp: function(e) {
if (!this.bAddEnd) {
var t = this.jsonData.title, i = this.jsonData.content;
if (this.nAddIndex < this.jsonData.title.length) {
var n = this.nAddIndex, a = cc.instantiate(this.pfRuleItem);
this.nodeRuleContent.addChild(a);
a.runAction(cc.fadeIn(.3));
var o = a.getChildByName("title"), s = a.getChildByName("content");
o.getComponent(cc.Label).string = t[n];
s.getComponent(cc.Label).string = i[n];
a.getComponent(cc.Layout).updateLayout();
this.nAddIndex += 1;
} else {
this.bAddEnd = !0;
this.unschedule(this.showHelp);
}
this.nodeRuleContent.getComponent(cc.Layout).updateLayout();
}
}
});
cc._RF.pop();
}, {} ],
jsInputFormat: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d8330h+K8tNBa3/Gx2MmOwi", "jsInputFormat");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
OnTextChangeEvent: function(e, t, i) {
var n = parseInt(i);
if (1 == n) {
e = e.replace(/[^\0-9-\X\x]/g, "").toUpperCase();
t.string = e;
} else if (2 == n) {
e = e.replace(/[^\u4E00-\u9FA5\u00B7]/g, "");
t.string = e;
} else if (3 == n) {
e = e.replace(/[^\Z0-9]/g, "");
t.string = e;
} else if (4 == n) {
e = e.replace(/[^\a-\z\A-\Z0-9\u4E00-\u9FA5]/g, "");
t.string = e;
} else if (5 == n) {
e = e.replace(/[^\a-\z\A-\Z0-9]/g, "");
t.string = e;
} else if (6 == n) {
e = (e = (e = (e = (e = e.replace(/[^\d.]/g, "")).replace(/^\./g, "")).replace(/\.{2,}/g, ".")).replace(".", "$#$").replace(/\./g, "").replace("$#$", ".")).replace(/^(\-)*(\d+)\.(\d\d).*$/, "$1$2.$3");
t.string = e;
} else if (7 == n) {
e = e.replace(/[\u4E00-\u9FA5\u00B7]/g, "");
t.string = e;
}
}
});
cc._RF.pop();
}, {} ],
jsJackPotAllItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ced398/QgJAsY0xJEN8We2r", "jsJackPotAllItem");
cc.Class({
extends: cc.Component,
properties: {
lblNickName: cc.Label,
lblReward: cc.Label,
lblTime: cc.Label,
lblGame: cc.Label,
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite
},
setData: function(e) {
this.lblNickName.string = OnConverString(e.NickName);
this.lblReward.string = (e.WinScore / 1e3).toFixed(3);
this.lblTime.string = e.InsertTime;
this.lblGame.string = e.ServerName;
var t = 255 & e.FaceID, i = e.FaceID >> 8 & 255;
this.SetHeadSpriteFrame(t, i);
},
SetHeadSpriteFrame: function(e, t) {
var i = this, n = "common/UserHead/Head_" + (e = e <= 15 ? e : 15);
cc.loader.loadRes(n, cc.SpriteFrame, function(e, t) {
e || i.spUserHead && (i.spUserHead.spriteFrame = t);
});
var a = "common/HeadFrame/Frame_" + (t = t <= 9 ? t : 9);
cc.loader.loadRes(a, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
}
});
cc._RF.pop();
}, {} ],
jsJackPotAll: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "b94053z/ZBPKIKDXK+H4Q1B", "jsJackPotAll");
cc.Class({
extends: cc.Component,
properties: {
scrollView: cc.ScrollView,
pfJackPotAllItem: cc.Prefab,
tab: cc.Node,
tabNode: cc.Node
},
onLoad: function() {
this.isFirst = !0;
this.requestJackpot(0);
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
setTab: function(e) {
var t = this;
e.unshift({
ServerID: 0,
ServerName: "All Games"
});
for (var i = 0; i < e.length; i++) {
var n = cc.instantiate(this.tab);
n.active = !0;
n.setPosition(0, 0);
var a = cc.find("imgSelect", n), o = cc.find("imgNormal", n), s = cc.find("Label", a), r = cc.find("Label", o);
s.getComponent(cc.Label).string = e[i].ServerName;
r.getComponent(cc.Label).string = e[i].ServerName;
this.tabNode.addChild(n);
if (0 == i) {
a.active = !0;
o.active = !1;
s.getComponent(cc.Label).string = e[i].ServerName;
r.getComponent(cc.Label).string = e[i].ServerName;
} else {
a.active = !1;
o.active = !0;
s.getComponent(cc.Label).string = e[i].ServerName;
r.getComponent(cc.Label).string = e[i].ServerName;
}
n._index = i;
n._serverId = e[i].ServerID;
n.on("click", function(e) {
t.clickLeftButton(e.target._index, e.target._serverId);
});
}
},
clickLeftButton: function(e, t) {
if (e != this.clickLeft) {
this.clickTop = 0;
this.clickLeft = e;
var n = this.tabNode.children, a = this.tabNode.childrenCount;
for (i = 0; i < a; i++) {
var o = n[i], s = cc.find("imgSelect", o), r = cc.find("imgNormal", o);
if (e == i) {
s.active = !0;
r.active = !1;
} else {
s.active = !1;
r.active = !0;
}
}
this.requestJackpot(t);
}
},
requestJackpot: function(e) {
var t = this, i = GetProject().szGameJackpotRecordUrl, n = USI_OnGetInfo(), a = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&serverID=0&pageIndex=1&pageSize=20&jackpotID=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, a, function(i, n) {
if (i) {
if (n) if (200 == n.statusCode) {
t.showJackpotInfo(n.data, e);
if (n.gameList && t.isFirst) {
t.isFirst = !1;
t.gameList = n.gameList;
t.setTab(t.gameList);
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotInfo: function(e, t) {
this.scrollView.content.removeAllChildren();
this.scrollView.node.getComponent("jsScrollHelp").initPage();
this.scrollView.node.getComponent("jsScrollHelp").initItem(e, "jsJackPotAllItem");
this.scrollView.node.getComponent("jsScrollHelp").refreshApi = function(e, i) {
var n = GetProject().szGameJackpotRecordUrl, a = USI_OnGetInfo(), o = "uid=" + a.dwUserID + "&sign=" + a.szSign + "&serverID=0&pageIndex=" + e + "&pageSize=20&jackpotID=" + t;
HttpHelper.post_NotDecrypt(n, o, function(e, t) {
if (e && t) {
if (200 != t.statusCode) return;
i && i(t.data);
}
}, window.fHttpTimeOut);
};
}
});
cc._RF.pop();
}, {} ],
jsJackPotDrawItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d0c1GhJBhFO5RxgDyge7nW", "jsJackPotDrawItem");
cc.Class({
extends: cc.Component,
properties: {
ratio: cc.Label,
bg: cc.Sprite,
bgFrame: [ cc.SpriteFrame ],
gold: cc.Sprite,
goldFrame: [ cc.SpriteFrame ]
},
setData: function(e, t, i) {
this.bg.spriteFrame = t ? this.bgFrame[1] : this.bgFrame[0];
var n = 0;
n = e > 29 ? 5 : e > 23 ? 4 : e > 17 ? 3 : e > 11 ? 2 : e > 5 ? 1 : 0;
if (i) {
var a = 0;
e > 29 ? a = 2 : e > 9 && (a = 1);
this.bg.spriteFrame = this.bgFrame[a];
}
this.gold.spriteFrame = this.goldFrame[n];
this.ratio.string = e + "%";
}
});
cc._RF.pop();
}, {} ],
jsJackPotDrawRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2a842MVC7VK8qUKvnazFuE4", "jsJackPotDrawRecordItem");
cc.Class({
extends: cc.Component,
properties: {
lblNickName: cc.Label,
lblReward: cc.Label,
lblTime: cc.Label
},
setData: function(e) {
this.lblNickName.string = e.NickName;
this.lblReward.string = (e.WinScore / 1e3).toFixed(3);
this.lblTime.string = e.InsertTime;
}
});
cc._RF.pop();
}, {} ],
jsJackPotDrawRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5913eJ1YWtGbpZQ6ISnkk/d", "jsJackPotDrawRecord");
cc.Class({
extends: cc.Component,
properties: {
scrollView: cc.ScrollView,
pfJackpotRankItem: cc.Prefab,
pfJackPotDraw: cc.Prefab,
nodeJackPotDraw: cc.Node
},
onLoad: function() {
if (0 == GetProject().cbCheckAccounts) {
this.node.active = !0;
SceneManager_AlertShow(this.node);
this.requestJackpotRank();
} else this.node.active = !1;
},
setData: function(e, t) {
this.selfHelp = t;
var i = cc.instantiate(this.pfJackPotDraw);
this.jsJackPotDraw = i.getComponent("jsJackPotDraw");
this.jsJackPotDraw.setData(0, e);
this.nodeJackPotDraw.addChild(i);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" == i || "Splash" == i ? this.node.destroy() : "btnHelp" == i && (this.selfHelp ? this.selfHelp.showHelpPanel() : this.jsGameEngine.OnFrameButtonHelpNew());
},
requestJackpotRank: function() {
var e = this, t = GetProject().szGameJackpotRecordUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID + "&pageIndex=1&pageSize=20&jackpotID=0";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, a, function(t, i) {
t ? i && (200 == i.statusCode ? e.showJackpotRankInfo(i.data) : ManagerHelp_SetSystemLabel("Network exception, try again")) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showJackpotRankInfo: function(e) {
this.scrollView.node.getComponent("jsScrollHelp").initPage();
this.scrollView.node.getComponent("jsScrollHelp").initItem(e, "jsJackPotDrawRecordItem");
this.scrollView.node.getComponent("jsScrollHelp").refreshApi = function(e, t) {
var i = GetProject().szGameJackpotRecordUrl, n = USI_OnGetInfo(), a = GetServerRoom().GetGameServer(), o = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&serverID=" + a.wServerID + "&pageIndex=" + e + "&pageSize=20&jackpotID=0";
HttpHelper.post_NotDecrypt(i, o, function(e, i) {
if (e && i) {
if (200 != i.statusCode) return;
t && t(i.data);
}
}, window.fHttpTimeOut);
};
}
});
cc._RF.pop();
}, {} ],
jsJackPotDrawText: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e702cRNKCVFeJQwa9pZ+P3j", "jsJackPotDrawText");
cc.Class({
extends: cc.Component,
properties: {
text: cc.Label,
i_cur_num: 0,
i_num: 0,
i_step: 0
},
start: function() {},
setNum: function(e, t, i, n) {
this.callBack = n;
this.i_num = parseFloat(e);
this.i_cur_num = i || 0;
this.text.string = "" + this.i_cur_num.toFixed(2);
null == t ? this.i_step = this.i_num / 100 : this.perSecond = this.i_num / t;
},
update: function(e) {
if (this.i_cur_num < this.i_num) {
this.perSecond ? this.i_cur_num += this.perSecond * e : this.i_cur_num += this.i_step;
this.i_cur_num > this.i_num && (this.i_cur_num = this.i_num);
this.text.string = "" + this.i_cur_num.toFixed(2);
} else if (this.callBack) {
this.callBack();
this.callBack = null;
}
}
});
cc._RF.pop();
}, {} ],
jsJackPotDraw: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "02456/koHBA2LtXgmVq9Mx7", "jsJackPotDraw");
cc.Class({
extends: cc.Component,
properties: {
rankBg: cc.Sprite,
rankBgSpriteFrame: [ cc.SpriteFrame ],
drawBody: cc.Node,
jpNum: cc.Label,
drawItem: cc.Prefab,
curPos: cc.Node,
goldAni: cc.Node,
JPAni: cc.Node,
Splash: cc.Node,
nodeJackPot: cc.Node,
nodeJackPotSpine: cc.Node,
nodeWinScore: cc.Node
},
onLoad: function() {},
start: function() {},
initDrawData: function() {
this.state = 0;
this.doDrawing = 1;
this.maxSpeed = 1;
this.highTime = 2;
this.normalTime = 1;
this.lowTime = 6;
this.highLope = 2;
this.lowLope = 2;
this.speed = 0;
this.curTime = 0;
this.curArrIndex = 0;
this.oldArrIndex = 0;
this.curPos.setPosition(this.drawBody.children[0].getPosition());
PlaySkeletonAnimation(this.curPos, !0, "curJPPos");
},
randomRatio: function(e) {
for (var t = [], i = 0; i < 2; i++) {
t.push(Rand(11, 4));
t.push(Rand(16, 10));
t.push(Rand(26, 15));
}
for (var n = 0; n < 3; n++) {
t.push(Rand(6, 1));
t.push(Rand(13, 6));
}
t.push(Rand(30, 25));
t.push(1);
t.push(e);
this.shuffle(t);
t.splice(2, 0, 30);
return t;
},
shuffle: function(e) {
for (var t, i, n = e.length; n; ) {
i = e[t = Math.floor(Math.random() * n--)];
e[t] = e[n];
e[n] = i;
}
return e;
},
setData: function(e, t, i) {
this.setPanelType(e);
this.setJPNum(t);
null == i && (i = Rand(11, 4));
var n = this.randomRatio(i);
this.jpArrIndex = n.indexOf(i);
for (var a = void 0, o = 0; o < this.drawBody.children.length; o++) {
if (0 == this.drawBody.children[o].children.length) {
a = cc.instantiate(this.drawItem);
this.drawBody.children[o].addChild(a);
}
this.drawBody.children[o].children[0].getComponent("jsJackPotDrawItem").setData(n[o], 2 == o);
}
},
setJPNum: function(e) {
this.jpNum.string = e;
},
doDraw: function(e, t, i, n) {
SceneManager_AlertShow(this.node);
this.callback = i;
this.WinJackpotScore = n;
this.setData(1, t, e);
this.scheduleOnce(function() {
this.initDrawData();
}, 2);
},
setPanelType: function(e) {
this.rankBg.spriteFrame = this.rankBgSpriteFrame[e];
this.goldAni.active = 1 == e;
this.JPAni.active = 1 == e;
this.curPos.active = 1 == e;
this.Splash.active = 1 == e;
},
FlyGold: function() {
var e = this;
this.nodeWinScore.getComponent("jsJackPotDrawText").setNum(this.WinJackpotScore / 1e3, 3);
this.nodeWinScore.setScale(0);
this.nodeWinScore.y = -200;
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 2, 2), cc.scaleTo(.2, 1.5, 1.5), cc.delayTime(4.5), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(t) {
e.callback && e.callback();
})));
},
drawing: function(e) {
var t = this;
this.curTime += e;
if (0 == this.state) this.speed += Math.pow(this.curTime, this.highLope) / (Math.pow(this.highTime, this.highLope) / this.maxSpeed) + .2; else if (1 == this.state) this.speed += this.maxSpeed; else if (2 == this.state) {
var i = this.curTime - this.highTime - this.normalTime, n = this.lowTime - i;
n = n < 2 ? 2 : n;
if (i > this.lowTime && this.curArrIndex == this.jpArrIndex) {
this.doDrawing = 0;
PlaySkeletonAnimation(this.curPos, !0, "win");
this.scheduleOnce(function() {
if (this.WinJackpotScore) {
cc.log("走自带的jp中奖数字");
this.FlyGold();
} else this.callback && this.callback();
window.mfConfig.PlayAudio("GameLobby/Audio/bigwin_popup", !1);
window.mfConfig.PlayAudio("GameLobby/Audio/supermegawin_coins", !1);
this.nodeJackPot.active = !0;
var e = this.nodeJackPotSpine.getComponent(sp.Skeleton);
PlaySkeletonAnimation(e, !1, "animation").setCompleteListener(function() {
t.node.destroy();
});
}, 2);
return;
}
this.speed += Math.pow(n, this.lowLope) / (Math.pow(this.lowTime, this.lowLope) / this.maxSpeed);
}
this.curTime < this.highTime ? this.state = 0 : this.curTime < this.normalTime + this.highTime ? this.state = 1 : this.state = 2;
this.curArrIndex = parseInt(this.speed) % 16;
if (this.curArrIndex != this.oldArrIndex) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("GameLobby/Audio/TURN", !1, window.mfConfig.fSound);
this.curPos.setPosition(this.drawBody.children[this.curArrIndex].getPosition());
this.oldArrIndex = this.curArrIndex;
}
},
update: function(e) {
1 == this.doDrawing && this.drawing(e);
}
});
cc._RF.pop();
}, {} ],
jsJackPotNum: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "863622XBt5CVqNs8jdLYn8l", "jsJackPotNum");
cc.Class({
extends: cc.Component,
properties: {
imNumRoll: cc.Label
},
updatenNumberAnim: function(e, t) {
var i = this, n = Math.abs(e - this.originNum);
if (n >= 1e3) this.originNum = e; else for (var a = 0; a < n; a++) (function(a) {
i.timer = setTimeout(function() {
if (null != i.imNumRoll) {
i.imNumRoll.string = OnScoreToString(i.originNum += 1, 3);
a == n - 1 && (i.imNumRoll.string = OnScoreToString(e, 3));
i.originNum = accMul(parseFloat(i.imNumRoll.string), 1e3);
} else i.originNum = e;
}, t / n * (a + 1));
})(a);
},
updateHundredNumberAnim: function(e, t) {
var i = this, n = t || Math.abs(e - i.originNum), a = 0, o = Math.trunc(n / 50);
o <= 0 && (o = n);
var s = 0;
i.schedule(function t() {
s = i.originNum += o;
if (a >= 1 || s >= e) {
i.imNumRoll.string = OnScoreToString(e, 3);
i.originNum = e;
i.unschedule(t);
} else {
i.imNumRoll.string = OnScoreToString(s, 3);
i.originNum = s;
a += .04;
}
}, .02);
},
onDestroy: function() {
null != this.timer && clearTimeout(this.timer);
},
setNumNew: function(e, t, i) {
null == i && (i = 5e3);
null == this.originNum && (this.originNum = e - 30);
e - this.originNum <= 0 && (this.originNum = e - 30);
this.updatenNumberAnim(e, i);
},
setNumHundredJp: function(e, t) {
null == this.originNum && (this.originNum = e - 30);
e - this.originNum <= 0 && (this.originNum = e - 30);
this.updateHundredNumberAnim(e, t);
},
setNumLobby: function(e) {
null == this.originNum && (this.originNum = e - 30);
e - this.originNum <= 0 && (this.originNum = e - 30);
var t = parseFloat(((e - this.originNum) / 2).toFixed(2));
this.schedule(function() {
this.originNum += t;
this.imNumRoll && (this.imNumRoll.string = (this.originNum / 1e3).toFixed(2));
}, .5, 2);
},
setString: function(e, t) {
null == t && (t = 5);
null == this.originNum && (this.originNum = e - 60);
e - this.originNum <= 0 && (this.originNum = e - 60);
var i = e - this.originNum;
this.arr = [];
this.arr.push(.22 * i);
this.arr.push(.19 * i);
this.arr.push(.21 * i);
this.arr.push(.18 * i);
this.arr.push(.2 * i);
this.imNumRoll.string = (this.originNum / 1e3).toFixed(2);
this.count = 0;
this.unschedule(this.setStringFun);
this.schedule(this.setStringFun, 1, t);
},
setStringFun: function(e) {
if (!(this.count > 4)) {
this.originNum += this.arr[this.count];
this.imNumRoll && (this.imNumRoll.string = (this.originNum / 1e3).toFixed(2));
this.count++;
}
}
});
cc._RF.pop();
}, {} ],
jsJetton: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fb252M3uypNcblpWO+UJm/m", "jsJetton");
cc.Class({
extends: cc.Component,
properties: {
nodeBg: [ cc.Node ],
labelScore: cc.Label
},
OnInitJetton: function(e, t) {
var i = [];
i = e ? e.concat() : [ 1e3, 1e4, 5e4, 1e5, 5e5 ];
for (var n = 0, a = !0, o = 0; o < i.length; o++) if (t == i[o]) {
n = o;
a = !1;
break;
}
this.labelScore.string = a ? "" : OnIntScore(t);
this.SetJettonBg(n);
},
SetJettonBg: function(e) {
for (var t = 0; t < this.nodeBg.length; t++) this.nodeBg[t].active = e == t;
e >= this.nodeBg.length && (this.nodeBg[this.nodeBg.length - 1].active = !0);
},
OnResetJetton: function() {
this.node.setPosition(cc.v2(0, 0));
this.node.removeFromParent();
this.labelScore.string = "";
for (var e = 0; e < this.nodeBg.length; e++) this.nodeBg[e].active = 0 == e;
}
});
cc._RF.pop();
}, {} ],
jsLineBet: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48c74gEaZZIMY37FVWmmap4", "jsLineBet");
cc.Class({
extends: cc.Component,
properties: {
lineNoteLbl: cc.Label,
multipleLbl: cc.Label,
subBtn_multiple: cc.Button,
addBtn_multiple: cc.Button,
subBtn_lineBtn: cc.Button,
addBtn_lineBtn: cc.Button,
title: cc.Node
},
initData: function(e) {
this.father = e;
this.i_lineIndex = 0;
this.i_betIndex = 0;
this.i_lineMul = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];
this.i_betNum = [ 100, 1e3, 5e3, 1e4 ];
this.OnStakeUpdate();
},
setBtnEnabled: function(e) {
this.subBtn_multiple.interactable = e;
this.addBtn_multiple.interactable = e;
this.subBtn_lineBtn.interactable = e;
this.addBtn_lineBtn.interactable = e;
},
setConfig: function(e, t, i) {
this.i_lineMul = t;
this.i_betNum = e;
isNaN(i) ? this.title.getComponent(cc.Label).string = i : this.title.getComponent(cc.Label).string = "BETING ON " + i + " LINES";
this.OnStakeUpdate();
},
OnStakeUpdate: function(e, t) {
null != e && (this.i_betIndex = e);
null != t && (this.i_lineIndex = t);
this.lineNoteLbl.string = OnScoreToString(this.i_betNum[this.i_betIndex], 2);
this.multipleLbl.string = this.i_lineMul[this.i_lineIndex];
this.father.OnStakeUpdate();
},
updateLineScore: function(e, t) {
for (var i = 0; i < this.i_betNum.length; i++) if (e == this.i_betNum[i]) {
this.i_betIndex = i;
break;
}
for (var n = 0; n < this.i_lineMul.length; n++) if (t == this.i_lineMul[n]) {
this.i_lineIndex = n;
break;
}
this.OnStakeUpdate();
},
OnBtnEvent: function(e, t) {
if ("closeBtn" == e.target.name) this.node.parent.parent.active = !1; else if ("Dis_subBtn_multiple" == e.target.name) {
this.i_lineIndex--;
this.i_lineIndex < 0 && (this.i_lineIndex = this.i_lineMul.length - 1);
this.OnStakeUpdate();
} else if ("Dis_addBtn_multiple" == e.target.name) {
this.i_lineIndex++;
this.i_lineIndex >= this.i_lineMul.length && (this.i_lineIndex = 0);
this.OnStakeUpdate();
} else if ("Dis_subBtn_lineBtn" == e.target.name) {
this.i_betIndex--;
this.i_betIndex < 0 && (this.i_betIndex = this.i_betNum.length - 1);
this.OnStakeUpdate();
} else if ("Dis_addBtn_lineBtn" == e.target.name) {
this.i_betIndex++;
this.i_betIndex >= this.i_betNum.length && (this.i_betIndex = 0);
this.OnStakeUpdate();
}
}
});
cc._RF.pop();
}, {} ],
jsLobbyFrameUser: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8bce5RWRqxGPIewv1dqrXx8", "jsLobbyFrameUser");
var n = [];
n[0] = "k11";
n[1] = "k22";
n[2] = "k33";
n[3] = "k44";
n[4] = "k55";
n[5] = "k66";
n[6] = "k77";
n[7] = "k88";
n[8] = "k99";
cc.Class({
extends: cc.Component,
szHeadImgUrl: "",
szNickName: "",
dwGameID: 0,
jsControlSystemMsg: null,
wViewID: 0,
OnUpdateVerifyCount: null,
GetHeadImgUrl: function() {
return this.szHeadImgUrl;
},
GetNickName: function() {
return this.szNickName;
},
GetGameId: function() {
return this.dwGameID;
},
properties: {
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite,
nodeSpineVip: cc.Node,
labelGameId: cc.Label,
labelNickName: cc.Label,
labelGold: cc.Label,
labelPhoneNun: cc.Label,
labelMemberOrder: cc.Label,
bSetcount: !1,
jsUserItem: null
},
onLoad: function() {
cc.systemEvent.on("UpdateGold", this.UpdateGold.bind(this), this, !1);
},
onEnable: function() {},
onDestroy: function() {
cc.systemEvent.off("UpdateGold");
},
SetHeadText: function(e, t) {
var i = "common/UserHead/Head_" + (e = e <= 15 ? e : 15), n = this;
cc.loader.loadRes(i, cc.SpriteFrame, function(e, i) {
if (!e) {
n.spUserHead && (n.spUserHead.spriteFrame = i);
t && t();
}
});
},
SetHeadFerameText: function(e) {
var t = "common/HeadFrame/Frame_" + e, i = this;
cc.loader.loadRes(t, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
},
SetNickName: function(e) {
this.labelNickName && (this.labelNickName.string = OnConverString(e));
},
SetGameID: function(e) {
this.labelGameId && (this.labelGameId.string = parseInt(e));
this.dwGameID = e;
},
SetUserCout: function(e) {
this.bSetcount = e;
},
SetNickNameColor: function(e) {
this.labelNickName && (this.labelNickName.node.color = e);
},
UpdateUserGold: function(e) {
if (this.jsUserItem) {
var t = this.jsUserItem.GetUserScore();
"number" == typeof e && (t += e);
this.SetUserGold(t);
}
},
SetUserGold: function(e) {
this.labelGold && (this.bSetcount ? this.labelGold.string = OnScoreToString(e, 3) : this.labelGold.string = OnScoreToString(e));
},
SetUserDataItem: function(e, t) {
var i = this;
if (null != e) {
var n = GetProject().GetCanShop();
if (this.labelGold) {
var a = this.labelGold.node.parent.getComponent(cc.Button);
a && (a.interactable = n);
}
if (e) {
this.jsUserItem = e;
this.szHeadImgUrl = e.GetExternFaceUrl();
this.szNickName = e.GetNickNameUtf8();
this.dwGameID = e.GetGameID();
this.labelPhoneNun && (this.labelPhoneNun.string = GetProject().szRegisterPhone);
this.SetHeadSpriteFrame(e, function() {
i.labelNickName && (i.labelNickName.string = i.szNickName);
i.labelGameId && (i.labelGameId.string = i.dwGameID);
i.UpdateUserGold();
i.OnSocketSubGPVipInfo(e);
t && t();
});
}
} else cc.warn("jsUserItem = null return");
},
SetHeadSpriteFrame: function(e, t) {
var i = e.GetFaceID();
this.SetHeadText(i, t);
var n = e.GetFaceFrameID();
this.SetHeadFerameText(n);
},
SetAddbuttonState: function(e) {
if (0 == e) {
this.ButAddFriends.active = !1;
this.NodeFriended.active = !1;
} else {
this.ButAddFriends.active = !1;
this.NodeFriended.active = !0;
}
},
SetUserNameTail: function(e) {
this.labelNickName && (this.labelNickName.string = OnConverString(this.szNickName, e));
},
OnUpdateUserHeadImg: function(e, t) {
var i = this;
window.mfConfig.LoadUserHeadImg(e, t, function(e, t) {
sprite && (i.spUserHead.spriteFrame = t);
});
},
OnEventFunction: null,
OnRemoveAction: function() {
this.node.runAction(cc.sequence(cc.moveTo(.2, this.node.x, this.node.y - this.node.height), cc.removeSelf()));
},
OnUpdateUserScore: function() {
var e = PlayerManager.GetMeUserItem();
null != e && this.labelGold && (this.bSetcount ? this.labelGold.string = OnScoreToString(e.GetUserScore(), 3) : this.labelGold.string = OnScoreToString(e.GetUserScore()));
},
OnSocketSubGPVipInfo: function(e) {
var t = PlayerManager.GetMeUserItem();
1 == arguments.length && (t = e);
if (this.labelMemberOrder) {
var i = GetProject().bAppShop;
i ? this.labelMemberOrder.node.parent.active = !1 : i || 0 != t.GetMemberOrder() || null == GetGameFrameEngine() ? this.labelMemberOrder.node.parent.active = !0 : this.labelMemberOrder.node.parent.active = !1;
this.labelMemberOrder.string = t.GetMemberOrder();
}
},
OnButtonEvent: function(e, t) {
OnBtnClickAgainEvent(e.target);
var i = this;
PlayerManager.GetMeUserItem();
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfUserInfo", function(e, t) {
if (!e) {
t.zIndex = 3;
var n = t.getComponent("jsLobbyFrameUser");
n && n.SetUserDataItem(i.jsUserItem);
}
});
},
UpdateGold: function() {
cc.log("zzzzzzzzzz 查询银行 刷新金币");
this.scheduleOnce(function() {
GetMissionLogon().SendPacketInsureInfo();
}, 1);
},
OnSocketSubGPInsureInfo: function(e, t) {
this.OnUpdateUserScore();
return !0;
},
OnSocketSubGPBankSucceed: function(e, t) {
this.OnUpdateUserScore();
return !0;
},
OnSocketSubGPBankFailure: function(e, t) {
return !0;
}
});
cc._RF.pop();
}, {} ],
jsLobbyGameField: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79e740NSshGzZDlGCdCXN2z", "jsLobbyGameField");
cc.Class({
extends: cc.Component,
properties: {
nodeMatchFieldContent: cc.Node,
nodeBtnReturn: cc.Node,
nodeBtnHelp: cc.Node,
labelGameVersion: cc.Label,
labelGameName: cc.Label,
svRoomField: cc.ScrollView,
pfGameField: cc.Prefab,
jsControlLobby: null
},
onLoad: function() {
this.OnInitView();
},
OnInitView: function() {
if (GetProject().bAppShop) {
this.labelGameVersion.node.active = !1;
this.nodeBtnHelp.active = !1;
this.nodeBtnReturn.active = !1;
} else {
var e = GetServerRoom().GetKindID(), t = "AGameHelp/json/" + e, i = this;
cc.loader.loadRes(t, function(e, t) {
i.nodeBtnHelp.active = !e;
});
var n = ServerData_QueryGameLocalVersion(e);
if (this.labelGameVersion) if ("0.0.0" == n) this.labelGameVersion.node.active = !1; else {
this.labelGameVersion.node.active = !0;
this.labelGameVersion.string = n;
}
}
this.OnShowGameField();
},
OnShowGameField: function() {
this.nodeMatchFieldContent.removeAllChildren();
var e = ServerData.aryGameArea, t = ServerData.aryGameField.concat(), i = GetServerRoom().GetKindID();
if (0 != i) {
var n = [];
for (var a in e) {
var o = e[a];
o.wKindID == i && o.wJoinID >= window.GAME_JOINID_LIANXI && o.wJoinID <= window.GAME_JOINID_ADVANCEDGOID && n.push(o.wAreaID);
}
var s = [];
for (var r in t) s.push(t[r]);
for (var c = 0; c < s.length; c++) for (var l = s[c], h = 0; h < n.length; h++) if (n[h] == l.wAreaID) {
if (cc.sys.isNative && l.wJoinID == window.GAME_JOINID_LIANXI) continue;
var u = cc.instantiate(this.pfGameField), d = u.getComponent("jsButtonItem");
d.OnButtonClick = this.EnterGoidGame.bind(this);
d.customEventData = l.wFieldID;
var m = ServerData_GetGameField(l.wFieldID), f = u.getComponent("jsGameNameItem");
if (0 == m.lCellScore) f.nodeScore.active = !1; else {
var p = GetProject().bAppShop ? OnScoreConver(m.lCellScore) : OnFloatScore(m.lCellScore), _ = 3002 == i ? "Cannon Field" : "Base Score";
f.labelBaseScore.string = p;
f.labelDesc.string = _;
f.labelMinGold.string = OnFloatScore(m.lMinEnterScore);
}
f.dwJionModel = l.wJoinID;
f.wFieldID = l.wFieldID;
var S = 0;
if (l.wJoinID == window.GAME_JOINID_LIANXI) {
f.nodeScore.active = !0;
f.labelBaseScore.string = "";
f.labelDesc.string = "Practice Court";
f.labelMinGold.string = "0";
S = 4;
u.zIndex = -1;
} else if (l.wJoinID == window.GAME_JOINID_NEWGold) {
S = 0;
u.zIndex = 0;
} else if (l.wJoinID == window.GAME_JOINID_PRIMARYGOID) {
S = 1;
u.zIndex = 1;
} else if (l.wJoinID == window.GAME_JOINID_MIDDLEGOID) {
S = 2;
u.zIndex = 2;
} else if (l.wJoinID == window.GAME_JOINID_ADVANCEDGOID) {
S = 3;
u.zIndex = 3;
} else ManagerHelp_SetSystemAlert("Event information not recognized!");
f.SetFieldBg(i, S);
this.nodeMatchFieldContent.addChild(u);
}
}
},
EnterGoidGame: function(e) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var t = GetServerRoom().stServerAttribute.wKindID, i = e.getComponent("jsGameNameItem");
GetMissionLogon().SendGetGameKindServerList(t, i.wFieldID);
},
OnButtonReturnHome: function() {
this.jsControlLobby.jsLobbyGameFiled = null;
this.node.removeFromParent();
this.jsControlLobby && this.jsControlLobby.OnShowLobbyGame();
},
OnGameHelp: function() {
var e = GetServerRoom().stServerAttribute.wKindID;
SceneManager_PushBack(SceneType.Prefab_Path, "AGameHelp/pfGameHelp", function(t, i) {
if (!t) {
i.getComponent("jsHelpGameRule").SetRuleByKind(e);
}
});
}
});
cc._RF.pop();
}, {} ],
jsLobbyGameView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "41d7bsGqspJWKdigwmtRVkZ", "jsLobbyGameView");
var n = "GameLobby/APrefab/pfVipNew";
cc.Class({
extends: cc.Component,
properties: {
nodeGameTypeSelect: cc.Node,
nodeGameTypeAll: [ cc.Node ],
nodeAdvertisPage: cc.Node,
scrollViewGame: cc.ScrollView,
nodeMainGame: cc.Node,
nodePageContent: cc.Node,
nodeEmailTip: cc.Node,
nodeJackPot: cc.Node,
nodeLuckGuy: cc.Node,
nodeLuckGuyVerify: cc.Node,
nodeDailyBonus: cc.Node,
nodeCompetition: cc.Node,
nodeTricks: cc.Node,
nodeInvitationBonus: cc.Node,
nodeShare: cc.Node,
nodeEmail: cc.Node,
nodeWithdraw: cc.Node,
nodeWallet: cc.Node,
nodeService: cc.Node,
nodeAgents: cc.Node,
nodeVip: cc.Node,
jackPotNum: cc.Label,
pfGameKind: cc.Prefab,
jsControlLobby: null,
downBg: cc.Sprite,
downBgSF: [ cc.SpriteFrame ],
snowAni: cc.Node,
page1: cc.Sprite,
page1SF: [ cc.SpriteFrame ],
page0: cc.Sprite,
page0SF: [ cc.SpriteFrame ],
nodeJackPotSF: [ cc.SpriteFrame ]
},
onLoad: function() {
var e = GetProject().cbCheckAccounts, t = GetProject().switchStatus;
if (t && 0 == e) {
this.nodeJackPot.active = 1 == t.k1;
this.nodeLuckGuy.active = 1 == t.k2;
this.nodeDailyBonus.active = 1 == t.k3;
this.nodeCompetition.active = 1 == t.k4;
this.nodeTricks.active = 1 == t.k5;
this.nodeInvitationBonus.active = 1 == t.k6;
this.nodeShare.active = 1 == t.k7;
this.nodeEmail.active = 1 == t.k8;
this.nodeWithdraw.active = 1 == t.k9;
this.nodeWallet.active = 1 == t.k10;
this.nodeService.active = 1 == t.k11;
this.nodeAgents.active = 1 == t.k12;
this.nodeVip.active = 1 == t.k13;
}
if (0 == e) {
if (GetProject().isChristmasSkinOpen) {
this.downBg.spriteFrame = this.downBgSF[1];
this.page0.spriteFrame = this.page0SF[1];
this.page1.spriteFrame = this.page1SF[1];
this.nodeJackPot.getComponent(cc.Sprite).spriteFrame = this.nodeJackPotSF[1];
this.snowAni.active = !0;
} else {
this.downBg.spriteFrame = this.downBgSF[0];
this.page0.spriteFrame = this.page0SF[0];
this.page1.spriteFrame = this.page1SF[0];
this.nodeJackPot.getComponent(cc.Sprite).spriteFrame = this.nodeJackPotSF[0];
this.snowAni.active = !1;
}
var i = this.nodeAdvertisPage.getComponent(cc.PageView);
this.schedule(function() {
var e = i.getPages().length, t = i.getCurrentPageIndex();
t = t + 1 >= e ? 0 : t + 1;
i.scrollToPage(t, 2);
}, 5);
this.requestJackpotNum();
this.schedule(this.requestJackpotNum.bind(this), 20);
Value_GetRandomInt(0, 100) <= 20 && GetPopHelper().PushPopup("s_Path_ActivityRecharge");
GetPopHelper().PushPopup("s_Path_ActivityNewYear");
GetPopHelper().GetOnePopup();
}
null != this.nodeLuckGuyVerify && (this.nodeLuckGuyVerify.active = GetProject().isOpenLuckGuyVerify);
this.OnShowGameKind();
},
requestJackpotNum: function(e) {
var t = this, i = GetProject().szGameTotalJPUrl, n = USI_OnGetInfo(), a = "uid=" + n.dwUserID + "&sign=" + n.szSign;
HttpHelper.post_NotDecrypt(i, a, function(e, i) {
e ? i && (200 == i.statusCode ? t.setjackPotNum(i.data) : ManagerHelp_SetSystemLabel("Network exception, try again")) : ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
},
setjackPotNum: function(e) {
for (var t = 0, i = 1e3 * e.length * 2, n = 0; n < e.length; n++) t += e[n].TotalJP;
null == this.curJPNum && (this.curJPNum = t - i);
t - this.curJPNum <= 0 && (this.curJPNum = t - i);
var a = parseFloat(((t - this.curJPNum) / 80).toFixed(2));
this.schedule(function() {
this.curJPNum += a;
this.jackPotNum && (this.jackPotNum.string = (this.curJPNum / 1e3).toFixed(2));
}, .25, 80);
},
onDestroy: function() {
this.unschedule(this.requestJackpotNum);
},
OnShowGameKind: function() {
var e = ServerData_GetGameKindAry(), t = window.GameConfig.aryOnLineNormal, i = GetProject().cbCheckAccounts;
1 == i && (t = [ 300, 302, 304, 400 ]);
for (var n = 0; n < t.length; n++) {
var a = t[n], o = GS_OnGetIndexByKindID(a);
if (0 != o) {
var s = AH_GetItemByKey(e, a);
if (!(null == s && n < t.length)) {
var r = cc.instantiate(this.pfGameKind);
130 == a ? this.nodeMainGame.addChild(r, o) : this.nodePageContent.addChild(r, o);
1 == i && (r.y = 0);
var c = r.getComponent("jsGameKind"), l = GS_OnGetGameFlagByKindID(a);
if (l) {
c.SetGameFlag(l);
if (130 == a) {
c.nodeHot.x = 160;
c.nodeHot.y = 270;
c.nodeNewIcon.x = 150;
c.nodeNewIcon.y = -215;
}
}
c.SetGameKind(a);
c.OnButtonClick = this.OnGameIconMatchClick.bind(this);
c.tGameKind = s;
}
}
}
},
OnActiveGameKind: function(e) {
this.nodeMainGame.active = 1 != e && (2 != e && 3 != e);
for (var t = this.nodePageContent.children, i = this.nodePageContent.childrenCount, n = 0; n < i; n++) {
var a = t[n], o = a.getComponent("jsGameKind").GetKindID();
1 != e || GCF_IsGameFeatured(o) ? (2 != e || GCF_IsGameMultiplayer(o)) && (3 != e || GCF_IsGameSlots(o)) ? a.active = !0 : a.active = !1 : a.active = !1;
}
this.scrollViewGame.scrollToLeft(.1);
},
OnGameIconMatchClick: function(e, t) {
if (GCF_IsGameGold(t)) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetMissionLogon().SendGetGameKindServerList(t);
} else this.OnMatchGameRule(t);
},
OnMatchGameRule: function(e) {
GetServerRoom().SetKindID(e);
this.jsControlLobby.jsLobbyGameView = null;
this.node.removeFromParent();
this.jsControlLobby && this.jsControlLobby.OnShowLobbyField();
},
OnUpButtonEvent: function(e, t) {
var i = e.target.name;
"BtnJackPot" == i ? this.OnAddPrefab("GameLobby/APrefab/pfJackPotAll") : "BtnLuckGuy" == i ? this.OnAddPrefab("GameLobby/APrefab/pfLuckguyNew") : "BtnLuckGuyVerify" == i ? this.OnAddPrefab("GameLobby/APrefab/pfLuckguyVerify") : "BtnCheckIn" == i ? this.OnAddPrefab("GameLobby/APrefab/pfCheckIn") : "BtnCompetition" == i ? this.OnAddPrefab("GameLobby/APrefab/pfCompetition") : "BtnTricks" == i ? cc.sys.openURL("http://m.po122.com") : "BtnHomePage" == i && cc.sys.openURL("http://m.po122.com");
},
OnLeftButtonEvent: function(e, t) {
if (0 == e.target.name.indexOf("btn_gametype_")) {
var i = parseInt(t);
this.OnButtonStatusChange(i);
this.OnActiveGameKind(i);
}
},
OnButtonStatusChange: function(e) {
this.nodeGameTypeSelect.y = this.nodeGameTypeAll[e].y;
for (var t = 0; t < 4; t++) {
var i = cc.find("img0", this.nodeGameTypeAll[t]), n = cc.find("img1", this.nodeGameTypeAll[t]);
if (e == t) {
i.active = !1;
n.active = !0;
} else {
i.active = !0;
n.active = !1;
}
}
},
OnPageButtonEvent: function(e, t) {
if ("PageItem" == e.target.name) {
var i = parseInt(t);
0 == i ? this.OnAddPrefab(n) : 1 == i && this.OnAddPrefab("GameLobby/APrefab/pfNotice");
}
},
OnDownButtonEvent: function(e, t) {
var i = e.target.name;
if ("BtnInvitation" == i) this.OnAddPrefab("GameLobby/APrefab/pfPullNew"); else if ("BtnShare" == i) this.OnAddPrefab("GameLobby/APrefab/pfShare"); else if ("BtnEmail" == i) SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfEmail", function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlEmail").OnInitView(0);
}
}); else if ("BtnWithdraw" == i) {
var a = [];
GetMissionLogon().SendQueryBindInfo(function(e, t) {
null != e ? a[e] = t : null == e && SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfWithdraw", function(e, t) {
if (!e) {
t.zIndex = 3;
t.getComponent("jsControlWithdraw").OnInitView(a);
}
});
});
} else if ("BtnShop" == i) this.OnAddPrefab("GameLobby/APrefab/ControlShopBY"); else if ("BtnServer" == i) {
var o = e.target.getChildByName("msgTip");
o && o.active && (o.active = !1);
OnShowServer();
} else "BtnCommission" == i ? this.OnAddPrefab("GameLobby/APrefab/pfCommissionEEX") : "BtnIntegral" == i && this.OnAddPrefab(n);
},
OnAddPrefab: function(e) {
SceneManager_PushBack(SceneType.Prefab_Path, e, function(e, t) {
e || (t.zIndex = 3);
});
}
});
cc._RF.pop();
}, {} ],
jsLuckGuyNew: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "85b22pyGCpDZYNaYXXaEnQi", "jsLuckGuyNew");
cc.Class({
extends: cc.Component,
properties: {
spinlight: cc.Node,
awardNode: cc.Node,
awardItem: cc.Node,
awardIconSA: cc.SpriteAtlas,
turn: cc.Node,
spinBtn: cc.Button,
winningLight: cc.Node,
times: cc.Label,
tabNode: cc.Node,
content: cc.Node,
luckItem: cc.Node,
luckItemBg: [ cc.SpriteFrame ],
nullTip: cc.Node,
nodeHelpLayer: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
start: function() {
this.curIndex = 0;
this.initAngle = 0;
this.spinlight.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function(e) {
e.opacity = 255;
e.scale = .78;
}), cc.spawn(cc.scaleTo(1, 1.2), cc.fadeTo(1, 0)), cc.delayTime(1))));
this.requestLuckGuyInfo();
},
requestLuckGuyInfo: function() {
var e = this, t = GetProject().szLuckGuyInfoUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
cc.log("LuckGuyInfo", i);
if (t) {
if (200 == i.statusCode) {
e.requestLuckGuyRecord(0);
e.setData(i);
}
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
manageSpinTimes: function(e) {
this.times = this.spinBtn.node.getChildByName("times");
if (e > 0) {
this.times.active = !0;
this.times.getComponent(cc.Label).string = e;
} else this.times.active = !1;
},
setData: function(e) {
this.awardItems = [];
this.subGame = e.lotteryConfig;
for (var t = 0; t < this.subGame.Icon.length && t < 8; t++) {
var i = cc.instantiate(this.awardItem);
i.active = !0;
i.getChildByName("num").getComponent(cc.Label).string = this.subGame.Value[t] / 1e3;
i.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.awardIconSA.getSpriteFrame("jinbi" + (this.subGame.Icon[t] - 1));
i.rotation = 45 * t;
this.awardItems.push(i);
this.awardNode.addChild(i);
}
this.allowCount = e.allowCount;
this.manageSpinTimes(e.allowCount);
this.setSpinBtn();
},
OnButtonEvent: function(e, t) {
var n = e.target.name;
if ("Dis_spinBtn" == n) this.doTrun(); else if ("btnClose" == n) this.node.destroy(); else if ("allBtn" == n || "mineBtn" == n) {
if (t == this.clickId) return;
this.clickId = t;
var a = this.tabNode.children;
for (i = 0; i < a.length; i++) {
var o = a[i], s = cc.find("imgSelect", o);
t == i ? s.active = !0 : s.active = !1;
}
this.requestLuckGuyRecord(t);
} else "btnHelp" == n && this.showHelpLayer();
},
requestLuckGuyRecord: function(e) {
var t = this;
this.type = e;
var i = GetProject().szLuckGuyRecordUrl, n = USI_OnGetInfo(), a = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&type=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, a, function(i, n) {
cc.log("LuckGuyRecord", n);
i ? 200 == n.statusCode ? t.setRecord(e, n.data) : ManagerHelp_SetSystemLabel(n.message) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
setRecord: function(e, t) {
this.content.removeAllChildren();
for (var i = 0; i < t.length; i++) {
var n = cc.instantiate(this.luckItem);
n.active = !0;
n.getComponent(cc.Sprite).spriteFrame = this.luckItemBg[i % 2];
var a = n.getChildByName("imHead").getComponent(cc.Sprite), o = n.getChildByName("imHead").getChildByName("imHeadBg").getComponent(cc.Sprite);
a.node.active = 0 == e;
if (a.node.active) {
var s = 255 & t[i].FaceID, r = t[i].FaceID >> 8 & 255;
this.SetHeadSpriteFrame(a, o, s, r);
}
n.getChildByName("name").active = 0 == e;
n.getChildByName("name").active && (n.getChildByName("name").getComponent(cc.Label).string = OnConverString(t[i].NickName));
n.getChildByName("time").getComponent(cc.Label).string = t[i].CollectDate;
n.getChildByName("time").x = 0 == e ? 53 : -180;
n.getChildByName("item_jbt").getChildByName("money").getComponent(cc.Label).string = OnScoreToString(t[i].ItemCount);
this.content.addChild(n);
}
this.nullTip.active = 0 == this.content.childrenCount;
},
SetHeadSpriteFrame: function(e, t, i, n) {
var a = "common/UserHead/Head_" + (i = i <= 15 ? i : 15);
cc.loader.loadRes(a, cc.SpriteFrame, function(t, i) {
t || e && (e.spriteFrame = i);
});
var o = "common/HeadFrame/Frame_" + (n = n <= 9 ? n : 9);
cc.loader.loadRes(o, cc.SpriteFrame, function(e, i) {
e || t && (t.spriteFrame = i);
});
},
doTrun: function() {
var e = this, t = GetProject().szLuckGuyTrunUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
cc.log("LuckGuyTrun", i);
t ? 200 == i.statusCode ? e.playTrun(i) : ManagerHelp_SetSystemLabel(i.message) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
playTrun: function(e) {
this.setSpinBtn(!1);
this.manageSpinTimes(--this.allowCount);
var t = e.area, i = e.value, n = -45 * (t - this.curIndex) + this.initAngle;
window.mfConfig.PlayAudio("GameLobby/Audio/Rotary_table");
this.turn.runAction(cc.sequence(cc.rotateBy(5, 2880 + n).easing(cc.easeSineInOut()), cc.callFunc(function(e) {
this.curIndex = t;
this.initAngle = 0;
this.playWinAni(!0);
this.requestLuckGuyRecord(this.type);
this.scheduleOnce(function() {
this.setSpinBtn();
this.playWinAni(!1);
this.showRewardLayer(i);
}, 1.2);
}.bind(this))));
},
playWinAni: function(e) {
this.winningLight.active = e;
},
setSpinBtn: function(e) {
if (null != e) {
this.spinBtn.interactable = e;
this.spinlight.active = e;
} else {
this.spinBtn.interactable = this.allowCount > 0;
this.spinlight.active = this.allowCount > 0;
}
},
showHelpLayer: function() {
this.nodeHelpLayer.active = !0;
},
showRewardLayer: function(e) {
ManagerHelp_RewardPopup(e, function(e) {
this.setSpinBtn();
this.playWinAni(!1);
}.bind(this));
}
});
cc._RF.pop();
}, {} ],
jsLuckguyVerify: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "128d2HFweNNEZNDzteEh/0D", "jsLuckguyVerify");
cc.Class({
extends: cc.Component,
properties: {
spinlight: cc.Node,
awardNode: cc.Node,
awardItem: cc.Node,
awardIconSA: cc.SpriteAtlas,
turn: cc.Node,
spinBtn: cc.Button,
winningLight: cc.Node,
times: cc.Label
},
onLoad: function() {
SceneManager_AlertShow(this.node);
},
getAllowCount: function() {
var e = new Date(), t = localStorage.getItem("lastLuckguyVerifyDate");
t && new Date(t).toDateString() === e.toDateString() || localStorage.setItem("VerifyspinCount", "3");
var i = parseInt(localStorage.getItem("VerifyspinCount") || "0");
localStorage.setItem("lastLuckguyVerifyDate", e.toDateString());
return i;
},
start: function() {
this.curIndex = 0;
this.initAngle = 0;
this.spinlight.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function(e) {
e.opacity = 255;
e.scale = .78;
}), cc.spawn(cc.scaleTo(1, 1.2), cc.fadeTo(1, 0)), cc.delayTime(1))));
var e = {
allowCount: this.getAllowCount(),
lotteryConfig: {
Icon: [ 8, 2, 4, 6, 3, 7, 5, 1 ],
Value: [ 177e3, 7e3, 57e3, 127e3, 27e3, 77e3, 37e3, 17e3 ]
}
};
this.setData(e);
},
manageSpinTimes: function(e) {
this.times = this.spinBtn.node.getChildByName("times");
if (e > 0) {
this.times.active = !0;
this.times.getComponent(cc.Label).string = e;
} else this.times.active = !1;
},
setData: function(e) {
this.awardItems = [];
this.subGame = e.lotteryConfig;
for (var t = 0; t < this.subGame.Icon.length && t < 8; t++) {
var i = cc.instantiate(this.awardItem);
i.active = !0;
i.getChildByName("num").getComponent(cc.Label).string = this.subGame.Value[t] / 1e3;
i.getChildByName("icon").getComponent(cc.Sprite).spriteFrame = this.awardIconSA.getSpriteFrame("jinbi" + (this.subGame.Icon[t] - 1));
i.rotation = 45 * t;
this.awardItems.push(i);
this.awardNode.addChild(i);
}
this.allowCount = e.allowCount;
this.manageSpinTimes(e.allowCount);
this.setSpinBtn();
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
"Dis_spinBtn" == i ? this.doTrun() : "btnClose" == i && this.node.destroy();
},
SetHeadSpriteFrame: function(e, t, i, n) {
var a = "common/UserHead/Head_" + (i = i <= 15 ? i : 15);
cc.loader.loadRes(a, cc.SpriteFrame, function(t, i) {
t || e && (e.spriteFrame = i);
});
var o = "common/HeadFrame/Frame_" + (n = n <= 9 ? n : 9);
cc.loader.loadRes(o, cc.SpriteFrame, function(e, i) {
e || t && (t.spriteFrame = i);
});
},
doTrun: function() {
var e = Rand(8, 0), t = {
area: e,
value: this.subGame.Value[e]
};
this.playTrun(t);
},
playTrun: function(e) {
this.setSpinBtn(!1);
this.manageSpinTimes(--this.allowCount);
var t = e.area, i = e.value, n = -45 * (t - this.curIndex) + this.initAngle;
window.mfConfig.PlayAudio("GameLobby/Audio/Rotary_table");
this.turn.runAction(cc.sequence(cc.rotateBy(5, 2880 + n).easing(cc.easeSineInOut()), cc.callFunc(function(e) {
this.curIndex = t;
this.initAngle = 0;
this.playWinAni(!0);
this.scheduleOnce(function() {
this.setSpinBtn();
this.playWinAni(!1);
this.addMoney(i);
}, 1.2);
}.bind(this))));
},
playWinAni: function(e) {
this.winningLight.active = e;
},
setSpinBtn: function(e) {
if (null != e) {
this.spinBtn.interactable = e;
this.spinlight.active = e;
} else {
this.spinBtn.interactable = this.allowCount > 0;
this.spinlight.active = this.allowCount > 0;
}
},
showRewardLayer: function(e) {
ManagerHelp_RewardPopup(e, function(e) {
this.setSpinBtn();
this.playWinAni(!1);
}.bind(this));
},
addMoney: function(e) {
var t = USI_OnGetInfo(), i = GetProject().szAddTurntableTimesByShareUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&Amount=" + e;
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) {
cc.log("addMoney = " + e, i);
var n = parseInt(localStorage.getItem("VerifyspinCount") || "0");
if (n > 0) {
n--;
localStorage.setItem("VerifyspinCount", n.toString());
}
200 == i.statusCode ? this.showRewardLayer(e) : ManagerHelp_SetSystemLabel(i.message);
} else ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
}.bind(this), window.fHttpTimeOut);
}
});
cc._RF.pop();
}, {} ],
jsLuckyChristmas: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "315b7yB51xGILBImiOgJJqj", "jsLuckyChristmas");
cc.Class({
extends: cc.Component,
properties: {
nodeRule: cc.Node,
dailyNum: cc.Label,
weeklyNum: cc.Label,
dailyMaincontent: cc.Node,
dailyMycontent: cc.Node,
dailyMyNode: cc.Node,
weeklyMaincontent: cc.Node,
weeklyMycontent: cc.Node,
weeklyMyNode: cc.Node,
itemNode: cc.Node,
stayTunedNode: cc.Node,
progressBarDaily: cc.ProgressBar,
progressBarWeekly: cc.ProgressBar
},
onLoad: function() {
GetProject().onlyLayer = this;
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetProject().onlyLayer = null;
});
},
OnButtonEvent: function(e, t) {
"btnRule" == e.target.name && (this.nodeRule.active = !0);
},
setData: function(e, t) {
this.stayTunedNode.active = 1 == t;
if (1 != t) {
this.myName = PlayerManager.GetMeUserItem().GetNickNameUtf8();
this.myGameID = PlayerManager.GetMeUserItem().GetGameID();
this.setDailyData(e);
this.setWeeklyData(e);
this.setProgress();
}
},
setDailyData: function(e) {
this.dailyNum.string = e.dayPool.toFixed(2);
if (e.myDayRank.length >= 2) {
this.dailyMyNode.height = 150;
this.dailyMyNode.active = !0;
this.dailyMaincontent.parent.parent.height = 225;
} else if (1 == e.myDayRank.length) {
this.dailyMyNode.height = 55;
this.dailyMyNode.active = !0;
this.dailyMaincontent.parent.parent.height = 320;
} else {
this.dailyMyNode.active = !1;
this.dailyMaincontent.parent.parent.height = 390;
}
this.dailyMaincontent.parent.y = 0;
for (var t = 0; t < e.dayRank.length; t++) {
var i = cc.instantiate(this.itemNode);
i.active = !0;
i.setPosition(0, 0);
this.setItemData(i, e.dayRank[t], 0);
this.dailyMaincontent.addChild(i);
}
for (var n = 0; n < 3; n++) {
var a = cc.instantiate(this.itemNode);
a.active = !0;
a.setPosition(0, 0);
this.setItemData(a, e.myDayRank[n], 0);
this.dailyMycontent.addChild(a);
}
},
setWeeklyData: function(e) {
this.weeklyNum.string = e.weekPool.toFixed(2);
if (e.myWeekRank.length >= 2) {
this.weeklyMyNode.height = 150;
this.weeklyMyNode.active = !0;
this.weeklyMaincontent.parent.parent.height = 225;
} else if (1 == e.myWeekRank.length) {
this.weeklyMyNode.height = 55;
this.weeklyMyNode.active = !0;
this.weeklyMaincontent.parent.parent.height = 320;
} else {
this.weeklyMyNode.active = !1;
this.weeklyMaincontent.parent.parent.height = 390;
}
this.weeklyMaincontent.parent.y = 0;
for (var t = 0; t < e.weekRank.length; t++) {
var i = cc.instantiate(this.itemNode);
i.active = !0;
i.setPosition(0, 0);
this.setItemData(i, e.weekRank[t], 1);
this.weeklyMaincontent.addChild(i);
}
for (var n = 0; n < 3; n++) {
var a = cc.instantiate(this.itemNode);
a.active = !0;
a.setPosition(0, 0);
this.setItemData(a, e.myWeekRank[n], 1);
this.weeklyMycontent.addChild(a);
}
},
setItemData: function(e, t, i) {
if (t) {
e.getChildByName("rank").getComponent(cc.Label).string = -1 == t.Sort ? "1000+" : t.Sort;
e.getChildByName("nick").getComponent(cc.Label).string = OnConverString(null == t.Nickname ? this.myName : t.Nickname, 6);
e.getChildByName("score").getComponent(cc.Label).string = t.Score;
e.getChildByName("award").getComponent(cc.Label).string = 0 == t.Bonus ? "-" : t.Bonus.toFixed(2);
if (1 == i) {
var n = cc.color(255, 160, 113);
t.GameID != this.myGameID && 0 != t.GameID || (n = cc.color(243, 255, 47));
e.getChildByName("rank").color = n;
e.getChildByName("nick").color = n;
e.getChildByName("score").color = n;
e.getChildByName("award").color = n;
} else if (0 == i) {
var a = cc.color(60, 225, 107);
t.GameID != this.myGameID && 0 != t.GameID || (a = cc.color(243, 255, 47));
e.getChildByName("rank").color = a;
e.getChildByName("nick").color = a;
e.getChildByName("score").color = a;
e.getChildByName("award").color = a;
}
} else {
e.getChildByName("rank").getComponent(cc.Label).string = "-";
e.getChildByName("nick").getComponent(cc.Label).string = "-";
e.getChildByName("score").getComponent(cc.Label).string = "-";
e.getChildByName("award").getComponent(cc.Label).string = "-";
}
},
setProgress: function() {
var e = new Date(new Date().setHours(0, 0, 0, 0)).getTime(), t = new Date(new Date().setHours(23, 59, 59, 999)).getTime(), i = (new Date().getTime() - e) / (t - e);
this.progressBarDaily.progress = i;
var n = Date.parse("2023/12/18 00:00:00"), a = Date.parse("2023/12/24 23:59:59"), o = Date.parse("2023/12/25 00:00:00"), s = Date.parse("2023/12/31 23:59:59"), r = new Date().getTime(), c = 0;
if (r >= n && r <= a) {
c = (r - n) / (a - n);
this.progressBarWeekly.progress = c;
} else if (r >= o && r <= s) {
c = (r - o) / (s - o);
this.progressBarWeekly.progress = c;
} else this.progressBarWeekly.progress = c;
}
});
cc._RF.pop();
}, {} ],
jsMagicQRCode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d7f2eHf1k1ODYGkkOc1AiBZ", "jsMagicQRCode");
function n(e) {
this.mode = o.MODE_8BIT_BYTE;
this.data = e;
}
n.prototype = {
getLength: function(e) {
return this.data.length;
},
write: function(e) {
for (var t = 0; t < this.data.length; t++) e.put(this.data.charCodeAt(t), 8);
}
};
var a = function(e, t) {
this.typeNumber = e;
this.errorCorrectLevel = t;
this.modules = null;
this.moduleCount = 0;
this.dataCache = null;
this.dataList = new Array();
};
a.prototype = {
addData: function(e) {
var t = new n(e);
this.dataList.push(t);
this.dataCache = null;
},
isDark: function(e, t) {
if (e < 0 || this.moduleCount <= e || t < 0 || this.moduleCount <= t) throw new Error(e + "," + t);
return this.modules[e][t];
},
getModuleCount: function() {
return this.moduleCount;
},
make: function() {
if (this.typeNumber < 1) {
var e = 1;
for (e = 1; e < 40; e++) {
for (var t = G.getRSBlocks(e, this.errorCorrectLevel), i = new I(), n = 0, a = 0; a < t.length; a++) n += t[a].dataCount;
for (var o = 0; o < this.dataList.length; o++) {
var s = this.dataList[o];
i.put(s.mode, 4);
i.put(s.getLength(), g.getLengthInBits(s.mode, e));
s.write(i);
}
if (i.getLengthInBits() <= 8 * n) break;
}
this.typeNumber = e;
}
this.makeImpl(!1, this.getBestMaskPattern());
},
makeImpl: function(e, t) {
this.moduleCount = 4 * this.typeNumber + 17;
this.modules = new Array(this.moduleCount);
for (var i = 0; i < this.moduleCount; i++) {
this.modules[i] = new Array(this.moduleCount);
for (var n = 0; n < this.moduleCount; n++) this.modules[i][n] = null;
}
this.setupPositionProbePattern(0, 0);
this.setupPositionProbePattern(this.moduleCount - 7, 0);
this.setupPositionProbePattern(0, this.moduleCount - 7);
this.setupPositionAdjustPattern();
this.setupTimingPattern();
this.setupTypeInfo(e, t);
this.typeNumber >= 7 && this.setupTypeNumber(e);
null == this.dataCache && (this.dataCache = a.createData(this.typeNumber, this.errorCorrectLevel, this.dataList));
this.mapData(this.dataCache, t);
},
setupPositionProbePattern: function(e, t) {
for (var i = -1; i <= 7; i++) if (!(e + i <= -1 || this.moduleCount <= e + i)) for (var n = -1; n <= 7; n++) t + n <= -1 || this.moduleCount <= t + n || (this.modules[e + i][t + n] = 0 <= i && i <= 6 && (0 == n || 6 == n) || 0 <= n && n <= 6 && (0 == i || 6 == i) || 2 <= i && i <= 4 && 2 <= n && n <= 4);
},
getBestMaskPattern: function() {
for (var e = 0, t = 0, i = 0; i < 8; i++) {
this.makeImpl(!0, i);
var n = g.getLostPoint(this);
if (0 == i || e > n) {
e = n;
t = i;
}
}
return t;
},
createMovieClip: function(e, t, i) {
var n = e.createEmptyMovieClip(t, i);
this.make();
for (var a = 0; a < this.modules.length; a++) for (var o = 1 * a, s = 0; s < this.modules[a].length; s++) {
var r = 1 * s;
if (this.modules[a][s]) {
n.beginFill(0, 100);
n.moveTo(r, o);
n.lineTo(r + 1, o);
n.lineTo(r + 1, o + 1);
n.lineTo(r, o + 1);
n.endFill();
}
}
return n;
},
setupTimingPattern: function() {
for (var e = 8; e < this.moduleCount - 8; e++) null == this.modules[e][6] && (this.modules[e][6] = e % 2 == 0);
for (var t = 8; t < this.moduleCount - 8; t++) null == this.modules[6][t] && (this.modules[6][t] = t % 2 == 0);
},
setupPositionAdjustPattern: function() {
for (var e = g.getPatternPosition(this.typeNumber), t = 0; t < e.length; t++) for (var i = 0; i < e.length; i++) {
var n = e[t], a = e[i];
if (null == this.modules[n][a]) for (var o = -2; o <= 2; o++) for (var s = -2; s <= 2; s++) this.modules[n + o][a + s] = -2 == o || 2 == o || -2 == s || 2 == s || 0 == o && 0 == s;
}
},
setupTypeNumber: function(e) {
for (var t = g.getBCHTypeNumber(this.typeNumber), i = 0; i < 18; i++) {
var n = !e && 1 == (t >> i & 1);
this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = n;
}
for (var a = 0; a < 18; a++) {
var o = !e && 1 == (t >> a & 1);
this.modules[a % 3 + this.moduleCount - 8 - 3][Math.floor(a / 3)] = o;
}
},
setupTypeInfo: function(e, t) {
for (var i = this.errorCorrectLevel << 3 | t, n = g.getBCHTypeInfo(i), a = 0; a < 15; a++) {
var o = !e && 1 == (n >> a & 1);
a < 6 ? this.modules[a][8] = o : a < 8 ? this.modules[a + 1][8] = o : this.modules[this.moduleCount - 15 + a][8] = o;
}
for (var s = 0; s < 15; s++) {
var r = !e && 1 == (n >> s & 1);
s < 8 ? this.modules[8][this.moduleCount - s - 1] = r : s < 9 ? this.modules[8][15 - s - 1 + 1] = r : this.modules[8][15 - s - 1] = r;
}
this.modules[this.moduleCount - 8][8] = !e;
},
mapData: function(e, t) {
for (var i = -1, n = this.moduleCount - 1, a = 7, o = 0, s = this.moduleCount - 1; s > 0; s -= 2) {
6 == s && s--;
for (;;) {
for (var r = 0; r < 2; r++) if (null == this.modules[n][s - r]) {
var c = !1;
o < e.length && (c = 1 == (e[o] >>> a & 1));
g.getMask(t, n, s - r) && (c = !c);
this.modules[n][s - r] = c;
if (-1 == --a) {
o++;
a = 7;
}
}
if ((n += i) < 0 || this.moduleCount <= n) {
n -= i;
i = -i;
break;
}
}
}
}
};
a.PAD0 = 236;
a.PAD1 = 17;
a.createData = function(e, t, i) {
for (var n = G.getRSBlocks(e, t), o = new I(), s = 0; s < i.length; s++) {
var r = i[s];
o.put(r.mode, 4);
o.put(r.getLength(), g.getLengthInBits(r.mode, e));
r.write(o);
}
for (var c = 0, l = 0; l < n.length; l++) c += n[l].dataCount;
if (o.getLengthInBits() > 8 * c) throw new Error("code length overflow. (" + o.getLengthInBits() + ">" + 8 * c + ")");
o.getLengthInBits() + 4 <= 8 * c && o.put(0, 4);
for (;o.getLengthInBits() % 8 != 0; ) o.putBit(!1);
for (;!(o.getLengthInBits() >= 8 * c); ) {
o.put(a.PAD0, 8);
if (o.getLengthInBits() >= 8 * c) break;
o.put(a.PAD1, 8);
}
return a.createBytes(o, n);
};
a.createBytes = function(e, t) {
for (var i = 0, n = 0, a = 0, o = new Array(t.length), s = new Array(t.length), r = 0; r < t.length; r++) {
var c = t[r].dataCount, l = t[r].totalCount - c;
n = Math.max(n, c);
a = Math.max(a, l);
o[r] = new Array(c);
for (var h = 0; h < o[r].length; h++) o[r][h] = 255 & e.buffer[h + i];
i += c;
var u = g.getErrorCorrectPolynomial(l), d = new v(o[r], u.getLength() - 1).mod(u);
s[r] = new Array(u.getLength() - 1);
for (var m = 0; m < s[r].length; m++) {
var f = m + d.getLength() - s[r].length;
s[r][m] = f >= 0 ? d.get(f) : 0;
}
}
for (var p = 0, _ = 0; _ < t.length; _++) p += t[_].totalCount;
for (var S = new Array(p), C = 0, w = 0; w < n; w++) for (var b = 0; b < t.length; b++) w < o[b].length && (S[C++] = o[b][w]);
for (var A = 0; A < a; A++) for (var G = 0; G < t.length; G++) A < s[G].length && (S[C++] = s[G][A]);
return S;
};
for (var o = {
MODE_NUMBER: 1,
MODE_ALPHA_NUM: 2,
MODE_8BIT_BYTE: 4,
MODE_KANJI: 8
}, s = 1, r = 0, c = 3, l = 2, h = 0, u = 1, d = 2, m = 3, f = 4, p = 5, _ = 6, S = 7, g = {
PATTERN_POSITION_TABLE: [ [], [ 6, 18 ], [ 6, 22 ], [ 6, 26 ], [ 6, 30 ], [ 6, 34 ], [ 6, 22, 38 ], [ 6, 24, 42 ], [ 6, 26, 46 ], [ 6, 28, 50 ], [ 6, 30, 54 ], [ 6, 32, 58 ], [ 6, 34, 62 ], [ 6, 26, 46, 66 ], [ 6, 26, 48, 70 ], [ 6, 26, 50, 74 ], [ 6, 30, 54, 78 ], [ 6, 30, 56, 82 ], [ 6, 30, 58, 86 ], [ 6, 34, 62, 90 ], [ 6, 28, 50, 72, 94 ], [ 6, 26, 50, 74, 98 ], [ 6, 30, 54, 78, 102 ], [ 6, 28, 54, 80, 106 ], [ 6, 32, 58, 84, 110 ], [ 6, 30, 58, 86, 114 ], [ 6, 34, 62, 90, 118 ], [ 6, 26, 50, 74, 98, 122 ], [ 6, 30, 54, 78, 102, 126 ], [ 6, 26, 52, 78, 104, 130 ], [ 6, 30, 56, 82, 108, 134 ], [ 6, 34, 60, 86, 112, 138 ], [ 6, 30, 58, 86, 114, 142 ], [ 6, 34, 62, 90, 118, 146 ], [ 6, 30, 54, 78, 102, 126, 150 ], [ 6, 24, 50, 76, 102, 128, 154 ], [ 6, 28, 54, 80, 106, 132, 158 ], [ 6, 32, 58, 84, 110, 136, 162 ], [ 6, 26, 54, 82, 110, 138, 166 ], [ 6, 30, 58, 86, 114, 142, 170 ] ],
G15: 1335,
G18: 7973,
G15_MASK: 21522,
getBCHTypeInfo: function(e) {
for (var t = e << 10; g.getBCHDigit(t) - g.getBCHDigit(g.G15) >= 0; ) t ^= g.G15 << g.getBCHDigit(t) - g.getBCHDigit(g.G15);
return (e << 10 | t) ^ g.G15_MASK;
},
getBCHTypeNumber: function(e) {
for (var t = e << 12; g.getBCHDigit(t) - g.getBCHDigit(g.G18) >= 0; ) t ^= g.G18 << g.getBCHDigit(t) - g.getBCHDigit(g.G18);
return e << 12 | t;
},
getBCHDigit: function(e) {
for (var t = 0; 0 != e; ) {
t++;
e >>>= 1;
}
return t;
},
getPatternPosition: function(e) {
return g.PATTERN_POSITION_TABLE[e - 1];
},
getMask: function(e, t, i) {
switch (e) {
case h:
return (t + i) % 2 == 0;

case u:
return t % 2 == 0;

case d:
return i % 3 == 0;

case m:
return (t + i) % 3 == 0;

case f:
return (Math.floor(t / 2) + Math.floor(i / 3)) % 2 == 0;

case p:
return t * i % 2 + t * i % 3 == 0;

case _:
return (t * i % 2 + t * i % 3) % 2 == 0;

case S:
return (t * i % 3 + (t + i) % 2) % 2 == 0;

default:
throw new Error("bad maskPattern:" + e);
}
},
getErrorCorrectPolynomial: function(e) {
for (var t = new v([ 1 ], 0), i = 0; i < e; i++) t = t.multiply(new v([ 1, C.gexp(i) ], 0));
return t;
},
getLengthInBits: function(e, t) {
if (1 <= t && t < 10) switch (e) {
case o.MODE_NUMBER:
return 10;

case o.MODE_ALPHA_NUM:
return 9;

case o.MODE_8BIT_BYTE:
case o.MODE_KANJI:
return 8;

default:
throw new Error("mode:" + e);
} else if (t < 27) switch (e) {
case o.MODE_NUMBER:
return 12;

case o.MODE_ALPHA_NUM:
return 11;

case o.MODE_8BIT_BYTE:
return 16;

case o.MODE_KANJI:
return 10;

default:
throw new Error("mode:" + e);
} else {
if (!(t < 41)) throw new Error("type:" + t);
switch (e) {
case o.MODE_NUMBER:
return 14;

case o.MODE_ALPHA_NUM:
return 13;

case o.MODE_8BIT_BYTE:
return 16;

case o.MODE_KANJI:
return 12;

default:
throw new Error("mode:" + e);
}
}
},
getLostPoint: function(e) {
for (var t = e.getModuleCount(), i = 0, n = 0; n < t; n++) for (var a = 0; a < t; a++) {
for (var o = 0, s = e.isDark(n, a), r = -1; r <= 1; r++) if (!(n + r < 0 || t <= n + r)) for (var c = -1; c <= 1; c++) a + c < 0 || t <= a + c || 0 == r && 0 == c || s == e.isDark(n + r, a + c) && o++;
o > 5 && (i += 3 + o - 5);
}
for (var l = 0; l < t - 1; l++) for (var h = 0; h < t - 1; h++) {
var u = 0;
e.isDark(l, h) && u++;
e.isDark(l + 1, h) && u++;
e.isDark(l, h + 1) && u++;
e.isDark(l + 1, h + 1) && u++;
0 != u && 4 != u || (i += 3);
}
for (var d = 0; d < t; d++) for (var m = 0; m < t - 6; m++) e.isDark(d, m) && !e.isDark(d, m + 1) && e.isDark(d, m + 2) && e.isDark(d, m + 3) && e.isDark(d, m + 4) && !e.isDark(d, m + 5) && e.isDark(d, m + 6) && (i += 40);
for (var f = 0; f < t; f++) for (var p = 0; p < t - 6; p++) e.isDark(p, f) && !e.isDark(p + 1, f) && e.isDark(p + 2, f) && e.isDark(p + 3, f) && e.isDark(p + 4, f) && !e.isDark(p + 5, f) && e.isDark(p + 6, f) && (i += 40);
for (var _ = 0, S = 0; S < t; S++) for (var g = 0; g < t; g++) e.isDark(g, S) && _++;
return i += 10 * (Math.abs(100 * _ / t / t - 50) / 5);
}
}, C = {
glog: function(e) {
if (e < 1) throw new Error("glog(" + e + ")");
return C.LOG_TABLE[e];
},
gexp: function(e) {
for (;e < 0; ) e += 255;
for (;e >= 256; ) e -= 255;
return C.EXP_TABLE[e];
},
EXP_TABLE: new Array(256),
LOG_TABLE: new Array(256)
}, w = 0; w < 8; w++) C.EXP_TABLE[w] = 1 << w;
for (var b = 8; b < 256; b++) C.EXP_TABLE[b] = C.EXP_TABLE[b - 4] ^ C.EXP_TABLE[b - 5] ^ C.EXP_TABLE[b - 6] ^ C.EXP_TABLE[b - 8];
for (var A = 0; A < 255; A++) C.LOG_TABLE[C.EXP_TABLE[A]] = A;
function v(e, t) {
if (null == e.length) throw new Error(e.length + "/" + t);
for (var i = 0; i < e.length && 0 == e[i]; ) i++;
this.num = new Array(e.length - i + t);
for (var n = 0; n < e.length - i; n++) this.num[n] = e[n + i];
}
v.prototype = {
get: function(e) {
return this.num[e];
},
getLength: function() {
return this.num.length;
},
multiply: function(e) {
for (var t = new Array(this.getLength() + e.getLength() - 1), i = 0; i < this.getLength(); i++) for (var n = 0; n < e.getLength(); n++) t[i + n] ^= C.gexp(C.glog(this.get(i)) + C.glog(e.get(n)));
return new v(t, 0);
},
mod: function(e) {
if (this.getLength() - e.getLength() < 0) return this;
for (var t = C.glog(this.get(0)) - C.glog(e.get(0)), i = new Array(this.getLength()), n = 0; n < this.getLength(); n++) i[n] = this.get(n);
for (var a = 0; a < e.getLength(); a++) i[a] ^= C.gexp(C.glog(e.get(a)) + t);
return new v(i, 0).mod(e);
}
};
function G(e, t) {
this.totalCount = e;
this.dataCount = t;
}
G.RS_BLOCK_TABLE = [ [ 1, 26, 19 ], [ 1, 26, 16 ], [ 1, 26, 13 ], [ 1, 26, 9 ], [ 1, 44, 34 ], [ 1, 44, 28 ], [ 1, 44, 22 ], [ 1, 44, 16 ], [ 1, 70, 55 ], [ 1, 70, 44 ], [ 2, 35, 17 ], [ 2, 35, 13 ], [ 1, 100, 80 ], [ 2, 50, 32 ], [ 2, 50, 24 ], [ 4, 25, 9 ], [ 1, 134, 108 ], [ 2, 67, 43 ], [ 2, 33, 15, 2, 34, 16 ], [ 2, 33, 11, 2, 34, 12 ], [ 2, 86, 68 ], [ 4, 43, 27 ], [ 4, 43, 19 ], [ 4, 43, 15 ], [ 2, 98, 78 ], [ 4, 49, 31 ], [ 2, 32, 14, 4, 33, 15 ], [ 4, 39, 13, 1, 40, 14 ], [ 2, 121, 97 ], [ 2, 60, 38, 2, 61, 39 ], [ 4, 40, 18, 2, 41, 19 ], [ 4, 40, 14, 2, 41, 15 ], [ 2, 146, 116 ], [ 3, 58, 36, 2, 59, 37 ], [ 4, 36, 16, 4, 37, 17 ], [ 4, 36, 12, 4, 37, 13 ], [ 2, 86, 68, 2, 87, 69 ], [ 4, 69, 43, 1, 70, 44 ], [ 6, 43, 19, 2, 44, 20 ], [ 6, 43, 15, 2, 44, 16 ], [ 4, 101, 81 ], [ 1, 80, 50, 4, 81, 51 ], [ 4, 50, 22, 4, 51, 23 ], [ 3, 36, 12, 8, 37, 13 ], [ 2, 116, 92, 2, 117, 93 ], [ 6, 58, 36, 2, 59, 37 ], [ 4, 46, 20, 6, 47, 21 ], [ 7, 42, 14, 4, 43, 15 ], [ 4, 133, 107 ], [ 8, 59, 37, 1, 60, 38 ], [ 8, 44, 20, 4, 45, 21 ], [ 12, 33, 11, 4, 34, 12 ], [ 3, 145, 115, 1, 146, 116 ], [ 4, 64, 40, 5, 65, 41 ], [ 11, 36, 16, 5, 37, 17 ], [ 11, 36, 12, 5, 37, 13 ], [ 5, 109, 87, 1, 110, 88 ], [ 5, 65, 41, 5, 66, 42 ], [ 5, 54, 24, 7, 55, 25 ], [ 11, 36, 12 ], [ 5, 122, 98, 1, 123, 99 ], [ 7, 73, 45, 3, 74, 46 ], [ 15, 43, 19, 2, 44, 20 ], [ 3, 45, 15, 13, 46, 16 ], [ 1, 135, 107, 5, 136, 108 ], [ 10, 74, 46, 1, 75, 47 ], [ 1, 50, 22, 15, 51, 23 ], [ 2, 42, 14, 17, 43, 15 ], [ 5, 150, 120, 1, 151, 121 ], [ 9, 69, 43, 4, 70, 44 ], [ 17, 50, 22, 1, 51, 23 ], [ 2, 42, 14, 19, 43, 15 ], [ 3, 141, 113, 4, 142, 114 ], [ 3, 70, 44, 11, 71, 45 ], [ 17, 47, 21, 4, 48, 22 ], [ 9, 39, 13, 16, 40, 14 ], [ 3, 135, 107, 5, 136, 108 ], [ 3, 67, 41, 13, 68, 42 ], [ 15, 54, 24, 5, 55, 25 ], [ 15, 43, 15, 10, 44, 16 ], [ 4, 144, 116, 4, 145, 117 ], [ 17, 68, 42 ], [ 17, 50, 22, 6, 51, 23 ], [ 19, 46, 16, 6, 47, 17 ], [ 2, 139, 111, 7, 140, 112 ], [ 17, 74, 46 ], [ 7, 54, 24, 16, 55, 25 ], [ 34, 37, 13 ], [ 4, 151, 121, 5, 152, 122 ], [ 4, 75, 47, 14, 76, 48 ], [ 11, 54, 24, 14, 55, 25 ], [ 16, 45, 15, 14, 46, 16 ], [ 6, 147, 117, 4, 148, 118 ], [ 6, 73, 45, 14, 74, 46 ], [ 11, 54, 24, 16, 55, 25 ], [ 30, 46, 16, 2, 47, 17 ], [ 8, 132, 106, 4, 133, 107 ], [ 8, 75, 47, 13, 76, 48 ], [ 7, 54, 24, 22, 55, 25 ], [ 22, 45, 15, 13, 46, 16 ], [ 10, 142, 114, 2, 143, 115 ], [ 19, 74, 46, 4, 75, 47 ], [ 28, 50, 22, 6, 51, 23 ], [ 33, 46, 16, 4, 47, 17 ], [ 8, 152, 122, 4, 153, 123 ], [ 22, 73, 45, 3, 74, 46 ], [ 8, 53, 23, 26, 54, 24 ], [ 12, 45, 15, 28, 46, 16 ], [ 3, 147, 117, 10, 148, 118 ], [ 3, 73, 45, 23, 74, 46 ], [ 4, 54, 24, 31, 55, 25 ], [ 11, 45, 15, 31, 46, 16 ], [ 7, 146, 116, 7, 147, 117 ], [ 21, 73, 45, 7, 74, 46 ], [ 1, 53, 23, 37, 54, 24 ], [ 19, 45, 15, 26, 46, 16 ], [ 5, 145, 115, 10, 146, 116 ], [ 19, 75, 47, 10, 76, 48 ], [ 15, 54, 24, 25, 55, 25 ], [ 23, 45, 15, 25, 46, 16 ], [ 13, 145, 115, 3, 146, 116 ], [ 2, 74, 46, 29, 75, 47 ], [ 42, 54, 24, 1, 55, 25 ], [ 23, 45, 15, 28, 46, 16 ], [ 17, 145, 115 ], [ 10, 74, 46, 23, 75, 47 ], [ 10, 54, 24, 35, 55, 25 ], [ 19, 45, 15, 35, 46, 16 ], [ 17, 145, 115, 1, 146, 116 ], [ 14, 74, 46, 21, 75, 47 ], [ 29, 54, 24, 19, 55, 25 ], [ 11, 45, 15, 46, 46, 16 ], [ 13, 145, 115, 6, 146, 116 ], [ 14, 74, 46, 23, 75, 47 ], [ 44, 54, 24, 7, 55, 25 ], [ 59, 46, 16, 1, 47, 17 ], [ 12, 151, 121, 7, 152, 122 ], [ 12, 75, 47, 26, 76, 48 ], [ 39, 54, 24, 14, 55, 25 ], [ 22, 45, 15, 41, 46, 16 ], [ 6, 151, 121, 14, 152, 122 ], [ 6, 75, 47, 34, 76, 48 ], [ 46, 54, 24, 10, 55, 25 ], [ 2, 45, 15, 64, 46, 16 ], [ 17, 152, 122, 4, 153, 123 ], [ 29, 74, 46, 14, 75, 47 ], [ 49, 54, 24, 10, 55, 25 ], [ 24, 45, 15, 46, 46, 16 ], [ 4, 152, 122, 18, 153, 123 ], [ 13, 74, 46, 32, 75, 47 ], [ 48, 54, 24, 14, 55, 25 ], [ 42, 45, 15, 32, 46, 16 ], [ 20, 147, 117, 4, 148, 118 ], [ 40, 75, 47, 7, 76, 48 ], [ 43, 54, 24, 22, 55, 25 ], [ 10, 45, 15, 67, 46, 16 ], [ 19, 148, 118, 6, 149, 119 ], [ 18, 75, 47, 31, 76, 48 ], [ 34, 54, 24, 34, 55, 25 ], [ 20, 45, 15, 61, 46, 16 ] ];
G.getRSBlocks = function(e, t) {
var i = G.getRsBlockTable(e, t);
if (null == i) throw new Error("bad rs block @ typeNumber:" + e + "/errorCorrectLevel:" + t);
for (var n = i.length / 3, a = new Array(), o = 0; o < n; o++) for (var s = i[3 * o + 0], r = i[3 * o + 1], c = i[3 * o + 2], l = 0; l < s; l++) a.push(new G(r, c));
return a;
};
G.getRsBlockTable = function(e, t) {
switch (t) {
case s:
return G.RS_BLOCK_TABLE[4 * (e - 1) + 0];

case r:
return G.RS_BLOCK_TABLE[4 * (e - 1) + 1];

case c:
return G.RS_BLOCK_TABLE[4 * (e - 1) + 2];

case l:
return G.RS_BLOCK_TABLE[4 * (e - 1) + 3];

default:
return;
}
};
function I() {
this.buffer = new Array();
this.length = 0;
}
I.prototype = {
get: function(e) {
var t = Math.floor(e / 8);
return 1 == (this.buffer[t] >>> 7 - e % 8 & 1);
},
put: function(e, t) {
for (var i = 0; i < t; i++) this.putBit(1 == (e >>> t - i - 1 & 1));
},
getLengthInBits: function() {
return this.length;
},
putBit: function(e) {
var t = Math.floor(this.length / 8);
this.buffer.length <= t && this.buffer.push(0);
e && (this.buffer[t] |= 128 >>> this.length % 8);
this.length++;
}
};
var D = cc.Class({
extends: cc.Graphics,
properties: {
string: {
default: "Hello World!",
notify: function(e) {
this.string !== e && this.setContent();
}
},
backColor: {
type: cc.Color,
default: cc.Color.WHITE,
notify: function() {
this.setContent();
}
},
foreColor: {
type: cc.Color,
default: cc.Color.BLACK,
notify: function(e) {
this.node.color = this.fillColor;
this.setContent();
}
},
margin: {
type: cc.Float,
default: 10,
notify: function(e) {
e !== this.margin && this.setContent();
}
},
_size: 200,
size: {
type: cc.Float,
get: function() {
return this._size;
},
set: function(e) {
if (this._size !== e) {
this.node.setContentSize(e, e);
this.setContent();
this._size = e;
}
}
}
},
onLoad: function() {
this.node.setContentSize(200, 200);
this.setContent();
},
setContent: function() {
this.clear();
this._sgNode.fillColor = this.backColor;
var e = this.node.width;
this.rect(0, 0, e, e);
this.fill();
this.close();
var t = new a(-1, 2);
t.addData(this.string);
t.make();
this._sgNode.fillColor = this.foreColor;
for (var i = e - 2 * this.margin, n = t.getModuleCount(), o = i / n, s = i / n, r = Math.ceil(o), c = Math.ceil(s), l = 0; l < n; l++) for (var h = 0; h < n; h++) if (t.isDark(l, h)) {
this.rect(this.margin + h * o, i - s - Math.round(l * s) + this.margin, r, c);
this.fill();
}
}
});
cc.Class.Attr.setClassAttr(D, "lineWidth", "visible", !1);
cc.Class.Attr.setClassAttr(D, "lineJoin", "visible", !1);
cc.Class.Attr.setClassAttr(D, "lineCap", "visible", !1);
cc.Class.Attr.setClassAttr(D, "strokeColor", "visible", !1);
cc.Class.Attr.setClassAttr(D, "miterLimit", "visible", !1);
cc.Class.Attr.setClassAttr(D, "fillColor", "visible", !1);
t.exports = D;
cc._RF.pop();
}, {} ],
jsMatchField: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "de5a1OpOOBHd4TqTqU4Xt5o", "jsMatchField");
cc.Class({
extends: cc.Component,
properties: {
nodeGameIcon: cc.Node,
labelMatchName: cc.Label,
labelFieldDesc0: cc.Label,
labelFieldDesc1: cc.Label,
labelFieldDesc2: cc.Label,
pfMatchInfo: cc.Prefab,
wKindID: 0,
wJoinID: 0,
wFieldID: 0,
nodeMatchInfo: null
},
OnEnterMatchEvent: null,
onLoad: function() {
GetServerRoom().jsMatchField = this;
},
SetGameIcon: function(e) {
this.wKindID = e;
var t = this, i = "GameLobby/GameIcon/" + e;
cc.loader.loadRes(i, cc.SpriteFrame, function(e, n) {
if (e) cc.warn("SetGameIcon.Error.spriteFrame（" + i + "）.is.null"); else if (t.nodeGameIcon) {
t.nodeGameIcon.getComponent(cc.Sprite).spriteFrame = n;
t.nodeGameIcon.active = !0;
}
});
},
SetMatchName: function(e) {
this.labelMatchName && (this.labelMatchName.string = e);
},
SetFieldDesc: function(e, t, i) {
this.labelFieldDesc0 && (this.labelFieldDesc0.string = e);
this.labelFieldDesc1 && (this.labelFieldDesc1.string = t);
this.labelFieldDesc2 && (this.labelFieldDesc2.string = i);
},
OnEnterMatch: function() {
this.OnEnterMatchEvent && this.OnEnterMatchEvent(this.wKindID, this.wJoinID, this.wFieldID);
},
SetnodeMatchInfo: function(e) {
this.nodeMatchInfo = e;
},
OnEventGameServerMessage: function(e, t, i, n) {
if (MDM_GR_MATCH == e) {
if (SUB_GR_MATCH_NUM == t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GR_Match_Num, n, "ErrorSize.MatchField.7.401")) return !1;
var a = new CMD_GR_Match_Num();
a.init(i);
return this.OnShowMatchInfo(t, a);
}
if (SUB_GR_USER_MATCH_STATUS == t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GR_UserMatchStatus, n, "ErrorSize.MatchField.7.407")) return !1;
var o = new CMD_GR_UserMatchStatus();
o.init(i);
return this.OnShowMatchInfo(t, o);
}
if (SUB_GR_MATCH_DESC == t) {
if (YQYAssertAlertStructSizeByEqual(CMD_GR_MatchDesc, n, "ErrorSize.MatchField.7.408")) return !1;
var s = new CMD_GR_MatchDesc();
s.init(i);
return this.OnShowMatchInfo(t, s);
}
if (SUB_GR_REWARD_INFO == t) {
if (YQYAssertAlertStructSizeByLocalMax(CMD_GR_MatchReward, n, "ErrorSize.MatchField.7.412")) return !1;
var r = new CMD_GR_MatchReward();
r.init(i);
return this.OnShowMatchInfo(t, r);
}
}
return !1;
},
OnShowMatchInfo: function(e, t) {
if (null == this.nodeMatchInfo) return !1;
var i = null;
if (0 == this.nodeMatchInfo.childrenCount) {
if (!this.pfMatchInfo) return !1;
var n = cc.instantiate(this.pfMatchInfo);
n.parent = this.nodeMatchInfo;
i = n.getComponent("jsMatchInfo");
} else {
i = this.nodeMatchInfo.getChildByName("pfMatchInfo").getComponent("jsMatchInfo");
}
return null != i && (e == SUB_GR_REWARD_INFO ? i.OnShowRewardInfo(t) : e == SUB_GR_MATCH_DESC ? i.OnShowDescInfo(t) : e == SUB_GR_MATCH_NUM ? i.OnShowMatchNum(t) : e == SUB_GR_USER_MATCH_STATUS && i.OnShowUserMatchStatus(t));
}
});
cc._RF.pop();
}, {} ],
jsModifyPassword: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "165d7tjYsZGLJ9pdPFXxMko", "jsModifyPassword");
cc.Class({
extends: cc.Component,
properties: {
m_InputPhone: cc.EditBox,
m_InputNewPassword: cc.EditBox,
m_InputConfirmPassword: cc.EditBox,
m_ButtonSend: cc.Button,
m_InputVerify: cc.EditBox,
m_fCmdDelayTime: 0,
jsControlLogin: null
},
onLoad: function() {
SceneManager_AlertShow(this.node);
Dispatcher.AddListener(this, DSP_OPERATE_SUCCESS, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_OPERATE_FAIL, this.OnDispatcherEvent);
AddXmasPrefab(cc.find("nodePassword", this.node));
},
onDestroy: function() {
Dispatcher.RemoveAllListener(this);
},
OnCheckInput: function(e) {
var t = this.m_InputPhone.string, i = this.m_InputNewPassword.string, n = this.m_InputConfirmPassword.string;
parseInt(this.m_InputVerify.string);
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("Mobile phone number can not be empty!");
return !1;
}
if (!OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("Please input the correct mobile phone number");
return !1;
}
if ("" == i || null == i || null == i) {
ManagerHelp_SetSystemLabel("The password cannot be empty!");
return !1;
}
if (i.length < 6 || i.length > 10) {
ManagerHelp_SetSystemLabel("Password length must be between 6 and 10 characters");
return !1;
}
if (n != i) {
ManagerHelp_SetSystemLabel("The two passwords entered are not the same, please check and try again!");
return !1;
}
if (1 == e) {
if (isNaN(this.m_InputVerify.string)) {
ManagerHelp_SetSystemLabel("The verification code cannot be empty!");
return !1;
}
if (!IsNumber(this.m_InputVerify.string, 6)) {
ManagerHelp_SetSystemLabel("Please enter a 6 digit verification code!");
return !1;
}
}
return !0;
},
OnGetVerifyButtonEvent: function() {
var e = this, t = PhonePrefix + this.m_InputPhone.string;
if (this.OnCheckInput(!1)) if (0 == GetProject().bSmsType) {
GetMissionLogon().SendPacketGetVerify(t, 2);
this.m_ButtonSend.interactable = !1;
this.m_fCmdDelayTime = 300;
} else 1 == GetProject().bSmsType && GetMissionLogon().SendPacketGetVerify(t, 2, function() {
e.m_ButtonSend.interactable = !1;
e.m_fCmdDelayTime = 300;
});
},
OnModifyButtonEvent: function() {
var e = PhonePrefix + this.m_InputPhone.string, t = this.m_InputNewPassword.string, i = this.m_InputVerify.string;
this.OnCheckInput(!0) && GetMissionLogon().SendPacketForgetPass(e, t, i, PWD_TYPE_LOGON);
},
OnDispatcherEvent: function(e, t, i, n) {
switch (e) {
case DSP_OPERATE_SUCCESS:
if (t == MDM_GP_USER_SERVICE && i == SUB_GP_FORGET_LOGON_PASS) {
ACF_SetAccount(this.m_InputPhone.string, this.m_InputNewPassword.string, null);
this.jsControlLogin && this.jsControlLogin.SetAccountAndPassword(this.m_InputPhone.string, this.m_InputNewPassword.string);
ManagerHelp_SetSystemLabel("Modify successfully!");
OnPostSmsMessageId();
this.node.removeFromParent();
}
if (t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE) {
this.fCmdDelayTime = 0;
ManagerHelp_SetSystemAlert(n);
}
break;

case DSP_OPERATE_FAIL:
if (t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE) {
this.m_fCmdDelayTime = 0;
ManagerHelp_SetSystemLabel(n);
}
}
},
update: function(e) {
if (this.m_fCmdDelayTime > 0) {
this.m_fCmdDelayTime -= e;
this.m_ButtonSend.node.children[0].getComponent(cc.Label).string = parseInt(this.m_fCmdDelayTime) + "s";
} else {
this.m_ButtonSend.interactable = !0;
this.m_ButtonSend.node.children[0].getComponent(cc.Label).string = "Send";
}
}
});
cc._RF.pop();
}, {} ],
jsNewJackPotDrawRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5d98Pej3tDb4NBhO9CqXgB", "jsNewJackPotDrawRecordItem");
cc.Class({
extends: cc.Component,
properties: {
lblNickName: cc.Label,
lblReward: cc.Label,
lblTime: cc.Label,
bg: cc.Sprite,
bgFrame: [ cc.SpriteFrame ],
see: cc.Sprite,
seeFrame: [ cc.SpriteFrame ]
},
setData: function(e) {
this.lblNickName.string = e.Player;
this.lblReward.string = (e.WinScore / 1e3).toFixed(2);
this.lblTime.string = e.InsertTime;
this.callBack = e.callback;
this.id = e.ID;
},
clickEvent: function() {
this.callBack && this.callBack(this.id);
this.setSeclet(!0);
},
setSeclet: function(e) {
if (e) {
this.bg.spriteFrame = this.bgFrame[1];
this.see.spriteFrame = this.seeFrame[1];
} else {
this.bg.spriteFrame = this.bgFrame[0];
this.see.spriteFrame = this.seeFrame[0];
}
}
});
cc._RF.pop();
}, {} ],
jsNewJackPotDrawRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cf90cCPKJBJwJjHwZ8PuUGT", "jsNewJackPotDrawRecord");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
scrollView: cc.ScrollView,
pfJackpotRankItem: cc.Prefab,
pfJackPotDraw: cc.Prefab,
nodeJackPotDraw: cc.Node,
recordNode: cc.Node,
recordBg: cc.Node,
scrollConet: cc.Node,
recScrollView: cc.Node
},
onLoad: function() {
this.requestJackpotRank();
},
setData: function(e, t) {
this.selfHelp = t;
var i = cc.instantiate(this.pfJackPotDraw);
this.jsJackPotDraw = i.getComponent("jsNewJackPotDraw");
i.getComponent(cc.Widget).top = 0;
i.getComponent(cc.Widget).left = 0;
i.getComponent(cc.Widget).right = 0;
i.getComponent(cc.Widget).bottom = 0;
this.jsJackPotDraw.setData(0, e);
this.nodeJackPotDraw.addChild(i);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
"btnClose" == i || "Splash" == i ? this.node.destroy() : "btnHelp" == i && (this.selfHelp ? this.selfHelp.showHelpPanel() : this.jsGameEngine.OnFrameButtonHelpNew());
},
requestJackpotRank: function() {
var e = this, t = GetProject().szNewGameJackpotRecordUrl, i = USI_OnGetInfo(), n = GetServerRoom().GetGameServer(), a = "uid=" + i.dwUserID + "&sign=" + i.szSign + "&serverID=" + n.wServerID + "&pageIndex=1&pageSize=20";
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, a, function(t, i) {
t ? i && (200 == i.statusCode ? e.showJackpotRankInfo(i.data) : ManagerHelp_SetSystemLabel("Request for data failed. Please try again！")) : ManagerHelp_SetSystemLabel("Request for data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
onCilckRecClose: function() {
if (!this.isRecMove) {
this.recordBg.stopAllActions();
this.recordBg.runAction(cc.sequence(cc.moveBy(.3, cc.p(550, 0)), cc.callFunc(function() {
this.recordNode.active = !1;
}.bind(this))));
}
},
clickItem: function(e) {
for (var t = 0; t < this.scrollConet.children.length; t++) this.scrollConet.children[t].getComponent("jsNewJackPotDrawRecordItem").setSeclet(!1);
var i = this, n = GetProject().szNewGameJackpotInfoRecordUrl, a = USI_OnGetInfo(), o = GetServerRoom().GetGameServer(), s = "uid=" + a.dwUserID + "&sign=" + a.szSign + "&serverID=" + o.wServerID + "&ID=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(n, s, function(e, t) {
e ? t && (200 == t.statusCode ? i.showRecordInfo(t.data) : ManagerHelp_SetSystemLabel("Request for data failed. Please try again！")) : ManagerHelp_SetSystemLabel("Request for data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
showRecordInfo: function(e) {
this.recordNode.active = !0;
this.recordBg.stopAllActions();
this.isRecMove = !0;
this.recordBg.runAction(cc.sequence(cc.moveBy(.3, cc.p(-550, 0)), cc.callFunc(function() {
this.isRecMove = !1;
}.bind(this))));
this.nodeContent.removeAllChildren(!0);
this.recScrollView.getComponent("jsScrollHelp").initPage();
this.recScrollView.getComponent("jsScrollHelp").initItem(e, "jsNewJackPotRecordItem");
},
showJackpotRankInfo: function(e) {
for (var t = this, i = 0; i < e.length; i++) e[i].callback = this.clickItem.bind(this);
this.scrollView.node.getComponent("jsScrollHelp").initPage();
this.scrollView.node.getComponent("jsScrollHelp").initItem(e, "jsNewJackPotDrawRecordItem");
this.scrollView.node.getComponent("jsScrollHelp").refreshApi = function(e, i) {
var n = GetProject().szNewGameJackpotRecordUrl, a = USI_OnGetInfo(), o = GetServerRoom().GetGameServer(), s = "uid=" + a.dwUserID + "&sign=" + a.szSign + "&serverID=" + o.wServerID + "&pageIndex=" + e + "&pageSize=20&jackpotID=0";
HttpHelper.post_NotDecrypt(n, s, function(e, n) {
if (e && n) {
if (200 != n.statusCode) return;
for (var a = 0; a < n.data.length; a++) n.data[a].callback = t.clickItem.bind(t);
i && i(n.data);
}
}, window.fHttpTimeOut);
};
}
});
cc._RF.pop();
}, {} ],
jsNewJackPotDraw: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "98c1eci74JHBazWTyqId+5J", "jsNewJackPotDraw");
cc.Class({
extends: cc.Component,
properties: {
rankBg: cc.Node,
rankBgSpriteFrame: [ cc.SpriteFrame ],
drawBody: cc.Node,
jpNum: cc.Label,
drawItem: cc.Prefab,
curPos: cc.Node,
goldAni: cc.Node,
JPAni: cc.Node,
Splash: cc.Node,
nodeJackPot: cc.Node,
nodeJackPotSpine: cc.Node,
nodeWinScore: cc.Node,
meWinScore: cc.Node,
baoNode: cc.Node,
pig: cc.Node,
pigImgae: cc.Node
},
onLoad: function() {},
start: function() {},
initDrawData: function() {
this.state = 0;
this.doDrawing = 1;
this.maxSpeed = 1;
this.highTime = 2;
this.normalTime = 1;
this.lowTime = 6;
this.highLope = 2;
this.lowLope = 2;
this.speed = 0;
this.curTime = 0;
this.curArrIndex = 0;
this.oldArrIndex = 0;
this.curPos.setPosition(this.drawBody.children[0].getPosition());
},
randomRatio: function(e) {
for (var t = [], i = 0; i < 2; i++) t.push(Rand(16, 10));
for (var n = 0; n < 3; n++) {
t.push(Rand(6, 1));
t.push(Rand(13, 6));
}
t.push(Rand(30, 25));
t.push(1);
t.push(e);
this.shuffle(t);
t.splice(2, 0, 30);
return t;
},
shuffle: function(e) {
for (var t, i, n = e.length; n; ) {
i = e[t = Math.floor(Math.random() * n--)];
e[t] = e[n];
e[n] = i;
}
return e;
},
setData: function(e, t, i) {
this.setPanelType(e);
this.setJPNum(t);
null == i && (i = Rand(11, 4));
var n = this.randomRatio(i);
this.jpArrIndex = n.indexOf(i);
for (var a = void 0, o = 0; o < this.drawBody.children.length; o++) {
if (0 == this.drawBody.children[o].children.length) {
a = cc.instantiate(this.drawItem);
this.drawBody.children[o].addChild(a);
}
this.drawBody.children[o].children[0].getComponent("jsJackPotDrawItem").setData(n[o], 2 == o, !0);
}
},
setJPNum: function(e) {
this.jpNum.string = e;
},
doDraw: function(e, t, i, n, a) {
SceneManager_AlertShow(this.node);
this.callback = i;
this.WinJackpotScore = n;
this.meWinJackpotScore = a;
this.setData(1, t, e);
this.scheduleOnce(function() {
this.initDrawData();
}, 2);
},
setPanelType: function(e) {
this.rankBg.active = 0 == e;
this.pigImgae.active = 0 == e;
this.pig.active = 1 == e;
this.JPAni.active = 1 == e;
this.curPos.active = 1 == e;
this.Splash.active = 1 == e;
},
FlyGold: function() {
var e = this;
this.nodeWinScore.getComponent("jsJackPotDrawText").setNum(this.WinJackpotScore / 1e3, 3);
this.nodeWinScore.setScale(0);
this.nodeWinScore.runAction(cc.sequence(cc.scaleTo(.2, 2, 2), cc.scaleTo(.2, 1.5, 1.5), cc.delayTime(4.5), cc.spawn(cc.moveTo(.2, 0, -500), cc.scaleTo(.2, 0, 0)), cc.callFunc(function(t) {
if (e.callback) {
e.callback();
e.node.destroy();
}
})));
this.meWinScore.getComponent("jsJackPotDrawText").setNum(this.meWinJackpotScore / 1e3, 3);
},
drawing: function(e) {
this.curTime += e;
if (0 == this.state) this.speed += Math.pow(this.curTime, this.highLope) / (Math.pow(this.highTime, this.highLope) / this.maxSpeed) + .2; else if (1 == this.state) this.speed += this.maxSpeed; else if (2 == this.state) {
var t = this.curTime - this.highTime - this.normalTime, i = this.lowTime - t;
i = i < 2 ? 2 : i;
if (t > this.lowTime && this.curArrIndex == this.jpArrIndex) {
this.doDrawing = 0;
this.scheduleOnce(function() {
if (this.WinJackpotScore) {
cc.log("走自带的jp中奖数字");
this.FlyGold();
} else this.callback && this.callback();
window.mfConfig.PlayAudio("GameLobby/Audio/bigwin_popup", !1);
window.mfConfig.PlayAudio("GameLobby/Audio/supermegawin_coins", !1);
this.nodeJackPot.active = !0;
var e = this.nodeJackPotSpine.getComponent(sp.Skeleton);
e.animation = "start";
e.addAnimation(0, "keep", !0);
var t = this.baoNode.getComponent(sp.Skeleton);
t.animation = "start_jinbi";
t.addAnimation(0, "keep_jinbi", !0);
}, 2);
return;
}
this.speed += Math.pow(i, this.lowLope) / (Math.pow(this.lowTime, this.lowLope) / this.maxSpeed);
}
this.curTime < this.highTime ? this.state = 0 : this.curTime < this.normalTime + this.highTime ? this.state = 1 : this.state = 2;
this.curArrIndex = parseInt(this.speed) % 12;
if (this.curArrIndex != this.oldArrIndex) {
0 != window.mfConfig.fSound && window.mfConfig.PlayAudio("GameLobby/Audio/TURN", !1, window.mfConfig.fSound);
this.curPos.setPosition(this.drawBody.children[this.curArrIndex].getPosition());
this.oldArrIndex = this.curArrIndex;
}
},
update: function(e) {
1 == this.doDrawing && this.drawing(e);
}
});
cc._RF.pop();
}, {} ],
jsNewJackPotRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ec9a0J8FBNAT6ne4f1+9fzd", "jsNewJackPotRecordItem");
cc.Class({
extends: cc.Component,
properties: {
lblNickName: cc.Label,
lblReward: cc.Label,
lblNum: cc.Label
},
setData: function(e) {
this.lblNickName.string = e.NickName;
this.lblReward.string = (e.WinScore / 1e3).toFixed(2);
this.lblNum.string = e.TopID;
var t = USI_OnGetInfo();
if (e.UserID == t.dwUserID) {
this.lblNickName.node.color = cc.color(8, 193, 200);
this.lblReward.node.color = cc.color(8, 193, 200);
this.lblNum.node.color = cc.color(8, 193, 200);
}
}
});
cc._RF.pop();
}, {} ],
jsOnlinePlayerItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e5584jlTfhP9K/zkXnAt4hJ", "jsOnlinePlayerItem");
cc.Class({
extends: cc.Component,
properties: {
nodeRankBg: cc.Node,
aryRank: [ cc.Node ],
labelRank: cc.Label,
nodeUserInfo: cc.Node,
labelBetScore: cc.Label,
labelWinCount: cc.Label
}
});
cc._RF.pop();
}, {} ],
jsOnlinePlayerList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "027aawKBAVEw77fRgg5Dx+O", "jsOnlinePlayerList");
cc.Class({
extends: cc.Component,
properties: {
scrView: cc.ScrollView,
nodeContent: cc.Node,
pfPlayerItem: cc.Prefab
},
onLoad: function() {
var e = this;
this.bActionFinish = !1;
SceneManager_AlertShow(this.node, window.SceneType.fSpeed, function() {
e.bActionFinish = !0;
});
this.stOnLineUser = null;
this.cbBeforeIndex = -1;
this.nodeContent && this.nodeContent.removeAllChildren();
},
OnScvRegister: function() {
this.scrView && this.scrView.node.on("bounce-bottom", this.OnScrollEvent, this);
},
OnUpdateData: function(e) {
if (this.bActionFinish) {
this.stOnLineUser = e;
this.OnUpdatePlayerList(e, 0);
} else this.stOnLineUser = e;
},
OnUpdatePlayerList: function(e, t) {
var i = this, n = this;
this.nodeContent && this.pfPlayerItem && function() {
var a = 0;
a = 0 == t ? Math.min(e.length, 5) : e.length - t;
for (var o = t + a, s = function(a) {
i.cbBeforeIndex++;
if (e[a].wChairID == INVALID_CHAIR || 0 == e[a].dwGameID) return "continue";
var s = cc.instantiate(i.pfPlayerItem);
if (0 == t) {
i.scrView.vertical = !1;
s.x = s.width;
var r = cc.sequence(cc.delayTime(.1 * a), cc.moveTo(.1, cc.v2(0, s.y)), cc.callFunc(function() {
if (a == o - 1) {
n.scrView.vertical = !0;
n.scheduleOnce(function() {
n.OnScrollEvent();
}, .1);
}
}));
s.runAction(r);
}
i.nodeContent.addChild(s);
var c = s.getComponent("jsOnlinePlayerItem"), l = c.nodeUserInfo.getComponent("jsFrameUser");
if (a <= 10) if (a <= 1) {
c.aryRank[a].active = !0;
c.nodeRankBg.active = !0;
c.labelRank.string = "";
} else c.labelRank.string = "Regal-N0." + a; else c.labelRank.string = "N0." + a;
c.labelBetScore.string = OnIntScore(e[a].lBetScore);
c.labelWinCount.string = e[a].cbWinCount + "Round";
var h = PlayerManager.SetTempUserItem(e[a]);
l.SetUserDataItem(h);
}, r = t; r < o; r++) s(r);
}();
},
OnScrollEvent: function() {
this.stOnLineUser && this.stOnLineUser.length > this.cbBeforeIndex + 1 && this.OnUpdatePlayerList(this.stOnLineUser, this.cbBeforeIndex + 1);
},
OnRemoveTarget: function(e, t) {
for (var i = this.nodeContent.children, n = 0; n < i.length; n++) this.nodeContent.children[n].stopAllActions();
this.node.getComponent("jsButtonItem").OnButtonRemoveTarget(e, t);
},
update: function(e) {
if (this.bActionFinish && null != this.stOnLineUser && -1 == this.cbBeforeIndex) {
this.OnUpdatePlayerList(this.stOnLineUser, 0);
this.bActionFinish = !1;
}
}
});
cc._RF.pop();
}, {} ],
jsPageVip: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0c8b4b7gydI+5+iUsM0vJVF", "jsPageVip");
cc.Class({
extends: cc.Component,
properties: {
labelTip: cc.Label,
labelVip: cc.Label,
spHeadFrame: cc.Sprite
},
start: function() {},
OnInitData: function(e) {
this.labelVip.string = e;
var t = "common/HeadFrame/Frame_" + e, i = this;
cc.loader.loadRes(t, cc.SpriteFrame, function(e, t) {
e || i.spHeadFrame && (i.spHeadFrame.spriteFrame = t);
});
}
});
cc._RF.pop();
}, {} ],
jsPlayerItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2bd0eEWb09FMJ0xMbQMO+oS", "jsPlayerItem");
cc.Class({
extends: cc.Component,
properties: {
nodeUserInfo: cc.Node,
nodeUser: cc.Node,
nodeUserNull: cc.Node,
strAction: ""
},
OnInitUserInfo: function() {
this.nodeUser.active = !1;
this.nodeUserNull.active = !0;
},
OnLoadUserInfo: function() {
this.nodeUser.active = !0;
this.nodeUserNull.active = !1;
},
start: function() {}
});
cc._RF.pop();
}, {} ],
jsPlayerList: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fee736Re4dOHKdH6rct3ChD", "jsPlayerList");
cc.Class({
extends: cc.Component,
properties: {
pfNodeUserView: cc.Prefab,
nodeOtehrPlayer: cc.Node,
nodeBankerInfo: cc.Node,
nodeSelfInfo: cc.Node,
aryNodeBetArea: [ cc.Node ],
nodeStar: [ cc.Node ],
nodeNewArea: cc.Node,
pfJetton: cc.Prefab,
pfGameEndScore: cc.Prefab,
pfStar: cc.Prefab,
pfWinerAnim: cc.Prefab,
pfStar_Particle: cc.Prefab
},
onLoad: function() {
this.fSountTime = 0;
this.fTimeCount = 0;
this.fBeforeTime = 0;
this.bLoadFinish = !1;
this.bUpdateScore = !1;
this.lAryOnlineUserBet = [];
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.bStarBet = [];
memset(this.bStarBet, !1, this.nodeStar.length);
this._jsGameAction = [];
this._jsBetAction = [];
this.GameEndCallBack = null;
this._jsEndJettonAction = [];
this.OnInitNodePool();
},
start: function() {},
onDestroy: function() {
this.JettonPool.clear();
},
OnInitNodePool: function() {
this.JettonPool = new cc.NodePool();
},
OnCreateJetton: function() {
var e = null;
(e = this.JettonPool.size() > 0 ? this.JettonPool.get() : cc.instantiate(this.pfJetton)).getComponent("jsJetton").OnResetJetton();
return e;
},
OnPutJetton: function(e) {
this.JettonPool.put(e);
},
OnInitNodeUser: function(e) {
this.nodeOnLineUser = [];
if (this.pfNodeUserView && e) {
var t = cc.instantiate(this.pfNodeUserView);
e.addChild(t);
for (var i = t.children, n = 0; n < i.length; n++) this.nodeOnLineUser.push(i[n]);
}
this.wAryChairID = [];
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
},
OnLoadUserInfo: function(e, t, i) {
this.wMeChairID = t;
this.wMostWinChairID = INVALID_CHAIR;
this.wMostBetChairID = INVALID_CHAIR;
this.stOnLineUser = i.concat();
PlayerManager.DeleteUserItemByAll();
memset(this.wAryChairID, INVALID_CHAIR, this.nodeOnLineUser.length + 1);
for (var n = 0; n < this.nodeOnLineUser.length; n++) if (this.nodeOnLineUser[n]) {
var a = this.nodeOnLineUser[n].getComponent("jsPlayerItem");
a.OnInitUserInfo();
if (this.stOnLineUser[n] && this.stOnLineUser[n].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[n].dwGameID) {
var o = PlayerManager.GetMeUserItem();
this.stOnLineUser[n].dwGameID == o.GetGameID() && (this.stOnLineUser[n].wChairID = t);
var s = this.nodeOnLineUser[n].getComponent("jsFrameUser"), r = this.stOnLineUser[n].wChairID, c = PlayerManager.GetUserItemByTableInfo(e, r);
if (!c) {
(c = PlayerManager.SetUserItem(this.stOnLineUser[n])).pGlobalData.wTableID = e;
c.pGlobalData.wChairID = r;
}
s.SetUserDataItem(c, a.OnLoadUserInfo.bind(a));
0 == n ? this.wMostWinChairID = r : 1 == n && (this.wMostBetChairID = r);
this.wAryChairID[n] = r;
}
}
this.wAryChairID[this.nodeOnLineUser.length] = t;
this.bLoadFinish = !0;
if (this.bUpdateScore) {
this.UpdateOnlineUserScore();
this.bUpdateScore = !1;
}
},
OnLoadJettonInfo: function(e) {
e && 0 != e.length ? this.lAryJetton = e.concat() : cc.warn("OnLoadJettonInfo Error:lAryJetton is invalid");
},
OnPlaceJettonAction: function(e, t, i, n, a) {
var o = !0, s = null;
if (null != e) for (var r = 0; r < e.length; r++) if (e[r].wChairID == t) {
o = !1;
s = this.nodeOnLineUser[r];
break;
}
if (this.wMeChairID != t) if (null != s && this.aryNodeBetArea[i]) {
this.OnBetByList(s, n, i, a);
this.OnUpdateScore(t, n, !0);
} else o && this.nodeOtehrPlayer && this.OnJettonAction(this.nodeOtehrPlayer, n, i, a); else if (this.nodeSelfInfo) {
this.OnJettonAction(this.nodeSelfInfo, n, i, a);
this.OnUpdateScore(t, n, !0);
}
this.OnMostWinBetAction(t, i);
},
OnGameEndJettonAction: function(e, t, i, n) {
this.GameEndCallBack = n;
this._jsGameAction.length = 0;
if (0 != i) {
this.nodeBankerInfo ? 0 == e.length ? this.OnMoveJettonToBanker(e, t, !0) : this.OnMoveJettonToBanker(e, t, !1) : this.OnMoveJettonToWiner(t);
this.OnActionBegan();
} else this.OnShowGameScore(t, !1);
},
OnLoadWinTarget: function(e, t) {
var i = [], n = !1;
e[this.wMeChairID] > 0 && i.push(this.nodeSelfInfo);
for (var a = 0; a < this.nodeOnLineUser.length; a++) if (this.stOnLineUser[a] && this.stOnLineUser[a].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[a].dwGameID && e[this.stOnLineUser[a].wChairID] > 0) {
i.push(this.nodeOnLineUser[a]);
n = !0;
}
if (!n) for (var o = 0; o < e.length; o++) if (e[o] > 0 && o != this.wMeChairID) {
n = !0;
break;
}
(n || 0 == i.length) && t && i.push(this.nodeOtehrPlayer);
return i;
},
OnMoveJettonToBanker: function(e, t, i) {
for (var n = this, a = [], o = 0; o < this.aryNodeBetArea.length; o++) {
for (var s = !1, r = 0; r < e.length; r++) if (o == e[r]) {
s = !0;
break;
}
if (!s) for (var c = 0; c < this.aryNodeBetArea[o].children.length; c++) {
var l = new Object();
l.nodeJetton = this.aryNodeBetArea[o].children[c];
l.cbArea = o;
a.push(l);
}
}
for (var h = [], u = 0; u < this.aryNodeBetArea.length; u++) {
var d = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), m = this.aryNodeBetArea[u].convertToNodeSpaceAR(d);
h.push(m);
}
var f = [];
f[0] = "Action_MoveToBanker";
f[1] = a.concat();
f[2] = h;
f[3] = 1800;
f[4] = !0;
f[5] = function(a) {
var o = [];
o[0] = "Action_dt";
o[1] = a;
n._jsGameAction.push(o);
if (i) {
var s = [];
s[0] = "Action_ShowScore";
s[1] = t;
s[2] = !0;
n._jsGameAction.push(s);
} else n.OnMoveJettonToWinArea(e, t);
};
this._jsGameAction.push(f);
},
OnMoveJettonToWinArea: function(e, t) {
for (var i = this, n = 0, a = 0; a < t.length; a++) t[a] >= 0 && (n += t[a]);
var o = this.GetJettonAry(n), s = this.nodeBankerInfo.convertToWorldSpaceAR(cc.v2(0, 0)), r = this.nodeNewArea.convertToNodeSpaceAR(s), c = [];
c[0] = "Action_MoveToArea";
c[1] = this.nodeNewArea;
c[2] = r;
c[3] = o;
c[4] = e;
c[5] = 1800;
c[6] = function(e) {
var n = [];
n[0] = "Action_dt";
n[1] = e;
n[2] = function(e) {
e.OnMoveJettonToWiner(t);
};
i._jsGameAction.push(n);
};
this._jsGameAction.push(c);
},
OnMoveJettonToWiner: function(e) {
var t = this, i = [], n = this.OnLoadWinTarget(e, !0), a = this.OnLoadWinTarget(e, !1), o = [];
memset(o, 0, this.aryNodeBetArea.length, n.length);
for (var s = 0, r = [], c = 0; c < this.aryNodeBetArea.length; c++) {
this.aryNodeBetArea[c].children.length > s && (s = this.aryNodeBetArea[c].children.length);
var l = this.aryNodeBetArea[c].children.concat();
r.push(l);
for (var h = 0; h < n.length; h++) {
var u = n[h].convertToWorldSpaceAR(cc.v2(0, 0));
o[c][h] = this.aryNodeBetArea[c].convertToNodeSpaceAR(u);
}
}
for (var d = 0; d < s; d++) for (var m = 0; m < r.length; m++) if (r[m].length > 0) {
var f = new Object();
f.nodeJetton = r[m].pop();
f.cbArea = m;
i.push(f);
}
var p = [];
p[0] = "Action_ShowScore";
p[1] = e;
p[2] = !0;
if (i.length > 0) {
var _ = [];
_[0] = "Action_MoveToWiner";
_[1] = i;
_[2] = n;
_[3] = o;
_[4] = 1500;
_[5] = .002;
_[6] = 1.3;
_[7] = a;
_[8] = function(e) {
var i = [];
i[0] = "Action_dt";
i[1] = e;
t._jsGameAction.push(i);
t._jsGameAction.push(p);
};
this._jsGameAction.push(_);
} else this._jsGameAction.push(p);
},
OnBetByList: function(e, t, i, n) {
this.OnHeadAction(e);
this.OnJettonAction(e, t, i, n);
},
OnHeadAction: function(e) {
var t = e.getComponent("jsPlayerItem"), i = t.nodeUserInfo, n = cc.v2(0, 0);
"left" == t.strAction ? n = cc.v2(-20, 0) : "right" == t.strAction ? n = cc.v2(20, 0) : "up" == t.strAction ? n = cc.v2(0, 20) : "down" == t.strAction && (n = cc.v2(0, -20));
var a = cc.sequence(cc.moveBy(.03, n), cc.delayTime(.03), cc.moveBy(.03, n.neg()));
i.runAction(a);
},
OnBetByOther: function(e, t, i) {
var n = [];
n[0] = e;
n[1] = t;
n[2] = i;
this._jsBetAction.push(n);
},
OnOtherBetAction: function() {
if (this._jsBetAction.length > 0) {
var e = this._jsBetAction.concat();
this._jsBetAction = [];
var t = this.lAryJetton.length > 2 ? 2 : this.lAryJetton.length - 1, i = [], n = [], a = [];
memset(i, 0, this.aryNodeBetArea.length);
for (var o = 0; o < this.aryNodeBetArea.length; o++) {
n[o] = [];
a[o] = [];
}
for (var s = 0; s < e.length; s++) {
var r = e.shift(), c = r[0], l = r[1], h = r[2];
i[l] += c;
n[l].push(h);
a[l].push(r);
}
for (var u = 0; u < this.aryNodeBetArea.length; u++) {
var d = this.GetJettonAry(i[u], t);
if (d.length > n[u].length) for (var m = 0; m < a[u].length; m++) {
var f = a[u][m], p = f[0], _ = f[1], S = f[2];
this.OnJettonAction(this.nodeOtehrPlayer, p, _, S);
} else for (var g = 0; g < d.length; g++) this.OnJettonAction(this.nodeOtehrPlayer, d[g], u, n[u][g]);
}
}
},
OnJettonAction: function(e, t, i, n) {
if (0 == i) {
1;
}
var a = this, o = this.OnCreateJetton();
o.getComponent("jsJetton").OnInitJetton(this.lAryJetton, t);
var s = e.convertToWorldSpaceAR(cc.v2(0, 0)), r = this.nodeNewArea.convertToNodeSpaceAR(s), c = this.aryNodeBetArea[i], l = c.convertToWorldSpaceAR(n), h = this.nodeNewArea.convertToNodeSpaceAR(l), u = Math.sqrt((h.x - r.x) * (h.x - r.x) + (h.y - r.y) * (h.y - r.y)) / 3e3, d = cc.sequence(cc.scaleTo(0, 1.5), cc.spawn(cc.moveTo(.9 * u, h), cc.scaleTo(.9 * u, 1.2), cc.sequence(cc.delayTime(u / 2), cc.callFunc(function() {
if (0 == a.fSountTime) {
var e = "GameFrame/Audio/Bet" + parseInt(2 * Math.random());
window.mfConfig.PlayAudio(e);
a.fSountTime = .5;
}
}))), cc.scaleTo(.1 * u, 1), cc.callFunc(function() {
o.removeFromParent();
c.addChild(o);
o.setPosition(n);
}));
this.nodeNewArea.addChild(o);
o.setPosition(r);
o.runAction(d);
},
OnUpdateScore: function(e, t, i) {
i && (this.lAryOnlineUserBet[e] += t);
if (IsFindArrayValue(this.wAryChairID, e)) for (var n = 0; n < this.nodeOnLineUser.length + 1; n++) {
var a = null;
if (a = n < this.nodeOnLineUser.length ? this.nodeOnLineUser[n] : this.nodeSelfInfo) {
var o = a.getComponent("jsFrameUser");
this.wAryChairID[n] == e && o.UpdateGameScore(-this.lAryOnlineUserBet[e]);
}
}
},
OnShowGameScore: function(e, t) {
for (var i = 0; i < this.nodeOnLineUser.length + 1; i++) {
var n = null, a = INVALID_CHAIR;
if (i < this.nodeOnLineUser.length) {
if (this.stOnLineUser && this.stOnLineUser[i] && this.stOnLineUser[i].wChairID != INVALID_CHAIR && 0 != this.stOnLineUser[i].dwGameID) {
n = this.nodeOnLineUser[i];
a = this.stOnLineUser[i].wChairID;
}
} else {
n = this.nodeSelfInfo;
a = this.wMeChairID;
}
if (a != INVALID_CHAIR && n) {
if ((0 != this.lAryOnlineUserBet[a] || 0 != e[a]) && this.pfGameEndScore && t) {
var o = [];
o[0] = "Action_ShowUserScore";
o[1] = n;
o[2] = e[a];
this._jsGameAction.push(o);
}
var s = n.getComponent("jsFrameUser");
if (t) {
var r = [];
r[0] = "Action_UpdateScore";
r[1] = s;
r[2] = e[a];
this._jsGameAction.push(r);
} else s.UpdateGameScore(e[a]);
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
OnGameEndCallBack: function() {
if (this.GameEndCallBack) {
var e = [];
e[0] = "Action_EndCallBack";
e[1] = this.GameEndCallBack;
this._jsGameAction.push(e);
this.GameEndCallBack = null;
}
},
GetBetAreaRandomVet2: function(e) {
if (0 == e) {
1;
}
var t = this.aryNodeBetArea[e].width, i = this.aryNodeBetArea[e].height, n = parseInt(Math.random() * (t - 100)), a = parseInt(Math.random() * (i - 100));
return cc.v2(n + 50, a + 50);
},
OnLoadBetInfo: function(e, t, i) {
for (var n = 0; n < e.length; n++) if (e[n] > 0) for (var a = this.GetJettonAry(e[n]), o = 0; o < a.length; o++) {
var s = this.OnCreateJetton();
s.getComponent("jsJetton").OnInitJetton(this.lAryJetton, a[o]);
this.aryNodeBetArea[n].addChild(s);
var r = this.GetBetAreaRandomVet2(n);
s.setPosition(r);
var c = new Object();
c.nodeJetton = s;
c.cbArea = n;
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
this.lAryOnlineUserBet = i.concat();
this.bLoadFinish ? this.UpdateOnlineUserScore() : this.bUpdateScore = !0;
memset(this.bStarBet, !1, this.nodeStar.length);
for (var l = 0; l < this.nodeStar.length; l++) if (t[l] && t[l] > 0) {
this.bStarBet[l] = !0;
if (this.pfStar) {
var h = cc.instantiate(this.pfStar);
this.nodeStar[l].addChild(h);
h.setPosition(cc.v2(0, 0));
}
}
},
GetJettonAry: function(e, t) {
var i = [];
i = this.lAryJetton ? this.lAryJetton.concat() : [ 1e3, 1e4, 5e4, 1e5, 5e5 ];
for (var n = [], a = 2 == arguments.length ? t : 4; a >= 0; a--) if (parseInt(e / i[a]) > 0) {
for (var o = parseInt(e / i[a]), s = 0; s < o; s++) n.push(i[a]);
e %= i[a];
}
return n;
},
UpdateOnlineUserScore: function() {
var e = this.lAryOnlineUserBet.concat();
if (e) for (var t = 0; t < e.length; t++) e[t] > 0 && this.OnUpdateScore(t, e[t], !1);
},
OnMostWinBetAction: function(e, t) {
var i = this;
if (e == this.wMostWinChairID && !this.bStarBet[t] && this.pfStar && this.pfStar_Particle) {
var n = this.nodeOnLineUser[0].convertToWorldSpaceAR(cc.v2(0, 0)), a = this.nodeStar[t].convertToNodeSpaceAR(n), o = (Math.sqrt(a.x * a.x + a.y * a.y), 
cc.sequence(cc.jumpTo(.5, cc.v2(0, 0), 50, 1), cc.callFunc(function() {
var e = cc.instantiate(i.pfStar);
i.nodeStar[t].addChild(e);
e.setPosition(cc.v2(0, 0));
}), cc.removeSelf())), s = cc.instantiate(this.pfStar_Particle);
this.nodeStar[t].addChild(s);
s.setPosition(a);
s.runAction(o);
this.bStarBet[t] = !0;
}
},
OnActionBegan: function() {
var e = this, t = this;
if (this._jsGameAction.length > 0) {
var i = this._jsGameAction.shift();
if ("Action_MoveToBanker" == i[0]) (function() {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = 0, l = function(e) {
var i = n[e], r = cc.v2(i.nodeJetton.x, i.nodeJetton.y), l = a[i.cbArea], h = Math.sqrt((l.x - r.x) * (l.x - r.x) + (l.y - r.y) * (l.y - r.y)) / o;
c = Math.max(c, h);
i.nodeJetton.runAction(cc.sequence(cc.callFunc(function() {
if (0 == e) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(h, a[i.cbArea]), cc.callFunc(function(e) {
s && t.OnPutJetton(e);
})));
}, h = 0; h < n.length; h++) l(h);
r && r(c + .2);
e.OnActionBegan();
})(); else if ("Action_MoveToArea" == i[0]) {
for (var n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = 0, h = function(i) {
var c = e.OnCreateJetton();
c.getComponent("jsJetton").OnInitJetton(e.lAryJetton, o[i]);
n.addChild(c);
c.setPosition(a);
var h = s[parseInt(Math.random() * s.length)], u = e.GetBetAreaRandomVet2(h), d = e.aryNodeBetArea[h].convertToWorldSpaceAR(u), m = n.convertToNodeSpaceAR(d), f = Math.sqrt((m.x - a.x) * (m.x - a.x) + (m.y - a.y) * (m.y - a.y)) / r;
l = Math.max(l, f);
c.runAction(cc.sequence(cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(f, m), cc.callFunc(function() {
c.parent = t.aryNodeBetArea[h];
c.setPosition(u);
})));
}, u = 0; u < o.length; u++) h(u);
c && c(l + .2);
this.OnActionBegan();
} else if ("Action_MoveToWiner" == i[0]) (function() {
var t = e, n = i[1], a = i[2], o = i[3], s = i[4], r = i[5], c = i[6], l = i[7], h = i[8], u = 0, d = [];
memset(d, 0, a.length);
for (var m = function(i) {
var h = 0;
h = i < a.length ? i : parseInt(Math.random() * a.length);
var m = r * d[h];
d[h]++;
var f = 1 == d[h], p = n[i], _ = o[p.cbArea][h], S = Math.sqrt((_.x - p.nodeJetton.x) * (_.x - p.nodeJetton.x) + (_.y - p.nodeJetton.y) * (_.y - p.nodeJetton.y)) / s;
u = Math.max(u, S + m);
var g = cc.sequence(cc.delayTime(m), cc.callFunc(function() {
if (0 == i) {
window.mfConfig.PlayAudio("GameFrame/Audio/MoveJetton");
}
}), cc.moveTo(S, _).easing(cc.easeBackIn()), cc.callFunc(function() {
var e = a[h];
if (h < l.length && f && t.pfWinerAnim) {
var i = cc.sequence(cc.delayTime(c), cc.removeSelf()), n = cc.instantiate(t.pfWinerAnim);
e.addChild(n);
n.runAction(i);
}
}), cc.callFunc(function(e) {
t.OnPutJetton(e);
})), C = new Object();
C.node = p.nodeJetton;
C.act = g;
e._jsEndJettonAction.push(C);
}, f = 0; f < n.length; f++) m(f);
h && h(u + .2);
e.OnActionBegan();
})(); else if ("Action_ShowScore" == i[0]) {
var d = i[1], m = i[2];
this.OnShowGameScore(d, m);
this.OnGameEndCallBack();
this.OnActionBegan();
} else if ("Action_ShowUserScore" == i[0]) {
var f = i[1], p = i[2], _ = cc.instantiate(this.pfGameEndScore), S = _.getComponent("jsGameEndScore");
f.addChild(_);
S.InitGameScore(p);
this.OnActionBegan();
} else if ("Action_WinScore" == i[0]) {
var g = i[1], C = i[2], w = cc.sequence(cc.delayTime(C), cc.removeSelf()), b = cc.instantiate(this.pfWinerAnim);
g.addChild(b);
b.runAction(w);
this.OnActionBegan();
} else if ("Action_UpdateScore" == i[0]) {
i[1].UpdateGameScore();
this.OnActionBegan();
} else if ("Action_EndCallBack" == i[0]) {
var A = i[1];
A && A();
} else if ("Action_dt" == i[0]) {
var v = i[1], G = i[2];
this.node.runAction(cc.sequence(cc.delayTime(v), cc.callFunc(function() {
G && G(t);
t.OnActionBegan();
})));
}
}
},
ResetGameView: function() {
for (var e = 0; e < this.aryNodeBetArea.length; e++) for (var t = this.aryNodeBetArea[e].children, i = t.length, n = 0; n < i; n++) this.OnPutJetton(t[0]);
for (var a = 0; a < this.nodeStar.length; a++) this.nodeStar[a].removeAllChildren();
memset(this.bStarBet, 0, this.nodeStar.length);
for (var o = 0; o < this.nodeOnLineUser.length + 1; o++) {
var s = null;
if (s = o < this.nodeOnLineUser.length ? this.nodeOnLineUser[o] : this.nodeSelfInfo) {
for (var r = [], c = 0; c < s.childrenCount; c++) "pfGameEndScore" == s.children[c].name && r.push(s.children[c]);
for (var l = 0; l < r.length; l++) r[l].removeFromParent();
}
}
memset(this.lAryOnlineUserBet, 0, MAX_CHAIR);
},
update: function(e) {
if (this.fSountTime > 0) {
this.fSountTime -= e;
this.fSountTime < 0 && (this.fSountTime = 0);
}
this.fTimeCount += e;
if (parseInt(this.fTimeCount / .5) > this.fBeforeTime) {
this.fBeforeTime++;
this.OnOtherBetAction();
}
if (this._jsEndJettonAction.length > 0) for (var t = Math.min(30, this._jsEndJettonAction.length), i = 0; i < t; i++) {
var n = this._jsEndJettonAction.shift();
n && n.node.runAction(n.act);
}
}
});
cc._RF.pop();
}, {} ],
jsPrefabHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5e77d219BpE9qbaloz83he4", "jsPrefabHelp");
cc.Class({
extends: cc.Component,
properties: {
pfTarget: cc.Prefab,
nTargetAddzIndex: 0,
nodeAddRoot: cc.Node,
nodeCurRoot: cc.Node,
strPromtTitle: "",
strPromtType: "",
labelPromt: cc.Label,
nActionType: 0,
nodeColor: null
},
nodeTarget: null,
onLoad: function() {
this.labelPromt && (this.nodeColor = this.labelPromt.node.color);
},
OnHelpFinish: function(e) {
if (this.nodeColor && ("" == e || !e)) {
this.labelPromt.string = this.strPromtTitle;
this.labelPromt.node.color = this.nodeColor;
return !0;
}
this.labelPromt && (this.labelPromt.string = e);
this.nodeCurRoot.OnKeyboardFinish && this.nodeCurRoot.OnKeyboardFinish(this.labelPromt);
return !0;
},
OnShowTargetPrefab: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
if (null != this.pfTarget) {
var i = cc.instantiate(this.pfTarget);
if (this.nodeAddRoot) this.nodeAddRoot.addChild(i, this.nTargetAddzIndex); else {
cc.director.getScene().getChildByName("Canvas").addChild(i, this.nTargetAddzIndex);
}
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
} else cc.warn("this.pfTarget==null");
},
OnShowTargetPrefabAction: function(e, t) {
OnBtnClickAgainEvent(e.target);
if (null != this.pfTarget) {
var i = cc.instantiate(this.pfTarget);
cc.director.getScene().getChildByName("Canvas").addChild(i, this.nTargetAddzIndex);
if ("KeyboardControl" == i.name) {
var n = i.getComponent("jsNumKeyPad");
n.OnSureBtnEventCallback = this.OnHelpFinish.bind(this);
n.OnInit(this.strPromtTitle, "", this.strPromtType);
}
0 == this.nActionType || "DownToUp" == t || 0 == t || this.nActionType;
} else cc.warn("this.pfTarget==null");
}
});
cc._RF.pop();
}, {} ],
jsPrompt: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb0b7CYdc5J2rrqfP2wnKGk", "jsPrompt");
cc.Class({
extends: cc.Component,
properties: {
labelGcashNum: cc.Label,
pfBindAccount: cc.Prefab
},
promptFlag: null,
onLoad: function() {
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
onDisable: function() {
this.labelGcashNum.string = "";
},
OnInitView: function(e, t) {
this.labelGcashNum.string = e;
},
OnChangeBtnEvent: function() {
var e = cc.instantiate(this.pfBindAccount), t = e.getComponent("jsSavePersonInfo");
t.OnBindSuccess = this.OnBindSuccess.bind(this);
t.OnInitView(this.labelGcashNum.string);
this.node.addChild(e);
},
OnPromptSuccess: null,
OnYesBtnClick: function() {
this.OnPromptSuccess && this.OnPromptSuccess();
},
OnBindSuccess: function(e) {
ManagerHelp_SetSystemLabel("The GCash account was successfully bound!");
this.labelGcashNum.string = e;
}
});
cc._RF.pop();
}, {} ],
jsProxy: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acc770tAdVCZY4xGzrBb0cE", "jsProxy");
cc.Class({
extends: cc.Component,
properties: {
nodeTips: cc.Label,
nodeEditBox: cc.EditBox,
nodeBangDing: cc.Node,
nodeSpreader: cc.Label
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
this.OnInitProxyView();
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
start: function() {},
OnInitProxyView: function() {
var e = PlayerManager.GetMeUserItem().GetUpSpreadID();
if (0 == e) {
this.nodeTips.string = "Invitation code binding";
this.nodeBangDing.active = !0;
this.nodeEditBox.node.active = !0;
this.nodeSpreader.string = "";
} else {
this.nodeTips.string = "Invitation code already bound";
this.nodeEditBox.string = "";
this.nodeBangDing.active = !1;
this.nodeEditBox.node.active = !1;
this.nodeSpreader.string = "" + e;
}
},
OnButtonClick: function(e, t) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
var i = this.nodeEditBox.getComponent(cc.EditBox);
if (i) {
var n = parseInt(i.string);
if (n && 0 != n) {
PlayerManager.GetMeUserItem().SetUpSpreadID(n);
GetMissionLogon().SendPacketModifyIndividualEx();
} else {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
ManagerHelp_SetSystemLabel("Incorrect invitation code, please try again！");
}
}
},
OnOperSuccess: function(e, t) {
e == MDM_GP_USER_SERVICE && t == SUB_GP_MODIFY_INDIVIDUAL && this.OnInitProxyView();
},
OnOperFailure: function(e, t) {
e == MDM_GP_USER_SERVICE && t == SUB_GP_MODIFY_INDIVIDUAL && ManagerHelp_SetSystemLabel("Incorrect invitation code, please try again！");
}
});
cc._RF.pop();
}, {} ],
jsPullNew: [ function(e, t, n) {
"use strict";
cc._RF.push(t, "9abe3wRyW1On4HAQxLVq8p4", "jsPullNew");
cc.Class({
extends: cc.Component,
properties: {
obtainedLab: cc.Label,
receiveCurLab: cc.Label,
receiveLastLab: cc.Label,
timeLab: cc.Label,
rechargeLab: cc.Label,
pullNewItem: cc.Node,
pullNewLastItem: cc.Node,
content: cc.Node,
tabNode: cc.Node,
upAni: cc.Node,
enterAni: cc.Node,
scrollView: cc.ScrollView
},
onLoad: function() {
PlaySkeletonAnimation(this.upAni, !1, "start").setCompleteListener(function() {
PlaySkeletonAnimation(this.upAni, !0, "keep");
}.bind(this));
this.enterAni.getComponent(cc.Animation).play("enterAni");
this.scheduleOnce(function() {
this.sendPullNewActivityCf(0);
this.requestLinkUrl();
}, .2);
},
start: function() {
this.dt = 0;
this.clickLeft = 0;
},
sendPullNewActivityCf: function(e) {
var t = USI_OnGetInfo(), i = "&uid=" + t.dwUserID + "&sign=" + t.szSign + "&isLast=" + e;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szPullNewActivityUrl, i, function(t, i) {
cc.log("sendPullNewActivityCf", i);
if (t) if (200 == i.statusCode) {
1 == e ? this.lastDataCf = i : this.curDataCf = i;
this.setData(i);
} else {
304 == i.statusCode && this.clickLeftButton(null, 0, !0);
ManagerHelp_SetSystemLabel(i.message);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}.bind(this), window.fHttpTimeOut);
},
getBonusById: function(e, t) {
for (var i = 0; i < t.length; i++) if (e == t[i].id) return t[i].bonus;
return 0;
},
getIsExistById: function(e, t) {
for (var i = 0; i < t.length; i++) if (e == t[i]) return !0;
return !1;
},
setData: function(e) {
var t = this;
if (null != e) {
this.offsetNum = this.calcOffsetNum(e.received);
this.activityConfig = e.activityConfig;
this.obtainedLab.string = (this.activityConfig.maxBonus / 1e3).toLocaleString();
this.timeLab.string = "Time: " + this.activityConfig.starTime + " ~ " + this.activityConfig.endTime;
this.rechargeLab.string = this.activityConfig.recharge / 1e3;
this.receivedPoll = 0;
for (var i = 0; i < e.received.length; i++) {
var n = e.received[i];
this.receivedPoll += this.getBonusById(n, this.activityConfig.data);
}
this.receiveCurLab.node.active = 0 == this.clickLeft;
this.receiveLastLab.node.active = 1 == this.clickLeft;
var a = null;
if (0 == this.clickLeft) {
a = this.pullNewItem;
this.receiveCurLab.string = this.receivedPoll / 1e3;
} else if (1 == this.clickLeft) {
a = this.pullNewLastItem;
this.receiveLastLab.string = this.receivedPoll / 1e3;
}
this.dt = 0;
this.content.removeAllChildren();
this.scrollView.scrollToTop(0);
for (var o = this.activityConfig.data, s = function(i) {
var n = cc.instantiate(a);
n.active = !0;
n.getChildByName("content").getComponent(cc.Label).string = "Invite " + o[i].count + " friends to get rewards";
n.getChildByName("goldbg").getChildByName("num").getComponent(cc.Label).string = "+" + o[i].bonus / 1e3;
n.getChildByName("progressLab").getComponent(cc.Label).string = e.pullNewCount + "/" + o[i].count;
n.getChildByName("progressBar").getComponent(cc.ProgressBar).progress = e.pullNewCount / o[i].count;
var s = t.getIsExistById(o[i].id, e.received);
n.getChildByName("btnnode").getChildByName("Received").active = s;
n.getChildByName("btnnode").getChildByName("Incomplete").active = !s && e.pullNewCount < o[i].count;
n.getChildByName("btnnode").getChildByName("receive").active = !s && e.pullNewCount >= o[i].count;
n.getChildByName("btnnode").getChildByName("receive").on("click", function(e) {
t.sendReceive(n, o[i].id, o[i].bonus);
}).bind(t);
if (i < 5) {
n.x = n.width;
var r = cc.sequence(cc.delayTime(.05 * i), cc.moveTo(.2, cc.v2(0, n.y)));
n.runAction(r);
}
t.content.addChild(n);
}, r = 0; r < o.length; r++) s(r);
this.scheduleOnce(function() {
var e = this.scrollView.getScrollOffset();
e.y = this.offsetNum * (a.height + this.scrollView.content.getComponent(cc.Layout).spacingY);
cc.log("getScrollOffset() = " + parseInt(this.scrollView.getScrollOffset().y) + ", offset.y = " + parseInt(e.y));
this.scrollView.scrollToOffset(e, .5);
}, .5);
}
},
sendReceive: function(e, t, i) {
var n = USI_OnGetInfo(), a = "&uid=" + n.dwUserID + "&sign=" + n.szSign + "&activityID=" + this.activityConfig.activityID + "&id=" + t;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szPullNewReceiveUrl, a, function(n, a) {
cc.log("sendReceive", a);
if (n) if (200 == a.statusCode) {
var o = null;
if (0 == this.clickLeft) {
o = this.receiveCurLab;
this.curDataCf.received.push(t);
} else if (1 == this.clickLeft) {
o = this.receiveLastLab;
this.lastDataCf.received.push(t);
}
e.getChildByName("btnnode").getChildByName("receive").active = !1;
e.getChildByName("btnnode").getChildByName("Received").active = !0;
this.receivedPoll += i;
ManagerHelp_RewardPopup(i, function(e) {
this.scheduleOnce(function() {
NumberTargetChange(o, this.receivedPoll / 1e3, 1);
}, .2);
}.bind(this));
} else ManagerHelp_SetSystemLabel(a.message); else ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}.bind(this), window.fHttpTimeOut);
},
clickInviteButton: function() {
this.shareDesc = "I'm playing the game below, if you like it too, please click the link below to get free rewards and play with me!\n";
window.mfConfig.share(this.shareDesc + this.shareLink);
},
requestLinkUrl: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().commissionUrl, n = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&typeid=0";
HttpHelper.post_NotDecrypt(i, n, function(t, i) {
if (t) if (200 == i.statusCode) {
var n = i.data;
e.shareLink = n.apis.qrcode;
} else ManagerHelp_SetSystemLabel(i.message);
}, 15e3);
},
clickLeftButton: function(e, t, n) {
if (t != this.clickLeft) {
this.clickTop = 0;
this.clickLeft = t;
var a = this.tabNode.children, o = this.tabNode.childrenCount;
for (i = 0; i < o; i++) {
var s = a[i], r = cc.find("imgSelect", s), c = cc.find("imgNormal", s);
if (t == i) {
r.active = !0;
c.active = !1;
} else {
r.active = !1;
c.active = !0;
}
}
n || (0 == this.clickLeft ? this.curDataCf ? this.setData(this.curDataCf) : this.sendPullNewActivityCf(0) : 1 == this.clickLeft && (this.lastDataCf ? this.setData(this.lastDataCf) : this.sendPullNewActivityCf(1)));
}
},
calcOffsetNum: function(e) {
if (0 == e.length) return 0;
var t = JSON.parse(JSON.stringify(e));
t.push(0);
for (var i = t.slice().sort(function(e, t) {
return e - t;
}), n = i.length - 1, a = 1; a < i.length; a++) if (i[a] !== i[a - 1] + 1) {
n = a - 1;
break;
}
return i[n];
}
});
cc._RF.pop();
}, {} ],
jsQuestionnaire: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e9c744gRO5C65Z5BhHecm6y", "jsQuestionnaire");
cc.Class({
extends: cc.Component,
properties: {
lblUrl: cc.Label
},
onLoad: function() {
this.questionnaireUrl = "";
GetProject().onlyLayer = this;
this.node.getComponent("jsButtonItem").SetRemoveCallBack(function() {
GetProject().onlyLayer = null;
});
this.requestCommonLinkUrl();
},
requestCommonLinkUrl: function() {
var e = this, t = GetProject().szCommonLinkUrl, i = USI_OnGetInfo(), n = "uid=" + i.dwUserID + "&sign=" + i.szSign;
HttpHelper.post_NotDecrypt(t, n, function(t, i) {
if (t) if (200 == i.statusCode) {
e.questionnaireUrl = i.data.DCWJ;
e.lblUrl.string = e.questionnaireUrl;
} else {
ManagerHelp_SetSystemLabel("Network exception, try again");
updateBuoyEntry(AskOpen, !0);
} else ManagerHelp_SetSystemLabel("Network exception, try again");
}, window.fHttpTimeOut);
},
OnButtonEvent: function(e, t) {
"BtnClick" == e.target.name && this.OnClick();
},
OnClick: function() {
this.questionnaireUrl.length > 0 && cc.sys.openURL(this.questionnaireUrl);
}
});
cc._RF.pop();
}, {} ],
jsRankItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bdc00CGc45DwZV+4yBfYVg2", "jsRankItem");
cc.Class({
extends: cc.Component,
properties: {
spUserHead: cc.Sprite,
spFaceFrame: cc.Sprite,
spResult: cc.Sprite,
labelResult: cc.Label,
labelAccount: cc.Label,
labelVip: cc.Label,
labelGrandTotalBet: cc.Label,
labelNewCashNum: cc.Label,
labelTotalBet: cc.Label,
labelTotalComm: cc.Label,
resPngNo: [ cc.SpriteFrame ]
},
start: function() {},
OnSetListData: function(e, t, i) {
this.SetHeadSpriteFrame(t.cbFaceID, t.cbFrameID);
this.labelAccount.string = ToUtf8(t.szNickName);
this.labelVip.string = t.cbMemberOrder;
var n = this.spResult.node, a = this.labelResult.node;
if (i < 3) {
n.active = !0;
a.active = !1;
this.spResult.spriteFrame = this.resPngNo[i];
} else {
n.active = !1;
a.active = !0;
this.labelResult.string = "" + (i + 1);
}
this.labelGrandTotalBet.string = OnScoreToString(t.lLevelBenefits);
this.labelNewCashNum.string = OnScoreToString(t.lNewCasinNum);
this.labelTotalBet.string = OnScoreToString(t.lTotalBet);
this.labelTotalComm.string = OnScoreToString(t.lRankData);
},
formatSeconds: function(e) {
var t = parseInt(e), i = 0, n = 0;
if (t > 60) {
i = parseInt(t / 60);
t = parseInt(t % 60);
if (i > 60) {
n = parseInt(i / 60);
i = parseInt(i % 60);
}
}
t < 10 && (t = "0" + t);
i < 10 && (i = "0" + i);
n < 10 && (n = "0" + n);
return n + "：" + i + "：" + t;
},
SetHeadSpriteFrame: function(e, t) {
var i = this, n = "common/UserHead/Head_" + e;
cc.loader.loadRes(n, cc.SpriteFrame, function(e, t) {
e || i.spUserHead && (i.spUserHead.spriteFrame = t);
});
var a = "common/HeadFrame/Frame_" + t;
cc.loader.loadRes(a, cc.SpriteFrame, function(e, t) {
e || i.spFaceFrame && (i.spFaceFrame.spriteFrame = t);
});
}
});
cc._RF.pop();
}, {} ],
jsRectTimeDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7fd9cvre59Ot5k2XSKZ9eKz", "jsRectTimeDown");
var n = cc.Class({
extends: cc.Component,
properties: {
progNode: cc.ProgressBar,
spFiledBg: cc.Sprite,
nodeLigth: cc.Node
},
onLoad: function() {},
OnTimeDown: function(e, t) {
t && (this.callbackFinish = t);
var i = this, n = e;
1 == arguments.length && (this.progNode.progress = 1);
this.unscheduleAllCallbacks();
this.nodeLigth && this.nodeLigth.setPosition(0, 70);
i.schedule(function t() {
if ((n -= .1) < 0) {
if (null != i.callbackFinish) {
i.callbackFinish();
i.callbackFinish = void 0;
}
i.unschedule(t);
i.node.active = !1;
i.progNode.progress = 1;
} else {
var a = n / e;
i.progNode.progress = a;
if (null != i.nodeLigth) {
var o = parseInt(360 - 360 * a);
i.OnSetLightPosition(o);
}
}
}, .1);
},
OnStartTimeDown: function(e, t) {
var i = this.spFiledBg.getComponent(cc.Animation);
i.getAnimationState("RectTimeDown").speed = 20 / e;
i.play("RectTimeDown");
this.OnTimeDown(e, t);
},
OnSetLightPosition: function(e) {
e <= 45 ? this.nodeLigth.setPosition(70 * Math.tan(e * Math.PI / 180), 70) : e > 45 && e <= 90 ? this.nodeLigth.setPosition(70, 70 * Math.tan((90 - e) * Math.PI / 180)) : e > 90 && e <= 135 ? this.nodeLigth.setPosition(70, -70 * Math.tan((e - 90) * Math.PI / 180)) : e > 135 && e <= 180 ? this.nodeLigth.setPosition(70 * Math.tan((180 - e) * Math.PI / 180), -70) : e > 180 && e <= 225 ? this.nodeLigth.setPosition(-70 * Math.tan((e - 180) * Math.PI / 180), -70) : e > 225 && e <= 270 ? this.nodeLigth.setPosition(-70, -70 * Math.tan((270 - e) * Math.PI / 180)) : e > 270 && e <= 315 ? this.nodeLigth.setPosition(-70, 70 * Math.tan((e - 270) * Math.PI / 180)) : e > 315 && e <= 360 && this.nodeLigth.setPosition(-70 * Math.tan((360 - e) * Math.PI / 180), 70);
},
OnPlayAudio: function(e) {
e && window.mfConfig.PlayAudio("GameFrame/Audio/TimeDown", !1, window.mfConfig.fSound);
},
update: function(e) {}
});
t.exports.jsTimeDownAction = n;
cc._RF.pop();
}, {} ],
jsRedBag: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "14c92OzFrpKxqA/aUE4A/5O", "jsRedBag");
var n = e("jsControlLobby");
cc.Class({
extends: cc.Component,
properties: {
nodeContent: cc.Node,
labelValue: cc.Label,
nodeLight: cc.Node,
nodeGoldParticle: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
start: function() {},
OnActionLight: function() {
var e = cc.sequence(cc.callFunc(function(e) {
e.setScale(1);
e.opacity = 255;
}), cc.spawn(cc.fadeTo(.5, 0), cc.scaleTo(.5, 1.5)), cc.delayTime(.5));
this.nodeLight.runAction(cc.repeatForever(e));
},
OnBtnReceiveEvent: function() {
var e = this;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
GetMissionLogon().SedReceiveBenefits(SUB_GP_RECEIVE_RED_ENVELOPE, function(t) {
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
if (t.wSubCmdID == SUB_GP_RECEIVE_RED_ENVELOPE) {
var i = PlayerManager.GetMeUserItem().GetGameID();
MS_OnSetLocalData(!0, i, "LocalReceive");
e.nodeContent.active = !1;
e.nodeGoldParticle.zIndex = 3;
e.nodeGoldParticle.active = !0;
e.nodeGoldParticle.getComponent(cc.ParticleSystem).resetSystem();
window.mfConfig.PlayAudio("GameLobby/Audio/gold", !1);
var a = PlayerManager.GetMeUserItem();
a.SetUserInsure(t.lInsureScore);
a.SetUserScore(t.lScore);
n.self.UpdateUserDataItem();
var o = cc.sequence(cc.delayTime(1), cc.removeSelf());
e.node.runAction(o);
} else cc.warn("SUB_GP_RECEIVE_BENEFITS 领取救济金结果wSubCmdID 不正确!!");
});
},
OnOperFailure: function(e, t) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_RECEIVE_RED_ENVELOPE) {
GetMissionLogon().OnSedReceiveBenefits_Callback && (GetMissionLogon().OnSedReceiveBenefits_Callback = null);
var i = PlayerManager.GetMeUserItem().GetGameID();
MS_OnSetLocalData(!0, i, "LocalReceive");
this.node.removeFromParent();
}
}
});
cc._RF.pop();
}, {
jsControlLobby: "jsControlLobby"
} ],
jsRepair: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3660cMsuUxF968rSFgIrKXJ", "jsRepair");
var n = e("../../Developer/HotUpdate/CUpdateManager").default;
cc.Class({
extends: cc.Component,
properties: {
nodeBtnType: [ cc.Node ],
nodeSelect: cc.Node
},
onLoad: function() {
this.type = 0;
AddXmasPrefab(cc.find("nodeContent", this.node));
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if (0 == i.indexOf("btnType")) {
var n = parseInt(t);
this.updateType(n);
} else "Dis_BtnRepair" == i && this.OnEventRepair();
},
updateType: function(e) {
this.nodeSelect.y = this.nodeBtnType[e].y;
this.type = e;
},
OnEventRepair: function() {
if (0 == this.type) {
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
n.getInstance().resetCachePath(0);
for (var e in GameConfig.aryKindOpen) {
var t = GameConfig.aryKindOpen[e];
n.getInstance().resetCachePath(t);
}
setTimeout(function() {
cc.audioEngine.stopAll();
cc.game.restart();
}, .1);
} else if (1 == this.type) {
var i = GetProject().szDownloadUrl;
cc.sys.openURL(i);
}
}
});
cc._RF.pop();
}, {
"../../Developer/HotUpdate/CUpdateManager": "CUpdateManager"
} ],
jsRewardPopup: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "edba7YfNipO0ZjVBtwOyWhQ", "jsRewardPopup");
cc.Class({
extends: cc.Component,
properties: {
ani: sp.Skeleton,
valueNode: cc.Node,
value: cc.Label
},
onLoad: function() {},
OnButtonEvent: function(e, t) {
this.closeCallBack && this.closeCallBack();
GetMissionLogon().SendPacketInsureInfo();
this.node.destroy();
},
setData: function(e, t) {
this.closeCallBack = t;
window.mfConfig.PlayAudio("GameLobby/Audio/receiveReward");
this.value.string = "+" + OnScoreToString(e);
this.playAni();
},
playAni: function() {
this.valueNode.runAction(cc.sequence(cc.spawn(cc.scaleTo(.2, 1.2), cc.fadeTo(8 / 30, 255)), cc.scaleTo(.2, 1)));
this.ani.node.active = !0;
PlaySkeletonAnimation(this.ani, !1, "start").setCompleteListener(function() {
PlaySkeletonAnimation(this.ani, !1, "keep");
}.bind(this));
}
});
cc._RF.pop();
}, {} ],
jsSavePersonInfo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c0acbwO3NJAI4OekOMZxQ8d", "jsSavePersonInfo");
cc.Class({
extends: cc.Component,
properties: {
ediGcashAccount: cc.EditBox,
ediGcashMobileNum: cc.EditBox,
ediCaptCha: cc.EditBox,
btnAcquire: cc.Node,
nodeBindGcash: cc.Node,
labelGcashNum: cc.Label,
fCmdDelayTime: 0,
nOperationType: 0
},
onLoad: function() {
this.curChannel = 0;
this.fCmdDelayTime = 0;
SceneManager_AlertShow(this.node);
GetMissionLogon().setInformationface(this);
AddXmasPrefab(cc.find("No_nodeVertical", this.node));
},
OnInitView: function(e, t) {
if ("" == e || null == e || null == e) {
this.nodeBindGcash.active = !1;
return !1;
}
this.nodeBindGcash.active = !0;
this.labelGcashNum.string = e;
this.ediGcashMobileNum.string = "";
this.ediCaptCha.string = "";
null != t && (this.curChannel = t);
},
onDestroy: function() {
GetMissionLogon().setInformationface(null);
},
start: function() {},
OnGetVerifyButtonEvent: function(e, t) {
var i = this, n = PhonePrefix + this.ediGcashMobileNum.string;
if (this.OnCheckInput(!1)) if (0 == GetProject().bSmsType) {
GetMissionLogon().SendPacketGetVerify(n, 3);
this.btnAcquire.getComponent(cc.Button).interactable = !1;
this.fCmdDelayTime = 300;
} else 1 == GetProject().bSmsType && GetMissionLogon().SendPacketGetVerify(n, 3, function() {
i.btnAcquire.getComponent(cc.Button).interactable = !1;
i.fCmdDelayTime = 300;
});
},
OnCheckInput: function(e) {
var t = this.ediGcashMobileNum.string, i = this.ediCaptCha.string, n = parseInt(i);
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("The GCash Mobile No cannot be empty");
return !1;
}
if (!OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("Please enter the correct GCash mobile phone number");
return !1;
}
if (!this.checkNumber()) {
ManagerHelp_SetSystemLabel("Please enter the correct GCash mobile phone number");
return !1;
}
if (1 == e) {
if (isNaN(n)) {
ManagerHelp_SetSystemLabel("OTP cannot be empty");
return !1;
}
if (!IsNumber(i, 6)) {
ManagerHelp_SetSystemLabel("Please enter 6-digit OTP code!");
return !1;
}
}
return !0;
},
checkNumber: function() {
var e = this.ediGcashMobileNum.string;
if ("9" != e[0]) return !1;
return !!/^[0-9]+?[0-9]*$/.test(e);
},
OnBindBtnEvent: function() {
var e = PlayerManager.GetMeUserItem(), t = MF_LoadOnMainChannelID("nNormalAccount"), i = e.GetUserID(), n = ACF_GetMd5Password(t), a = this.ediGcashMobileNum.string, o = this.ediCaptCha.string;
if (this.OnCheckInput(!0)) {
var s = new _AlipayInfo();
s.dwUserID = i;
SetArrayFormUtf8(s.szPassword, n);
s.szLogonGUID = e.GetLogonGuid();
SetArrayFormUtf8(s.szAliAccount, a);
s.szMachineID = GetProject().szMachineID.concat();
0 == this.curChannel ? GetMissionLogon().SedBindZFBInfo(s, o) : this.OnBingOtherChannel(a, o);
}
},
OnOperSuccess: function(e, t) {
if (e == MDM_GP_USER_SERVICE && t == SUB_GP_BIND_ALIPAY) {
this.OnSuccessCallBack();
OnPostSmsMessageId();
}
},
OnOperFailure: function(e, t, i) {
ManagerHelp_SetSystemLabel(i);
e == MDM_GP_USER_SERVICE && t == SUB_GP_GETVERIFICATIONCODE && (this.fCmdDelayTime = 0);
},
OnSuccessCallBack: function() {
cc.systemEvent.emit("UpdateGold");
var e = this.ediGcashMobileNum.string;
this.OnBindSuccess && this.OnBindSuccess(e);
this.node.removeFromParent();
},
OnBindSuccess: null,
update: function(e) {
if (this.fCmdDelayTime > 0) {
this.fCmdDelayTime -= e;
this.btnAcquire && (this.btnAcquire.children[0].getComponent(cc.Label).string = parseInt(this.fCmdDelayTime) + "s");
} else if (this.btnAcquire) {
this.btnAcquire.getComponent(cc.Button).interactable = !0;
this.btnAcquire.children[0].getComponent(cc.Label).string = "Send";
}
},
OnBingOtherChannel: function(e, t) {
var i, n = this, a = USI_OnGetInfo(), o = GetProject().szBindingAccountUrl;
i = "uid=" + a.dwUserID + "&sign=" + a.szSign + "&type=" + this.curChannel + "&cardNum=" + e + "&ver=" + t;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(o, i, function(e, t) {
cc.error(t);
e ? 200 == t.statusCode ? n.OnSuccessCallBack() : ManagerHelp_SetSystemLabel(t.message) : ManagerHelp_SetSystemLabel("Request data failed. Please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
});
cc._RF.pop();
}, {} ],
jsScrollHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "90e313FbRlKprGdw5QCSu5i", "jsScrollHelp");
cc.Class({
extends: cc.Component,
properties: {
item: cc.Prefab,
curLoadEndItemIndex: {
type: cc.Integer,
default: 0,
tooltip: "当前加载的最后一个item的Index(默认0)"
},
page: {
type: cc.Integer,
default: 1,
tooltip: "当前页数"
},
dataPage: {
type: cc.Integer,
default: 1,
tooltip: "当前服务器数据页数"
},
itemNum: {
type: cc.Integer,
default: 0,
tooltip: "当前页数的item数量"
},
refreshApi: {
type: Function,
default: null,
tooltip: "服务器下一页刷新回调"
},
isLoadEnd: !1
},
onLoad: function() {
this.itemData = [];
this.view = this.node.getChildByName("view");
this.content = this.view.getChildByName("content");
this.node.on("scrolling", this.scrolling, this);
this.node.on("scroll-to-bottom", this.scrollToBottom, this);
},
start: function() {},
initPage: function() {
if (this.node) {
this.dataPage = 1;
this.page = 1;
this.isLoadEnd = !1;
this.curLoadEndItemIndex = 0;
this.itemNum = 0;
}
},
isNoJSONObj: function(e) {
for (var t in e) return !1;
return !0;
},
scrollToBottom: function(e, t) {
var i = this;
if (this.isLoadEnd) {
if (null != this.refreshApi) {
this.dataPage = this.dataPage + 1;
this.refreshApi(this.dataPage, function(e) {
if (function(e) {
for (var t in e) return !1;
return !0;
}(e) || e && e.length < 1) {
i.refreshApi = null;
i.dataPage = i.dataPage - 1;
} else {
i.itemData = i.itemData.concat(e);
i.isLoadEnd = !1;
var t = i.curLoadEndItemIndex % i.itemNum;
if (0 == t) {
i.page++;
i.refreshItem(i.itemNum * i.page);
} else {
var n = i.curLoadEndItemIndex + t;
i.refreshItem(n);
}
}
});
}
} else {
this.page++;
this.refreshItem(this.itemNum * this.page);
}
},
scrolling: function(e, t) {
for (var i = cc.rect(-this.view.width / 2, -this.content.y - this.view.height / 2, this.view.width, this.view.height), n = 0; n < this.content.children.length; n++) {
var a = this.content.children[n];
i.intersects(a.getBoundingBox()) ? a.opacity = 255 : a.opacity = 0;
}
},
initItem: function(e, t) {
if (this.node) {
this.itemData = e;
this.itemJSName = t;
this.itemNum = this.getItemNum() || 0;
this.refreshItem(this.itemNum * this.page);
}
},
refreshItem: function(e) {
for (var t = this.curLoadEndItemIndex; t < e; t++) {
if (null == this.itemData[t]) {
this.isLoadEnd = !0;
return;
}
this.curLoadEndItemIndex = t + 1;
this.drawItem(this.itemData[t], t);
}
},
drawItem: function(e, t) {
var i = cc.instantiate(this.item);
i.active = !0;
i.parent = this.content;
i.getComponent(this.itemJSName).setData(e, t + 1);
},
getItemNum: function() {
if (this.item) {
var e = cc.instantiate(this.item);
return Math.ceil(this.view.height / (e.height + this.content.getComponent(cc.Layout).spacingY)) + 2;
}
}
});
cc._RF.pop();
}, {} ],
jsSetCanvas: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2c0b0yFIkdDGZwSO620sKyn", "jsSetCanvas");
cc.Class({
extends: cc.Component,
properties: {
MusicSlider: cc.Slider,
SoundSlider: cc.Slider,
MusicProgressBar: cc.ProgressBar,
SoundProgressBar: cc.ProgressBar,
Version: cc.Label,
fMusicVoice: 0,
fSoundVoice: 0,
accountCancellationBtn: cc.Node,
accountCancellationNode: cc.Node,
phoneLab: cc.Label,
btnAcquire: cc.Node,
edCaptCha: cc.EditBox,
tgAgree: cc.Toggle
},
onLoad: function() {
SceneManager_AlertShow(this.node);
this.fCmdDelayTime = 0;
null != window.mfConfig.version && window.mfConfig.version && (this.Version.string = "v" + window.mfConfig.version);
null == window.mfConfig.version && cc.sys.isBrowser && (this.Version.string = "v1.0.1");
this.fMusicVoice = window.mfConfig.fMusic;
this.fSoundVoice = window.mfConfig.fSound;
this.MusicSlider.progress = this.fMusicVoice;
this.SoundSlider.progress = this.fSoundVoice;
this.MusicProgressBar.progress = this.fMusicVoice;
this.SoundProgressBar.progress = this.fSoundVoice;
null != this.accountCancellationBtn && (this.accountCancellationBtn.active = 1 == GetProject().cbCheckAccounts);
if (1 == GetProject().cbCheckAccounts) {
Dispatcher.AddListener(this, DSP_OPERATE_SUCCESS, this.OnDispatcherEvent);
Dispatcher.AddListener(this, DSP_OPERATE_FAIL, this.OnDispatcherEvent);
null != this.phoneLab && (this.phoneLab.string = GetProject().szRegisterPhone.substring(2));
}
AddXmasPrefab(cc.find("No_nodeContent", this.node));
},
onDisable: function() {
cc.sys.localStorage.setItem("fMusicVoice", this.fMusicVoice);
cc.sys.localStorage.setItem("fSoundVoice", this.fSoundVoice);
},
OnSliderEventByChange: function(e, t) {
this.fMusicVoice = this.MusicSlider.progress;
this.fSoundVoice = this.SoundSlider.progress;
this.MusicProgressBar.progress = this.MusicSlider.progress;
this.SoundProgressBar.progress = this.SoundSlider.progress;
window.mfConfig.fSound = this.fSoundVoice;
window.mfConfig.fMusic = this.fMusicVoice;
window.mfConfig.ChangeVolume();
},
OnSliderEventByMaxMin: function(e, t) {
e.target;
if ("MusicMin" == t) {
this.fMusicVoice = 0;
this.MusicSlider.progress = 0;
this.MusicProgressBar.progress = 0;
} else if ("SoundMin" == t) {
this.fSoundVoice = 0;
this.SoundSlider.progress = 0;
this.SoundProgressBar.progress = 0;
}
window.mfConfig.fSound = this.fSoundVoice;
window.mfConfig.fMusic = this.fMusicVoice;
window.mfConfig.ChangeVolume();
},
OnPopNoticeValueChanged: function(e, t) {
var i = tgAgree.isChecked ? 0 : 1;
this.cbPopNotice = i;
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
if ("accountCancellationButton" == i) this.accountCancellationNode.active = !0; else if ("JumpBtn" == i) cc.sys.openURL("http://os.phoenixvideogame.com/"); else if ("statementBtn" == i) cc.sys.openURL("http://os.phoenixvideogame.com/notice.html"); else if ("SplashBg" == i || "nodeClose" == i) this.accountCancellationNode.active = !1; else if ("BtnCancellation" == i && this.OnCheckInput(!0)) {
if (!this.tgAgree.isChecked) {
ManagerHelp_SetSystemAlert("Please read the statement before confirming", function(e, t) {
t == YQ_SYS_OK && (this.tgAgree.isChecked = !0);
}.bind(this), !0);
return;
}
ManagerHelp_SetSystemAlert("Are you sure you want to delete your account?", function(e, t) {
t == YQ_SYS_OK && this.sendCancellation();
}.bind(this), !0);
}
},
sendCancellation: function() {
var e = USI_OnGetInfo(), t = PhonePrefix + this.phoneLab.string, i = this.edCaptCha.string, n = "&uid=" + e.dwUserID + "&sign=" + e.szSign + "&phone=" + t + "&code=" + i;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().szAccountCancellationUrl, n, function(e, t) {
e ? 200 == t.statusCode ? GetServerRoom().CloseGameClient(!0) : ManagerHelp_SetSystemLabel(t.message) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}.bind(this), window.fHttpTimeOut);
},
OnGetVerifyButtonEvent: function(e, t) {
var i = PhonePrefix + this.phoneLab.string;
if (this.OnCheckInput(!1)) {
GetMissionLogon().SendPacketGetVerify(i, 5);
this.btnAcquire.getComponent(cc.Button).interactable = !1;
this.fCmdDelayTime = 300;
}
},
OnDispatcherEvent: function(e, t, i, n) {
switch (e) {
case DSP_OPERATE_SUCCESS:
t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE && ManagerHelp_SetSystemLabel(n);
break;

case DSP_OPERATE_FAIL:
if (t == MDM_GP_USER_SERVICE && i == SUB_GP_GETVERIFICATIONCODE) {
this.m_fCmdDelayTime = 0;
ManagerHelp_SetSystemLabel(n);
}
}
},
update: function(e) {
if (0 != GetProject().cbCheckAccounts) if (this.fCmdDelayTime > 0) {
this.fCmdDelayTime -= e;
this.btnAcquire && (this.btnAcquire.children[0].getComponent(cc.Label).string = parseInt(this.fCmdDelayTime) + "s");
} else if (this.btnAcquire) {
this.btnAcquire.getComponent(cc.Button).interactable = !0;
this.btnAcquire.children[0].getComponent(cc.Label).string = "Send";
}
},
OnCheckInput: function(e) {
var t = this.phoneLab.string, i = parseInt(this.edCaptCha.string);
if ("" == t || null == t || null == t) {
ManagerHelp_SetSystemLabel("The Mobile No cannot be empty！");
return !1;
}
if (!OnValidatePhone(t)) {
ManagerHelp_SetSystemLabel("Please enter the correct mobile phone number");
return !1;
}
if (1 == e) {
if (isNaN(i)) {
ManagerHelp_SetSystemLabel("OTP cannot be empty");
return !1;
}
if (!IsNumber(this.edCaptCha.string, 6)) {
ManagerHelp_SetSystemLabel("Please enter 6-digit OTP code!");
return !1;
}
}
return !0;
}
});
cc._RF.pop();
}, {} ],
jsShopItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "32a39xaHStJgY/HzlFg7pBY", "jsShopItem");
var n = e("jsControlShopBY");
cc.Class({
extends: cc.Component,
properties: {
labelAmount: cc.Label,
labelPrice: cc.Label,
nodeImage: cc.Sprite,
nodeIsFirst: cc.Node,
jsonData: null,
productId: null
},
onDisable: function() {
this.GcashAccount = "";
},
OnSetListData: function(e, t, i) {
var n = this;
this.GcashAccount = "";
this.jsonData = i;
this.productId = this.jsonData.ProductId;
var a = this.jsonData.Amount, o = this.jsonData.Quantity, s = this.jsonData.ExtraCount, r = this.jsonData.ResURL;
this.labelPrice.string = "" + a;
this.labelAmount.string = e ? o / 1e3 + "Gold" : s > 0 ? o / 1e3 + "+" + s / 1e3 + "Gold" : o / 1e3 + "Gold";
this.nodeIsFirst.active = !e;
cc.loader.loadRes(r, cc.SpriteFrame, function(e, t) {
e || (n.nodeImage.getComponent(cc.Sprite).spriteFrame = t);
});
this.isGCashOnLine = !1;
1 == t.KindID && (this.isGCashOnLine = !0);
this.payUrl = GetProject().szCommonUrl + t.Url;
},
onButtonEvent: function(e, t) {
this.RequestPay();
},
OnShowPrompt: function(e) {
var t = this;
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfPrompt", function(e, i) {
if (!e) {
i.zIndex = 3;
var n = i.getComponent("jsPrompt");
if (n) {
n.OnPromptSuccess = t.OnPromptSuccess.bind(t);
n.OnInitView(t.GcashAccount);
}
}
});
},
OnModifyGcashNum: function(e, t) {
var i = this;
SceneManager_PushBack(SceneType.Prefab_Path, "GameLobby/APrefab/pfSavePersonalInfo", function(e, t) {
if (!e) {
t.zIndex = 3;
var n = t.getComponent("jsSavePersonInfo");
if (n) {
n.OnBindSuccess = i.OnBindSuccess.bind(i);
n.OnInitView(i.GcashAccount);
}
}
});
},
OnBindSuccess: function(e) {
ManagerHelp_SetSystemLabel("The GCash account was successfully bound!");
this.GcashAccount = e;
},
OnPromptSuccess: function() {
this.isGCashOnLine ? this.RequestPayUrl() : this.RequestPay();
window.mfConfig.onEvent("af_Pull_recharge", JSON.stringify({
af_param_1: "success"
}));
},
RequestPayUrl: function() {
var e = USI_OnGetInfo(), t = n.self.requireDeviceID(), i = "typeid=" + this.typeid + "&deviceid=" + t + "&productId=" + this.productId + "&uid=" + e.dwUserID + "&sign=" + e.szSign;
cc.log("支付地址 ： " + GetProject().h5PayUrl + i);
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(GetProject().h5PayUrl, i, function(e, t) {
if (e) if (200 == t.statusCode) {
var i = t.data;
i ? n.self.showShopDetailsInfo(i) : ManagerHelp_SetSystemLabel("Order failed,please try again！");
} else 300 == t.statusCode ? ManagerHelp_SetSystemLabel(t.message) : 400 == t.statusCode && ManagerHelp_SetSystemAlert("You have an outstanding order. Do you want to skip to the order page?", function(e, t) {
t == window.YQ_SYS_OK && n.self.showRecordList();
}, !0); else ManagerHelp_SetSystemLabel("Order failed,please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
RequestPay: function() {
window.mfConfig.onEvent("af_Pull_recharge", JSON.stringify({
af_param_1: "success"
}));
var e = USI_OnGetInfo(), t = "&productId=" + this.productId + "&uid=" + e.dwUserID + "&sign=" + e.szSign;
cc.log("支付地址 ： " + this.payUrl + t);
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(this.payUrl, t, function(e, t) {
if (e) if (200 == t.statusCode) {
var i = t.data;
i ? cc.sys.openURL(i) : ManagerHelp_SetSystemLabel("Order failed, please try again！");
} else ManagerHelp_SetSystemLabel("Order failed, please try again！"); else ManagerHelp_SetSystemLabel("Order failed, please try again！");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
}
});
cc._RF.pop();
}, {
jsControlShopBY: "jsControlShopBY"
} ],
jsShopRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9285ciM52xP1rH9zIZGO5DB", "jsShopRecordItem");
var n = e("jsControlShopBY");
cc.Class({
extends: cc.Component,
properties: {
labelDate0: cc.Label,
labelDate1: cc.Label,
labelOrderID: cc.Label,
labelPrice: cc.Label,
labelAmount: cc.Label,
labelState: cc.Label,
nodeCancelOrder: cc.Node
},
onLoad: function() {
this.jsonData = null;
this.orderID = 0;
},
onCancelOrderEvent: function() {
var e = USI_OnGetInfo(), t = GetProject().deleteOrderUrl, i = "uid=" + e.dwUserID + "&sign=" + e.szSign + "&orderid=" + this.orderID;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(t, i, function(e, t) {
if (e) if (200 == t.statusCode) {
ManagerHelp_SetSystemLabel("The order was cancelled successfully");
n.self.showRecordList();
} else ManagerHelp_SetSystemLabel("The order was cancelled failed"); else ManagerHelp_SetSystemLabel("The order was cancelled failed, please try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
OnSetListData: function(e) {
this.jsonData = e;
var t = this.jsonData.OrderDate.split(" ");
this.labelDate0.string = t[0];
this.labelDate1.string = t[1];
this.labelOrderID.string = "" + this.jsonData.OrderId;
this.labelPrice.string = "" + this.jsonData.Amount;
this.labelAmount.string = "" + (this.jsonData.Quantity + this.jsonData.ExtraCount) / 1e3;
var i = this.jsonData.OrderStatus, n = this.jsonData.OrderTypes;
if (0 == i) {
this.labelState.string = "non-payment";
this.nodeCancelOrder.active = 2 == n;
} else if (2 == i) {
this.labelState.string = "completed";
this.labelState.node.color = cc.color(21, 193, 12);
this.nodeCancelOrder.active = !1;
}
}
});
cc._RF.pop();
}, {
jsControlShopBY: "jsControlShopBY"
} ],
jsSliderHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5b79dxqQU9NZoxozMI259Rq", "jsSliderHelp");
cc.Class({
extends: cc.Component,
properties: {
ProgressBar: cc.ProgressBar
},
onLoad: function() {},
OnSliderCallBack: null,
OnSliderEventByChange: function(e, t) {
cc.assert(this.ProgressBar);
this.ProgressBar.progress = e.progress;
this.OnSliderCallBack && this.OnSliderCallBack(this, t);
}
});
cc._RF.pop();
}, {} ],
jsSpriteHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "63ddfhDFoNAQLltgV0RfG8A", "jsSpriteHelp");
cc.Class({
extends: cc.Component,
properties: {
TargetNode: cc.Sprite,
ArySpriteFrame: [ cc.SpriteFrame ]
},
start: function() {},
SetSpriteFrame: function(e) {
this.ArySpriteFrame.length > e && null != this.ArySpriteFrame[e] && this.TargetNode && (this.TargetNode.spriteFrame = this.ArySpriteFrame[e]);
}
});
cc._RF.pop();
}, {} ],
jsSysMsg: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f93b8yFFWBN45iJvg2nmCDN", "jsSysMsg");
cc.Class({
extends: cc.Component,
properties: {
nodeLaba: cc.Node,
nodeMaskLaba: cc.Node,
nodMsg: cc.Node,
nodeAlert: cc.Node,
nodeText: cc.Node,
labelSystemMessage: cc.Label,
labelVip: cc.Label,
labelName: cc.Label,
labelGameName: cc.Label,
labelTip0: cc.Label,
labelFishName: cc.Label,
labelTip1: cc.Label,
labelWinScore: cc.Label,
fSpeed: 0,
_aryMsg: [ cc.String ],
stCurMsg: null,
nPlayCount: 0,
bAdd: !1,
fCurMsgLength: 0
},
onLoad: function() {
if (0 == GetProject().cbCheckAccounts) {
this.node.active = !0;
this.bCanAddMsg = 0 != GetProject().bMissionService;
} else this.node.active = !1;
},
update: function(e) {
if (this.bCanAddMsg && null == this.stCurMsg) {
this.stCurMsg = MSG_OnGetMsg();
if (null != this.stCurMsg) {
this.nodeLaba.active = !0;
if (!this.bAdd) {
this.bAdd = !0;
this.OnAddMsg(this.stCurMsg);
}
} else this.nodeLaba.active = !1;
}
},
OnAddMsg: function(e) {
var t = this;
if (0 == this.fCurMsgLength) {
this.nodMsg.x = this.nodeMaskLaba.width;
this.OnAddText(e);
this._aryMsg.push(e);
this.scheduleOnce(function() {
t.fCurMsgLength = t.nodMsg.width;
t.OnRolltext(e);
}, .5);
} else this._aryMsg.push(e);
},
OnAddText: function(e) {
if (e.dwType == SYS_MSG_TYPE_REPLAY_MSG) {
this.nodeAlert.active = !0;
this.nodeText.active = !1;
this.labelSystemMessage.string = ToUtf8(e.szMessage);
} else {
this.nodeAlert.active = !1;
this.nodeText.active = !0;
if (0 == e.dwVipLv) this.labelVip.node.parent.active = !1; else {
this.labelVip.node.parent.active = !0;
this.labelVip.string = e.dwVipLv;
}
this.labelName.string = ToUtf8(e.szNickName);
var t = "";
if (130 == e.dwKindId) t = window.GameConfig.aryKindName[e.dwKindId]; else if (0 != e.wFieldId) {
var i = ServerData_GetGameField(e.wFieldId);
t = ToUtf8(i.szFieldName);
} else t = window.GameConfig.aryKindName[e.dwKindId];
this.labelGameName.string = t;
this.labelWinScore.string = "P" + OnScoreToString(e.lWinScore);
if (3002 == e.dwKindId) {
this.labelTip1.node.active = !0;
this.labelFishName.node.active = !0;
this.labelTip0.string = " hit and kill ";
this.labelTip1.string = "，win ";
var n = ToUtf8(e.szFishName).replace(/[^\u4E00-\u9FA5]/g, "");
this.labelFishName.string = e.lFishWinTimes + "multiple" + n;
} else {
this.labelTip1.node.active = !1;
this.labelFishName.node.active = !1;
this.labelTip0.string = " win  ";
}
}
},
OnRolltext: function(e) {
var t = this;
this._aryMsg.length > 0 && setTimeout(function() {
if (null != this.nodMsg) {
var i = (this.nodMsg.x + this.fCurMsgLength) / this.fSpeed, n = -this.fCurMsgLength, a = cc.sequence(cc.moveTo(i, cc.v2(n, this.nodMsg.y)), cc.callFunc(function() {
if (e.dwType == SYS_MSG_TYPE_REPLAY_MSG) {
var i = Math.round(new Date().getTime() / 1e3);
aryPlayTime[e.dwId] = i;
}
this._aryMsg.shift();
if (this._aryMsg.length > 0) {
this.nodMsg.x = this.nodeMaskLaba.width;
this.OnAddText(this._aryMsg[0]);
this.scheduleOnce(function() {
t.fCurMsgLength = t.nodMsg.width;
t.OnRolltext(t._aryMsg[0]);
}, .5);
} else {
this.stCurMsg = null;
this.bAdd = !1;
this.fCurMsgLength = 0;
}
}.bind(this)));
this.nodMsg.runAction(a);
}
}.bind(this), 0);
}
});
cc._RF.pop();
}, {} ],
jsSystemAlert: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "49642mQf1FIMZw0ZAWahnO/", "jsSystemAlert");
window.BTN_CANCEL = 0;
window.BTN_CLOSE = 1;
cc.Class({
extends: cc.Component,
properties: {
nodeAlertGrey: cc.Node,
spAlertSystembg: cc.Sprite,
labelAlertTitle: cc.Label,
labelAlertMessage: cc.Label,
btAlertSure: cc.Button,
btAlertClose: cc.Button,
btnAlertCancel: cc.Button,
bAutoRemoved: !1
},
onLoad: function() {
this.bAutoRemoved = !0;
},
SetAutoRemoved: function(e) {
this.bAutoRemoved = e;
},
OnCallFuntion: null,
instancesInit: function() {
var e = this.spAlertSystembg.getComponent(cc.Sprite);
e.spriteFrame = e.spriteFrame.clone();
var t = this.btAlertSure.getComponent(cc.Sprite);
t.spriteFrame = t.spriteFrame.clone();
var i = this.btAlertClose.getComponent(cc.Sprite);
i.spriteFrame = i.spriteFrame.clone();
},
init: function(e, t, i, n) {
this.OnCallFuntion = "undefined" != t ? t : null;
var a = null != i && i, o = null != n ? n : window.BTN_CANCEL;
this.SetAlertMessage(e);
this.SetClosedActive(a, o);
},
SetAlertMessage: function(e) {
cc.log("am.SetAlertMessage:" + e);
this.labelAlertMessage.string = e;
},
SetClosedActive: function(e, t) {
var i = this.btAlertClose.node, n = this.btnAlertCancel.node;
t == window.BTN_CANCEL ? n.active = e : t == window.BTN_CLOSE && (i.active = e);
},
OnClosedEvent: function(e) {
this.OnCallFuntion && this.OnCallFuntion(this, window.YQ_SYS_CANCEL);
if (null != this.node.parent) {
this.node.removeFromParent();
this.node = null;
}
},
OnSureEvent: function(e) {
if (null != this.node.parent && this.bAutoRemoved) {
this.node.removeFromParent();
this.node = null;
}
this.OnCallFuntion && this.OnCallFuntion(this, window.YQ_SYS_OK);
}
});
cc._RF.pop();
}, {} ],
jsSystemLabel: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "235c4peDY5K+arxnjOqWKSO", "jsSystemLabel");
cc.Class({
extends: cc.Component,
properties: {
nodeTipContent: cc.Node,
pfLabelTip: cc.Prefab
},
start: function() {},
OnAddText: function(e) {
var t = cc.instantiate(this.pfLabelTip);
t.getChildByName("LabelTips").getComponent(cc.Label).string = e;
this.nodeTipContent.addChild(t);
t.setScale(.9);
t.opacity = 0;
t.runAction(cc.sequence(cc.spawn(cc.fadeTo(.2, 255), cc.scaleTo(.2, 1)), cc.delayTime(2), cc.spawn(cc.fadeTo(.2, 0), cc.scaleTo(.2, .9)), cc.removeSelf()));
}
});
cc._RF.pop();
}, {} ],
jsTextHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c825fD8C35K+r1z7AvbysHe", "jsTextHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeParent: cc.Node,
nodeLabel: cc.Node,
wMaxWidth: 0
},
onLoad: function() {
this.OnAutoResize();
},
OnAutoResize: function() {
if (this.nodeLabel.width > this.wMaxWidth) {
this.nodeLabel.getComponent(cc.Label).overflow = cc.Label.Overflow.RESIZE_HEIGHT;
this.nodeLabel.width = this.wMaxWidth;
if (this.nodeParent) {
var e = this.nodeParent.getComponent(cc.Layout);
e.type = cc.Layout.Type.VERTICAL;
this.nodeParent.width = this.wMaxWidth + e.paddingLeft + e.paddingRight;
}
}
}
});
cc._RF.pop();
}, {} ],
jsTimeDown: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "89d8fZW+EpDGrxgVoNJ8b/a", "jsTimeDown");
cc.Class({
extends: cc.Component,
properties: {
nodeTimeTip: cc.Node,
labelTime: cc.Label,
nodeAction: cc.Node,
labelActionTime: cc.Label,
pfTimeSkeleton: cc.Prefab,
cbActionTime: 5,
boxNode: cc.Node
},
fGameCount: 0,
bPlaySound: !1,
bPlayAction: !1,
onLoad: function() {
this.cbBeforeTime = 0;
this.bSound = !1;
},
OnReset: function() {
this.bPlaySound = !1;
this.bPlayAction = !1;
this.bSound = !1;
this.cbBeforeTime = 0;
},
OnSetGameTime: function(e, t, i) {
this.OnReset();
this.fGameCount = e;
this.bPlaySound = t;
this.bPlayAction = i;
},
update: function(e) {
this.fGameCount > 0 ? this.fGameCount -= e : this.fGameCount = 0;
var t = parseInt(Math.ceil(this.fGameCount));
if (this.bPlaySound || this.bPlayAction) {
if (t <= this.cbActionTime + 1 && !this.bSound) {
this.cbBeforeTime = t;
this.bSound = !0;
}
if (this.cbBeforeTime - t == 1) {
if (this.bPlayAction) {
var i = this.nodeAction.getChildByName("pfTimeSkeleton");
i && (i.parent = null);
if (t > 0) {
var n = cc.instantiate(this.pfTimeSkeleton);
this.nodeAction.addChild(n, -1);
var a = cc.sequence(cc.delayTime(.2), cc.moveBy(.2, cc.v2(0, 5)), cc.moveBy(.2, cc.v2(0, -5)), cc.callFunc(function() {
window.mfConfig.PlayAudio("GameFrame/Audio/TimeDown");
}));
if (this.labelActionTime) {
this.labelActionTime.string = t;
this.labelActionTime.node.runAction(a);
}
this.nodeAction.active = !0;
} else this.labelActionTime && (this.labelActionTime.string = "");
} else if (this.bPlaySound) {
window.mfConfig.PlayAudio("GameFrame/Audio/TimeDown");
}
this.cbBeforeTime = t;
}
}
if (t > 0) {
this.labelTime.string = "" + t;
this.nodeTimeTip && (this.nodeTimeTip.active = !0);
if (this.boxNode) {
this.boxNode.active = !0;
var o = this.boxNode.getChildByName("countdown").getComponent(sp.Skeleton);
t <= 5 && "animation" == o.animation ? o.animation = "animation2" : t > 5 && "animation2" == o.animation && (o.animation = "animation");
}
} else {
this.boxNode && (this.boxNode.active = !1);
this.labelTime.string = "";
this.nodeTimeTip && (this.nodeTimeTip.active = !1);
this.labelActionTime && (this.labelActionTime.string = "");
this.nodeAction && (this.nodeAction.active = !1);
}
}
});
cc._RF.pop();
}, {} ],
jsToggleHelp: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e8c93XaaEhISbzSaEI45EZL", "jsToggleHelp");
cc.Class({
extends: cc.Component,
properties: {
nodeLayerItem: [ cc.Node ],
nodeAryButton: [ cc.Node ],
togCheck: cc.Toggle,
fntSelect: cc.Font,
fntNormal: cc.Font
},
OnTogBtnCallback: null,
onLoad: function() {
this.togCheck && (this.togCheck.isChecked = "true" == window.mfConfig.bCheck);
},
OnTogBtnEvent: function(e, t) {
for (var i = parseInt(t), n = 0; n < this.nodeLayerItem.length; n++) this.nodeLayerItem[n] && (this.nodeLayerItem[n].active = n == i);
this.OnTogBtnCallback && this.OnTogBtnCallback(e, t);
},
OnCheckEvent: function(e, t) {
var i = this.togCheck.isChecked;
cc.sys.localStorage.setItem("bCheck", i);
}
});
cc._RF.pop();
}, {} ],
jsUserAgreement: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4630cu+9IlBYYXQGspW5dJ4", "jsUserAgreement");
cc.Class({
extends: cc.Component,
properties: {
pfRuleItem: cc.Prefab,
nodeRuleContent: cc.Node,
nodeWait: cc.Node
},
onLoad: function() {
SceneManager_AlertShow(this.node);
AddXmasPrefab(cc.find("No_nodeContent", this.node));
},
SetAgreementName: function(e) {
this.agreementStr = e;
},
start: function() {
var e = this;
e.bAddEnd = !0;
e.nAddIndex = 0;
cc.loader.loadRes("GameLobby/json/" + this.agreementStr, function(t, i) {
cc.log("1111 error = " + t);
if (!t) {
e.jsonData = i;
e.bAddEnd = !1;
e.nodeWait.active = !1;
e.schedule(e.showHelp.bind(e), .2);
}
});
},
showHelp: function(e) {
if (!this.bAddEnd) {
var t = this.jsonData.title, i = this.jsonData.content;
if (this.nAddIndex < this.jsonData.title.length) {
var n = this.nAddIndex, a = cc.instantiate(this.pfRuleItem);
this.nodeRuleContent.addChild(a);
a.runAction(cc.fadeIn(.3));
var o = a.getChildByName("title"), s = a.getChildByName("content");
o.getComponent(cc.Label).string = t[n];
s.getComponent(cc.Label).string = i[n];
a.getComponent(cc.Layout).updateLayout();
this.nAddIndex += 1;
} else {
this.bAddEnd = !0;
this.unschedule(this.showHelp);
}
this.nodeRuleContent.getComponent(cc.Layout).updateLayout();
}
}
});
cc._RF.pop();
}, {} ],
jsVideoControl: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4199bJ63TdPaZA9zSziASwI", "jsVideoControl");
cc.Class({
extends: cc.Component,
properties: {
nodeVideo: cc.VideoPlayer
},
start: function() {},
OnVideoPlayerEvent: function(e, t) {
t == cc.VideoPlayer.EventType.COMPLETED && this.OnPlay(e);
},
OnPlay: function(e) {
this.nodeVideo && this.nodeVideo.play(e);
},
OnTouchRegister: function() {
this.nodeTouch.on(cc.Node.EventType.TOUCH_START, this.OnTouchStart, this);
this.nodeTouch.on(cc.Node.EventType.TOUCH_END, this.OnTouchEnd, this);
this.nodeTouch.on(cc.Node.EventType.TOUCH_CANCEL, this.OnTouchCancel, this);
},
OnTouchStart: function() {
this.nodeButton.emit(cc.Node.EventType.TOUCH_START);
},
OnTouchEnd: function() {
this.nodeButton.emit(cc.Node.EventType.TOUCH_END);
},
OnTouchCancel: function() {
this.nodeButton.emit(cc.Node.EventType.TOUCH_CANCEL);
}
});
cc._RF.pop();
}, {} ],
jsWithdrawRecordItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f003dE0duNHJYqF0wj7ZXzn", "jsWithdrawRecordItem");
var n = cc.color(37, 149, 253), a = cc.color(138, 138, 138), o = cc.color(255, 117, 56), s = cc.color(90, 217, 114);
cc.color(255, 255, 255);
cc.Class({
extends: cc.Component,
properties: {
labelID: cc.Label,
labelValue: cc.Label,
labelTime: cc.Label,
labelState: cc.Label,
labelFree: cc.Label
},
OnButtonCallback: null,
onLoad: function() {},
start: function() {},
setData: function(e) {
this.labelID.string = e.OrderID;
this.labelValue.string = e.Amount + "₱";
var t = parseInt(e.Amount / .98 * .02);
t = t > 50 ? 50 : t;
this.labelFree.string = t + "₱";
this.labelTime.string = e.CollectDate.replace("T", "  ");
var i = this.labelState.node, r = e.Status;
if (0 == r) {
i.color = a;
this.labelState.string = "in review";
} else if (18 == r) {
i.color = n;
this.labelState.string = "waiting";
} else if (2 == r) {
i.color = s;
this.labelState.string = "completed";
} else if (23 == r || 24 == r) {
i.color = n;
this.labelState.string = "waiting";
} else {
i.color = o;
this.labelState.string = "fail";
}
}
});
cc._RF.pop();
}, {} ],
jsWithdrawRecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2d53bDMY1dFNavtZgUaxjyz", "jsWithdrawRecord");
cc.Class({
extends: cc.Component,
properties: {
scrollView: cc.ScrollView,
pfWithdrawRecordItem: cc.Prefab
},
typeValue: null,
onLoad: function() {
cc.find("nodeHistory", this.node) && AddXmasPrefab(cc.find("nodeHistory", this.node));
},
start: function() {},
onDisable: function() {
this.typeValue = null;
},
showRecordInfo: function(e) {
var t = this;
this.scrollView.content.removeAllChildren();
this.scrollView.node.getComponent("jsScrollHelp").initPage();
this.scrollView.node.getComponent("jsScrollHelp").initItem(e, "jsWithdrawRecordItem");
this.scrollView.node.getComponent("jsScrollHelp").refreshApi = function(e, i) {
var n = USI_OnGetInfo(), a = GetProject().szWithdrawRecordUrl, o = GetProject().GetDeviceType(), s = ServerData_GetLocaHallVersion(), r = "uid=" + n.dwUserID + "&sign=" + n.szSign + "&pageSize=20&pageindex=" + e + "&Model=" + o + "&ver=" + s + "&SourceType=" + t.typeValue;
HttpHelper.post_NotDecrypt(a, r, function(e, t) {
if (e && t) {
if (200 != t.statusCode) return;
i && i(t.data);
}
}, window.fHttpTimeOut);
};
},
requestRecordInfo: function() {
var e = this, t = USI_OnGetInfo(), i = GetProject().szWithdrawRecordUrl, n = GetProject().GetDeviceType(), a = ServerData_GetLocaHallVersion(), o = "uid=" + t.dwUserID + "&sign=" + t.szSign + "&pageSize=20&pageindex=1&Model=" + n + "&ver=" + a + "&SourceType=" + e.typeValue;
ManagerHelp_SetWaitLockLayer(WAIT_OPENED);
HttpHelper.post_NotDecrypt(i, o, function(t, i) {
t ? i && (200 == i.statusCode ? e.showRecordInfo(i.data) : ManagerHelp_SetSystemLabel("Network exception, try again")) : ManagerHelp_SetSystemLabel("Network exception, try again");
ManagerHelp_SetWaitLockLayer(WAIT_CLOSED);
}, window.fHttpTimeOut);
},
SetTypeValue: function(e) {
this.typeValue = e;
}
});
cc._RF.pop();
}, {} ],
long: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "62938VoNJdHPZ8p0KJQnmMk", "long");
var n, a, o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
n = void 0, a = function() {
function e(e, t, i) {
this.low = 0 | e;
this.high = 0 | t;
this.unsigned = !!i;
}
Object.defineProperty(e.prototype, "__isLong__", {
value: !0,
enumerable: !1,
configurable: !1
});
function t(e) {
return !0 === (e && e.__isLong__);
}
e.isLong = t;
var i = {}, n = {};
function a(e, t) {
var a, o, r;
if (t) {
if ((r = 0 <= (e >>>= 0) && e < 256) && (o = n[e])) return o;
a = s(e, (0 | e) < 0 ? -1 : 0, !0);
r && (n[e] = a);
return a;
}
if ((r = -128 <= (e |= 0) && e < 128) && (o = i[e])) return o;
a = s(e, e < 0 ? -1 : 0, !1);
r && (i[e] = a);
return a;
}
e.fromInt = a;
function o(e, t) {
if (isNaN(e) || !isFinite(e)) return t ? p : f;
if (t) {
if (e < 0) return p;
if (e >= u) return w;
} else {
if (e <= -d) return b;
if (e + 1 >= d) return C;
}
return e < 0 ? o(-e, t).neg() : s(e % h | 0, e / h | 0, t);
}
e.fromNumber = o;
function s(t, i, n) {
return new e(t, i, n);
}
e.fromBits = s;
var r = Math.pow;
function c(e, t, i) {
if (0 === e.length) throw Error("empty string");
if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e) return f;
"number" == typeof t ? (i = t, t = !1) : t = !!t;
if ((i = i || 10) < 2 || 36 < i) throw RangeError("radix");
var n;
if ((n = e.indexOf("-")) > 0) throw Error("interior hyphen");
if (0 === n) return c(e.substring(1), t, i).neg();
for (var a = o(r(i, 8)), s = f, l = 0; l < e.length; l += 8) {
var h = Math.min(8, e.length - l), u = parseInt(e.substring(l, l + h), i);
if (h < 8) {
var d = o(r(i, h));
s = s.mul(d).add(o(u));
} else s = (s = s.mul(a)).add(o(u));
}
s.unsigned = t;
return s;
}
e.fromString = c;
function l(t) {
return t instanceof e ? t : "number" == typeof t ? o(t) : "string" == typeof t ? c(t) : s(t.low, t.high, t.unsigned);
}
e.fromValue = l;
var h = 4294967296, u = h * h, d = u / 2, m = a(1 << 24), f = a(0);
e.ZERO = f;
var p = a(0, !0);
e.UZERO = p;
var _ = a(1);
e.ONE = _;
var S = a(1, !0);
e.UONE = S;
var g = a(-1);
e.NEG_ONE = g;
var C = s(-1, 2147483647, !1);
e.MAX_VALUE = C;
var w = s(-1, -1, !0);
e.MAX_UNSIGNED_VALUE = w;
var b = s(0, -2147483648, !1);
e.MIN_VALUE = b;
var A = e.prototype;
A.toInt = function() {
return this.unsigned ? this.low >>> 0 : this.low;
};
A.toNumber = function() {
return this.unsigned ? (this.high >>> 0) * h + (this.low >>> 0) : this.high * h + (this.low >>> 0);
};
A.toString = function(e) {
if ((e = e || 10) < 2 || 36 < e) throw RangeError("radix");
if (this.isZero()) return "0";
if (this.isNegative()) {
if (this.eq(b)) {
var t = o(e), i = this.div(t), n = i.mul(t).sub(this);
return i.toString(e) + n.toInt().toString(e);
}
return "-" + this.neg().toString(e);
}
for (var a = o(r(e, 6), this.unsigned), s = this, c = ""; ;) {
var l = s.div(a), h = (s.sub(l.mul(a)).toInt() >>> 0).toString(e);
if ((s = l).isZero()) return h + c;
for (;h.length < 6; ) h = "0" + h;
c = "" + h + c;
}
};
A.getHighBits = function() {
return this.high;
};
A.getHighBitsUnsigned = function() {
return this.high >>> 0;
};
A.getLowBits = function() {
return this.low;
};
A.getLowBitsUnsigned = function() {
return this.low >>> 0;
};
A.getNumBitsAbs = function() {
if (this.isNegative()) return this.eq(b) ? 64 : this.neg().getNumBitsAbs();
for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) ;
return 0 != this.high ? t + 33 : t + 1;
};
A.isZero = function() {
return 0 === this.high && 0 === this.low;
};
A.isNegative = function() {
return !this.unsigned && this.high < 0;
};
A.isPositive = function() {
return this.unsigned || this.high >= 0;
};
A.isOdd = function() {
return 1 == (1 & this.low);
};
A.isEven = function() {
return 0 == (1 & this.low);
};
A.equals = function(e) {
t(e) || (e = l(e));
return (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && (this.high === e.high && this.low === e.low);
};
A.eq = A.equals;
A.notEquals = function(e) {
return !this.eq(e);
};
A.neq = A.notEquals;
A.lessThan = function(e) {
return this.comp(e) < 0;
};
A.lt = A.lessThan;
A.lessThanOrEqual = function(e) {
return this.comp(e) <= 0;
};
A.lte = A.lessThanOrEqual;
A.greaterThan = function(e) {
return this.comp(e) > 0;
};
A.gt = A.greaterThan;
A.greaterThanOrEqual = function(e) {
return this.comp(e) >= 0;
};
A.gte = A.greaterThanOrEqual;
A.compare = function(e) {
t(e) || (e = l(e));
if (this.eq(e)) return 0;
var i = this.isNegative(), n = e.isNegative();
return i && !n ? -1 : !i && n ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;
};
A.comp = A.compare;
A.negate = function() {
return !this.unsigned && this.eq(b) ? b : this.not().add(_);
};
A.neg = A.negate;
A.add = function(e) {
t(e) || (e = l(e));
var i = this.high >>> 16, n = 65535 & this.high, a = this.low >>> 16, o = 65535 & this.low, r = e.high >>> 16, c = 65535 & e.high, h = e.low >>> 16, u = 0, d = 0, m = 0, f = 0;
m += (f += o + (65535 & e.low)) >>> 16;
d += (m += a + h) >>> 16;
u += (d += n + c) >>> 16;
u += i + r;
return s((m &= 65535) << 16 | (f &= 65535), (u &= 65535) << 16 | (d &= 65535), this.unsigned);
};
A.subtract = function(e) {
t(e) || (e = l(e));
return this.add(e.neg());
};
A.sub = A.subtract;
A.multiply = function(e) {
if (this.isZero()) return f;
t(e) || (e = l(e));
if (e.isZero()) return f;
if (this.eq(b)) return e.isOdd() ? b : f;
if (e.eq(b)) return this.isOdd() ? b : f;
if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
if (e.isNegative()) return this.mul(e.neg()).neg();
if (this.lt(m) && e.lt(m)) return o(this.toNumber() * e.toNumber(), this.unsigned);
var i = this.high >>> 16, n = 65535 & this.high, a = this.low >>> 16, r = 65535 & this.low, c = e.high >>> 16, h = 65535 & e.high, u = e.low >>> 16, d = 65535 & e.low, p = 0, _ = 0, S = 0, g = 0;
S += (g += r * d) >>> 16;
_ += (S += a * d) >>> 16;
S &= 65535;
_ += (S += r * u) >>> 16;
p += (_ += n * d) >>> 16;
_ &= 65535;
p += (_ += a * u) >>> 16;
_ &= 65535;
p += (_ += r * h) >>> 16;
p += i * d + n * u + a * h + r * c;
return s((S &= 65535) << 16 | (g &= 65535), (p &= 65535) << 16 | (_ &= 65535), this.unsigned);
};
A.mul = A.multiply;
A.divide = function(e) {
t(e) || (e = l(e));
if (e.isZero()) throw Error("division by zero");
if (this.isZero()) return this.unsigned ? p : f;
var i, n, a;
if (this.unsigned) {
e.unsigned || (e = e.toUnsigned());
if (e.gt(this)) return p;
if (e.gt(this.shru(1))) return S;
a = p;
} else {
if (this.eq(b)) {
if (e.eq(_) || e.eq(g)) return b;
if (e.eq(b)) return _;
if ((i = this.shr(1).div(e).shl(1)).eq(f)) return e.isNegative() ? _ : g;
n = this.sub(e.mul(i));
return a = i.add(n.div(e));
}
if (e.eq(b)) return this.unsigned ? p : f;
if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
if (e.isNegative()) return this.div(e.neg()).neg();
a = f;
}
n = this;
for (;n.gte(e); ) {
i = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));
for (var s = Math.ceil(Math.log(i) / Math.LN2), c = s <= 48 ? 1 : r(2, s - 48), h = o(i), u = h.mul(e); u.isNegative() || u.gt(n); ) u = (h = o(i -= c, this.unsigned)).mul(e);
h.isZero() && (h = _);
a = a.add(h);
n = n.sub(u);
}
return a;
};
A.div = A.divide;
A.modulo = function(e) {
t(e) || (e = l(e));
return this.sub(this.div(e).mul(e));
};
A.mod = A.modulo;
A.not = function() {
return s(~this.low, ~this.high, this.unsigned);
};
A.and = function(e) {
t(e) || (e = l(e));
return s(this.low & e.low, this.high & e.high, this.unsigned);
};
A.or = function(e) {
t(e) || (e = l(e));
return s(this.low | e.low, this.high | e.high, this.unsigned);
};
A.xor = function(e) {
t(e) || (e = l(e));
return s(this.low ^ e.low, this.high ^ e.high, this.unsigned);
};
A.shiftLeft = function(e) {
t(e) && (e = e.toInt());
return 0 == (e &= 63) ? this : e < 32 ? s(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : s(0, this.low << e - 32, this.unsigned);
};
A.shl = A.shiftLeft;
A.shiftRight = function(e) {
t(e) && (e = e.toInt());
return 0 == (e &= 63) ? this : e < 32 ? s(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : s(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);
};
A.shr = A.shiftRight;
A.shiftRightUnsigned = function(e) {
t(e) && (e = e.toInt());
if (0 === (e &= 63)) return this;
var i = this.high;
if (e < 32) {
return s(this.low >>> e | i << 32 - e, i >>> e, this.unsigned);
}
return s(32 === e ? i : i >>> e - 32, 0, this.unsigned);
};
A.shru = A.shiftRightUnsigned;
A.toSigned = function() {
return this.unsigned ? s(this.low, this.high, !1) : this;
};
A.toUnsigned = function() {
return this.unsigned ? this : s(this.low, this.high, !0);
};
A.toBytes = function(e) {
return e ? this.toBytesLE() : this.toBytesBE();
};
A.toBytesLE = function() {
var e = this.high, t = this.low;
return [ 255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24 & 255, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24 & 255 ];
};
A.toBytesBE = function() {
var e = this.high, t = this.low;
return [ e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t ];
};
return e;
}, "function" == typeof define && define.amd ? define([], a) : "function" == typeof e && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && t && t.exports ? t.exports = a() : (n.dcodeIO = n.dcodeIO || {}).Long = a();
cc._RF.pop();
}, {} ],
newRankLayer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6009Zut+hLKqgHvZCMmAIZ", "newRankLayer");
cc.Class({
extends: cc.Component,
properties: {
rankScroll: cc.Node,
allScroll: cc.Node,
todayBtn: cc.Node,
lastDaybtn: cc.Node,
rankLayer: cc.Node,
content_layout: cc.Node,
all_content_layout: cc.Node,
myBetItem: cc.Prefab,
allBetItem: cc.Prefab,
myNode: cc.Node,
allNode: cc.Node
},
onLoad: function() {
var e = cc.sys.localStorage.getItem("PlinkRecordCash");
this.myData = e ? JSON.parse(e) : [];
this.meItemArr = [];
this.otherItemArr = [];
},
addRecordBet: function(e) {
this.myData.splice(0, 0, e);
this.myData.length > 30 && this.myData.splice(this.myData.length - 1);
"MyBet" == this.curType && this.updateMyBetView(!0);
},
onDestroy: function() {
cc.sys.localStorage.setItem("PlinkRecordCash", JSON.stringify(this.myData));
},
start: function() {
this.onBtnMyBet();
},
setData: function(e) {
this.allData = e;
"AllBet" == this.curType && this.updateAllBetView(!0);
},
updateMyBetView: function(e) {
this.myNode.active = !0;
this.allNode.active = !1;
this.allScroll.active = !1;
this.rankScroll.active = !0;
var t = this.myData;
this.content_layout.height = 60 * t.length;
if (this.meItemArr.length <= 0) {
this.content_layout.removeAllChildren();
for (var i = 0; i < t.length; i++) {
var n = cc.instantiate(this.myBetItem);
n.getComponent("newrankItem").setData(t[i]);
this.content_layout.addChild(n);
0 == i && e && n.runAction(cc.blink(1.2, 3));
this.meItemArr.push(n);
}
} else for (var a = 0; a < t.length; a++) {
var o = this.meItemArr[a];
if (o) {
o.stopAllActions();
o.active = !0;
o.opacity = 255;
o._sgNode.setVisible(!0);
0 == a && e && o.runAction(cc.blink(1.2, 3));
o.getComponent("newrankItem").setData(t[a]);
} else {
(o = cc.instantiate(this.myBetItem)).getComponent("newrankItem").setData(t[a]);
this.content_layout.addChild(o);
0 == a && e && o.runAction(cc.blink(1.2, 3));
this.meItemArr.push(o);
}
}
},
updateAllBetView: function(e) {
this.myNode.active = !1;
this.allNode.active = !0;
var t = this.allData || [];
this.allScroll.active = !0;
this.rankScroll.active = !1;
this.all_content_layout.height = 60 * t.length;
if (this.otherItemArr.length <= 0) {
this.all_content_layout.removeAllChildren();
for (var i = 0; i < t.length; i++) if (t[i].UserId != PlayerManager.GetMeUserItem().GetUserID()) {
var n = cc.instantiate(this.allBetItem);
n.getComponent("newallitem").setData(t[i]);
this.all_content_layout.addChild(n);
this.otherItemArr.push(n);
} else this.all_content_layout.height = this.all_content_layout.height - 60;
} else for (var a = 0, o = 0; o < t.length; o++) {
a++;
if (t[o].UserId != PlayerManager.GetMeUserItem().GetUserID()) {
var s = this.otherItemArr[a - 1];
if (s) s.getComponent("newallitem").setData(t[o]); else {
(s = cc.instantiate(this.allBetItem)).getComponent("newallitem").setData(t[o]);
this.all_content_layout.addChild(s);
}
} else this.all_content_layout.height = this.all_content_layout.height - 60;
}
},
onBtnMyBet: function() {
this.curType = "MyBet";
this.todayBtn.getComponent(cc.Button).interactable = !1;
this.lastDaybtn.getComponent(cc.Button).interactable = !0;
this.lastDaybtn.getChildByName("curSprite").active = !1;
this.todayBtn.getChildByName("curSprite").active = !0;
this.todayBtn.getChildByName("dayText").color = cc.color(255, 202, 118);
this.lastDaybtn.getChildByName("dayText").color = cc.color(125, 125, 125);
this.updateMyBetView();
},
onBtnAllBet: function() {
this.curType = "AllBet";
this.lastDaybtn.getComponent(cc.Button).interactable = !1;
this.todayBtn.getComponent(cc.Button).interactable = !0;
this.todayBtn.getChildByName("curSprite").active = !1;
this.lastDaybtn.getChildByName("curSprite").active = !0;
this.lastDaybtn.getChildByName("dayText").color = cc.color(255, 202, 118);
this.todayBtn.getChildByName("dayText").color = cc.color(125, 125, 125);
this.updateAllBetView();
},
onBtnCloseRank: function() {
this.rankLayer.active = !1;
}
});
cc._RF.pop();
}, {} ],
newallitem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "300d2OkEANDKpIDbBxZwFw5", "newallitem");
cc.color(255, 129, 0), cc.color(250, 103, 33), cc.color(250, 76, 42), cc.color(248, 66, 45), 
cc.color(248, 42, 54);
cc.Class({
extends: cc.Component,
properties: {
timeLabel: cc.Label,
betLabel: cc.Label,
winLabel: cc.Label,
mulNode: cc.Node,
mulLabel: cc.Label,
NameLabel: cc.Label,
retNode: cc.Node,
retFarme: [ cc.SpriteFrame ]
},
start: function() {},
setData: function(e) {
if (e) {
var t = new Date(1e3 * e.CashOutTime), i = (t.getMonth(), t.getDate(), t.getHours() < 10 ? "0" + t.getHours() : t.getHours()), n = t.getMinutes() < 10 ? "0" + t.getMinutes() : t.getMinutes(), a = t.getSeconds() < 10 ? "0" + t.getSeconds() : t.getSeconds();
this.timeLabel.string = i + ":" + n + ":" + a;
this.betLabel.string = OnScoreToString(e.BetGold);
this.winLabel.string = OnScoreToString(e.WinScore);
this.NameLabel.string = e.UserName;
var o = 0, s = e.WinMultiple / 100;
this.mulLabel.string = e.WinMultiple / 100 + "x";
o = s <= .5 ? 0 : s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 3 : 4;
this.retNode && (this.retNode.getComponent(cc.Sprite).spriteFrame = this.retFarme[o]);
}
}
});
cc._RF.pop();
}, {} ],
newball: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a4b933AsLlJlInZoaNuVFKa", "newball");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
setPathNode: function(e) {
this.posIndex = 0;
this.pathArr = e;
},
onBeginContact: function(e, t, i) {},
onEndContact: function(e, t, i) {},
onPreSolve: function(e, t, i) {},
onPostSolve: function(e, t, i) {},
onCollisionEnter: function(e, t) {
var i = t.world, n = (i.aabb, i.preAabb, i.transform, i.radius, i.position, i.points, 
e.node);
if (n.getComponent("newpoint")) if (n.getComponent("newpoint").isBig) {
n.getComponent("newpoint").playAct();
window.mfConfig.PlayAudio("304/Audio/pz2", !1, window.mfConfig.fSound);
} else {
n.getComponent("newpoint").playAct();
window.mfConfig.PlayAudio("304/Audio/pz1", !1, window.mfConfig.fSound);
}
},
setMain: function(e) {
this.main = e;
},
onCollisionExit: function(e, t) {},
onCollisionStay: function(e, t) {},
update: function(e) {
if (this.pathArr) if (this.pathArr[this.posIndex]) {
this.node.x = this.pathArr[this.posIndex][0] / 100;
this.node.y = this.pathArr[this.posIndex][1] / 100;
this.posIndex++;
} else this.main && this.main.OnPutBall(this.node);
}
});
cc._RF.pop();
}, {} ],
newpoint: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "956c2No0JhNjbFV3/+rVSny", "newpoint");
cc.Class({
extends: cc.Component,
properties: {
spIcon: cc.Node,
isBig: !1
},
start: function() {
this.spIcon.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
this.spIcon.active = !1;
}.bind(this));
},
playAct: function() {
this.spIcon.getComponent(sp.Skeleton).animation = "Gangqiu";
this.spIcon.active = !0;
}
});
cc._RF.pop();
}, {} ],
newrankItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "070de4dcmhIGJ104qEyg7Ri", "newrankItem");
cc.color(255, 129, 0), cc.color(250, 103, 33), cc.color(250, 76, 42), cc.color(248, 66, 45), 
cc.color(248, 42, 54);
cc.Class({
extends: cc.Component,
properties: {
timeLabel: cc.Label,
betLabel: cc.Label,
winLabel: cc.Label,
mulNode: cc.Node,
mulLabel: cc.Label,
retNode: cc.Node,
retFarme: [ cc.SpriteFrame ]
},
start: function() {},
setData: function(e) {
if (e) {
this.timeLabel.string = e.date;
this.betLabel.string = OnScoreToString(e.bet);
this.winLabel.string = OnScoreToString(e.Wingold);
var t = 0, i = e.Mul;
this.mulLabel.string = e.Mul + "x";
t = i <= .5 ? 0 : i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 3 : 4;
this.retNode && (this.retNode.getComponent(cc.Sprite).spriteFrame = this.retFarme[t]);
}
}
});
cc._RF.pop();
}, {} ],
newrecord: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b405k8YzxMULvY3z9xJCz5", "newrecord");
cc.Class({
extends: cc.Component,
properties: {
numNode: cc.Node,
retNode: cc.Node,
spNew: cc.SpriteFrame,
oldSp: cc.SpriteFrame
},
start: function() {},
setData: function(e, t) {
this.numNode && (this.numNode.getComponent(cc.Label).string = e + "x");
},
setNew: function() {
this.retNode.getComponent(cc.Sprite).spriteFrame = this.spNew;
this.numNode.color = cc.color(181, 43, 20);
},
setOld: function() {
this.retNode.getComponent(cc.Sprite).spriteFrame = this.oldSp;
this.numNode.color = cc.color(255, 243, 162);
}
});
cc._RF.pop();
}, {} ],
newresult: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "495e0/JmMlFzLybKyRMxRLp", "newresult");
cc.Class({
extends: cc.Component,
properties: {
numNode: cc.Node,
retNode: cc.Node,
retFarme: [ cc.SpriteFrame ],
scoreNum: cc.Node,
spGuang: cc.Node
},
start: function() {
this.spBame = [ "A1", "A5", "B1", "B5", "10", "100" ];
},
setData: function(e, t, i) {
this.indexTag = i;
this.main = t;
this.MultiplesNum = e;
this.numNode && (this.numNode.getComponent(cc.Label).string = "" + e);
var n = 0;
n = e <= .5 ? 0 : e <= 1 ? 1 : e <= 2 ? 2 : e <= 5 ? 3 : 4;
this.retNode && (this.retNode.getComponent(cc.Sprite).spriteFrame = this.retFarme[n]);
},
playGuangSp: function() {
var e = 0;
e = this.MultiplesNum <= .5 ? 0 : this.MultiplesNum <= 1 ? 1 : this.MultiplesNum <= 2 ? 2 : this.MultiplesNum <= 5 ? 3 : this.MultiplesNum <= 10 ? 4 : 5;
if (this.spGuang) {
this.spGuang.active = !0;
this.spGuang.getComponent(sp.Skeleton).loop = !1;
this.spGuang.getComponent(sp.Skeleton).animation = this.spBame[e];
}
},
playScoreShow: function(e) {
this.scoreNum.active = !0;
this.scoreNum.getComponent(cc.Label).string = "+" + OnScoreToString(e);
this.scoreNum.stopAllActions();
this.scoreNum.y = -473;
this.scoreNum.runAction(cc.sequence(cc.moveBy(.5, cc.p(0, 30)), cc.callFunc(function() {
this.scoreNum.active = !1;
this.scoreNum.y = -473;
}.bind(this))));
this.playGuangSp();
},
onBtnclick: function(e) {
this.main.doBet(e, this.MultiplesNum);
},
onCollisionEnter: function(e, t) {
var i = t.world, n = (i.aabb, i.preAabb, i.transform, i.radius, i.position, i.points, 
0);
n = this.MultiplesNum <= .5 ? 0 : this.MultiplesNum <= 1 ? 1 : this.MultiplesNum <= 2 ? 2 : this.MultiplesNum <= 5 ? 3 : this.MultiplesNum <= 10 ? 4 : 5;
window.mfConfig.PlayAudio("304/Audio/" + this.spBame[n], !1, window.mfConfig.fSound);
(this.indexTag || 0 == this.indexTag) && this.main.ballGameEnd(this.MultiplesNum, e.node.gameData, e.node, this.indexTag);
this.main.OnPutBall(e.node);
this.scoreNum && e.node.gameData && this.playScoreShow(e.node.gameData.WinGold);
},
onCollisionExit: function(e, t) {},
onCollisionStay: function(e, t) {}
});
cc._RF.pop();
}, {} ],
point: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c930fRB3fBMC4rEJLK1kt1P", "point");
cc.Class({
extends: cc.Component,
properties: {
spIcon: cc.Node
},
start: function() {
this.spIcon.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
this.spIcon.active = !1;
}.bind(this));
},
playAct: function() {
this.spIcon.active = !0;
this.spIcon.getComponent(sp.Skeleton).animation = "animation";
}
});
cc._RF.pop();
}, {} ],
protobuf: [ function(e, t, i) {
(function(i) {
"use strict";
cc._RF.push(t, "068945FXr5Ib58hPyZGK6lj", "protobuf");
var n, a, o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
return typeof e;
} : function(e) {
return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};
n = void 0, a = function(t, n) {
var a = {};
a.ByteBuffer = t;
a.Long = t.Long || null;
a.VERSION = "5.0.2";
a.WIRE_TYPES = {};
a.WIRE_TYPES.VARINT = 0;
a.WIRE_TYPES.BITS64 = 1;
a.WIRE_TYPES.LDELIM = 2;
a.WIRE_TYPES.STARTGROUP = 3;
a.WIRE_TYPES.ENDGROUP = 4;
a.WIRE_TYPES.BITS32 = 5;
a.PACKABLE_WIRE_TYPES = [ a.WIRE_TYPES.VARINT, a.WIRE_TYPES.BITS64, a.WIRE_TYPES.BITS32 ];
a.TYPES = {
int32: {
name: "int32",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: 0
},
uint32: {
name: "uint32",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: 0
},
sint32: {
name: "sint32",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: 0
},
int64: {
name: "int64",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: a.Long ? a.Long.ZERO : void 0
},
uint64: {
name: "uint64",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: a.Long ? a.Long.UZERO : void 0
},
sint64: {
name: "sint64",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: a.Long ? a.Long.ZERO : void 0
},
bool: {
name: "bool",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: !1
},
double: {
name: "double",
wireType: a.WIRE_TYPES.BITS64,
defaultValue: 0
},
string: {
name: "string",
wireType: a.WIRE_TYPES.LDELIM,
defaultValue: ""
},
bytes: {
name: "bytes",
wireType: a.WIRE_TYPES.LDELIM,
defaultValue: null
},
fixed32: {
name: "fixed32",
wireType: a.WIRE_TYPES.BITS32,
defaultValue: 0
},
sfixed32: {
name: "sfixed32",
wireType: a.WIRE_TYPES.BITS32,
defaultValue: 0
},
fixed64: {
name: "fixed64",
wireType: a.WIRE_TYPES.BITS64,
defaultValue: a.Long ? a.Long.UZERO : void 0
},
sfixed64: {
name: "sfixed64",
wireType: a.WIRE_TYPES.BITS64,
defaultValue: a.Long ? a.Long.ZERO : void 0
},
float: {
name: "float",
wireType: a.WIRE_TYPES.BITS32,
defaultValue: 0
},
enum: {
name: "enum",
wireType: a.WIRE_TYPES.VARINT,
defaultValue: 0
},
message: {
name: "message",
wireType: a.WIRE_TYPES.LDELIM,
defaultValue: null
},
group: {
name: "group",
wireType: a.WIRE_TYPES.STARTGROUP,
defaultValue: null
}
};
a.MAP_KEY_TYPES = [ a.TYPES.int32, a.TYPES.sint32, a.TYPES.sfixed32, a.TYPES.uint32, a.TYPES.fixed32, a.TYPES.int64, a.TYPES.sint64, a.TYPES.sfixed64, a.TYPES.uint64, a.TYPES.fixed64, a.TYPES.bool, a.TYPES.string, a.TYPES.bytes ];
a.ID_MIN = 1;
a.ID_MAX = 536870911;
a.convertFieldsToCamelCase = !1;
a.populateAccessors = !0;
a.populateDefaults = !0;
a.Util = function() {
var t = {};
t.IS_NODE = !("object" !== ("undefined" == typeof i ? "undefined" : o(i)) || i + "" != "[object process]" || i.browser);
t.XHR = function() {
for (var e = [ function() {
return new XMLHttpRequest();
}, function() {
return new ActiveXObject("Msxml2.XMLHTTP");
}, function() {
return new ActiveXObject("Msxml3.XMLHTTP");
}, function() {
return new ActiveXObject("Microsoft.XMLHTTP");
} ], t = null, i = 0; i < e.length; i++) {
try {
t = e[i]();
} catch (e) {
continue;
}
break;
}
if (!t) throw Error("XMLHttpRequest is not supported");
return t;
};
t.fetch = function(i, n) {
n && "function" != typeof n && (n = null);
if (t.IS_NODE) {
var a = e("fs");
if (n) a.readFile(i, function(e, t) {
n(e ? null : "" + t);
}); else try {
return a.readFileSync(i);
} catch (e) {
return null;
}
} else {
var o = t.XHR();
o.open("GET", i, !!n);
o.setRequestHeader("Accept", "text/plain");
"function" == typeof o.overrideMimeType && o.overrideMimeType("text/plain");
if (!n) {
o.send(null);
return 200 == o.status || 0 == o.status && "string" == typeof o.responseText ? o.responseText : null;
}
o.onreadystatechange = function() {
4 == o.readyState && (200 == o.status || 0 == o.status && "string" == typeof o.responseText ? n(o.responseText) : n(null));
};
if (4 == o.readyState) return;
o.send(null);
}
};
t.toCamelCase = function(e) {
return e.replace(/_([a-zA-Z])/g, function(e, t) {
return t.toUpperCase();
});
};
return t;
}();
a.Lang = {
DELIM: /[\s\{\}=;:\[\],'"\(\)<>]/g,
RULE: /^(?:required|optional|repeated|map)$/,
TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,
NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/,
TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/,
TYPEREF: /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,
FQTYPEREF: /^(?:\.[a-zA-Z][a-zA-Z_0-9]*)+$/,
NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,
NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/,
NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/,
NUMBER_OCT: /^0[0-7]+$/,
NUMBER_FLT: /^([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,
BOOL: /^(?:true|false)$/i,
ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,
NEGID: /^\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,
WHITESPACE: /\s/,
STRING: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")|(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,
STRING_DQ: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
STRING_SQ: /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g
};
a.DotProto = function(e, t) {
var i = {}, n = function(e) {
this.source = e + "";
this.index = 0;
this.line = 1;
this.stack = [];
this._stringOpen = null;
}, a = n.prototype;
a._readString = function() {
var e = '"' === this._stringOpen ? t.STRING_DQ : t.STRING_SQ;
e.lastIndex = this.index - 1;
var i = e.exec(this.source);
if (!i) throw Error("unterminated string");
this.index = e.lastIndex;
this.stack.push(this._stringOpen);
this._stringOpen = null;
return i[1];
};
a.next = function() {
if (this.stack.length > 0) return this.stack.shift();
if (this.index >= this.source.length) return null;
if (null !== this._stringOpen) return this._readString();
var e, i, n;
do {
e = !1;
for (;t.WHITESPACE.test(n = this.source.charAt(this.index)); ) {
"\n" === n && ++this.line;
if (++this.index === this.source.length) return null;
}
if ("/" === this.source.charAt(this.index)) {
++this.index;
if ("/" === this.source.charAt(this.index)) {
for (;"\n" !== this.source.charAt(++this.index); ) if (this.index == this.source.length) return null;
++this.index;
++this.line;
e = !0;
} else {
if ("*" !== (n = this.source.charAt(this.index))) return "/";
do {
"\n" === n && ++this.line;
if (++this.index === this.source.length) return null;
i = n;
n = this.source.charAt(this.index);
} while ("*" !== i || "/" !== n);
++this.index;
e = !0;
}
}
} while (e);
if (this.index === this.source.length) return null;
var a = this.index;
t.DELIM.lastIndex = 0;
if (!t.DELIM.test(this.source.charAt(a++))) for (;a < this.source.length && !t.DELIM.test(this.source.charAt(a)); ) ++a;
var o = this.source.substring(this.index, this.index = a);
'"' !== o && "'" !== o || (this._stringOpen = o);
return o;
};
a.peek = function() {
if (0 === this.stack.length) {
var e = this.next();
if (null === e) return null;
this.stack.push(e);
}
return this.stack[0];
};
a.skip = function(e) {
var t = this.next();
if (t !== e) throw Error("illegal '" + t + "', '" + e + "' expected");
};
a.omit = function(e) {
if (this.peek() === e) {
this.next();
return !0;
}
return !1;
};
a.toString = function() {
return "Tokenizer (" + this.index + "/" + this.source.length + " at line " + this.line + ")";
};
i.Tokenizer = n;
var o = function(e) {
this.tn = new n(e);
this.proto3 = !1;
}, s = o.prototype;
s.parse = function() {
var e, i, n = {
name: "[ROOT]",
package: null,
messages: [],
enums: [],
imports: [],
options: {},
services: []
}, a = !0;
try {
for (;e = this.tn.next(); ) switch (e) {
case "package":
if (!a || null !== n.package) throw Error("unexpected 'package'");
e = this.tn.next();
if (!t.TYPEREF.test(e)) throw Error("illegal package name: " + e);
this.tn.skip(";");
n.package = e;
break;

case "import":
if (!a) throw Error("unexpected 'import'");
("public" === (e = this.tn.peek()) || (i = "weak" === e)) && this.tn.next();
e = this._readString();
this.tn.skip(";");
i || n.imports.push(e);
break;

case "syntax":
if (!a) throw Error("unexpected 'syntax'");
this.tn.skip("=");
"proto3" === (n.syntax = this._readString()) && (this.proto3 = !0);
this.tn.skip(";");
break;

case "message":
this._parseMessage(n, null);
a = !1;
break;

case "enum":
this._parseEnum(n);
a = !1;
break;

case "option":
this._parseOption(n);
break;

case "service":
this._parseService(n);
break;

case "extend":
this._parseExtend(n);
break;

default:
throw Error("unexpected '" + e + "'");
}
} catch (e) {
e.message = "Parse error at line " + this.tn.line + ": " + e.message;
throw e;
}
delete n.name;
return n;
};
o.parse = function(e) {
return new o(e).parse();
};
function r(e, i) {
var n = -1, a = 1;
if ("-" == e.charAt(0)) {
a = -1;
e = e.substring(1);
}
if (t.NUMBER_DEC.test(e)) n = parseInt(e); else if (t.NUMBER_HEX.test(e)) n = parseInt(e.substring(2), 16); else {
if (!t.NUMBER_OCT.test(e)) throw Error("illegal id value: " + (a < 0 ? "-" : "") + e);
n = parseInt(e.substring(1), 8);
}
n = a * n | 0;
if (!i && n < 0) throw Error("illegal id value: " + (a < 0 ? "-" : "") + e);
return n;
}
function c(e) {
var i = 1;
if ("-" == e.charAt(0)) {
i = -1;
e = e.substring(1);
}
if (t.NUMBER_DEC.test(e)) return i * parseInt(e, 10);
if (t.NUMBER_HEX.test(e)) return i * parseInt(e.substring(2), 16);
if (t.NUMBER_OCT.test(e)) return i * parseInt(e.substring(1), 8);
if ("inf" === e) return Infinity * i;
if ("nan" === e) return NaN;
if (t.NUMBER_FLT.test(e)) return i * parseFloat(e);
throw Error("illegal number value: " + (i < 0 ? "-" : "") + e);
}
s._readString = function() {
var e, t, i = "";
do {
if ("'" !== (t = this.tn.next()) && '"' !== t) throw Error("illegal string delimiter: " + t);
i += this.tn.next();
this.tn.skip(t);
e = this.tn.peek();
} while ('"' === e || '"' === e);
return i;
};
s._readValue = function(e) {
var i = this.tn.peek();
if ('"' === i || "'" === i) return this._readString();
this.tn.next();
if (t.NUMBER.test(i)) return c(i);
if (t.BOOL.test(i)) return "true" === i.toLowerCase();
if (e && t.TYPEREF.test(i)) return i;
throw Error("illegal value: " + i);
};
s._parseOption = function(e, i) {
var n = this.tn.next(), a = !1;
if ("(" === n) {
a = !0;
n = this.tn.next();
}
if (!t.TYPEREF.test(n)) throw Error("illegal option name: " + n);
var o = n;
if (a) {
this.tn.skip(")");
o = "(" + o + ")";
n = this.tn.peek();
if (t.FQTYPEREF.test(n)) {
o += n;
this.tn.next();
}
}
this.tn.skip("=");
this._parseOptionValue(e, o);
i || this.tn.skip(";");
};
function l(e, t, i) {
if ("undefined" == typeof e[t]) e[t] = i; else {
Array.isArray(e[t]) || (e[t] = [ e[t] ]);
e[t].push(i);
}
}
s._parseOptionValue = function(e, i) {
var n = this.tn.peek();
if ("{" !== n) l(e.options, i, this._readValue(!0)); else {
this.tn.skip("{");
for (;"}" !== (n = this.tn.next()); ) {
if (!t.NAME.test(n)) throw Error("illegal option name: " + i + "." + n);
this.tn.omit(":") ? l(e.options, i + "." + n, this._readValue(!0)) : this._parseOptionValue(e, i + "." + n);
}
}
};
s._parseService = function(e) {
var i = this.tn.next();
if (!t.NAME.test(i)) throw Error("illegal service name at line " + this.tn.line + ": " + i);
var n = {
name: i,
rpc: {},
options: {}
};
this.tn.skip("{");
for (;"}" !== (i = this.tn.next()); ) if ("option" === i) this._parseOption(n); else {
if ("rpc" !== i) throw Error("illegal service token: " + i);
this._parseServiceRPC(n);
}
this.tn.omit(";");
e.services.push(n);
};
s._parseServiceRPC = function(e) {
var i = this.tn.next();
if (!t.NAME.test(i)) throw Error("illegal rpc service method name: " + i);
var n = i, a = {
request: null,
response: null,
request_stream: !1,
response_stream: !1,
options: {}
};
this.tn.skip("(");
if ("stream" === (i = this.tn.next()).toLowerCase()) {
a.request_stream = !0;
i = this.tn.next();
}
if (!t.TYPEREF.test(i)) throw Error("illegal rpc service request type: " + i);
a.request = i;
this.tn.skip(")");
if ("returns" !== (i = this.tn.next()).toLowerCase()) throw Error("illegal rpc service request type delimiter: " + i);
this.tn.skip("(");
if ("stream" === (i = this.tn.next()).toLowerCase()) {
a.response_stream = !0;
i = this.tn.next();
}
a.response = i;
this.tn.skip(")");
if ("{" === (i = this.tn.peek())) {
this.tn.next();
for (;"}" !== (i = this.tn.next()); ) {
if ("option" !== i) throw Error("illegal rpc service token: " + i);
this._parseOption(a);
}
this.tn.omit(";");
} else this.tn.skip(";");
"undefined" == typeof e.rpc && (e.rpc = {});
e.rpc[n] = a;
};
s._parseMessage = function(e, i) {
var n = !!i, a = this.tn.next(), o = {
name: "",
fields: [],
enums: [],
messages: [],
options: {},
services: [],
oneofs: {}
};
if (!t.NAME.test(a)) throw Error("illegal " + (n ? "group" : "message") + " name: " + a);
o.name = a;
if (n) {
this.tn.skip("=");
i.id = r(this.tn.next());
o.isGroup = !0;
}
"[" === (a = this.tn.peek()) && i && this._parseFieldOptions(i);
this.tn.skip("{");
for (;"}" !== (a = this.tn.next()); ) if (t.RULE.test(a)) this._parseMessageField(o, a); else if ("oneof" === a) this._parseMessageOneOf(o); else if ("enum" === a) this._parseEnum(o); else if ("message" === a) this._parseMessage(o); else if ("option" === a) this._parseOption(o); else if ("service" === a) this._parseService(o); else if ("extensions" === a) o.hasOwnProperty("extensions") ? o.extensions = o.extensions.concat(this._parseExtensionRanges()) : o.extensions = this._parseExtensionRanges(); else if ("reserved" === a) this._parseIgnored(); else if ("extend" === a) this._parseExtend(o); else {
if (!t.TYPEREF.test(a)) throw Error("illegal message token: " + a);
if (!this.proto3) throw Error("illegal field rule: " + a);
this._parseMessageField(o, "optional", a);
}
this.tn.omit(";");
e.messages.push(o);
return o;
};
s._parseIgnored = function() {
for (;";" !== this.tn.peek(); ) this.tn.next();
this.tn.skip(";");
};
s._parseMessageField = function(e, i, n) {
if (!t.RULE.test(i)) throw Error("illegal message field rule: " + i);
var a, o = {
rule: i,
type: "",
name: "",
options: {},
id: 0
};
if ("map" === i) {
if (n) throw Error("illegal type: " + n);
this.tn.skip("<");
a = this.tn.next();
if (!t.TYPE.test(a) && !t.TYPEREF.test(a)) throw Error("illegal message field type: " + a);
o.keytype = a;
this.tn.skip(",");
a = this.tn.next();
if (!t.TYPE.test(a) && !t.TYPEREF.test(a)) throw Error("illegal message field: " + a);
o.type = a;
this.tn.skip(">");
a = this.tn.next();
if (!t.NAME.test(a)) throw Error("illegal message field name: " + a);
o.name = a;
this.tn.skip("=");
o.id = r(this.tn.next());
"[" === (a = this.tn.peek()) && this._parseFieldOptions(o);
this.tn.skip(";");
} else if ("group" === (n = "undefined" != typeof n ? n : this.tn.next())) {
var s = this._parseMessage(e, o);
if (!/^[A-Z]/.test(s.name)) throw Error("illegal group name: " + s.name);
o.type = s.name;
o.name = s.name.toLowerCase();
this.tn.omit(";");
} else {
if (!t.TYPE.test(n) && !t.TYPEREF.test(n)) throw Error("illegal message field type: " + n);
o.type = n;
a = this.tn.next();
if (!t.NAME.test(a)) throw Error("illegal message field name: " + a);
o.name = a;
this.tn.skip("=");
o.id = r(this.tn.next());
"[" === (a = this.tn.peek()) && this._parseFieldOptions(o);
this.tn.skip(";");
}
e.fields.push(o);
return o;
};
s._parseMessageOneOf = function(e) {
var i = this.tn.next();
if (!t.NAME.test(i)) throw Error("illegal oneof name: " + i);
var n, a = i, o = [];
this.tn.skip("{");
for (;"}" !== (i = this.tn.next()); ) {
(n = this._parseMessageField(e, "optional", i)).oneof = a;
o.push(n.id);
}
this.tn.omit(";");
e.oneofs[a] = o;
};
s._parseFieldOptions = function(e) {
this.tn.skip("[");
for (var t = !0; "]" !== this.tn.peek(); ) {
t || this.tn.skip(",");
this._parseOption(e, !0);
t = !1;
}
this.tn.next();
};
s._parseEnum = function(e) {
var i = {
name: "",
values: [],
options: {}
}, n = this.tn.next();
if (!t.NAME.test(n)) throw Error("illegal name: " + n);
i.name = n;
this.tn.skip("{");
for (;"}" !== (n = this.tn.next()); ) if ("option" === n) this._parseOption(i); else {
if (!t.NAME.test(n)) throw Error("illegal name: " + n);
this.tn.skip("=");
var a = {
name: n,
id: r(this.tn.next(), !0)
};
"[" === (n = this.tn.peek()) && this._parseFieldOptions({
options: {}
});
this.tn.skip(";");
i.values.push(a);
}
this.tn.omit(";");
e.enums.push(i);
};
s._parseExtensionRanges = function() {
var t, i, n, a = [];
do {
i = [];
for (;;) {
switch (t = this.tn.next()) {
case "min":
n = e.ID_MIN;
break;

case "max":
n = e.ID_MAX;
break;

default:
n = c(t);
}
i.push(n);
if (2 === i.length) break;
if ("to" !== this.tn.peek()) {
i.push(n);
break;
}
this.tn.next();
}
a.push(i);
} while (this.tn.omit(","));
this.tn.skip(";");
return a;
};
s._parseExtend = function(e) {
var i = this.tn.next();
if (!t.TYPEREF.test(i)) throw Error("illegal extend reference: " + i);
var n = {
ref: i,
fields: []
};
this.tn.skip("{");
for (;"}" !== (i = this.tn.next()); ) if (t.RULE.test(i)) this._parseMessageField(n, i); else {
if (!t.TYPEREF.test(i)) throw Error("illegal extend token: " + i);
if (!this.proto3) throw Error("illegal field rule: " + i);
this._parseMessageField(n, "optional", i);
}
this.tn.omit(";");
e.messages.push(n);
return n;
};
s.toString = function() {
return "Parser at line " + this.tn.line;
};
i.Parser = o;
return i;
}(a, a.Lang);
a.Reflect = function(e) {
var i = {}, n = function(e, t, i) {
this.builder = e;
this.parent = t;
this.name = i;
this.className;
}, a = n.prototype;
a.fqn = function() {
for (var e = this.name, t = this; ;) {
if (null == (t = t.parent)) break;
e = t.name + "." + e;
}
return e;
};
a.toString = function(e) {
return (e ? this.className + " " : "") + this.fqn();
};
a.build = function() {
throw Error(this.toString(!0) + " cannot be built directly");
};
i.T = n;
var s = function(e, t, i, a, o) {
n.call(this, e, t, i);
this.className = "Namespace";
this.children = [];
this.options = a || {};
this.syntax = o || "proto2";
}, r = s.prototype = Object.create(n.prototype);
r.getChildren = function(e) {
if (null == (e = e || null)) return this.children.slice();
for (var t = [], i = 0, n = this.children.length; i < n; ++i) this.children[i] instanceof e && t.push(this.children[i]);
return t;
};
r.addChild = function(e) {
var t;
if (t = this.getChild(e.name)) if (t instanceof u.Field && t.name !== t.originalName && null === this.getChild(t.originalName)) t.name = t.originalName; else {
if (!(e instanceof u.Field && e.name !== e.originalName && null === this.getChild(e.originalName))) throw Error("Duplicate name in namespace " + this.toString(!0) + ": " + e.name);
e.name = e.originalName;
}
this.children.push(e);
};
r.getChild = function(e) {
for (var t = "number" == typeof e ? "id" : "name", i = 0, n = this.children.length; i < n; ++i) if (this.children[i][t] === e) return this.children[i];
return null;
};
r.resolve = function(e, t) {
var n, a = "string" == typeof e ? e.split(".") : e, o = this, s = 0;
if ("" === a[s]) {
for (;null !== o.parent; ) o = o.parent;
s++;
}
do {
do {
if (!(o instanceof i.Namespace)) {
o = null;
break;
}
if (!(n = o.getChild(a[s])) || !(n instanceof i.T) || t && !(n instanceof i.Namespace)) {
o = null;
break;
}
o = n;
s++;
} while (s < a.length);
if (null != o) break;
if (null !== this.parent) return this.parent.resolve(e, t);
} while (null != o);
return o;
};
r.qn = function(e) {
var t = [], n = e;
do {
t.unshift(n.name);
n = n.parent;
} while (null !== n);
for (var a = 1; a <= t.length; a++) {
var o = t.slice(t.length - a);
if (e === this.resolve(o, e instanceof i.Namespace)) return o.join(".");
}
return e.fqn();
};
r.build = function() {
for (var e, t = {}, i = this.children, n = 0, a = i.length; n < a; ++n) (e = i[n]) instanceof s && (t[e.name] = e.build());
Object.defineProperty && Object.defineProperty(t, "$options", {
value: this.buildOpt()
});
return t;
};
r.buildOpt = function() {
for (var e = {}, t = Object.keys(this.options), i = 0, n = t.length; i < n; ++i) {
var a = t[i], o = this.options[t[i]];
e[a] = o;
}
return e;
};
r.getOption = function(e) {
return "undefined" == typeof e ? this.options : "undefined" != typeof this.options[e] ? this.options[e] : null;
};
i.Namespace = s;
var c = function(t, i, n, a, o) {
this.type = t;
this.resolvedType = i;
this.isMapKey = n;
this.syntax = a;
this.name = o;
if (n && e.MAP_KEY_TYPES.indexOf(t) < 0) throw Error("Invalid map key type: " + t.name);
}, l = c.prototype;
c.defaultFieldValue = function(i) {
"string" == typeof i && (i = e.TYPES[i]);
if ("undefined" == typeof i.defaultValue) throw Error("default value for type " + i.name + " is not supported");
return i == e.TYPES.bytes ? new t(0) : i.defaultValue;
};
function h(t, i) {
if (t && "number" == typeof t.low && "number" == typeof t.high && "boolean" == typeof t.unsigned && t.low == t.low && t.high == t.high) return new e.Long(t.low, t.high, "undefined" == typeof i ? t.unsigned : i);
if ("string" == typeof t) return e.Long.fromString(t, i || !1, 10);
if ("number" == typeof t) return e.Long.fromNumber(t, i || !1);
throw Error("not convertible to Long");
}
l.toString = function() {
return (this.name || "") + (this.isMapKey ? "map" : "value") + " element";
};
l.verifyValue = function(i) {
var n = this;
function a(e, t) {
throw Error("Illegal value for " + n.toString(!0) + " of type " + n.type.name + ": " + e + " (" + t + ")");
}
switch (this.type) {
case e.TYPES.int32:
case e.TYPES.sint32:
case e.TYPES.sfixed32:
("number" != typeof i || i == i && i % 1 != 0) && a("undefined" == typeof i ? "undefined" : o(i), "not an integer");
return i > 4294967295 ? 0 | i : i;

case e.TYPES.uint32:
case e.TYPES.fixed32:
("number" != typeof i || i == i && i % 1 != 0) && a("undefined" == typeof i ? "undefined" : o(i), "not an integer");
return i < 0 ? i >>> 0 : i;

case e.TYPES.int64:
case e.TYPES.sint64:
case e.TYPES.sfixed64:
if (e.Long) try {
return h(i, !1);
} catch (e) {
a("undefined" == typeof i ? "undefined" : o(i), e.message);
} else a("undefined" == typeof i ? "undefined" : o(i), "requires Long.js");

case e.TYPES.uint64:
case e.TYPES.fixed64:
if (e.Long) try {
return h(i, !0);
} catch (e) {
a("undefined" == typeof i ? "undefined" : o(i), e.message);
} else a("undefined" == typeof i ? "undefined" : o(i), "requires Long.js");

case e.TYPES.bool:
"boolean" != typeof i && a("undefined" == typeof i ? "undefined" : o(i), "not a boolean");
return i;

case e.TYPES.float:
case e.TYPES.double:
"number" != typeof i && a("undefined" == typeof i ? "undefined" : o(i), "not a number");
return i;

case e.TYPES.string:
"string" == typeof i || i && i instanceof String || a("undefined" == typeof i ? "undefined" : o(i), "not a string");
return "" + i;

case e.TYPES.bytes:
return t.isByteBuffer(i) ? i : t.wrap(i, "base64");

case e.TYPES.enum:
var s = this.resolvedType.getChildren(e.Reflect.Enum.Value);
for (c = 0; c < s.length; c++) {
if (s[c].name == i) return s[c].id;
if (s[c].id == i) return s[c].id;
}
if ("proto3" === this.syntax) {
("number" != typeof i || i == i && i % 1 != 0) && a("undefined" == typeof i ? "undefined" : o(i), "not an integer");
(i > 4294967295 || i < 0) && a("undefined" == typeof i ? "undefined" : o(i), "not in range for uint32");
return i;
}
a(i, "not a valid enum value");

case e.TYPES.group:
case e.TYPES.message:
i && "object" === ("undefined" == typeof i ? "undefined" : o(i)) || a("undefined" == typeof i ? "undefined" : o(i), "object expected");
if (i instanceof this.resolvedType.clazz) return i;
if (i instanceof e.Builder.Message) {
var r = {};
for (var c in i) i.hasOwnProperty(c) && (r[c] = i[c]);
i = r;
}
return new this.resolvedType.clazz(i);
}
throw Error("[INTERNAL] Illegal value for " + this.toString(!0) + ": " + i + " (undefined type " + this.type + ")");
};
l.calculateLength = function(i, n) {
if (null === n) return 0;
var a;
switch (this.type) {
case e.TYPES.int32:
return n < 0 ? t.calculateVarint64(n) : t.calculateVarint32(n);

case e.TYPES.uint32:
return t.calculateVarint32(n);

case e.TYPES.sint32:
return t.calculateVarint32(t.zigZagEncode32(n));

case e.TYPES.fixed32:
case e.TYPES.sfixed32:
case e.TYPES.float:
return 4;

case e.TYPES.int64:
case e.TYPES.uint64:
return t.calculateVarint64(n);

case e.TYPES.sint64:
return t.calculateVarint64(t.zigZagEncode64(n));

case e.TYPES.fixed64:
case e.TYPES.sfixed64:
return 8;

case e.TYPES.bool:
return 1;

case e.TYPES.enum:
return t.calculateVarint32(n);

case e.TYPES.double:
return 8;

case e.TYPES.string:
a = t.calculateUTF8Bytes(n);
return t.calculateVarint32(a) + a;

case e.TYPES.bytes:
if (n.remaining() < 0) throw Error("Illegal value for " + this.toString(!0) + ": " + n.remaining() + " bytes remaining");
return t.calculateVarint32(n.remaining()) + n.remaining();

case e.TYPES.message:
a = this.resolvedType.calculate(n);
return t.calculateVarint32(a) + a;

case e.TYPES.group:
return (a = this.resolvedType.calculate(n)) + t.calculateVarint32(i << 3 | e.WIRE_TYPES.ENDGROUP);
}
throw Error("[INTERNAL] Illegal value to encode in " + this.toString(!0) + ": " + n + " (unknown type)");
};
l.encodeValue = function(i, n, a) {
if (null === n) return a;
switch (this.type) {
case e.TYPES.int32:
n < 0 ? a.writeVarint64(n) : a.writeVarint32(n);
break;

case e.TYPES.uint32:
a.writeVarint32(n);
break;

case e.TYPES.sint32:
a.writeVarint32ZigZag(n);
break;

case e.TYPES.fixed32:
a.writeUint32(n);
break;

case e.TYPES.sfixed32:
a.writeInt32(n);
break;

case e.TYPES.int64:
case e.TYPES.uint64:
a.writeVarint64(n);
break;

case e.TYPES.sint64:
a.writeVarint64ZigZag(n);
break;

case e.TYPES.fixed64:
a.writeUint64(n);
break;

case e.TYPES.sfixed64:
a.writeInt64(n);
break;

case e.TYPES.bool:
"string" == typeof n ? a.writeVarint32("false" === n.toLowerCase() ? 0 : !!n) : a.writeVarint32(n ? 1 : 0);
break;

case e.TYPES.enum:
a.writeVarint32(n);
break;

case e.TYPES.float:
a.writeFloat32(n);
break;

case e.TYPES.double:
a.writeFloat64(n);
break;

case e.TYPES.string:
a.writeVString(n);
break;

case e.TYPES.bytes:
if (n.remaining() < 0) throw Error("Illegal value for " + this.toString(!0) + ": " + n.remaining() + " bytes remaining");
var o = n.offset;
a.writeVarint32(n.remaining());
a.append(n);
n.offset = o;
break;

case e.TYPES.message:
var s = new t().LE();
this.resolvedType.encode(n, s);
a.writeVarint32(s.offset);
a.append(s.flip());
break;

case e.TYPES.group:
this.resolvedType.encode(n, a);
a.writeVarint32(i << 3 | e.WIRE_TYPES.ENDGROUP);
break;

default:
throw Error("[INTERNAL] Illegal value to encode in " + this.toString(!0) + ": " + n + " (unknown type)");
}
return a;
};
l.decode = function(t, i, n) {
if (i != this.type.wireType) throw Error("Unexpected wire type for element");
var a, o;
switch (this.type) {
case e.TYPES.int32:
return 0 | t.readVarint32();

case e.TYPES.uint32:
return t.readVarint32() >>> 0;

case e.TYPES.sint32:
return 0 | t.readVarint32ZigZag();

case e.TYPES.fixed32:
return t.readUint32() >>> 0;

case e.TYPES.sfixed32:
return 0 | t.readInt32();

case e.TYPES.int64:
return t.readVarint64().toNumber();

case e.TYPES.uint64:
return t.readVarint64().toUnsigned().toNumber();

case e.TYPES.sint64:
return t.readVarint64ZigZag().toNumber();

case e.TYPES.fixed64:
return t.readUint64().toNumber();

case e.TYPES.sfixed64:
return t.readInt64().toNumber();

case e.TYPES.bool:
return !!t.readVarint32();

case e.TYPES.enum:
return t.readVarint32();

case e.TYPES.float:
return t.readFloat();

case e.TYPES.double:
return t.readDouble();

case e.TYPES.string:
return t.readVString();

case e.TYPES.bytes:
o = t.readVarint32();
if (t.remaining() < o) throw Error("Illegal number of bytes for " + this.toString(!0) + ": " + o + " required but got only " + t.remaining());
(a = t.clone()).limit = a.offset + o;
t.offset += o;
return a;

case e.TYPES.message:
o = t.readVarint32();
return this.resolvedType.decode(t, o);

case e.TYPES.group:
return this.resolvedType.decode(t, -1, n);
}
throw Error("[INTERNAL] Illegal decode type");
};
l.valueFromString = function(i) {
if (!this.isMapKey) throw Error("valueFromString() called on non-map-key element");
switch (this.type) {
case e.TYPES.int32:
case e.TYPES.sint32:
case e.TYPES.sfixed32:
case e.TYPES.uint32:
case e.TYPES.fixed32:
return this.verifyValue(parseInt(i));

case e.TYPES.int64:
case e.TYPES.sint64:
case e.TYPES.sfixed64:
case e.TYPES.uint64:
case e.TYPES.fixed64:
return this.verifyValue(i);

case e.TYPES.bool:
return "true" === i;

case e.TYPES.string:
return this.verifyValue(i);

case e.TYPES.bytes:
return t.fromBinary(i);
}
};
l.valueToString = function(t) {
if (!this.isMapKey) throw Error("valueToString() called on non-map-key element");
return this.type === e.TYPES.bytes ? t.toString("binary") : t.toString();
};
i.Element = c;
var u = function(e, t, i, n, a, o) {
s.call(this, e, t, i, n, o);
this.className = "Message";
this.extensions = void 0;
this.clazz = null;
this.isGroup = !!a;
this._fields = null;
this._fieldsById = null;
this._fieldsByName = null;
}, d = u.prototype = Object.create(s.prototype);
d.build = function(i) {
if (this.clazz && !i) return this.clazz;
var n = function(e, i) {
var n = i.getChildren(e.Reflect.Message.Field), a = i.getChildren(e.Reflect.Message.OneOf), s = function s(r, c) {
e.Builder.Message.call(this);
for (var l = 0, h = a.length; l < h; ++l) this[a[l].name] = null;
for (l = 0, h = n.length; l < h; ++l) {
var u = n[l];
this[u.name] = u.repeated ? [] : u.map ? new e.Map(u) : null;
!u.required && "proto3" !== i.syntax || null === u.defaultValue || (this[u.name] = u.defaultValue);
}
if (arguments.length > 0) {
var d;
if (1 !== arguments.length || null === r || "object" !== ("undefined" == typeof r ? "undefined" : o(r)) || !("function" != typeof r.encode || r instanceof s) || Array.isArray(r) || r instanceof e.Map || t.isByteBuffer(r) || r instanceof ArrayBuffer || e.Long && r instanceof e.Long) for (l = 0, 
h = arguments.length; l < h; ++l) "undefined" != typeof (d = arguments[l]) && this.$set(n[l].name, d); else this.$set(r);
}
}, r = s.prototype = Object.create(e.Builder.Message.prototype);
r.add = function(t, n, a) {
var o = i._fieldsByName[t];
if (!a) {
if (!o) throw Error(this + "#" + t + " is undefined");
if (!(o instanceof e.Reflect.Message.Field)) throw Error(this + "#" + t + " is not a field: " + o.toString(!0));
if (!o.repeated) throw Error(this + "#" + t + " is not a repeated field");
n = o.verifyValue(n, !0);
}
null === this[t] && (this[t] = []);
this[t].push(n);
return this;
};
r.$add = r.add;
r.set = function(t, n, a) {
if (t && "object" === ("undefined" == typeof t ? "undefined" : o(t))) {
a = n;
for (var s in t) t.hasOwnProperty(s) && "undefined" != typeof (n = t[s]) && void 0 === i._oneofsByName[s] && this.$set(s, n, a);
return this;
}
var r = i._fieldsByName[t];
if (a) this[t] = n; else {
if (!r) throw Error(this + "#" + t + " is not a field: undefined");
if (!(r instanceof e.Reflect.Message.Field)) throw Error(this + "#" + t + " is not a field: " + r.toString(!0));
this[r.name] = n = r.verifyValue(n);
}
if (r && r.oneof) {
var c = this[r.oneof.name];
if (null !== n) {
null !== c && c !== r.name && (this[c] = null);
this[r.oneof.name] = r.name;
} else c === t && (this[r.oneof.name] = null);
}
return this;
};
r.$set = r.set;
r.get = function(t, n) {
if (n) return this[t];
var a = i._fieldsByName[t];
if (!(a && a instanceof e.Reflect.Message.Field)) throw Error(this + "#" + t + " is not a field: undefined");
if (!(a instanceof e.Reflect.Message.Field)) throw Error(this + "#" + t + " is not a field: " + a.toString(!0));
return this[a.name];
};
r.$get = r.get;
for (var c = 0; c < n.length; c++) {
var l = n[c];
l instanceof e.Reflect.Message.ExtensionField || i.builder.options.populateAccessors && function(e) {
var t = e.originalName.replace(/(_[a-zA-Z])/g, function(e) {
return e.toUpperCase().replace("_", "");
});
t = t.substring(0, 1).toUpperCase() + t.substring(1);
var n = e.originalName.replace(/([A-Z])/g, function(e) {
return "_" + e;
}), a = function(t, i) {
this[e.name] = i ? t : e.verifyValue(t);
return this;
}, o = function() {
return this[e.name];
};
null === i.getChild("set" + t) && (r["set" + t] = a);
null === i.getChild("set_" + n) && (r["set_" + n] = a);
null === i.getChild("get" + t) && (r["get" + t] = o);
null === i.getChild("get_" + n) && (r["get_" + n] = o);
}(l);
}
r.encode = function(e, n) {
"boolean" == typeof e && (n = e, e = void 0);
var a = !1;
e || (e = new t(), a = !0);
var o = e.littleEndian;
try {
i.encode(this, e.LE(), n);
return (a ? e.flip() : e).LE(o);
} catch (t) {
e.LE(o);
throw t;
}
};
s.encode = function(e, t, i) {
return new s(e).encode(t, i);
};
r.calculate = function() {
return i.calculate(this);
};
r.encodeDelimited = function(e, n) {
var a = !1;
e || (e = new t(), a = !0);
var o = new t().LE();
i.encode(this, o, n).flip();
e.writeVarint32(o.remaining());
e.append(o);
return a ? e.flip() : e;
};
r.encodeAB = function() {
try {
return this.encode().toArrayBuffer();
} catch (e) {
e.encoded && (e.encoded = e.encoded.toArrayBuffer());
throw e;
}
};
r.toArrayBuffer = r.encodeAB;
r.encodeNB = function() {
try {
return this.encode().toBuffer();
} catch (e) {
e.encoded && (e.encoded = e.encoded.toBuffer());
throw e;
}
};
r.toBuffer = r.encodeNB;
r.encode64 = function() {
try {
return this.encode().toBase64();
} catch (e) {
e.encoded && (e.encoded = e.encoded.toBase64());
throw e;
}
};
r.toBase64 = r.encode64;
r.encodeHex = function() {
try {
return this.encode().toHex();
} catch (e) {
e.encoded && (e.encoded = e.encoded.toHex());
throw e;
}
};
r.toHex = r.encodeHex;
function h(i, n, a, s) {
if (null === i || "object" !== ("undefined" == typeof i ? "undefined" : o(i))) {
if (s && s instanceof e.Reflect.Enum) {
var r = e.Reflect.Enum.getName(s.object, i);
if (null !== r) return r;
}
return i;
}
if (t.isByteBuffer(i)) return n ? i.toBase64() : i.toBuffer();
if (e.Long.isLong(i)) return a ? i.toString() : e.Long.fromValue(i);
var c;
if (Array.isArray(i)) {
c = [];
i.forEach(function(e, t) {
c[t] = h(e, n, a, s);
});
return c;
}
c = {};
if (i instanceof e.Map) {
for (var l = i.entries(), u = l.next(); !u.done; u = l.next()) c[i.keyElem.valueToString(u.value[0])] = h(u.value[1], n, a, i.valueElem.resolvedType);
return c;
}
var d = i.$type, m = void 0;
for (var f in i) i.hasOwnProperty(f) && (d && (m = d.getChild(f)) ? c[f] = h(i[f], n, a, m.resolvedType) : c[f] = h(i[f], n, a));
return c;
}
r.toRaw = function(e, t) {
return h(this, !!e, !!t, this.$type);
};
r.encodeJSON = function() {
return JSON.stringify(h(this, !0, !0, this.$type));
};
s.decode = function(e, n, a) {
"string" == typeof n && (a = n, n = -1);
"string" == typeof e ? e = t.wrap(e, a || "base64") : t.isByteBuffer(e) || (e = t.wrap(e));
var o = e.littleEndian;
try {
var s = i.decode(e.LE(), n);
e.LE(o);
return s;
} catch (t) {
e.LE(o);
throw t;
}
};
s.decodeDelimited = function(e, n) {
"string" == typeof e ? e = t.wrap(e, n || "base64") : t.isByteBuffer(e) || (e = t.wrap(e));
if (e.remaining() < 1) return null;
var a = e.offset, o = e.readVarint32();
if (e.remaining() < o) {
e.offset = a;
return null;
}
try {
var s = i.decode(e.slice(e.offset, e.offset + o).LE());
e.offset += o;
return s;
} catch (t) {
e.offset += o;
throw t;
}
};
s.decode64 = function(e) {
return s.decode(e, "base64");
};
s.decodeHex = function(e) {
return s.decode(e, "hex");
};
s.decodeJSON = function(e) {
return new s(JSON.parse(e));
};
r.toString = function() {
return i.toString();
};
Object.defineProperty && (Object.defineProperty(s, "$options", {
value: i.buildOpt()
}), Object.defineProperty(r, "$options", {
value: s.$options
}), Object.defineProperty(s, "$type", {
value: i
}), Object.defineProperty(r, "$type", {
value: i
}));
return s;
}(e, this);
this._fields = [];
this._fieldsById = {};
this._fieldsByName = {};
this._oneofsByName = {};
for (var a, s = 0, r = this.children.length; s < r; s++) if ((a = this.children[s]) instanceof S || a instanceof u || a instanceof w) {
if (n.hasOwnProperty(a.name)) throw Error("Illegal reflect child of " + this.toString(!0) + ": " + a.toString(!0) + " cannot override static property '" + a.name + "'");
n[a.name] = a.build();
} else if (a instanceof u.Field) a.build(), this._fields.push(a), this._fieldsById[a.id] = a, 
this._fieldsByName[a.name] = a; else if (a instanceof u.OneOf) this._oneofsByName[a.name] = a; else if (!(a instanceof u.OneOf || a instanceof C)) throw Error("Illegal reflect child of " + this.toString(!0) + ": " + this.children[s].toString(!0));
return this.clazz = n;
};
d.encode = function(e, t, i) {
for (var n, a, o = null, s = 0, r = this._fields.length; s < r; ++s) {
a = e[(n = this._fields[s]).name];
n.required && null === a ? null === o && (o = n) : n.encode(i ? a : n.verifyValue(a), t, e);
}
if (null !== o) {
var c = Error("Missing at least one required field for " + this.toString(!0) + ": " + o);
c.encoded = t;
throw c;
}
return t;
};
d.calculate = function(e) {
for (var t, i, n = 0, a = 0, o = this._fields.length; a < o; ++a) {
i = e[(t = this._fields[a]).name];
if (t.required && null === i) throw Error("Missing at least one required field for " + this.toString(!0) + ": " + t);
n += t.calculate(i, e);
}
return n;
};
function m(t, i) {
var n = i.readVarint32(), a = 7 & n, o = n >>> 3;
switch (a) {
case e.WIRE_TYPES.VARINT:
for (;128 == (128 & (n = i.readUint8())); ) ;
break;

case e.WIRE_TYPES.BITS64:
i.offset += 8;
break;

case e.WIRE_TYPES.LDELIM:
n = i.readVarint32();
i.offset += n;
break;

case e.WIRE_TYPES.STARTGROUP:
m(o, i);
break;

case e.WIRE_TYPES.ENDGROUP:
if (o === t) return !1;
throw Error("Illegal GROUPEND after unknown group: " + o + " (" + t + " expected)");

case e.WIRE_TYPES.BITS32:
i.offset += 4;
break;

default:
throw Error("Illegal wire type in unknown group " + t + ": " + a);
}
return !0;
}
d.decode = function(t, i, n) {
"number" != typeof i && (i = -1);
for (var a, o, s, r, c = t.offset, l = new this.clazz(); t.offset < c + i || -1 === i && t.remaining() > 0; ) {
s = (a = t.readVarint32()) >>> 3;
if ((o = 7 & a) === e.WIRE_TYPES.ENDGROUP) {
if (s !== n) throw Error("Illegal group end indicator for " + this.toString(!0) + ": " + s + " (" + (n ? n + " expected" : "not a group") + ")");
break;
}
if (r = this._fieldsById[s]) if (r.repeated && !r.options.packed) l[r.name].push(r.decode(o, t)); else if (r.map) {
var h = r.decode(o, t);
l[r.name].set(h[0], h[1]);
} else {
l[r.name] = r.decode(o, t);
if (r.oneof) {
var u = l[r.oneof.name];
null !== u && u !== r.name && (l[u] = null);
l[r.oneof.name] = r.name;
}
} else switch (o) {
case e.WIRE_TYPES.VARINT:
t.readVarint32();
break;

case e.WIRE_TYPES.BITS32:
t.offset += 4;
break;

case e.WIRE_TYPES.BITS64:
t.offset += 8;
break;

case e.WIRE_TYPES.LDELIM:
var d = t.readVarint32();
t.offset += d;
break;

case e.WIRE_TYPES.STARTGROUP:
for (;m(s, t); ) ;
break;

default:
throw Error("Illegal wire type for unknown field " + s + " in " + this.toString(!0) + "#decode: " + o);
}
}
for (var f = 0, p = this._fields.length; f < p; ++f) if (null === l[(r = this._fields[f]).name]) if ("proto3" === this.syntax) l[r.name] = r.defaultValue; else {
if (r.required) {
var _ = Error("Missing at least one required field for " + this.toString(!0) + ": " + r.name);
_.decoded = l;
throw _;
}
e.populateDefaults && null !== r.defaultValue && (l[r.name] = r.defaultValue);
}
return l;
};
i.Message = u;
var f = function(t, i, a, o, s, r, c, l, h, d) {
n.call(this, t, i, r);
this.className = "Message.Field";
this.required = "required" === a;
this.repeated = "repeated" === a;
this.map = "map" === a;
this.keyType = o || null;
this.type = s;
this.resolvedType = null;
this.id = c;
this.options = l || {};
this.defaultValue = null;
this.oneof = h || null;
this.syntax = d || "proto2";
this.originalName = this.name;
this.element = null;
this.keyElement = null;
!this.builder.options.convertFieldsToCamelCase || this instanceof u.ExtensionField || (this.name = e.Util.toCamelCase(this.name));
}, p = f.prototype = Object.create(n.prototype);
p.build = function() {
this.element = new c(this.type, this.resolvedType, !1, this.syntax, this.name);
this.map && (this.keyElement = new c(this.keyType, void 0, !0, this.syntax, this.name));
"proto3" !== this.syntax || this.repeated || this.map ? "undefined" != typeof this.options.default && (this.defaultValue = this.verifyValue(this.options.default)) : this.defaultValue = c.defaultFieldValue(this.type);
};
p.verifyValue = function(t, i) {
i = i || !1;
var n, a = this;
function s(e, t) {
throw Error("Illegal value for " + a.toString(!0) + " of type " + a.type.name + ": " + e + " (" + t + ")");
}
if (null === t) {
this.required && s("undefined" == typeof t ? "undefined" : o(t), "required");
"proto3" === this.syntax && this.type !== e.TYPES.message && s("undefined" == typeof t ? "undefined" : o(t), "proto3 field without field presence cannot be null");
return null;
}
if (this.repeated && !i) {
Array.isArray(t) || (t = [ t ]);
var r = [];
for (n = 0; n < t.length; n++) r.push(this.element.verifyValue(t[n]));
return r;
}
if (this.map && !i) {
if (t instanceof e.Map) return t;
t instanceof Object || s("undefined" == typeof t ? "undefined" : o(t), "expected ProtoBuf.Map or raw object for map field");
return new e.Map(this, t);
}
!this.repeated && Array.isArray(t) && s("undefined" == typeof t ? "undefined" : o(t), "no array expected");
return this.element.verifyValue(t);
};
p.hasWirePresence = function(t, i) {
if ("proto3" !== this.syntax) return null !== t;
if (this.oneof && i[this.oneof.name] === this.name) return !0;
switch (this.type) {
case e.TYPES.int32:
case e.TYPES.sint32:
case e.TYPES.sfixed32:
case e.TYPES.uint32:
case e.TYPES.fixed32:
return 0 !== t;

case e.TYPES.int64:
case e.TYPES.sint64:
case e.TYPES.sfixed64:
case e.TYPES.uint64:
case e.TYPES.fixed64:
return 0 !== t.low || 0 !== t.high;

case e.TYPES.bool:
return t;

case e.TYPES.float:
case e.TYPES.double:
return 0 !== t;

case e.TYPES.string:
return t.length > 0;

case e.TYPES.bytes:
return t.remaining() > 0;

case e.TYPES.enum:
return 0 !== t;

case e.TYPES.message:
return null !== t;

default:
return !0;
}
};
p.encode = function(i, n, a) {
if (null === this.type || "object" !== o(this.type)) throw Error("[INTERNAL] Unresolved type in " + this.toString(!0) + ": " + this.type);
if (null === i || this.repeated && 0 == i.length) return n;
try {
if (this.repeated) {
var s;
if (this.options.packed && e.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {
n.writeVarint32(this.id << 3 | e.WIRE_TYPES.LDELIM);
n.ensureCapacity(n.offset += 1);
var r = n.offset;
for (s = 0; s < i.length; s++) this.element.encodeValue(this.id, i[s], n);
var c = n.offset - r, l = t.calculateVarint32(c);
if (l > 1) {
var h = n.slice(r, n.offset);
r += l - 1;
n.offset = r;
n.append(h);
}
n.writeVarint32(c, r - l);
} else for (s = 0; s < i.length; s++) n.writeVarint32(this.id << 3 | this.type.wireType), 
this.element.encodeValue(this.id, i[s], n);
} else if (this.map) i.forEach(function(i, a, o) {
var s = t.calculateVarint32(8 | this.keyType.wireType) + this.keyElement.calculateLength(1, a) + t.calculateVarint32(16 | this.type.wireType) + this.element.calculateLength(2, i);
n.writeVarint32(this.id << 3 | e.WIRE_TYPES.LDELIM);
n.writeVarint32(s);
n.writeVarint32(8 | this.keyType.wireType);
this.keyElement.encodeValue(1, a, n);
n.writeVarint32(16 | this.type.wireType);
this.element.encodeValue(2, i, n);
}, this); else if (this.hasWirePresence(i, a)) {
n.writeVarint32(this.id << 3 | this.type.wireType);
this.element.encodeValue(this.id, i, n);
}
} catch (e) {
throw Error("Illegal value for " + this.toString(!0) + ": " + i + " (" + e + ")");
}
return n;
};
p.calculate = function(i, n) {
i = this.verifyValue(i);
if (null === this.type || "object" !== o(this.type)) throw Error("[INTERNAL] Unresolved type in " + this.toString(!0) + ": " + this.type);
if (null === i || this.repeated && 0 == i.length) return 0;
var a = 0;
try {
if (this.repeated) {
var s, r;
if (this.options.packed && e.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {
a += t.calculateVarint32(this.id << 3 | e.WIRE_TYPES.LDELIM);
r = 0;
for (s = 0; s < i.length; s++) r += this.element.calculateLength(this.id, i[s]);
a += t.calculateVarint32(r);
a += r;
} else for (s = 0; s < i.length; s++) a += t.calculateVarint32(this.id << 3 | this.type.wireType), 
a += this.element.calculateLength(this.id, i[s]);
} else if (this.map) i.forEach(function(i, n, o) {
var s = t.calculateVarint32(8 | this.keyType.wireType) + this.keyElement.calculateLength(1, n) + t.calculateVarint32(16 | this.type.wireType) + this.element.calculateLength(2, i);
a += t.calculateVarint32(this.id << 3 | e.WIRE_TYPES.LDELIM);
a += t.calculateVarint32(s);
a += s;
}, this); else if (this.hasWirePresence(i, n)) {
a += t.calculateVarint32(this.id << 3 | this.type.wireType);
a += this.element.calculateLength(this.id, i);
}
} catch (e) {
throw Error("Illegal value for " + this.toString(!0) + ": " + i + " (" + e + ")");
}
return a;
};
p.decode = function(t, i, n) {
var a, o;
if (!(!this.map && t == this.type.wireType || !n && this.repeated && this.options.packed && t == e.WIRE_TYPES.LDELIM || this.map && t == e.WIRE_TYPES.LDELIM)) throw Error("Illegal wire type for field " + this.toString(!0) + ": " + t + " (" + this.type.wireType + " expected)");
if (t == e.WIRE_TYPES.LDELIM && this.repeated && this.options.packed && e.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0 && !n) {
o = i.readVarint32();
o = i.offset + o;
for (var s = []; i.offset < o; ) s.push(this.decode(this.type.wireType, i, !0));
return s;
}
if (this.map) {
var r = c.defaultFieldValue(this.keyType);
a = c.defaultFieldValue(this.type);
o = i.readVarint32();
if (i.remaining() < o) throw Error("Illegal number of bytes for " + this.toString(!0) + ": " + o + " required but got only " + i.remaining());
var l = i.clone();
l.limit = l.offset + o;
i.offset += o;
for (;l.remaining() > 0; ) {
var h = l.readVarint32();
t = 7 & h;
var u = h >>> 3;
if (1 === u) r = this.keyElement.decode(l, t, u); else {
if (2 !== u) throw Error("Unexpected tag in map field key/value submessage");
a = this.element.decode(l, t, u);
}
}
return [ r, a ];
}
return this.element.decode(i, t, this.id);
};
i.Message.Field = f;
var _ = function(e, t, i, n, a, o, s) {
f.call(this, e, t, i, null, n, a, o, s);
this.extension;
};
_.prototype = Object.create(f.prototype);
i.Message.ExtensionField = _;
i.Message.OneOf = function(e, t, i) {
n.call(this, e, t, i);
this.fields = [];
};
var S = function(e, t, i, n, a) {
s.call(this, e, t, i, n, a);
this.className = "Enum";
this.object = null;
};
S.getName = function(e, t) {
for (var i, n = Object.keys(e), a = 0; a < n.length; ++a) if (e[i = n[a]] === t) return i;
return null;
};
(S.prototype = Object.create(s.prototype)).build = function(t) {
if (this.object && !t) return this.object;
for (var i = new e.Builder.Enum(), n = this.getChildren(S.Value), a = 0, o = n.length; a < o; ++a) i[n[a].name] = n[a].id;
Object.defineProperty && Object.defineProperty(i, "$options", {
value: this.buildOpt(),
enumerable: !1
});
return this.object = i;
};
i.Enum = S;
var g = function(e, t, i, a) {
n.call(this, e, t, i);
this.className = "Enum.Value";
this.id = a;
};
g.prototype = Object.create(n.prototype);
i.Enum.Value = g;
var C = function(e, t, i, a) {
n.call(this, e, t, i);
this.field = a;
};
C.prototype = Object.create(n.prototype);
i.Extension = C;
var w = function(e, t, i, n) {
s.call(this, e, t, i, n);
this.className = "Service";
this.clazz = null;
};
(w.prototype = Object.create(s.prototype)).build = function(i) {
return this.clazz && !i ? this.clazz : this.clazz = function(e, i) {
for (var n = function(t) {
e.Builder.Service.call(this);
this.rpcImpl = t || function(e, t, i) {
setTimeout(i.bind(this, Error("Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services")), 0);
};
}, a = n.prototype = Object.create(e.Builder.Service.prototype), s = i.getChildren(e.Reflect.Service.RPCMethod), r = 0; r < s.length; r++) (function(e) {
a[e.name] = function(n, a) {
try {
try {
n = e.resolvedRequestType.clazz.decode(t.wrap(n));
} catch (e) {
if (!(e instanceof TypeError)) throw e;
}
if (null === n || "object" !== ("undefined" == typeof n ? "undefined" : o(n))) throw Error("Illegal arguments");
n instanceof e.resolvedRequestType.clazz || (n = new e.resolvedRequestType.clazz(n));
this.rpcImpl(e.fqn(), n, function(t, n) {
if (t) a(t); else {
null === n && (n = "");
try {
n = e.resolvedResponseType.clazz.decode(n);
} catch (e) {}
n && n instanceof e.resolvedResponseType.clazz ? a(null, n) : a(Error("Illegal response type received in service method " + i.name + "#" + e.name));
}
});
} catch (e) {
setTimeout(a.bind(this, e), 0);
}
};
n[e.name] = function(t, i, a) {
new n(t)[e.name](i, a);
};
Object.defineProperty && (Object.defineProperty(n[e.name], "$options", {
value: e.buildOpt()
}), Object.defineProperty(a[e.name], "$options", {
value: n[e.name].$options
}));
})(s[r]);
Object.defineProperty && (Object.defineProperty(n, "$options", {
value: i.buildOpt()
}), Object.defineProperty(a, "$options", {
value: n.$options
}), Object.defineProperty(n, "$type", {
value: i
}), Object.defineProperty(a, "$type", {
value: i
}));
return n;
}(e, this);
};
i.Service = w;
var b = function(e, t, i, a) {
n.call(this, e, t, i);
this.className = "Service.Method";
this.options = a || {};
};
(b.prototype = Object.create(n.prototype)).buildOpt = r.buildOpt;
i.Service.Method = b;
var A = function(e, t, i, n, a, o, s, r) {
b.call(this, e, t, i, r);
this.className = "Service.RPCMethod";
this.requestName = n;
this.responseName = a;
this.requestStream = o;
this.responseStream = s;
this.resolvedRequestType = null;
this.resolvedResponseType = null;
};
A.prototype = Object.create(b.prototype);
i.Service.RPCMethod = A;
return i;
}(a);
a.Builder = function(t, i, n) {
var a = function(e) {
this.ns = new n.Namespace(this, null, "");
this.ptr = this.ns;
this.resolved = !1;
this.result = null;
this.files = {};
this.importRoot = null;
this.options = e || {};
}, s = a.prototype;
a.isMessage = function(e) {
return "string" == typeof e.name && ("undefined" == typeof e.values && "undefined" == typeof e.rpc);
};
a.isMessageField = function(e) {
return "string" == typeof e.rule && "string" == typeof e.name && "string" == typeof e.type && "undefined" != typeof e.id;
};
a.isEnum = function(e) {
return "string" == typeof e.name && !("undefined" == typeof e.values || !Array.isArray(e.values) || 0 === e.values.length);
};
a.isService = function(e) {
return !("string" != typeof e.name || "object" !== o(e.rpc) || !e.rpc);
};
a.isExtend = function(e) {
return "string" == typeof e.ref;
};
s.reset = function() {
this.ptr = this.ns;
return this;
};
s.define = function(e) {
if ("string" != typeof e || !i.TYPEREF.test(e)) throw Error("illegal namespace: " + e);
e.split(".").forEach(function(e) {
var t = this.ptr.getChild(e);
null === t && this.ptr.addChild(t = new n.Namespace(this, this.ptr, e));
this.ptr = t;
}, this);
return this;
};
s.create = function(e) {
if (!e) return this;
if (Array.isArray(e)) {
if (0 === e.length) return this;
e = e.slice();
} else e = [ e ];
for (var i = [ e ]; i.length > 0; ) {
e = i.pop();
if (!Array.isArray(e)) throw Error("not a valid namespace: " + JSON.stringify(e));
for (;e.length > 0; ) {
var s = e.shift();
if (a.isMessage(s)) {
var r = new n.Message(this, this.ptr, s.name, s.options, s.isGroup, s.syntax), c = {};
s.oneofs && Object.keys(s.oneofs).forEach(function(e) {
r.addChild(c[e] = new n.Message.OneOf(this, r, e));
}, this);
s.fields && s.fields.forEach(function(e) {
if (null !== r.getChild(0 | e.id)) throw Error("duplicate or invalid field id in " + r.name + ": " + e.id);
if (e.options && "object" !== o(e.options)) throw Error("illegal field options in " + r.name + "#" + e.name);
var t = null;
if ("string" == typeof e.oneof && !(t = c[e.oneof])) throw Error("illegal oneof in " + r.name + "#" + e.name + ": " + e.oneof);
e = new n.Message.Field(this, r, e.rule, e.keytype, e.type, e.name, e.id, e.options, t, s.syntax);
t && t.fields.push(e);
r.addChild(e);
}, this);
var l = [];
s.enums && s.enums.forEach(function(e) {
l.push(e);
});
s.messages && s.messages.forEach(function(e) {
l.push(e);
});
s.services && s.services.forEach(function(e) {
l.push(e);
});
s.extensions && ("number" == typeof s.extensions[0] ? r.extensions = [ s.extensions ] : r.extensions = s.extensions);
this.ptr.addChild(r);
if (l.length > 0) {
i.push(e);
e = l;
l = null;
this.ptr = r;
r = null;
continue;
}
l = null;
} else if (a.isEnum(s)) {
r = new n.Enum(this, this.ptr, s.name, s.options, s.syntax);
s.values.forEach(function(e) {
r.addChild(new n.Enum.Value(this, r, e.name, e.id));
}, this);
this.ptr.addChild(r);
} else if (a.isService(s)) {
r = new n.Service(this, this.ptr, s.name, s.options);
Object.keys(s.rpc).forEach(function(e) {
var t = s.rpc[e];
r.addChild(new n.Service.RPCMethod(this, r, e, t.request, t.response, !!t.request_stream, !!t.response_stream, t.options));
}, this);
this.ptr.addChild(r);
} else {
if (!a.isExtend(s)) throw Error("not a valid definition: " + JSON.stringify(s));
if (r = this.ptr.resolve(s.ref, !0)) s.fields.forEach(function(e) {
if (null !== r.getChild(0 | e.id)) throw Error("duplicate extended field id in " + r.name + ": " + e.id);
if (r.extensions) {
var i = !1;
r.extensions.forEach(function(t) {
e.id >= t[0] && e.id <= t[1] && (i = !0);
});
if (!i) throw Error("illegal extended field id in " + r.name + ": " + e.id + " (not within valid ranges)");
}
var a = e.name;
this.options.convertFieldsToCamelCase && (a = t.Util.toCamelCase(a));
var o = new n.Message.ExtensionField(this, r, e.rule, e.type, this.ptr.fqn() + "." + a, e.id, e.options), s = new n.Extension(this, this.ptr, e.name, o);
o.extension = s;
this.ptr.addChild(s);
r.addChild(o);
}, this); else if (!/\.?google\.protobuf\./.test(s.ref)) throw Error("extended message " + s.ref + " is not defined");
}
s = null;
r = null;
}
e = null;
this.ptr = this.ptr.parent;
}
this.resolved = !1;
this.result = null;
return this;
};
s.import = function(i, n) {
var a = "/";
if ("string" == typeof n) {
t.Util.IS_NODE && (n = e("path").resolve(n));
if (!0 === this.files[n]) return this.reset();
this.files[n] = !0;
} else if ("object" === ("undefined" == typeof n ? "undefined" : o(n))) {
var s, r = n.root;
t.Util.IS_NODE && (r = e("path").resolve(r));
(r.indexOf("\\") >= 0 || n.file.indexOf("\\") >= 0) && (a = "\\");
s = t.Util.IS_NODE ? e("path").join(r, n.file) : r + a + n.file;
if (!0 === this.files[s]) return this.reset();
this.files[s] = !0;
}
if (i.imports && i.imports.length > 0) {
var c, l = !1;
if ("object" === ("undefined" == typeof n ? "undefined" : o(n))) {
this.importRoot = n.root;
l = !0;
c = this.importRoot;
n = n.file;
(c.indexOf("\\") >= 0 || n.indexOf("\\") >= 0) && (a = "\\");
} else if ("string" == typeof n) if (this.importRoot) c = this.importRoot; else if (n.indexOf("/") >= 0) "" === (c = n.replace(/\/[^\/]*$/, "")) && (c = "/"); else if (n.indexOf("\\") >= 0) {
c = n.replace(/\\[^\\]*$/, "");
a = "\\";
} else c = "."; else c = null;
for (var h = 0; h < i.imports.length; h++) if ("string" == typeof i.imports[h]) {
if (!c) throw Error("cannot determine import root");
var u = i.imports[h];
if ("google/protobuf/descriptor.proto" === u) continue;
u = t.Util.IS_NODE ? e("path").join(c, u) : c + a + u;
if (!0 === this.files[u]) continue;
/\.proto$/i.test(u) && !t.DotProto && (u = u.replace(/\.proto$/, ".json"));
var d = t.Util.fetch(u);
if (null === d) throw Error("failed to import '" + u + "' in '" + n + "': file not found");
/\.json$/i.test(u) ? this.import(JSON.parse(d + ""), u) : this.import(t.DotProto.Parser.parse(d), u);
} else n ? /\.(\w+)$/.test(n) ? this.import(i.imports[h], n.replace(/^(.+)\.(\w+)$/, function(e, t, i) {
return t + "_import" + h + "." + i;
})) : this.import(i.imports[h], n + "_import" + h) : this.import(i.imports[h]);
l && (this.importRoot = null);
}
i.package && this.define(i.package);
i.syntax && function e(t) {
t.messages && t.messages.forEach(function(i) {
i.syntax = t.syntax;
e(i);
});
t.enums && t.enums.forEach(function(e) {
e.syntax = t.syntax;
});
}(i);
var m = this.ptr;
i.options && Object.keys(i.options).forEach(function(e) {
m.options[e] = i.options[e];
});
i.messages && (this.create(i.messages), this.ptr = m);
i.enums && (this.create(i.enums), this.ptr = m);
i.services && (this.create(i.services), this.ptr = m);
i.extends && this.create(i.extends);
return this.reset();
};
s.resolveAll = function() {
var e;
if (null == this.ptr || "object" === o(this.ptr.type)) return this;
if (this.ptr instanceof n.Namespace) this.ptr.children.forEach(function(e) {
this.ptr = e;
this.resolveAll();
}, this); else if (this.ptr instanceof n.Message.Field) {
if (i.TYPE.test(this.ptr.type)) this.ptr.type = t.TYPES[this.ptr.type]; else {
if (!i.TYPEREF.test(this.ptr.type)) throw Error("illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);
if (!(e = (this.ptr instanceof n.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, !0))) throw Error("unresolvable type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);
this.ptr.resolvedType = e;
if (e instanceof n.Enum) {
this.ptr.type = t.TYPES.enum;
if ("proto3" === this.ptr.syntax && "proto3" !== e.syntax) throw Error("proto3 message cannot reference proto2 enum");
} else {
if (!(e instanceof n.Message)) throw Error("illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.type);
this.ptr.type = e.isGroup ? t.TYPES.group : t.TYPES.message;
}
}
if (this.ptr.map) {
if (!i.TYPE.test(this.ptr.keyType)) throw Error("illegal key type for map field in " + this.ptr.toString(!0) + ": " + this.ptr.keyType);
this.ptr.keyType = t.TYPES[this.ptr.keyType];
}
"proto3" === this.ptr.syntax && this.ptr.repeated && void 0 === this.ptr.options.packed && -1 !== t.PACKABLE_WIRE_TYPES.indexOf(this.ptr.type.wireType) && (this.ptr.options.packed = !0);
} else if (this.ptr instanceof t.Reflect.Service.Method) {
if (!(this.ptr instanceof t.Reflect.Service.RPCMethod)) throw Error("illegal service type in " + this.ptr.toString(!0));
if (!((e = this.ptr.parent.resolve(this.ptr.requestName, !0)) && e instanceof t.Reflect.Message)) throw Error("Illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.requestName);
this.ptr.resolvedRequestType = e;
if (!((e = this.ptr.parent.resolve(this.ptr.responseName, !0)) && e instanceof t.Reflect.Message)) throw Error("Illegal type reference in " + this.ptr.toString(!0) + ": " + this.ptr.responseName);
this.ptr.resolvedResponseType = e;
} else if (!(this.ptr instanceof t.Reflect.Message.OneOf || this.ptr instanceof t.Reflect.Extension || this.ptr instanceof t.Reflect.Enum.Value)) throw Error("illegal object in namespace: " + o(this.ptr) + ": " + this.ptr);
return this.reset();
};
s.build = function(e) {
this.reset();
this.resolved || (this.resolveAll(), this.resolved = !0, this.result = null);
null === this.result && (this.result = this.ns.build());
if (!e) return this.result;
for (var t = "string" == typeof e ? e.split(".") : e, i = this.result, n = 0; n < t.length; n++) {
if (!i[t[n]]) {
i = null;
break;
}
i = i[t[n]];
}
return i;
};
s.lookup = function(e, t) {
return e ? this.ns.resolve(e, t) : this.ns;
};
s.toString = function() {
return "Builder";
};
a.Message = function() {};
a.Enum = function() {};
a.Service = function() {};
return a;
}(a, a.Lang, a.Reflect);
a.Map = function(e, t) {
var i = function(e, i) {
if (!e.map) throw Error("field is not a map");
this.field = e;
this.keyElem = new t.Element(e.keyType, null, !0, e.syntax);
this.valueElem = new t.Element(e.type, e.resolvedType, !1, e.syntax);
this.map = {};
Object.defineProperty(this, "size", {
get: function() {
return Object.keys(this.map).length;
}
});
if (i) for (var n = Object.keys(i), a = 0; a < n.length; a++) {
var o = this.keyElem.valueFromString(n[a]), s = this.valueElem.verifyValue(i[n[a]]);
this.map[this.keyElem.valueToString(o)] = {
key: o,
value: s
};
}
}, n = i.prototype;
function a(e) {
var t = 0;
return {
next: function() {
return t < e.length ? {
done: !1,
value: e[t++]
} : {
done: !0
};
}
};
}
n.clear = function() {
this.map = {};
};
n.delete = function(e) {
var t = this.keyElem.valueToString(this.keyElem.verifyValue(e)), i = t in this.map;
delete this.map[t];
return i;
};
n.entries = function() {
for (var e, t = [], i = Object.keys(this.map), n = 0; n < i.length; n++) t.push([ (e = this.map[i[n]]).key, e.value ]);
return a(t);
};
n.keys = function() {
for (var e = [], t = Object.keys(this.map), i = 0; i < t.length; i++) e.push(this.map[t[i]].key);
return a(e);
};
n.values = function() {
for (var e = [], t = Object.keys(this.map), i = 0; i < t.length; i++) e.push(this.map[t[i]].value);
return a(e);
};
n.forEach = function(e, t) {
for (var i, n = Object.keys(this.map), a = 0; a < n.length; a++) e.call(t, (i = this.map[n[a]]).value, i.key, this);
};
n.set = function(e, t) {
var i = this.keyElem.verifyValue(e), n = this.valueElem.verifyValue(t);
this.map[this.keyElem.valueToString(i)] = {
key: i,
value: n
};
return this;
};
n.get = function(e) {
var t = this.keyElem.valueToString(this.keyElem.verifyValue(e));
if (t in this.map) return this.map[t].value;
};
n.has = function(e) {
return this.keyElem.valueToString(this.keyElem.verifyValue(e)) in this.map;
};
return i;
}(0, a.Reflect);
a.loadProto = function(e, t, i) {
("string" == typeof t || t && "string" == typeof t.file && "string" == typeof t.root) && (i = t, 
t = void 0);
return a.loadJson(a.DotProto.Parser.parse(e), t, i);
};
a.protoFromString = a.loadProto;
a.Util.IS_NODE = cc.sys.isNative;
a.loadProtoFile = function(e, t, i) {
t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) ? (i = t, t = null) : t && "function" == typeof t || (t = null);
if (t) return cc.loader.loadRes(e, function(n, o) {
if (null !== o) try {
t(n, a.loadProto(o, i, e));
} catch (e) {
t(e);
} else t(Error("Failed to fetch file"));
});
};
a.protoFromFile = a.loadProtoFile;
a.newBuilder = function(e) {
"undefined" == typeof (e = e || {}).convertFieldsToCamelCase && (e.convertFieldsToCamelCase = a.convertFieldsToCamelCase);
"undefined" == typeof e.populateAccessors && (e.populateAccessors = a.populateAccessors);
return new a.Builder(e);
};
a.loadJson = function(e, t, i) {
("string" == typeof t || t && "string" == typeof t.file && "string" == typeof t.root) && (i = t, 
t = null);
t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) || (t = a.newBuilder());
"string" == typeof e && (e = JSON.parse(e));
t.import(e, i);
t.resolveAll();
return t;
};
a.loadJsonFile = function(e, t, i) {
t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) ? (i = t, t = null) : t && "function" == typeof t || (t = null);
if (t) return a.Util.fetch("string" == typeof e ? e : e.root + "/" + e.file, function(n) {
if (null !== n) try {
t(null, a.loadJson(JSON.parse(n), i, e));
} catch (e) {
t(e);
} else t(Error("Failed to fetch file"));
});
var n = a.Util.fetch("object" === ("undefined" == typeof e ? "undefined" : o(e)) ? e.root + "/" + e.file : e);
return null === n ? null : a.loadJson(JSON.parse(n), i, e);
};
return a;
}, "function" == typeof define && define.amd ? define([ "bytebuffer" ], a) : "function" == typeof e && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && t && t.exports ? t.exports = a(e("bytebuffer")) : (n.dcodeIO = n.dcodeIO || {}).ProtoBuf = a(n.dcodeIO.ByteBuffer);
cc._RF.pop();
}).call(this, e("_process"));
}, {
_process: 3,
bytebuffer: "bytebuffer",
fs: void 0,
path: 2
} ],
rankItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8f8c0lU50lKYrzi91/ogLR9", "rankItem");
var n = [ cc.color(255, 129, 0), cc.color(250, 103, 33), cc.color(250, 76, 42), cc.color(248, 66, 45), cc.color(248, 42, 54) ];
cc.Class({
extends: cc.Component,
properties: {
timeLabel: cc.Label,
nameLabel: cc.Label,
winLabel: cc.Label,
mulNode: cc.Node,
mulLabel: cc.Label
},
start: function() {},
setData: function(e) {
if (e) {
var t = new Date(1e3 * e.CashOutTime), i = t.getMonth() + 1, a = t.getDate() + " ", o = t.getHours() < 10 ? "0" + t.getHours() : t.getHours(), s = t.getMinutes() < 10 ? "0" + t.getMinutes() : t.getMinutes();
this.timeLabel.string = i + "/" + a + "  " + o + ":" + s;
this.nameLabel.string = e.UserName;
this.winLabel.string = OnScoreToString(e.WinScore);
var r = 0, c = e.WinMultiple / 100;
r = c <= .5 ? 0 : c <= 1 ? 1 : c <= 2 ? 2 : c <= 5 ? 3 : 4;
this.mulNode.color = n[r];
this.mulLabel.string = e.WinMultiple / 100 + "x";
}
}
});
cc._RF.pop();
}, {} ],
result: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "daf3c9lTlRLFrnHurGSUGEJ", "result");
cc.Class({
extends: cc.Component,
properties: {
numNode: cc.Node,
retNode: cc.Node,
retFarme: [ cc.SpriteFrame ],
scoreNum: cc.Node
},
start: function() {},
setData: function(e, t, i) {
this.indexTag = i;
this.main = t;
this.MultiplesNum = e;
this.numNode && (this.numNode.getComponent(cc.Label).string = e + "x");
var n = 0;
n = e <= .5 ? 0 : e <= 1 ? 1 : e <= 2 ? 2 : e <= 5 ? 3 : 4;
this.retNode && (this.retNode.getComponent(cc.Sprite).spriteFrame = this.retFarme[n]);
},
playScoreShow: function(e) {
this.scoreNum.active = !0;
this.scoreNum.getComponent(cc.Label).string = "+" + OnScoreToString(e);
window.mfConfig.PlayAudio("301/Audio/Win", !1, window.mfConfig.fSound);
this.scoreNum.runAction(cc.sequence(cc.moveBy(.5, cc.p(0, 30)), cc.callFunc(function() {
this.scoreNum.active = !1;
this.scoreNum.y = 0;
}.bind(this))));
},
onBtnclick: function(e) {
this.main.doBet(e, this.MultiplesNum);
},
onCollisionEnter: function(e, t) {
var i = t.world;
i.aabb, i.preAabb, i.transform, i.radius, i.position, i.points;
window.mfConfig.PlayAudio("301/Audio/gameend", !1, window.mfConfig.fSound);
(this.indexTag || 0 == this.indexTag) && this.main.ballGameEnd(this.MultiplesNum, e.node.gameData, e.node, this.indexTag);
this.main.OnPutBall(e.node);
this.scoreNum && e.node.gameData && this.playScoreShow(e.node.gameData.WinGold);
},
onCollisionExit: function(e, t) {},
onCollisionStay: function(e, t) {}
});
cc._RF.pop();
}, {} ],
scoreItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7d73e4iihJG46U5/wdDvp/H", "scoreItem");
cc.Class({
extends: cc.Component,
properties: {
scoreNode: cc.Node
},
start: function() {},
setScore: function(e, t, i) {
this.nScore = e;
this.showScore = e;
this.nMul = t;
this.callBack = i;
this.scoreNode.getComponent(cc.Label).string = OnScoreToString(e);
this.scoreNode.scale = .4;
if (t > 1) {
this.scoreNode.runAction(cc.sequence(cc.scaleTo(.8, 1), cc.moveBy(1.5, cc.p(0, 40)), cc.callFunc(function() {
this.callBack && this.callBack();
}.bind(this))));
this.scheduleOnce(function() {
this.isUpdate = !0;
}.bind(this), 1);
} else this.scoreNode.runAction(cc.sequence(cc.scaleTo(.8, 1), cc.moveBy(.5, cc.p(0, 40)), cc.callFunc(function() {
this.callBack && this.callBack();
}.bind(this))));
},
update: function(e) {
if (this.isUpdate) {
this.showScore = this.showScore + this.nScore * this.nMul / 30;
if (this.showScore >= this.nScore * this.nMul) {
this.showScore = this.nScore * this.nMul;
this.isUpdate = !1;
}
this.scoreNode.getComponent(cc.Label).string = OnScoreToString(this.showScore);
}
}
});
cc._RF.pop();
}, {} ],
slot_line_control: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b6867IJl0NJJJXPjQboWT3b", "slot_line_control");
cc.Class({
extends: cc.Component,
properties: {
nodeLine: [ cc.Node ]
},
onLoad: function() {
this.lineID = [];
this.lineCount = 0;
this.lineIndex = 0;
},
initLineData: function(e, t, i) {
this.jsGameView = e;
this.lineID = this.lineID.concat(t);
this.lineCount = i;
},
playAllLines: function(e) {
for (var t = 0; t < this.lineCount; t++) {
var i = this.nodeLine[this.lineID[t] - 1];
i.active = !0;
this.playSkeletonAnimation(i, "animation");
}
this.scheduleOnce(function() {
e && e();
}, .6);
},
playLineAnim: function() {
this.playLineUpdate();
this.schedule(this.playLineUpdate, 1);
},
playLineUpdate: function() {
for (var e = 0; e < 50; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
var i = this.lineID[this.lineIndex], n = this.nodeLine[i - 1];
n.active = !0;
this.playSkeletonAnimation(n, "animation");
this.lineIndex++;
this.lineIndex >= this.lineCount && (this.lineIndex = 0);
},
stopAllLine: function() {
for (var e = 0; e < 50; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
},
resetLineInfo: function() {
for (var e = 0; e < 50; e++) {
var t = this.nodeLine[e];
t.active = !1;
this.stopSkeletonAnimation(t);
}
this.lineID.length = 0;
this.lineCount = 0;
this.lineIndex = 0;
this.unschedule(this.playLineUpdate);
},
playSkeletonAnimation: function(e, t) {
e.getComponent(sp.Skeleton).animation = t;
},
stopSkeletonAnimation: function(e) {
e.getComponent(sp.Skeleton).animation = "";
}
});
cc._RF.pop();
}, {} ],
slot_rule: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "30a73If23xN7KX9lz/AVDZ0", "slot_rule");
cc.Class({
extends: cc.Component,
properties: {
imgSelect: cc.Node,
btnRule: [ cc.Node ],
nodeRule: [ cc.Node ]
},
onLoad: function() {
this.colorSelect = cc.color(85, 50, 4);
this.colorUnselect = cc.color(255, 218, 47);
},
OnButtonEvent: function(e, t) {
var i = e.target.name;
cc.log(i);
if (0 == i.indexOf("btnRule")) {
var n = parseInt(t);
this.updatePage(n);
} else "btnClose" == i && this.node.destroy();
},
updatePage: function(e) {
cc.log(e);
this.imgSelect.setPosition(this.btnRule[e].getPosition());
for (var t = 0; t < 5; t++) {
cc.find("Label", this.btnRule[t]).color = this.colorUnselect;
this.nodeRule[t].active = !1;
}
cc.find("Label", this.btnRule[e]).color = this.colorSelect;
this.nodeRule[e].active = !0;
}
});
cc._RF.pop();
}, {} ],
wildItem: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "77154xC5LxCAZcWf39AGQOf", "wildItem");
e("os").endianness;
var n = [ "", "caimei", "chengzi", "shumei", "pingguo", "ximei", "shiliu" ];
cc.Class({
extends: cc.Component,
properties: {
iconNode: cc.Node,
betNode: cc.Node,
maskNode: cc.Node
},
start: function() {
this.SPEED_Y = 7;
this.betNum = 1;
this.iconNode.getComponent(sp.Skeleton).setCompleteListener(function(e, t, i) {
if ("P_pen" == e.animation.name) {
if (this.actCallBack) {
this.actCallBack();
this.actCallBack = null;
}
if (this.betNum > 1) {
var n = cc.instantiate(this.betNode);
n.getComponent(sp.Skeleton).animation = "jz" + this.betNum;
n.parent = this.betNode.parent;
n.runAction(cc.sequence(cc.scaleTo(.3, .6), cc.removeSelf()));
}
} else if ("P_tiao" == e.animation.name) {
this.betNum > 1 && (this.betNode.active = !0);
this.betNode.getComponent(sp.Skeleton).animation = "jz" + this.betNum;
} else if ("P_xuanzhuan" == e.animation.name && this.actCallBack) {
this.actCallBack();
this.actCallBack = null;
}
}.bind(this));
},
setFast: function(e) {
this.isFast = e;
},
showMask: function(e) {
this.maskNode.active = e;
},
maskFadePlay: function(e) {
if (e) {
this.maskNode.opacity = 0;
this.maskNode.runAction(cc.fadeIn(.3));
} else if (0 != this.maskNode) {
this.maskNode.opacity = 255;
this.maskNode.runAction(cc.fadeOut(.15));
}
},
setBet: function(e) {
this.betNum = e;
console.log(" setBet this.betNum = " + this.betNum);
this.betNum > 15 && (this.betNum = 15);
this.scheduleOnce(function() {
if (this.betNum > 1) {
this.betNode.active = !0;
this.betNode.getComponent(sp.Skeleton).animation = "jz" + this.betNum;
}
}.bind(this), .1);
},
updateBet: function(e) {
this.betNum = e;
this.betNum > 15 && (this.betNum = 15);
console.log("this.betNum = " + this.betNum);
},
quickStop: function(e) {
this.isQuickStop = e;
e && (this.SPEED_Y = 200);
},
setTagY: function(e, t) {
this.tagY = e || this.node.y;
this.isFast ? this.SPEED_Y = 40 : this.SPEED_Y = 7;
if (this.isQuickStop) {
this.isQuickStop = !1;
this.SPEED_Y = 200;
}
this.isMove = !0;
this.callbak = t;
},
setData: function(e) {
this.cellData = e;
this.updateView();
},
updateView: function() {
this.iconNode.getComponent(sp.Skeleton).defaultSkin = n[this.cellData.id - 1];
},
setAct: function(e, t, i, n) {
this.actCallBack = i;
this.iconNode.getComponent(sp.Skeleton).animation = e;
this.iconNode.getComponent(sp.Skeleton).loop = t || !1;
if ("P_tiao" == e) {
this.scheduleOnce(function() {
window.mfConfig.PlayAudio("302/Audio/sfx_jar_move", !1, window.mfConfig.fSound);
}, .3);
this.iconNode.getComponent(sp.Skeleton).loop = !1;
if (this.betNum > 1) {
this.betNode.getComponent(sp.Skeleton).animation = "bs" + this.betNum;
this.betNode.active = !0;
this.betNum = n;
this.betNum > 15 && (this.betNum = 15);
} else {
this.betNode.active = !1;
this.betNum = n;
this.betNum > 15 && (this.betNum = 15);
}
}
},
update: function(e) {
if (this.isMove) if (this.node.y <= this.tagY) {
this.isQuickStop = !1;
this.node.y = this.tagY;
this.isMove = !1;
if (this.callbak) {
this.callbak(this.node);
this.callbak = null;
}
this.SPEED_Y = 7;
} else {
this.node.y - this.SPEED_Y <= this.tagY ? this.node.y = this.tagY : this.node.y = this.node.y - this.SPEED_Y;
this.SPEED_Y = this.SPEED_Y + 1;
}
}
});
cc._RF.pop();
}, {
os: 1
} ]
}, {}, [ "jsButton", "jsButtonItem", "jsCanvasDesignResolution", "jsFrameUser", "jsGameKind", "jsGameNameItem", "jsHelpGameRule", "jsHelpGameRuleNew", "jsInputFormat", "jsLobbyFrameUser", "jsMagicQRCode", "jsPrefabHelp", "jsRectTimeDown", "jsScrollHelp", "jsSetCanvas", "jsSliderHelp", "jsSpriteHelp", "jsTextHelp", "jsTimeDown", "jsToggleHelp", "jsUserAgreement", "jsVideoControl", "ACMD_AStruct", "ACMD_AValue", "BDefine", "BPacket", "BPacketAide", "CMD_Commom", "CMD_GameServer", "CMD_GenericMatch", "CMD_LogonServer", "CMD_MsgService", "CMD_TaskLogic", "CMD_UserPack", "CMD_YQMatch", "LogSystem", "Property", "RightDefine", "ServerRule", "Struct", "ZApi_Include", "AASwitchConfig", "AAYQYArray", "ACardHelp", "ADispatcher", "AHelpEvent", "AHelpGame", "AHelpJsb", "AHelpNode", "APopHelper", "AProjectInfo", "AWindowEvent", "CrearGuid", "H5EventSDK", "IosEventResult", "ZApi_Protocol", "AServerListData", "GameDelegate", "GameSocket", "MissionLogon", "MissionService", "PlayerManager", "SceneManager", "ServerRoom", "ZApi_GameFrame", "GameFrameEngine", "GameFrameView", "CUpdateDef", "CUpdateHelp", "CUpdateManager", "CUpdateTask", "jsActivityNewYear", "jsActivityRecharge", "jsControlActivity", "jsControlBank", "jsControlCheckIn", "jsControlCheckInItem", "jsControlCommissionEEX", "jsControlCompetiton", "jsControlEmail", "jsBigAwardLaba", "jsBuoy", "jsCompetitionItem", "jsControlBankTakePw", "jsControlLogin", "jsControlPersionalInformation", "jsControlReplaceHead", "jsControlShouJiLogon", "jsControlUserChange", "jsCustomer", "jsDownGame", "jsEmailInfo", "jsEmailItem", "jsExCommisItem", "jsExLingquRecord", "jsExLingquRecordItem", "jsFirstTopUp", "jsGameGuide", "jsGoldAction", "jsLobbyGameField", "jsLobbyGameView", "jsModifyPassword", "jsPageVip", "jsPrompt", "jsRankItem", "jsRedBag", "jsSavePersonInfo", "jsShopItem", "jsShopRecordItem", "jsSysMsg", "jsWithdrawRecord", "jsWithdrawRecordItem", "jsControlLobby", "jsControlNotice", "jsControlNotify", "jsControlSetCenter", "jsControlShare", "jsControlShopBY", "jsControlUserInfo", "jsControlVipNew", "jsControlVipNewItem", "jsControlWithdraw", "jsGameEndScore", "jsHandCardTexture", "jsJetton", "jsJackPotAll", "jsJackPotAllItem", "jsLuckGuyNew", "jsLuckguyVerify", "jsLuckyChristmas", "jsMatchField", "jsOnlinePlayerItem", "jsOnlinePlayerList", "jsPlayerItem", "jsPlayerList", "jsProxy", "jsPullNew", "jsQuestionnaire", "jsRepair", "LayerNotify", "LogonScript", "Log", "BoxSerializer", "Net", "NetSerializer", "PBHelper", "bytebuffer", "long", "protobuf", "XHJ_CMD_Game", "XHJ_GameEngine", "XHJ_GameLuDan", "XHJ_GameRecord", "XHJ_GameTimeDown", "XHJ_GameView", "XHJ_InputBox", "XHJ_KeyBoard", "PYB_ActionHelp", "PYB_BetArea", "PYB_GameHistory", "PYB_GameRecordItem", "PYB_JPRule", "PYB_LuDan_DaLu", "PYB_LuDan_DaYanZaiLu", "PYB_LuDan_Next", "PYB_LuDan_XiaoLu", "PYB_LuDan_XiaoQiangLu", "PYB_LuDan_ZhuZaiLu", "PYB_Rule", "PYB_UserChat", "PYB_UserChatItem", "PYB_CMD_Game", "PYB_GameEngine", "PYB_GameView", "LHD_NewBetArea", "LHD_NewCardNode", "LHD_NewGameHistory", "LHD_NewGameRecordItem", "LHD_NewLuDan_DaLu", "LHD_NewLuDan_DaYanZaiLu", "LHD_NewLuDan_Next", "LHD_NewLuDan_XiaoLu", "LHD_NewLuDan_XiaoQiangLu", "LHD_NewLuDan_ZhuZaiLu", "LHD_NewUserChat", "LHD_NewUserChatItem", "LHD_NewCMD_Game", "LHD_NewGameEngine", "LHD_NewGameView", "LHD_NewPlayerList", "COLOR_NewCMD_Game", "COLOR_NewGameEngine", "COLOR_NewGameView", "COLOR_JPRule", "COLOR_NewActionHelp", "COLOR_NewBetArea", "COLOR_NewDiceAction", "COLOR_NewGoldAnim", "COLOR_NewRecord", "COLOR_NewRule", "Color_rollNum", "color_jackpot_control", "BRSS_NewCMD_Game", "BRSS_NewGameEngine", "BRSS_NewGameLogic", "BRSS_NewGameView", "BRSS_NewActionHelp", "BRSS_NewBanker", "BRSS_NewCardNode", "BRSS_NewEnd", "BRSS_NewTrend", "BRSS_NewUserChatItem", "BRSS_NewUserInfo", "HHDZ_NewActionHelp", "HHDZ_NewBetArea", "HHDZ_NewCardNode", "HHDZ_NewGameHistory", "HHDZ_NewGameRecordItem", "HHDZ_NewLuDan_DaLu", "HHDZ_NewLuDan_DaYanZaiLu", "HHDZ_NewLuDan_Next", "HHDZ_NewLuDan_XiaoLu", "HHDZ_NewLuDan_XiaoQiangLu", "HHDZ_NewLuDan_ZhuZaiLu", "HHDZ_NewUserChat", "HHDZ_NewUserChatItem", "HHDZ_NewCMD_Game", "HHDZ_NewGameEngine", "HHDZ_NewGameView", "FQZS_NewCMD_Game", "FQZS_NewEndLayer", "FQZS_NewGameEngine", "FQZS_NewGameLogic", "FQZS_NewGameView", "FQZS_NewActionHelp", "FQZS_NewApplyItem", "FQZS_NewApplyList", "FQZS_NewApplyView", "FQZS_NewBankerUser", "FQZS_NewControl", "FQZS_NewMilitaryItem", "BJL_NewActionHelp", "BJL_NewBetAreas", "BJL_NewBiPai", "BJL_NewCMD_Game", "BJL_NewCard", "BJL_NewChip", "BJL_NewChipPannel", "BJL_NewControl", "BJL_NewDaLuItem", "BJL_NewDaYanZaiLuItem", "BJL_NewGameEndPannel", "BJL_NewGameEngine", "BJL_NewGameLogic", "BJL_NewGameResultHistory", "BJL_NewGameView", "BJL_NewPlayerList", "BJL_NewTableCardPannel", "BJL_NewTableResultPannel", "BJL_NewTimeDown", "BJL_NewXiaoLuItem", "BJL_NewXiaoQiangLuItem", "BJL_NewZhuZaiLuItem", "PPC_NewActionHelp", "PPC_NewCMD_Game", "PPC_NewGameEngine", "PPC_NewGameLogic", "PPC_NewGameView", "BRNN_CMD_Game", "BRNN_CardNode", "BRNN_GameEngine", "BRNN_GameLogic", "BRNN_GameView", "BRNN_NewTimeDown", "SHLL_BingDong", "SHLL_BulletItem", "SHLL_CMD_Game", "SHLL_CannonItem", "SHLL_FishItem", "SHLL_HelpKind", "SHLL_Menu", "SHLL_UserItem", "SHLL_BoundBox", "SHLL_BulletManager", "SHLL_CannonManager", "SHLL_CoinManager", "SHLL_FishManager", "SHLL_FishTrace", "SHLL_GameEngine", "SHLL_GameView", "SHLL_LockManager", "SHLL_MathAide", "Mine_CMD_Game", "Mine_GameEngine", "Mine_GameView", "Mine_landItem", "Mine_turntable", "RankLayer", "ball", "point", "rankItem", "result", "Plinko_CMD_Game", "Plinko_GameEngine", "Plinko_GameView", "XXL_jackpot_control", "boomItem", "celIItem", "colItem", "colorItem", "helpNode", "scoreItem", "wildItem", "XXL_CMD_Game", "XXL_GameEngine", "XXL_GameView", "gameData", "LandMine_AutoSet", "LandMine_CMD_Game", "LandMine_GameEngine", "LandMine_GameRecord", "LandMine_GameView", "LandMine_LineBet", "LandMine_MapSelect", "BigWin", "Plinko_AutoItem", "newRankLayer", "newallitem", "newball", "newpoint", "newrankItem", "newrecord", "newresult", "Plinko_NewCMD_Game", "Plinko_NewGameEngine", "Plinko_NewGameView", "Mine2_CMD_Game", "Mine2_GameEngine", "Mine2_GameRecord", "Mine2_GameView", "Mine2_landItem", "Mine2_turntable", "LuckFruit_CMD_Game", "LuckFruit_GameEngine", "LuckFruit_GameView", "LuckFruit_Record", "TG_CardCount", "TG_CardGroup", "TG_CardRecord", "TG_GameEffect", "TG_GameResult", "TG_GitsFightCard", "TG_PayoutDetails", "TG_TimeCircular", "TG_CMD_Game", "TG_Card", "TG_GameEngine", "TG_GameLogic", "TG_GameView", "TG_HandCard", "Slot_bigwin_control", "Slot_jackpot_control", "Slot_jackpot_rank", "Slot_lines_control", "Slot_logic", "Slot_pan2_control", "Slot_rollNum", "Slot_text_control", "slot_line_control", "slot_rule", "Slot_CMD_Game", "Slot_GameEngine", "Slot_GameView", "AztecMagic_CMD_Game", "AztecMagic_GameEngine", "AztecMagic_GameView", "AztecMagic_Item", "AztecMagic_jackpot_rank", "AztecMagic_line_control", "AztecMagic_logic", "AztecMagic_pan2_control", "AztecMagic_pan3_control", "AztecMagic_rollNum", "AztecMagic_rule", "AztecMagic_text_control", "AztecPlus_CMD_Game", "AztecPlus_GameEngine", "AztecPlus_GameView", "AztecPlus_Item", "AztecPlus_jackpot_rank", "AztecPlus_logic", "AztecPlus_pan2_control", "AztecPlus_pan3_control", "AztecPlus_rollNum", "AztecPlus_rule", "AztecPlus_text_control", "Captain_CMD_Game", "Captain_GameEngine", "Captain_GameView", "Captain_Item", "Captain_bigwin_control", "Captain_jackpot_control", "Captain_jackpot_rank", "Captain_line_control", "Captain_lines_control", "Captain_logic", "Captain_pan2_control", "Captain_rollNum", "Captain_rule", "Captain_text_control", "Slot777_CMD_Game", "Slot777_GameEngine", "Slot777_GameView", "Slot777_LineBet", "Slot777_pan2_control", "Slot777_text_control", "FortuneRabbit_CMD_Game", "FortuneRabbit_Explain", "FortuneRabbit_GameEngine", "FortuneRabbit_GameView", "FortuneRabbit_LineBet", "FortuneRabbit_RollIcon", "FortuneRabbit_pan2_control", "FortuneRabbit_text_control", "jsRewardPopup", "jsSystemAlert", "jsSystemLabel", "jsAutoPlay", "jsBigWin", "jsBigWin_text_control", "jsGoodLuck", "jsJackPotDraw", "jsJackPotDrawItem", "jsJackPotDrawRecord", "jsJackPotDrawRecordItem", "jsJackPotDrawText", "jsJackPotNum", "jsLineBet", "jsNewJackPotDraw", "jsNewJackPotDrawRecord", "jsNewJackPotDrawRecordItem", "jsNewJackPotRecordItem" ]);